!function(e,t){"use strict";"object"==typeof module&&"object"==typeof module.exports?module.exports=e.document?t(e,!0):function(e){if(!e.document)throw new Error("jQuery requires a window with a document");return t(e)}:t(e)}("undefined"!=typeof window?window:this,function(E,e){"use strict";function v(e){return null!=e&&e===e.window}var t=[],s=Object.getPrototypeOf,o=t.slice,m=t.flat?function(e){return t.flat.call(e)}:function(e){return t.concat.apply([],e)},l=t.push,n=t.indexOf,i={},a=i.toString,g=i.hasOwnProperty,r=g.toString,d=r.call(Object),y={},b=function(e){return"function"==typeof e&&"number"!=typeof e.nodeType},C=E.document,h={type:!0,src:!0,nonce:!0,noModule:!0};function x(e,t,i){var s,n,a=(i=i||C).createElement("script");if(a.text=e,t)for(s in h)(n=t[s]||t.getAttribute&&t.getAttribute(s))&&a.setAttribute(s,n);i.head.appendChild(a).parentNode.removeChild(a)}function w(e){return null==e?e+"":"object"==typeof e||"function"==typeof e?i[a.call(e)]||"object":typeof e}var u="3.5.1",S=function(e,t){return new S.fn.init(e,t)};function c(e){var t=!!e&&"length"in e&&e.length,i=w(e);return!b(e)&&!v(e)&&("array"===i||0===t||"number"==typeof t&&0<t&&t-1 in e)}S.fn=S.prototype={jquery:u,constructor:S,length:0,toArray:function(){return o.call(this)},get:function(e){return null==e?o.call(this):e<0?this[e+this.length]:this[e]},pushStack:function(e){var t=S.merge(this.constructor(),e);return t.prevObject=this,t},each:function(e){return S.each(this,e)},map:function(i){return this.pushStack(S.map(this,function(e,t){return i.call(e,t,e)}))},slice:function(){return this.pushStack(o.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},even:function(){return this.pushStack(S.grep(this,function(e,t){return(t+1)%2}))},odd:function(){return this.pushStack(S.grep(this,function(e,t){return t%2}))},eq:function(e){var t=this.length,i=+e+(e<0?t:0);return this.pushStack(0<=i&&i<t?[this[i]]:[])},end:function(){return this.prevObject||this.constructor()},push:l,sort:t.sort,splice:t.splice},S.extend=S.fn.extend=function(){var e,t,i,s,n,a,r=arguments[0]||{},o=1,l=arguments.length,d=!1;for("boolean"==typeof r&&(d=r,r=arguments[o]||{},o++),"object"==typeof r||b(r)||(r={}),o===l&&(r=this,o--);o<l;o++)if(null!=(e=arguments[o]))for(t in e)s=e[t],"__proto__"!==t&&r!==s&&(d&&s&&(S.isPlainObject(s)||(n=Array.isArray(s)))?(i=r[t],a=n&&!Array.isArray(i)?[]:n||S.isPlainObject(i)?i:{},n=!1,r[t]=S.extend(d,a,s)):void 0!==s&&(r[t]=s));return r},S.extend({expando:"jQuery"+(u+Math.random()).replace(/\D/g,""),isReady:!0,error:function(e){throw new Error(e)},noop:function(){},isPlainObject:function(e){var t,i;return!(!e||"[object Object]"!==a.call(e))&&(!(t=s(e))||"function"==typeof(i=g.call(t,"constructor")&&t.constructor)&&r.call(i)===d)},isEmptyObject:function(e){var t;for(t in e)return!1;return!0},globalEval:function(e,t,i){x(e,{nonce:t&&t.nonce},i)},each:function(e,t){var i,s=0;if(c(e))for(i=e.length;s<i&&!1!==t.call(e[s],s,e[s]);s++);else for(s in e)if(!1===t.call(e[s],s,e[s]))break;return e},makeArray:function(e,t){var i=t||[];return null!=e&&(c(Object(e))?S.merge(i,"string"==typeof e?[e]:e):l.call(i,e)),i},inArray:function(e,t,i){return null==t?-1:n.call(t,e,i)},merge:function(e,t){for(var i=+t.length,s=0,n=e.length;s<i;s++)e[n++]=t[s];return e.length=n,e},grep:function(e,t,i){for(var s=[],n=0,a=e.length,r=!i;n<a;n++)!t(e[n],n)!=r&&s.push(e[n]);return s},map:function(e,t,i){var s,n,a=0,r=[];if(c(e))for(s=e.length;a<s;a++)null!=(n=t(e[a],a,i))&&r.push(n);else for(a in e)null!=(n=t(e[a],a,i))&&r.push(n);return m(r)},guid:1,support:y}),"function"==typeof Symbol&&(S.fn[Symbol.iterator]=t[Symbol.iterator]),S.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "),function(e,t){i["[object "+t+"]"]=t.toLowerCase()});var p=function(i){function u(e,t){var i="0x"+e.slice(1)-65536;return t||(i<0?String.fromCharCode(65536+i):String.fromCharCode(i>>10|55296,1023&i|56320))}function n(){T()}var e,p,x,a,r,f,c,v,w,l,d,T,E,o,C,m,h,g,y,S="sizzle"+ +new Date,b=i.document,M=0,s=0,k=le(),P=le(),L=le(),D=le(),z=function(e,t){return e===t&&(d=!0),0},A={}.hasOwnProperty,t=[],$=t.pop,I=t.push,N=t.push,O=t.slice,H=function(e,t){for(var i=0,s=e.length;i<s;i++)if(e[i]===t)return i;return-1},j="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",q="[\\x20\\t\\r\\n\\f]",B="(?:\\\\[\\da-fA-F]{1,6}"+q+"?|\\\\[^\\r\\n\\f]|[\\w-]|[^\0-\\x7f])+",R="\\["+q+"*("+B+")(?:"+q+"*([*^$|!~]?=)"+q+"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|("+B+"))|)"+q+"*\\]",G=":("+B+")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|"+R+")*)|.*)\\)|)",F=new RegExp(q+"+","g"),W=new RegExp("^"+q+"+|((?:^|[^\\\\])(?:\\\\.)*)"+q+"+$","g"),X=new RegExp("^"+q+"*,"+q+"*"),V=new RegExp("^"+q+"*([>+~]|"+q+")"+q+"*"),Y=new RegExp(q+"|>"),_=new RegExp(G),U=new RegExp("^"+B+"$"),K={ID:new RegExp("^#("+B+")"),CLASS:new RegExp("^\\.("+B+")"),TAG:new RegExp("^("+B+"|[*])"),ATTR:new RegExp("^"+R),PSEUDO:new RegExp("^"+G),CHILD:new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+q+"*(even|odd|(([+-]|)(\\d*)n|)"+q+"*(?:([+-]|)"+q+"*(\\d+)|))"+q+"*\\)|)","i"),bool:new RegExp("^(?:"+j+")$","i"),needsContext:new RegExp("^"+q+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+q+"*((?:-\\d)?\\d*)"+q+"*\\)|)(?=[^-]|$)","i")},Q=/HTML$/i,J=/^(?:input|select|textarea|button)$/i,Z=/^h\d$/i,ee=/^[^{]+\{\s*\[native \w/,te=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,ie=/[+~]/,se=new RegExp("\\\\[\\da-fA-F]{1,6}"+q+"?|\\\\([^\\r\\n\\f])","g"),ne=/([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,ae=function(e,t){return t?"\0"===e?"ï¿½":e.slice(0,-1)+"\\"+e.charCodeAt(e.length-1).toString(16)+" ":"\\"+e},re=xe(function(e){return!0===e.disabled&&"fieldset"===e.nodeName.toLowerCase()},{dir:"parentNode",next:"legend"});try{N.apply(t=O.call(b.childNodes),b.childNodes),t[b.childNodes.length].nodeType}catch(e){N={apply:t.length?function(e,t){I.apply(e,O.call(t))}:function(e,t){for(var i=e.length,s=0;e[i++]=t[s++];);e.length=i-1}}}function oe(t,e,i,s){var n,a,r,o,l,d,h,u=e&&e.ownerDocument,c=e?e.nodeType:9;if(i=i||[],"string"!=typeof t||!t||1!==c&&9!==c&&11!==c)return i;if(!s&&(T(e),e=e||E,C)){if(11!==c&&(l=te.exec(t)))if(n=l[1]){if(9===c){if(!(r=e.getElementById(n)))return i;if(r.id===n)return i.push(r),i}else if(u&&(r=u.getElementById(n))&&y(e,r)&&r.id===n)return i.push(r),i}else{if(l[2])return N.apply(i,e.getElementsByTagName(t)),i;if((n=l[3])&&p.getElementsByClassName&&e.getElementsByClassName)return N.apply(i,e.getElementsByClassName(n)),i}if(p.qsa&&!D[t+" "]&&(!m||!m.test(t))&&(1!==c||"object"!==e.nodeName.toLowerCase())){if(h=t,u=e,1===c&&(Y.test(t)||V.test(t))){for((u=ie.test(t)&&ge(e.parentNode)||e)===e&&p.scope||((o=e.getAttribute("id"))?o=o.replace(ne,ae):e.setAttribute("id",o=S)),a=(d=f(t)).length;a--;)d[a]=(o?"#"+o:":scope")+" "+be(d[a]);h=d.join(",")}try{return N.apply(i,u.querySelectorAll(h)),i}catch(e){D(t,!0)}finally{o===S&&e.removeAttribute("id")}}}return v(t.replace(W,"$1"),e,i,s)}function le(){var s=[];return function e(t,i){return s.push(t+" ")>x.cacheLength&&delete e[s.shift()],e[t+" "]=i}}function de(e){return e[S]=!0,e}function he(e){var t=E.createElement("fieldset");try{return!!e(t)}catch(e){return!1}finally{t.parentNode&&t.parentNode.removeChild(t),t=null}}function ue(e,t){for(var i=e.split("|"),s=i.length;s--;)x.attrHandle[i[s]]=t}function ce(e,t){var i=t&&e,s=i&&1===e.nodeType&&1===t.nodeType&&e.sourceIndex-t.sourceIndex;if(s)return s;if(i)for(;i=i.nextSibling;)if(i===t)return-1;return e?1:-1}function pe(t){return function(e){return"input"===e.nodeName.toLowerCase()&&e.type===t}}function fe(i){return function(e){var t=e.nodeName.toLowerCase();return("input"===t||"button"===t)&&e.type===i}}function ve(t){return function(e){return"form"in e?e.parentNode&&!1===e.disabled?"label"in e?"label"in e.parentNode?e.parentNode.disabled===t:e.disabled===t:e.isDisabled===t||e.isDisabled!==!t&&re(e)===t:e.disabled===t:"label"in e&&e.disabled===t}}function me(r){return de(function(a){return a=+a,de(function(e,t){for(var i,s=r([],e.length,a),n=s.length;n--;)e[i=s[n]]&&(e[i]=!(t[i]=e[i]))})})}function ge(e){return e&&void 0!==e.getElementsByTagName&&e}for(e in p=oe.support={},r=oe.isXML=function(e){var t=e.namespaceURI,i=(e.ownerDocument||e).documentElement;return!Q.test(t||i&&i.nodeName||"HTML")},T=oe.setDocument=function(e){var t,i,s=e?e.ownerDocument||e:b;return s!=E&&9===s.nodeType&&s.documentElement&&(o=(E=s).documentElement,C=!r(E),b!=E&&(i=E.defaultView)&&i.top!==i&&(i.addEventListener?i.addEventListener("unload",n,!1):i.attachEvent&&i.attachEvent("onunload",n)),p.scope=he(function(e){return o.appendChild(e).appendChild(E.createElement("div")),void 0!==e.querySelectorAll&&!e.querySelectorAll(":scope fieldset div").length}),p.attributes=he(function(e){return e.className="i",!e.getAttribute("className")}),p.getElementsByTagName=he(function(e){return e.appendChild(E.createComment("")),!e.getElementsByTagName("*").length}),p.getElementsByClassName=ee.test(E.getElementsByClassName),p.getById=he(function(e){return o.appendChild(e).id=S,!E.getElementsByName||!E.getElementsByName(S).length}),p.getById?(x.filter.ID=function(e){var t=e.replace(se,u);return function(e){return e.getAttribute("id")===t}},x.find.ID=function(e,t){if(void 0!==t.getElementById&&C){var i=t.getElementById(e);return i?[i]:[]}}):(x.filter.ID=function(e){var i=e.replace(se,u);return function(e){var t=void 0!==e.getAttributeNode&&e.getAttributeNode("id");return t&&t.value===i}},x.find.ID=function(e,t){if(void 0!==t.getElementById&&C){var i,s,n,a=t.getElementById(e);if(a){if((i=a.getAttributeNode("id"))&&i.value===e)return[a];for(n=t.getElementsByName(e),s=0;a=n[s++];)if((i=a.getAttributeNode("id"))&&i.value===e)return[a]}return[]}}),x.find.TAG=p.getElementsByTagName?function(e,t){return void 0!==t.getElementsByTagName?t.getElementsByTagName(e):p.qsa?t.querySelectorAll(e):void 0}:function(e,t){var i,s=[],n=0,a=t.getElementsByTagName(e);if("*"!==e)return a;for(;i=a[n++];)1===i.nodeType&&s.push(i);return s},x.find.CLASS=p.getElementsByClassName&&function(e,t){if(void 0!==t.getElementsByClassName&&C)return t.getElementsByClassName(e)},h=[],m=[],(p.qsa=ee.test(E.querySelectorAll))&&(he(function(e){var t;o.appendChild(e).innerHTML="<a id='"+S+"'></a><select id='"+S+"-\r\\' msallowcapture=''><option selected=''></option></select>",e.querySelectorAll("[msallowcapture^='']").length&&m.push("[*^$]="+q+"*(?:''|\"\")"),e.querySelectorAll("[selected]").length||m.push("\\["+q+"*(?:value|"+j+")"),e.querySelectorAll("[id~="+S+"-]").length||m.push("~="),(t=E.createElement("input")).setAttribute("name",""),e.appendChild(t),e.querySelectorAll("[name='']").length||m.push("\\["+q+"*name"+q+"*="+q+"*(?:''|\"\")"),e.querySelectorAll(":checked").length||m.push(":checked"),e.querySelectorAll("a#"+S+"+*").length||m.push(".#.+[+~]"),e.querySelectorAll("\\\f"),m.push("[\\r\\n\\f]")}),he(function(e){e.innerHTML="<a href='' disabled='disabled'></a><select disabled='disabled'><option/></select>";var t=E.createElement("input");t.setAttribute("type","hidden"),e.appendChild(t).setAttribute("name","D"),e.querySelectorAll("[name=d]").length&&m.push("name"+q+"*[*^$|!~]?="),2!==e.querySelectorAll(":enabled").length&&m.push(":enabled",":disabled"),o.appendChild(e).disabled=!0,2!==e.querySelectorAll(":disabled").length&&m.push(":enabled",":disabled"),e.querySelectorAll("*,:x"),m.push(",.*:")})),(p.matchesSelector=ee.test(g=o.matches||o.webkitMatchesSelector||o.mozMatchesSelector||o.oMatchesSelector||o.msMatchesSelector))&&he(function(e){p.disconnectedMatch=g.call(e,"*"),g.call(e,"[s!='']:x"),h.push("!=",G)}),m=m.length&&new RegExp(m.join("|")),h=h.length&&new RegExp(h.join("|")),t=ee.test(o.compareDocumentPosition),y=t||ee.test(o.contains)?function(e,t){var i=9===e.nodeType?e.documentElement:e,s=t&&t.parentNode;return e===s||!(!s||1!==s.nodeType||!(i.contains?i.contains(s):e.compareDocumentPosition&&16&e.compareDocumentPosition(s)))}:function(e,t){if(t)for(;t=t.parentNode;)if(t===e)return!0;return!1},z=t?function(e,t){if(e===t)return d=!0,0;var i=!e.compareDocumentPosition-!t.compareDocumentPosition;return i||(1&(i=(e.ownerDocument||e)==(t.ownerDocument||t)?e.compareDocumentPosition(t):1)||!p.sortDetached&&t.compareDocumentPosition(e)===i?e==E||e.ownerDocument==b&&y(b,e)?-1:t==E||t.ownerDocument==b&&y(b,t)?1:l?H(l,e)-H(l,t):0:4&i?-1:1)}:function(e,t){if(e===t)return d=!0,0;var i,s=0,n=e.parentNode,a=t.parentNode,r=[e],o=[t];if(!n||!a)return e==E?-1:t==E?1:n?-1:a?1:l?H(l,e)-H(l,t):0;if(n===a)return ce(e,t);for(i=e;i=i.parentNode;)r.unshift(i);for(i=t;i=i.parentNode;)o.unshift(i);for(;r[s]===o[s];)s++;return s?ce(r[s],o[s]):r[s]==b?-1:o[s]==b?1:0}),E},oe.matches=function(e,t){return oe(e,null,null,t)},oe.matchesSelector=function(e,t){if(T(e),p.matchesSelector&&C&&!D[t+" "]&&(!h||!h.test(t))&&(!m||!m.test(t)))try{var i=g.call(e,t);if(i||p.disconnectedMatch||e.document&&11!==e.document.nodeType)return i}catch(e){D(t,!0)}return 0<oe(t,E,null,[e]).length},oe.contains=function(e,t){return(e.ownerDocument||e)!=E&&T(e),y(e,t)},oe.attr=function(e,t){(e.ownerDocument||e)!=E&&T(e);var i=x.attrHandle[t.toLowerCase()],s=i&&A.call(x.attrHandle,t.toLowerCase())?i(e,t,!C):void 0;return void 0!==s?s:p.attributes||!C?e.getAttribute(t):(s=e.getAttributeNode(t))&&s.specified?s.value:null},oe.escape=function(e){return(e+"").replace(ne,ae)},oe.error=function(e){throw new Error("Syntax error, unrecognized expression: "+e)},oe.uniqueSort=function(e){var t,i=[],s=0,n=0;if(d=!p.detectDuplicates,l=!p.sortStable&&e.slice(0),e.sort(z),d){for(;t=e[n++];)t===e[n]&&(s=i.push(n));for(;s--;)e.splice(i[s],1)}return l=null,e},a=oe.getText=function(e){var t,i="",s=0,n=e.nodeType;if(n){if(1===n||9===n||11===n){if("string"==typeof e.textContent)return e.textContent;for(e=e.firstChild;e;e=e.nextSibling)i+=a(e)}else if(3===n||4===n)return e.nodeValue}else for(;t=e[s++];)i+=a(t);return i},(x=oe.selectors={cacheLength:50,createPseudo:de,match:K,attrHandle:{},find:{},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(e){return e[1]=e[1].replace(se,u),e[3]=(e[3]||e[4]||e[5]||"").replace(se,u),"~="===e[2]&&(e[3]=" "+e[3]+" "),e.slice(0,4)},CHILD:function(e){return e[1]=e[1].toLowerCase(),"nth"===e[1].slice(0,3)?(e[3]||oe.error(e[0]),e[4]=+(e[4]?e[5]+(e[6]||1):2*("even"===e[3]||"odd"===e[3])),e[5]=+(e[7]+e[8]||"odd"===e[3])):e[3]&&oe.error(e[0]),e},PSEUDO:function(e){var t,i=!e[6]&&e[2];return K.CHILD.test(e[0])?null:(e[3]?e[2]=e[4]||e[5]||"":i&&_.test(i)&&(t=f(i,!0))&&(t=i.indexOf(")",i.length-t)-i.length)&&(e[0]=e[0].slice(0,t),e[2]=i.slice(0,t)),e.slice(0,3))}},filter:{TAG:function(e){var t=e.replace(se,u).toLowerCase();return"*"===e?function(){return!0}:function(e){return e.nodeName&&e.nodeName.toLowerCase()===t}},CLASS:function(e){var t=k[e+" "];return t||(t=new RegExp("(^|"+q+")"+e+"("+q+"|$)"))&&k(e,function(e){return t.test("string"==typeof e.className&&e.className||void 0!==e.getAttribute&&e.getAttribute("class")||"")})},ATTR:function(i,s,n){return function(e){var t=oe.attr(e,i);return null==t?"!="===s:!s||(t+="","="===s?t===n:"!="===s?t!==n:"^="===s?n&&0===t.indexOf(n):"*="===s?n&&-1<t.indexOf(n):"$="===s?n&&t.slice(-n.length)===n:"~="===s?-1<(" "+t.replace(F," ")+" ").indexOf(n):"|="===s&&(t===n||t.slice(0,n.length+1)===n+"-"))}},CHILD:function(f,e,t,v,m){var g="nth"!==f.slice(0,3),y="last"!==f.slice(-4),b="of-type"===e;return 1===v&&0===m?function(e){return!!e.parentNode}:function(e,t,i){var s,n,a,r,o,l,d=g!=y?"nextSibling":"previousSibling",h=e.parentNode,u=b&&e.nodeName.toLowerCase(),c=!i&&!b,p=!1;if(h){if(g){for(;d;){for(r=e;r=r[d];)if(b?r.nodeName.toLowerCase()===u:1===r.nodeType)return!1;l=d="only"===f&&!l&&"nextSibling"}return!0}if(l=[y?h.firstChild:h.lastChild],y&&c){for(p=(o=(s=(n=(a=(r=h)[S]||(r[S]={}))[r.uniqueID]||(a[r.uniqueID]={}))[f]||[])[0]===M&&s[1])&&s[2],r=o&&h.childNodes[o];r=++o&&r&&r[d]||(p=o=0)||l.pop();)if(1===r.nodeType&&++p&&r===e){n[f]=[M,o,p];break}}else if(c&&(p=o=(s=(n=(a=(r=e)[S]||(r[S]={}))[r.uniqueID]||(a[r.uniqueID]={}))[f]||[])[0]===M&&s[1]),!1===p)for(;(r=++o&&r&&r[d]||(p=o=0)||l.pop())&&((b?r.nodeName.toLowerCase()!==u:1!==r.nodeType)||!++p||(c&&((n=(a=r[S]||(r[S]={}))[r.uniqueID]||(a[r.uniqueID]={}))[f]=[M,p]),r!==e)););return(p-=m)===v||p%v==0&&0<=p/v}}},PSEUDO:function(e,a){var t,r=x.pseudos[e]||x.setFilters[e.toLowerCase()]||oe.error("unsupported pseudo: "+e);return r[S]?r(a):1<r.length?(t=[e,e,"",a],x.setFilters.hasOwnProperty(e.toLowerCase())?de(function(e,t){for(var i,s=r(e,a),n=s.length;n--;)e[i=H(e,s[n])]=!(t[i]=s[n])}):function(e){return r(e,0,t)}):r}},pseudos:{not:de(function(e){var s=[],n=[],o=c(e.replace(W,"$1"));return o[S]?de(function(e,t,i,s){for(var n,a=o(e,null,s,[]),r=e.length;r--;)(n=a[r])&&(e[r]=!(t[r]=n))}):function(e,t,i){return s[0]=e,o(s,null,i,n),s[0]=null,!n.pop()}}),has:de(function(t){return function(e){return 0<oe(t,e).length}}),contains:de(function(t){return t=t.replace(se,u),function(e){return-1<(e.textContent||a(e)).indexOf(t)}}),lang:de(function(i){return U.test(i||"")||oe.error("unsupported lang: "+i),i=i.replace(se,u).toLowerCase(),function(e){var t;do{if(t=C?e.lang:e.getAttribute("xml:lang")||e.getAttribute("lang"))return(t=t.toLowerCase())===i||0===t.indexOf(i+"-")}while((e=e.parentNode)&&1===e.nodeType);return!1}}),target:function(e){var t=i.location&&i.location.hash;return t&&t.slice(1)===e.id},root:function(e){return e===o},focus:function(e){return e===E.activeElement&&(!E.hasFocus||E.hasFocus())&&!!(e.type||e.href||~e.tabIndex)},enabled:ve(!1),disabled:ve(!0),checked:function(e){var t=e.nodeName.toLowerCase();return"input"===t&&!!e.checked||"option"===t&&!!e.selected},selected:function(e){return e.parentNode&&e.parentNode.selectedIndex,!0===e.selected},empty:function(e){for(e=e.firstChild;e;e=e.nextSibling)if(e.nodeType<6)return!1;return!0},parent:function(e){return!x.pseudos.empty(e)},header:function(e){return Z.test(e.nodeName)},input:function(e){return J.test(e.nodeName)},button:function(e){var t=e.nodeName.toLowerCase();return"input"===t&&"button"===e.type||"button"===t},text:function(e){var t;return"input"===e.nodeName.toLowerCase()&&"text"===e.type&&(null==(t=e.getAttribute("type"))||"text"===t.toLowerCase())},first:me(function(){return[0]}),last:me(function(e,t){return[t-1]}),eq:me(function(e,t,i){return[i<0?i+t:i]}),even:me(function(e,t){for(var i=0;i<t;i+=2)e.push(i);return e}),odd:me(function(e,t){for(var i=1;i<t;i+=2)e.push(i);return e}),lt:me(function(e,t,i){for(var s=i<0?i+t:t<i?t:i;0<=--s;)e.push(s);return e}),gt:me(function(e,t,i){for(var s=i<0?i+t:i;++s<t;)e.push(s);return e})}}).pseudos.nth=x.pseudos.eq,{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})x.pseudos[e]=pe(e);for(e in{submit:!0,reset:!0})x.pseudos[e]=fe(e);function ye(){}function be(e){for(var t=0,i=e.length,s="";t<i;t++)s+=e[t].value;return s}function xe(o,e,t){var l=e.dir,d=e.next,h=d||l,u=t&&"parentNode"===h,c=s++;return e.first?function(e,t,i){for(;e=e[l];)if(1===e.nodeType||u)return o(e,t,i);return!1}:function(e,t,i){var s,n,a,r=[M,c];if(i){for(;e=e[l];)if((1===e.nodeType||u)&&o(e,t,i))return!0}else for(;e=e[l];)if(1===e.nodeType||u)if(n=(a=e[S]||(e[S]={}))[e.uniqueID]||(a[e.uniqueID]={}),d&&d===e.nodeName.toLowerCase())e=e[l]||e;else{if((s=n[h])&&s[0]===M&&s[1]===c)return r[2]=s[2];if((n[h]=r)[2]=o(e,t,i))return!0}return!1}}function we(n){return 1<n.length?function(e,t,i){for(var s=n.length;s--;)if(!n[s](e,t,i))return!1;return!0}:n[0]}function Te(e,t,i,s,n){for(var a,r=[],o=0,l=e.length,d=null!=t;o<l;o++)(a=e[o])&&(i&&!i(a,s,n)||(r.push(a),d&&t.push(o)));return r}function Ee(p,f,v,m,g,e){return m&&!m[S]&&(m=Ee(m)),g&&!g[S]&&(g=Ee(g,e)),de(function(e,t,i,s){var n,a,r,o=[],l=[],d=t.length,h=e||function(e,t,i){for(var s=0,n=t.length;s<n;s++)oe(e,t[s],i);return i}(f||"*",i.nodeType?[i]:i,[]),u=!p||!e&&f?h:Te(h,o,p,i,s),c=v?g||(e?p:d||m)?[]:t:u;if(v&&v(u,c,i,s),m)for(n=Te(c,l),m(n,[],i,s),a=n.length;a--;)(r=n[a])&&(c[l[a]]=!(u[l[a]]=r));if(e){if(g||p){if(g){for(n=[],a=c.length;a--;)(r=c[a])&&n.push(u[a]=r);g(null,c=[],n,s)}for(a=c.length;a--;)(r=c[a])&&-1<(n=g?H(e,r):o[a])&&(e[n]=!(t[n]=r))}}else c=Te(c===t?c.splice(d,c.length):c),g?g(null,t,c,s):N.apply(t,c)})}function Ce(e){for(var n,t,i,s=e.length,a=x.relative[e[0].type],r=a||x.relative[" "],o=a?1:0,l=xe(function(e){return e===n},r,!0),d=xe(function(e){return-1<H(n,e)},r,!0),h=[function(e,t,i){var s=!a&&(i||t!==w)||((n=t).nodeType?l:d)(e,t,i);return n=null,s}];o<s;o++)if(t=x.relative[e[o].type])h=[xe(we(h),t)];else{if((t=x.filter[e[o].type].apply(null,e[o].matches))[S]){for(i=++o;i<s&&!x.relative[e[i].type];i++);return Ee(1<o&&we(h),1<o&&be(e.slice(0,o-1).concat({value:" "===e[o-2].type?"*":""})).replace(W,"$1"),t,o<i&&Ce(e.slice(o,i)),i<s&&Ce(e=e.slice(i)),i<s&&be(e))}h.push(t)}return we(h)}function Se(m,g){function e(e,t,i,s,n){var a,r,o,l=0,d="0",h=e&&[],u=[],c=w,p=e||b&&x.find.TAG("*",n),f=M+=null==c?1:Math.random()||.1,v=p.length;for(n&&(w=t==E||t||n);d!==v&&null!=(a=p[d]);d++){if(b&&a){for(r=0,t||a.ownerDocument==E||(T(a),i=!C);o=m[r++];)if(o(a,t||E,i)){s.push(a);break}n&&(M=f)}y&&((a=!o&&a)&&l--,e&&h.push(a))}if(l+=d,y&&d!==l){for(r=0;o=g[r++];)o(h,u,t,i);if(e){if(0<l)for(;d--;)h[d]||u[d]||(u[d]=$.call(s));u=Te(u)}N.apply(s,u),n&&!e&&0<u.length&&1<l+g.length&&oe.uniqueSort(s)}return n&&(M=f,w=c),h}var y=0<g.length,b=0<m.length;return y?de(e):e}return ye.prototype=x.filters=x.pseudos,x.setFilters=new ye,f=oe.tokenize=function(e,t){var i,s,n,a,r,o,l,d=P[e+" "];if(d)return t?0:d.slice(0);for(r=e,o=[],l=x.preFilter;r;){for(a in i&&!(s=X.exec(r))||(s&&(r=r.slice(s[0].length)||r),o.push(n=[])),i=!1,(s=V.exec(r))&&(i=s.shift(),n.push({value:i,type:s[0].replace(W," ")}),r=r.slice(i.length)),x.filter)!(s=K[a].exec(r))||l[a]&&!(s=l[a](s))||(i=s.shift(),n.push({value:i,type:a,matches:s}),r=r.slice(i.length));if(!i)break}return t?r.length:r?oe.error(e):P(e,o).slice(0)},c=oe.compile=function(e,t){var i,s=[],n=[],a=L[e+" "];if(!a){for(i=(t=t||f(e)).length;i--;)(a=Ce(t[i]))[S]?s.push(a):n.push(a);(a=L(e,Se(n,s))).selector=e}return a},v=oe.select=function(e,t,i,s){var n,a,r,o,l,d="function"==typeof e&&e,h=!s&&f(e=d.selector||e);if(i=i||[],1===h.length){if(2<(a=h[0]=h[0].slice(0)).length&&"ID"===(r=a[0]).type&&9===t.nodeType&&C&&x.relative[a[1].type]){if(!(t=(x.find.ID(r.matches[0].replace(se,u),t)||[])[0]))return i;d&&(t=t.parentNode),e=e.slice(a.shift().value.length)}for(n=K.needsContext.test(e)?0:a.length;n--&&(r=a[n],!x.relative[o=r.type]);)if((l=x.find[o])&&(s=l(r.matches[0].replace(se,u),ie.test(a[0].type)&&ge(t.parentNode)||t))){if(a.splice(n,1),!(e=s.length&&be(a)))return N.apply(i,s),i;break}}return(d||c(e,h))(s,t,!C,i,!t||ie.test(e)&&ge(t.parentNode)||t),i},p.sortStable=S.split("").sort(z).join("")===S,p.detectDuplicates=!!d,T(),p.sortDetached=he(function(e){return 1&e.compareDocumentPosition(E.createElement("fieldset"))}),he(function(e){return e.innerHTML="<a href='#'></a>","#"===e.firstChild.getAttribute("href")})||ue("type|href|height|width",function(e,t,i){if(!i)return e.getAttribute(t,"type"===t.toLowerCase()?1:2)}),p.attributes&&he(function(e){return e.innerHTML="<input/>",e.firstChild.setAttribute("value",""),""===e.firstChild.getAttribute("value")})||ue("value",function(e,t,i){if(!i&&"input"===e.nodeName.toLowerCase())return e.defaultValue}),he(function(e){return null==e.getAttribute("disabled")})||ue(j,function(e,t,i){var s;if(!i)return!0===e[t]?t.toLowerCase():(s=e.getAttributeNode(t))&&s.specified?s.value:null}),oe}(E);S.find=p,S.expr=p.selectors,S.expr[":"]=S.expr.pseudos,S.uniqueSort=S.unique=p.uniqueSort,S.text=p.getText,S.isXMLDoc=p.isXML,S.contains=p.contains,S.escapeSelector=p.escape;function f(e,t,i){for(var s=[],n=void 0!==i;(e=e[t])&&9!==e.nodeType;)if(1===e.nodeType){if(n&&S(e).is(i))break;s.push(e)}return s}function T(e,t){for(var i=[];e;e=e.nextSibling)1===e.nodeType&&e!==t&&i.push(e);return i}var M=S.expr.match.needsContext;function k(e,t){return e.nodeName&&e.nodeName.toLowerCase()===t.toLowerCase()}var P=/^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i;function L(e,i,s){return b(i)?S.grep(e,function(e,t){return!!i.call(e,t,e)!==s}):i.nodeType?S.grep(e,function(e){return e===i!==s}):"string"!=typeof i?S.grep(e,function(e){return-1<n.call(i,e)!==s}):S.filter(i,e,s)}S.filter=function(e,t,i){var s=t[0];return i&&(e=":not("+e+")"),1===t.length&&1===s.nodeType?S.find.matchesSelector(s,e)?[s]:[]:S.find.matches(e,S.grep(t,function(e){return 1===e.nodeType}))},S.fn.extend({find:function(e){var t,i,s=this.length,n=this;if("string"!=typeof e)return this.pushStack(S(e).filter(function(){for(t=0;t<s;t++)if(S.contains(n[t],this))return!0}));for(i=this.pushStack([]),t=0;t<s;t++)S.find(e,n[t],i);return 1<s?S.uniqueSort(i):i},filter:function(e){return this.pushStack(L(this,e||[],!1))},not:function(e){return this.pushStack(L(this,e||[],!0))},is:function(e){return!!L(this,"string"==typeof e&&M.test(e)?S(e):e||[],!1).length}});var D,z=/^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/;(S.fn.init=function(e,t,i){var s,n;if(!e)return this;if(i=i||D,"string"!=typeof e)return e.nodeType?(this[0]=e,this.length=1,this):b(e)?void 0!==i.ready?i.ready(e):e(S):S.makeArray(e,this);if(!(s="<"===e[0]&&">"===e[e.length-1]&&3<=e.length?[null,e,null]:z.exec(e))||!s[1]&&t)return!t||t.jquery?(t||i).find(e):this.constructor(t).find(e);if(s[1]){if(t=t instanceof S?t[0]:t,S.merge(this,S.parseHTML(s[1],t&&t.nodeType?t.ownerDocument||t:C,!0)),P.test(s[1])&&S.isPlainObject(t))for(s in t)b(this[s])?this[s](t[s]):this.attr(s,t[s]);return this}return(n=C.getElementById(s[2]))&&(this[0]=n,this.length=1),this}).prototype=S.fn,D=S(C);var A=/^(?:parents|prev(?:Until|All))/,$={children:!0,contents:!0,next:!0,prev:!0};function I(e,t){for(;(e=e[t])&&1!==e.nodeType;);return e}S.fn.extend({has:function(e){var t=S(e,this),i=t.length;return this.filter(function(){for(var e=0;e<i;e++)if(S.contains(this,t[e]))return!0})},closest:function(e,t){var i,s=0,n=this.length,a=[],r="string"!=typeof e&&S(e);if(!M.test(e))for(;s<n;s++)for(i=this[s];i&&i!==t;i=i.parentNode)if(i.nodeType<11&&(r?-1<r.index(i):1===i.nodeType&&S.find.matchesSelector(i,e))){a.push(i);break}return this.pushStack(1<a.length?S.uniqueSort(a):a)},index:function(e){return e?"string"==typeof e?n.call(S(e),this[0]):n.call(this,e.jquery?e[0]:e):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(e,t){return this.pushStack(S.uniqueSort(S.merge(this.get(),S(e,t))))},addBack:function(e){return this.add(null==e?this.prevObject:this.prevObject.filter(e))}}),S.each({parent:function(e){var t=e.parentNode;return t&&11!==t.nodeType?t:null},parents:function(e){return f(e,"parentNode")},parentsUntil:function(e,t,i){return f(e,"parentNode",i)},next:function(e){return I(e,"nextSibling")},prev:function(e){return I(e,"previousSibling")},nextAll:function(e){return f(e,"nextSibling")},prevAll:function(e){return f(e,"previousSibling")},nextUntil:function(e,t,i){return f(e,"nextSibling",i)},prevUntil:function(e,t,i){return f(e,"previousSibling",i)},siblings:function(e){return T((e.parentNode||{}).firstChild,e)},children:function(e){return T(e.firstChild)},contents:function(e){return null!=e.contentDocument&&s(e.contentDocument)?e.contentDocument:(k(e,"template")&&(e=e.content||e),S.merge([],e.childNodes))}},function(s,n){S.fn[s]=function(e,t){var i=S.map(this,n,e);return"Until"!==s.slice(-5)&&(t=e),t&&"string"==typeof t&&(i=S.filter(t,i)),1<this.length&&($[s]||S.uniqueSort(i),A.test(s)&&i.reverse()),this.pushStack(i)}});var N=/[^\x20\t\r\n\f]+/g;function O(e){return e}function H(e){throw e}function j(e,t,i,s){var n;try{e&&b(n=e.promise)?n.call(e).done(t).fail(i):e&&b(n=e.then)?n.call(e,t,i):t.apply(void 0,[e].slice(s))}catch(e){i.apply(void 0,[e])}}S.Callbacks=function(s){var e,i;s="string"==typeof s?(e=s,i={},S.each(e.match(N)||[],function(e,t){i[t]=!0}),i):S.extend({},s);function n(){for(o=o||s.once,r=a=!0;d.length;h=-1)for(t=d.shift();++h<l.length;)!1===l[h].apply(t[0],t[1])&&s.stopOnFalse&&(h=l.length,t=!1);s.memory||(t=!1),a=!1,o&&(l=t?[]:"")}var a,t,r,o,l=[],d=[],h=-1,u={add:function(){return l&&(t&&!a&&(h=l.length-1,d.push(t)),function i(e){S.each(e,function(e,t){b(t)?s.unique&&u.has(t)||l.push(t):t&&t.length&&"string"!==w(t)&&i(t)})}(arguments),t&&!a&&n()),this},remove:function(){return S.each(arguments,function(e,t){for(var i;-1<(i=S.inArray(t,l,i));)l.splice(i,1),i<=h&&h--}),this},has:function(e){return e?-1<S.inArray(e,l):0<l.length},empty:function(){return l=l&&[],this},disable:function(){return o=d=[],l=t="",this},disabled:function(){return!l},lock:function(){return o=d=[],t||a||(l=t=""),this},locked:function(){return!!o},fireWith:function(e,t){return o||(t=[e,(t=t||[]).slice?t.slice():t],d.push(t),a||n()),this},fire:function(){return u.fireWith(this,arguments),this},fired:function(){return!!r}};return u},S.extend({Deferred:function(e){var a=[["notify","progress",S.Callbacks("memory"),S.Callbacks("memory"),2],["resolve","done",S.Callbacks("once memory"),S.Callbacks("once memory"),0,"resolved"],["reject","fail",S.Callbacks("once memory"),S.Callbacks("once memory"),1,"rejected"]],n="pending",r={state:function(){return n},always:function(){return o.done(arguments).fail(arguments),this},catch:function(e){return r.then(null,e)},pipe:function(){var n=arguments;return S.Deferred(function(s){S.each(a,function(e,t){var i=b(n[t[4]])&&n[t[4]];o[t[1]](function(){var e=i&&i.apply(this,arguments);e&&b(e.promise)?e.promise().progress(s.notify).done(s.resolve).fail(s.reject):s[t[0]+"With"](this,i?[e]:arguments)})}),n=null}).promise()},then:function(t,i,s){var l=0;function d(n,a,r,o){return function(){function e(){var e,t;if(!(n<l)){if((e=r.apply(i,s))===a.promise())throw new TypeError("Thenable self-resolution");t=e&&("object"==typeof e||"function"==typeof e)&&e.then,b(t)?o?t.call(e,d(l,a,O,o),d(l,a,H,o)):(l++,t.call(e,d(l,a,O,o),d(l,a,H,o),d(l,a,O,a.notifyWith))):(r!==O&&(i=void 0,s=[e]),(o||a.resolveWith)(i,s))}}var i=this,s=arguments,t=o?e:function(){try{e()}catch(e){S.Deferred.exceptionHook&&S.Deferred.exceptionHook(e,t.stackTrace),l<=n+1&&(r!==H&&(i=void 0,s=[e]),a.rejectWith(i,s))}};n?t():(S.Deferred.getStackHook&&(t.stackTrace=S.Deferred.getStackHook()),E.setTimeout(t))}}return S.Deferred(function(e){a[0][3].add(d(0,e,b(s)?s:O,e.notifyWith)),a[1][3].add(d(0,e,b(t)?t:O)),a[2][3].add(d(0,e,b(i)?i:H))}).promise()},promise:function(e){return null!=e?S.extend(e,r):r}},o={};return S.each(a,function(e,t){var i=t[2],s=t[5];r[t[1]]=i.add,s&&i.add(function(){n=s},a[3-e][2].disable,a[3-e][3].disable,a[0][2].lock,a[0][3].lock),i.add(t[3].fire),o[t[0]]=function(){return o[t[0]+"With"](this===o?void 0:this,arguments),this},o[t[0]+"With"]=i.fireWith}),r.promise(o),e&&e.call(o,o),o},when:function(e){function t(t){return function(e){n[t]=this,a[t]=1<arguments.length?o.call(arguments):e,--i||r.resolveWith(n,a)}}var i=arguments.length,s=i,n=Array(s),a=o.call(arguments),r=S.Deferred();if(i<=1&&(j(e,r.done(t(s)).resolve,r.reject,!i),"pending"===r.state()||b(a[s]&&a[s].then)))return r.then();for(;s--;)j(a[s],t(s),r.reject);return r.promise()}});var q=/^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;S.Deferred.exceptionHook=function(e,t){E.console&&E.console.warn&&e&&q.test(e.name)&&E.console.warn("jQuery.Deferred exception: "+e.message,e.stack,t)},S.readyException=function(e){E.setTimeout(function(){throw e})};var B=S.Deferred();function R(){C.removeEventListener("DOMContentLoaded",R),E.removeEventListener("load",R),S.ready()}S.fn.ready=function(e){return B.then(e).catch(function(e){S.readyException(e)}),this},S.extend({isReady:!1,readyWait:1,ready:function(e){(!0===e?--S.readyWait:S.isReady)||(S.isReady=!0)!==e&&0<--S.readyWait||B.resolveWith(C,[S])}}),S.ready.then=B.then,"complete"===C.readyState||"loading"!==C.readyState&&!C.documentElement.doScroll?E.setTimeout(S.ready):(C.addEventListener("DOMContentLoaded",R),E.addEventListener("load",R));var G=function(e,t,i,s,n,a,r){var o=0,l=e.length,d=null==i;if("object"===w(i))for(o in n=!0,i)G(e,t,o,i[o],!0,a,r);else if(void 0!==s&&(n=!0,b(s)||(r=!0),d&&(t=r?(t.call(e,s),null):(d=t,function(e,t,i){return d.call(S(e),i)})),t))for(;o<l;o++)t(e[o],i,r?s:s.call(e[o],o,t(e[o],i)));return n?e:d?t.call(e):l?t(e[0],i):a},F=/^-ms-/,W=/-([a-z])/g;function X(e,t){return t.toUpperCase()}function V(e){return e.replace(F,"ms-").replace(W,X)}function Y(e){return 1===e.nodeType||9===e.nodeType||!+e.nodeType}function _(){this.expando=S.expando+_.uid++}_.uid=1,_.prototype={cache:function(e){var t=e[this.expando];return t||(t={},Y(e)&&(e.nodeType?e[this.expando]=t:Object.defineProperty(e,this.expando,{value:t,configurable:!0}))),t},set:function(e,t,i){var s,n=this.cache(e);if("string"==typeof t)n[V(t)]=i;else for(s in t)n[V(s)]=t[s];return n},get:function(e,t){return void 0===t?this.cache(e):e[this.expando]&&e[this.expando][V(t)]},access:function(e,t,i){return void 0===t||t&&"string"==typeof t&&void 0===i?this.get(e,t):(this.set(e,t,i),void 0!==i?i:t)},remove:function(e,t){var i,s=e[this.expando];if(void 0!==s){if(void 0!==t){i=(t=Array.isArray(t)?t.map(V):(t=V(t))in s?[t]:t.match(N)||[]).length;for(;i--;)delete s[t[i]]}void 0!==t&&!S.isEmptyObject(s)||(e.nodeType?e[this.expando]=void 0:delete e[this.expando])}},hasData:function(e){var t=e[this.expando];return void 0!==t&&!S.isEmptyObject(t)}};var U=new _,K=new _,Q=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,J=/[A-Z]/g;function Z(e,t,i){var s,n;if(void 0===i&&1===e.nodeType)if(s="data-"+t.replace(J,"-$&").toLowerCase(),"string"==typeof(i=e.getAttribute(s))){try{i="true"===(n=i)||"false"!==n&&("null"===n?null:n===+n+""?+n:Q.test(n)?JSON.parse(n):n)}catch(e){}K.set(e,t,i)}else i=void 0;return i}S.extend({hasData:function(e){return K.hasData(e)||U.hasData(e)},data:function(e,t,i){return K.access(e,t,i)},removeData:function(e,t){K.remove(e,t)},_data:function(e,t,i){return U.access(e,t,i)},_removeData:function(e,t){U.remove(e,t)}}),S.fn.extend({data:function(i,e){var t,s,n,a=this[0],r=a&&a.attributes;if(void 0!==i)return"object"==typeof i?this.each(function(){K.set(this,i)}):G(this,function(e){var t;if(a&&void 0===e)return void 0!==(t=K.get(a,i))||void 0!==(t=Z(a,i))?t:void 0;this.each(function(){K.set(this,i,e)})},null,e,1<arguments.length,null,!0);if(this.length&&(n=K.get(a),1===a.nodeType&&!U.get(a,"hasDataAttrs"))){for(t=r.length;t--;)r[t]&&0===(s=r[t].name).indexOf("data-")&&(s=V(s.slice(5)),Z(a,s,n[s]));U.set(a,"hasDataAttrs",!0)}return n},removeData:function(e){return this.each(function(){K.remove(this,e)})}}),S.extend({queue:function(e,t,i){var s;if(e)return t=(t||"fx")+"queue",s=U.get(e,t),i&&(!s||Array.isArray(i)?s=U.access(e,t,S.makeArray(i)):s.push(i)),s||[]},dequeue:function(e,t){t=t||"fx";var i=S.queue(e,t),s=i.length,n=i.shift(),a=S._queueHooks(e,t);"inprogress"===n&&(n=i.shift(),s--),n&&("fx"===t&&i.unshift("inprogress"),delete a.stop,n.call(e,function(){S.dequeue(e,t)},a)),!s&&a&&a.empty.fire()},_queueHooks:function(e,t){var i=t+"queueHooks";return U.get(e,i)||U.access(e,i,{empty:S.Callbacks("once memory").add(function(){U.remove(e,[t+"queue",i])})})}}),S.fn.extend({queue:function(t,i){var e=2;return"string"!=typeof t&&(i=t,t="fx",e--),arguments.length<e?S.queue(this[0],t):void 0===i?this:this.each(function(){var e=S.queue(this,t,i);S._queueHooks(this,t),"fx"===t&&"inprogress"!==e[0]&&S.dequeue(this,t)})},dequeue:function(e){return this.each(function(){S.dequeue(this,e)})},clearQueue:function(e){return this.queue(e||"fx",[])},promise:function(e,t){function i(){--n||a.resolveWith(r,[r])}var s,n=1,a=S.Deferred(),r=this,o=this.length;for("string"!=typeof e&&(t=e,e=void 0),e=e||"fx";o--;)(s=U.get(r[o],e+"queueHooks"))&&s.empty&&(n++,s.empty.add(i));return i(),a.promise(t)}});var ee=/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,te=new RegExp("^(?:([+-])=|)("+ee+")([a-z%]*)$","i"),ie=["Top","Right","Bottom","Left"],se=C.documentElement,ne=function(e){return S.contains(e.ownerDocument,e)},ae={composed:!0};se.getRootNode&&(ne=function(e){return S.contains(e.ownerDocument,e)||e.getRootNode(ae)===e.ownerDocument});var re=function(e,t){return"none"===(e=t||e).style.display||""===e.style.display&&ne(e)&&"none"===S.css(e,"display")};function oe(e,t,i,s){var n,a,r=20,o=s?function(){return s.cur()}:function(){return S.css(e,t,"")},l=o(),d=i&&i[3]||(S.cssNumber[t]?"":"px"),h=e.nodeType&&(S.cssNumber[t]||"px"!==d&&+l)&&te.exec(S.css(e,t));if(h&&h[3]!==d){for(l/=2,d=d||h[3],h=+l||1;r--;)S.style(e,t,h+d),(1-a)*(1-(a=o()/l||.5))<=0&&(r=0),h/=a;h*=2,S.style(e,t,h+d),i=i||[]}return i&&(h=+h||+l||0,n=i[1]?h+(i[1]+1)*i[2]:+i[2],s&&(s.unit=d,s.start=h,s.end=n)),n}var le={};function de(e,t){for(var i,s,n,a,r,o,l,d=[],h=0,u=e.length;h<u;h++)(s=e[h]).style&&(i=s.style.display,t?("none"===i&&(d[h]=U.get(s,"display")||null,d[h]||(s.style.display="")),""===s.style.display&&re(s)&&(d[h]=(l=r=a=void 0,r=(n=s).ownerDocument,o=n.nodeName,(l=le[o])||(a=r.body.appendChild(r.createElement(o)),l=S.css(a,"display"),a.parentNode.removeChild(a),"none"===l&&(l="block"),le[o]=l)))):"none"!==i&&(d[h]="none",U.set(s,"display",i)));for(h=0;h<u;h++)null!=d[h]&&(e[h].style.display=d[h]);return e}S.fn.extend({show:function(){return de(this,!0)},hide:function(){return de(this)},toggle:function(e){return"boolean"==typeof e?e?this.show():this.hide():this.each(function(){re(this)?S(this).show():S(this).hide()})}});var he,ue,ce=/^(?:checkbox|radio)$/i,pe=/<([a-z][^\/\0>\x20\t\r\n\f]*)/i,fe=/^$|^module$|\/(?:java|ecma)script/i;he=C.createDocumentFragment().appendChild(C.createElement("div")),(ue=C.createElement("input")).setAttribute("type","radio"),ue.setAttribute("checked","checked"),ue.setAttribute("name","t"),he.appendChild(ue),y.checkClone=he.cloneNode(!0).cloneNode(!0).lastChild.checked,he.innerHTML="<textarea>x</textarea>",y.noCloneChecked=!!he.cloneNode(!0).lastChild.defaultValue,he.innerHTML="<option></option>",y.option=!!he.lastChild;var ve={thead:[1,"<table>","</table>"],col:[2,"<table><colgroup>","</colgroup></table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:[0,"",""]};function me(e,t){var i;return i=void 0!==e.getElementsByTagName?e.getElementsByTagName(t||"*"):void 0!==e.querySelectorAll?e.querySelectorAll(t||"*"):[],void 0===t||t&&k(e,t)?S.merge([e],i):i}function ge(e,t){for(var i=0,s=e.length;i<s;i++)U.set(e[i],"globalEval",!t||U.get(t[i],"globalEval"))}ve.tbody=ve.tfoot=ve.colgroup=ve.caption=ve.thead,ve.th=ve.td,y.option||(ve.optgroup=ve.option=[1,"<select multiple='multiple'>","</select>"]);var ye=/<|&#?\w+;/;function be(e,t,i,s,n){for(var a,r,o,l,d,h,u=t.createDocumentFragment(),c=[],p=0,f=e.length;p<f;p++)if((a=e[p])||0===a)if("object"===w(a))S.merge(c,a.nodeType?[a]:a);else if(ye.test(a)){for(r=r||u.appendChild(t.createElement("div")),o=(pe.exec(a)||["",""])[1].toLowerCase(),l=ve[o]||ve._default,r.innerHTML=l[1]+S.htmlPrefilter(a)+l[2],h=l[0];h--;)r=r.lastChild;S.merge(c,r.childNodes),(r=u.firstChild).textContent=""}else c.push(t.createTextNode(a));for(u.textContent="",p=0;a=c[p++];)if(s&&-1<S.inArray(a,s))n&&n.push(a);else if(d=ne(a),r=me(u.appendChild(a),"script"),d&&ge(r),i)for(h=0;a=r[h++];)fe.test(a.type||"")&&i.push(a);return u}var xe=/^key/,we=/^(?:mouse|pointer|contextmenu|drag|drop)|click/,Te=/^([^.]*)(?:\.(.+)|)/;function Ee(){return!0}function Ce(){return!1}function Se(e,t){return e===function(){try{return C.activeElement}catch(e){}}()==("focus"===t)}function Me(e,t,i,s,n,a){var r,o;if("object"==typeof t){for(o in"string"!=typeof i&&(s=s||i,i=void 0),t)Me(e,o,i,s,t[o],a);return e}if(null==s&&null==n?(n=i,s=i=void 0):null==n&&("string"==typeof i?(n=s,s=void 0):(n=s,s=i,i=void 0)),!1===n)n=Ce;else if(!n)return e;return 1===a&&(r=n,(n=function(e){return S().off(e),r.apply(this,arguments)}).guid=r.guid||(r.guid=S.guid++)),e.each(function(){S.event.add(this,t,n,s,i)})}function ke(e,n,a){a?(U.set(e,n,!1),S.event.add(e,n,{namespace:!1,handler:function(e){var t,i,s=U.get(this,n);if(1&e.isTrigger&&this[n]){if(s.length)(S.event.special[n]||{}).delegateType&&e.stopPropagation();else if(s=o.call(arguments),U.set(this,n,s),t=a(this,n),this[n](),s!==(i=U.get(this,n))||t?U.set(this,n,!1):i={},s!==i)return e.stopImmediatePropagation(),e.preventDefault(),i.value}else s.length&&(U.set(this,n,{value:S.event.trigger(S.extend(s[0],S.Event.prototype),s.slice(1),this)}),e.stopImmediatePropagation())}})):void 0===U.get(e,n)&&S.event.add(e,n,Ee)}S.event={global:{},add:function(t,e,i,s,n){var a,r,o,l,d,h,u,c,p,f,v,m=U.get(t);if(Y(t))for(i.handler&&(i=(a=i).handler,n=a.selector),n&&S.find.matchesSelector(se,n),i.guid||(i.guid=S.guid++),(l=m.events)||(l=m.events=Object.create(null)),(r=m.handle)||(r=m.handle=function(e){return void 0!==S&&S.event.triggered!==e.type?S.event.dispatch.apply(t,arguments):void 0}),d=(e=(e||"").match(N)||[""]).length;d--;)p=v=(o=Te.exec(e[d])||[])[1],f=(o[2]||"").split(".").sort(),p&&(u=S.event.special[p]||{},p=(n?u.delegateType:u.bindType)||p,u=S.event.special[p]||{},h=S.extend({type:p,origType:v,data:s,handler:i,guid:i.guid,selector:n,needsContext:n&&S.expr.match.needsContext.test(n),namespace:f.join(".")},a),(c=l[p])||((c=l[p]=[]).delegateCount=0,u.setup&&!1!==u.setup.call(t,s,f,r)||t.addEventListener&&t.addEventListener(p,r)),u.add&&(u.add.call(t,h),h.handler.guid||(h.handler.guid=i.guid)),n?c.splice(c.delegateCount++,0,h):c.push(h),S.event.global[p]=!0)},remove:function(e,t,i,s,n){var a,r,o,l,d,h,u,c,p,f,v,m=U.hasData(e)&&U.get(e);if(m&&(l=m.events)){for(d=(t=(t||"").match(N)||[""]).length;d--;)if(p=v=(o=Te.exec(t[d])||[])[1],f=(o[2]||"").split(".").sort(),p){for(u=S.event.special[p]||{},c=l[p=(s?u.delegateType:u.bindType)||p]||[],o=o[2]&&new RegExp("(^|\\.)"+f.join("\\.(?:.*\\.|)")+"(\\.|$)"),r=a=c.length;a--;)h=c[a],!n&&v!==h.origType||i&&i.guid!==h.guid||o&&!o.test(h.namespace)||s&&s!==h.selector&&("**"!==s||!h.selector)||(c.splice(a,1),h.selector&&c.delegateCount--,u.remove&&u.remove.call(e,h));r&&!c.length&&(u.teardown&&!1!==u.teardown.call(e,f,m.handle)||S.removeEvent(e,p,m.handle),delete l[p])}else for(p in l)S.event.remove(e,p+t[d],i,s,!0);S.isEmptyObject(l)&&U.remove(e,"handle events")}},dispatch:function(e){var t,i,s,n,a,r,o=new Array(arguments.length),l=S.event.fix(e),d=(U.get(this,"events")||Object.create(null))[l.type]||[],h=S.event.special[l.type]||{};for(o[0]=l,t=1;t<arguments.length;t++)o[t]=arguments[t];if(l.delegateTarget=this,!h.preDispatch||!1!==h.preDispatch.call(this,l)){for(r=S.event.handlers.call(this,l,d),t=0;(n=r[t++])&&!l.isPropagationStopped();)for(l.currentTarget=n.elem,i=0;(a=n.handlers[i++])&&!l.isImmediatePropagationStopped();)l.rnamespace&&!1!==a.namespace&&!l.rnamespace.test(a.namespace)||(l.handleObj=a,l.data=a.data,void 0!==(s=((S.event.special[a.origType]||{}).handle||a.handler).apply(n.elem,o))&&!1===(l.result=s)&&(l.preventDefault(),l.stopPropagation()));return h.postDispatch&&h.postDispatch.call(this,l),l.result}},handlers:function(e,t){var i,s,n,a,r,o=[],l=t.delegateCount,d=e.target;if(l&&d.nodeType&&!("click"===e.type&&1<=e.button))for(;d!==this;d=d.parentNode||this)if(1===d.nodeType&&("click"!==e.type||!0!==d.disabled)){for(a=[],r={},i=0;i<l;i++)void 0===r[n=(s=t[i]).selector+" "]&&(r[n]=s.needsContext?-1<S(n,this).index(d):S.find(n,this,null,[d]).length),r[n]&&a.push(s);a.length&&o.push({elem:d,handlers:a})}return d=this,l<t.length&&o.push({elem:d,handlers:t.slice(l)}),o},addProp:function(t,e){Object.defineProperty(S.Event.prototype,t,{enumerable:!0,configurable:!0,get:b(e)?function(){if(this.originalEvent)return e(this.originalEvent)}:function(){if(this.originalEvent)return this.originalEvent[t]},set:function(e){Object.defineProperty(this,t,{enumerable:!0,configurable:!0,writable:!0,value:e})}})},fix:function(e){return e[S.expando]?e:new S.Event(e)},special:{load:{noBubble:!0},click:{setup:function(e){var t=this||e;return ce.test(t.type)&&t.click&&k(t,"input")&&ke(t,"click",Ee),!1},trigger:function(e){var t=this||e;return ce.test(t.type)&&t.click&&k(t,"input")&&ke(t,"click"),!0},_default:function(e){var t=e.target;return ce.test(t.type)&&t.click&&k(t,"input")&&U.get(t,"click")||k(t,"a")}},beforeunload:{postDispatch:function(e){void 0!==e.result&&e.originalEvent&&(e.originalEvent.returnValue=e.result)}}}},S.removeEvent=function(e,t,i){e.removeEventListener&&e.removeEventListener(t,i)},S.Event=function(e,t){if(!(this instanceof S.Event))return new S.Event(e,t);e&&e.type?(this.originalEvent=e,this.type=e.type,this.isDefaultPrevented=e.defaultPrevented||void 0===e.defaultPrevented&&!1===e.returnValue?Ee:Ce,this.target=e.target&&3===e.target.nodeType?e.target.parentNode:e.target,this.currentTarget=e.currentTarget,this.relatedTarget=e.relatedTarget):this.type=e,t&&S.extend(this,t),this.timeStamp=e&&e.timeStamp||Date.now(),this[S.expando]=!0},S.Event.prototype={constructor:S.Event,isDefaultPrevented:Ce,isPropagationStopped:Ce,isImmediatePropagationStopped:Ce,isSimulated:!1,preventDefault:function(){var e=this.originalEvent;this.isDefaultPrevented=Ee,e&&!this.isSimulated&&e.preventDefault()},stopPropagation:function(){var e=this.originalEvent;this.isPropagationStopped=Ee,e&&!this.isSimulated&&e.stopPropagation()},stopImmediatePropagation:function(){var e=this.originalEvent;this.isImmediatePropagationStopped=Ee,e&&!this.isSimulated&&e.stopImmediatePropagation(),this.stopPropagation()}},S.each({altKey:!0,bubbles:!0,cancelable:!0,changedTouches:!0,ctrlKey:!0,detail:!0,eventPhase:!0,metaKey:!0,pageX:!0,pageY:!0,shiftKey:!0,view:!0,char:!0,code:!0,charCode:!0,key:!0,keyCode:!0,button:!0,buttons:!0,clientX:!0,clientY:!0,offsetX:!0,offsetY:!0,pointerId:!0,pointerType:!0,screenX:!0,screenY:!0,targetTouches:!0,toElement:!0,touches:!0,which:function(e){var t=e.button;return null==e.which&&xe.test(e.type)?null!=e.charCode?e.charCode:e.keyCode:!e.which&&void 0!==t&&we.test(e.type)?1&t?1:2&t?3:4&t?2:0:e.which}},S.event.addProp),S.each({focus:"focusin",blur:"focusout"},function(e,t){S.event.special[e]={setup:function(){return ke(this,e,Se),!1},trigger:function(){return ke(this,e),!0},delegateType:t}}),S.each({mouseenter:"mouseover",mouseleave:"mouseout",pointerenter:"pointerover",pointerleave:"pointerout"},function(e,n){S.event.special[e]={delegateType:n,bindType:n,handle:function(e){var t,i=e.relatedTarget,s=e.handleObj;return i&&(i===this||S.contains(this,i))||(e.type=s.origType,t=s.handler.apply(this,arguments),e.type=n),t}}}),S.fn.extend({on:function(e,t,i,s){return Me(this,e,t,i,s)},one:function(e,t,i,s){return Me(this,e,t,i,s,1)},off:function(e,t,i){var s,n;if(e&&e.preventDefault&&e.handleObj)return s=e.handleObj,S(e.delegateTarget).off(s.namespace?s.origType+"."+s.namespace:s.origType,s.selector,s.handler),this;if("object"!=typeof e)return!1!==t&&"function"!=typeof t||(i=t,t=void 0),!1===i&&(i=Ce),this.each(function(){S.event.remove(this,e,i,t)});for(n in e)this.off(n,t,e[n]);return this}});var Pe=/<script|<style|<link/i,Le=/checked\s*(?:[^=]|=\s*.checked.)/i,De=/^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;function ze(e,t){return k(e,"table")&&k(11!==t.nodeType?t:t.firstChild,"tr")&&S(e).children("tbody")[0]||e}function Ae(e){return e.type=(null!==e.getAttribute("type"))+"/"+e.type,e}function $e(e){return"true/"===(e.type||"").slice(0,5)?e.type=e.type.slice(5):e.removeAttribute("type"),e}function Ie(e,t){var i,s,n,a,r,o;if(1===t.nodeType){if(U.hasData(e)&&(o=U.get(e).events))for(n in U.remove(t,"handle events"),o)for(i=0,s=o[n].length;i<s;i++)S.event.add(t,n,o[n][i]);K.hasData(e)&&(a=K.access(e),r=S.extend({},a),K.set(t,r))}}function Ne(i,s,n,a){s=m(s);var e,t,r,o,l,d,h=0,u=i.length,c=u-1,p=s[0],f=b(p);if(f||1<u&&"string"==typeof p&&!y.checkClone&&Le.test(p))return i.each(function(e){var t=i.eq(e);f&&(s[0]=p.call(this,e,t.html())),Ne(t,s,n,a)});if(u&&(t=(e=be(s,i[0].ownerDocument,!1,i,a)).firstChild,1===e.childNodes.length&&(e=t),t||a)){for(o=(r=S.map(me(e,"script"),Ae)).length;h<u;h++)l=e,h!==c&&(l=S.clone(l,!0,!0),o&&S.merge(r,me(l,"script"))),n.call(i[h],l,h);if(o)for(d=r[r.length-1].ownerDocument,S.map(r,$e),h=0;h<o;h++)l=r[h],fe.test(l.type||"")&&!U.access(l,"globalEval")&&S.contains(d,l)&&(l.src&&"module"!==(l.type||"").toLowerCase()?S._evalUrl&&!l.noModule&&S._evalUrl(l.src,{nonce:l.nonce||l.getAttribute("nonce")},d):x(l.textContent.replace(De,""),l,d))}return i}function Oe(e,t,i){for(var s,n=t?S.filter(t,e):e,a=0;null!=(s=n[a]);a++)i||1!==s.nodeType||S.cleanData(me(s)),s.parentNode&&(i&&ne(s)&&ge(me(s,"script")),s.parentNode.removeChild(s));return e}S.extend({htmlPrefilter:function(e){return e},clone:function(e,t,i){var s,n,a,r,o,l,d,h=e.cloneNode(!0),u=ne(e);if(!(y.noCloneChecked||1!==e.nodeType&&11!==e.nodeType||S.isXMLDoc(e)))for(r=me(h),s=0,n=(a=me(e)).length;s<n;s++)o=a[s],l=r[s],"input"===(d=l.nodeName.toLowerCase())&&ce.test(o.type)?l.checked=o.checked:"input"!==d&&"textarea"!==d||(l.defaultValue=o.defaultValue);if(t)if(i)for(a=a||me(e),r=r||me(h),s=0,n=a.length;s<n;s++)Ie(a[s],r[s]);else Ie(e,h);return 0<(r=me(h,"script")).length&&ge(r,!u&&me(e,"script")),h},cleanData:function(e){for(var t,i,s,n=S.event.special,a=0;void 0!==(i=e[a]);a++)if(Y(i)){if(t=i[U.expando]){if(t.events)for(s in t.events)n[s]?S.event.remove(i,s):S.removeEvent(i,s,t.handle);i[U.expando]=void 0}i[K.expando]&&(i[K.expando]=void 0)}}}),S.fn.extend({detach:function(e){return Oe(this,e,!0)},remove:function(e){return Oe(this,e)},text:function(e){return G(this,function(e){return void 0===e?S.text(this):this.empty().each(function(){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||(this.textContent=e)})},null,e,arguments.length)},append:function(){return Ne(this,arguments,function(e){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||ze(this,e).appendChild(e)})},prepend:function(){return Ne(this,arguments,function(e){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var t=ze(this,e);t.insertBefore(e,t.firstChild)}})},before:function(){return Ne(this,arguments,function(e){this.parentNode&&this.parentNode.insertBefore(e,this)})},after:function(){return Ne(this,arguments,function(e){this.parentNode&&this.parentNode.insertBefore(e,this.nextSibling)})},empty:function(){for(var e,t=0;null!=(e=this[t]);t++)1===e.nodeType&&(S.cleanData(me(e,!1)),e.textContent="");return this},clone:function(e,t){return e=null!=e&&e,t=null==t?e:t,this.map(function(){return S.clone(this,e,t)})},html:function(e){return G(this,function(e){var t=this[0]||{},i=0,s=this.length;if(void 0===e&&1===t.nodeType)return t.innerHTML;if("string"==typeof e&&!Pe.test(e)&&!ve[(pe.exec(e)||["",""])[1].toLowerCase()]){e=S.htmlPrefilter(e);try{for(;i<s;i++)1===(t=this[i]||{}).nodeType&&(S.cleanData(me(t,!1)),t.innerHTML=e);t=0}catch(e){}}t&&this.empty().append(e)},null,e,arguments.length)},replaceWith:function(){var i=[];return Ne(this,arguments,function(e){var t=this.parentNode;S.inArray(this,i)<0&&(S.cleanData(me(this)),t&&t.replaceChild(e,this))},i)}}),S.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(e,r){S.fn[e]=function(e){for(var t,i=[],s=S(e),n=s.length-1,a=0;a<=n;a++)t=a===n?this:this.clone(!0),S(s[a])[r](t),l.apply(i,t.get());return this.pushStack(i)}});function He(e,t,i){var s,n,a={};for(n in t)a[n]=e.style[n],e.style[n]=t[n];for(n in s=i.call(e),t)e.style[n]=a[n];return s}var je,qe,Be,Re,Ge,Fe,We,Xe,Ve=new RegExp("^("+ee+")(?!px)[a-z%]+$","i"),Ye=function(e){var t=e.ownerDocument.defaultView;return t&&t.opener||(t=E),t.getComputedStyle(e)},_e=new RegExp(ie.join("|"),"i");function Ue(){if(Xe){We.style.cssText="position:absolute;left:-11111px;width:60px;margin-top:1px;padding:0;border:0",Xe.style.cssText="position:relative;display:block;box-sizing:border-box;overflow:scroll;margin:auto;border:1px;padding:1px;width:60%;top:1%",se.appendChild(We).appendChild(Xe);var e=E.getComputedStyle(Xe);je="1%"!==e.top,Fe=12===Ke(e.marginLeft),Xe.style.right="60%",Re=36===Ke(e.right),qe=36===Ke(e.width),Xe.style.position="absolute",Be=12===Ke(Xe.offsetWidth/3),se.removeChild(We),Xe=null}}function Ke(e){return Math.round(parseFloat(e))}function Qe(e,t,i){var s,n,a,r,o=e.style;return(i=i||Ye(e))&&(""!==(r=i.getPropertyValue(t)||i[t])||ne(e)||(r=S.style(e,t)),!y.pixelBoxStyles()&&Ve.test(r)&&_e.test(t)&&(s=o.width,n=o.minWidth,a=o.maxWidth,o.minWidth=o.maxWidth=o.width=r,r=i.width,o.width=s,o.minWidth=n,o.maxWidth=a)),void 0!==r?r+"":r}function Je(e,t){return{get:function(){if(!e())return(this.get=t).apply(this,arguments);delete this.get}}}We=C.createElement("div"),(Xe=C.createElement("div")).style&&(Xe.style.backgroundClip="content-box",Xe.cloneNode(!0).style.backgroundClip="",y.clearCloneStyle="content-box"===Xe.style.backgroundClip,S.extend(y,{boxSizingReliable:function(){return Ue(),qe},pixelBoxStyles:function(){return Ue(),Re},pixelPosition:function(){return Ue(),je},reliableMarginLeft:function(){return Ue(),Fe},scrollboxSize:function(){return Ue(),Be},reliableTrDimensions:function(){var e,t,i,s;return null==Ge&&(e=C.createElement("table"),t=C.createElement("tr"),i=C.createElement("div"),e.style.cssText="position:absolute;left:-11111px",t.style.height="1px",i.style.height="9px",se.appendChild(e).appendChild(t).appendChild(i),s=E.getComputedStyle(t),Ge=3<parseInt(s.height),se.removeChild(e)),Ge}}));var Ze=["Webkit","Moz","ms"],et=C.createElement("div").style,tt={};function it(e){var t=S.cssProps[e]||tt[e];return t||(e in et?e:tt[e]=function(e){for(var t=e[0].toUpperCase()+e.slice(1),i=Ze.length;i--;)if((e=Ze[i]+t)in et)return e}(e)||e)}var st=/^(none|table(?!-c[ea]).+)/,nt=/^--/,at={position:"absolute",visibility:"hidden",display:"block"},rt={letterSpacing:"0",fontWeight:"400"};function ot(e,t,i){var s=te.exec(t);return s?Math.max(0,s[2]-(i||0))+(s[3]||"px"):t}function lt(e,t,i,s,n,a){var r="width"===t?1:0,o=0,l=0;if(i===(s?"border":"content"))return 0;for(;r<4;r+=2)"margin"===i&&(l+=S.css(e,i+ie[r],!0,n)),s?("content"===i&&(l-=S.css(e,"padding"+ie[r],!0,n)),"margin"!==i&&(l-=S.css(e,"border"+ie[r]+"Width",!0,n))):(l+=S.css(e,"padding"+ie[r],!0,n),"padding"!==i?l+=S.css(e,"border"+ie[r]+"Width",!0,n):o+=S.css(e,"border"+ie[r]+"Width",!0,n));return!s&&0<=a&&(l+=Math.max(0,Math.ceil(e["offset"+t[0].toUpperCase()+t.slice(1)]-a-l-o-.5))||0),l}function dt(e,t,i){var s=Ye(e),n=(!y.boxSizingReliable()||i)&&"border-box"===S.css(e,"boxSizing",!1,s),a=n,r=Qe(e,t,s),o="offset"+t[0].toUpperCase()+t.slice(1);if(Ve.test(r)){if(!i)return r;r="auto"}return(!y.boxSizingReliable()&&n||!y.reliableTrDimensions()&&k(e,"tr")||"auto"===r||!parseFloat(r)&&"inline"===S.css(e,"display",!1,s))&&e.getClientRects().length&&(n="border-box"===S.css(e,"boxSizing",!1,s),(a=o in e)&&(r=e[o])),(r=parseFloat(r)||0)+lt(e,t,i||(n?"border":"content"),a,s,r)+"px"}function ht(e,t,i,s,n){return new ht.prototype.init(e,t,i,s,n)}S.extend({cssHooks:{opacity:{get:function(e,t){if(t){var i=Qe(e,"opacity");return""===i?"1":i}}}},cssNumber:{animationIterationCount:!0,columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,gridArea:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnStart:!0,gridRow:!0,gridRowEnd:!0,gridRowStart:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{},style:function(e,t,i,s){if(e&&3!==e.nodeType&&8!==e.nodeType&&e.style){var n,a,r,o=V(t),l=nt.test(t),d=e.style;if(l||(t=it(o)),r=S.cssHooks[t]||S.cssHooks[o],void 0===i)return r&&"get"in r&&void 0!==(n=r.get(e,!1,s))?n:d[t];"string"===(a=typeof i)&&(n=te.exec(i))&&n[1]&&(i=oe(e,t,n),a="number"),null!=i&&i==i&&("number"!==a||l||(i+=n&&n[3]||(S.cssNumber[o]?"":"px")),y.clearCloneStyle||""!==i||0!==t.indexOf("background")||(d[t]="inherit"),r&&"set"in r&&void 0===(i=r.set(e,i,s))||(l?d.setProperty(t,i):d[t]=i))}},css:function(e,t,i,s){var n,a,r,o=V(t);return nt.test(t)||(t=it(o)),(r=S.cssHooks[t]||S.cssHooks[o])&&"get"in r&&(n=r.get(e,!0,i)),void 0===n&&(n=Qe(e,t,s)),"normal"===n&&t in rt&&(n=rt[t]),""===i||i?(a=parseFloat(n),!0===i||isFinite(a)?a||0:n):n}}),S.each(["height","width"],function(e,l){S.cssHooks[l]={get:function(e,t,i){if(t)return!st.test(S.css(e,"display"))||e.getClientRects().length&&e.getBoundingClientRect().width?dt(e,l,i):He(e,at,function(){return dt(e,l,i)})},set:function(e,t,i){var s,n=Ye(e),a=!y.scrollboxSize()&&"absolute"===n.position,r=(a||i)&&"border-box"===S.css(e,"boxSizing",!1,n),o=i?lt(e,l,i,r,n):0;return r&&a&&(o-=Math.ceil(e["offset"+l[0].toUpperCase()+l.slice(1)]-parseFloat(n[l])-lt(e,l,"border",!1,n)-.5)),o&&(s=te.exec(t))&&"px"!==(s[3]||"px")&&(e.style[l]=t,t=S.css(e,l)),ot(0,t,o)}}}),S.cssHooks.marginLeft=Je(y.reliableMarginLeft,function(e,t){if(t)return(parseFloat(Qe(e,"marginLeft"))||e.getBoundingClientRect().left-He(e,{marginLeft:0},function(){return e.getBoundingClientRect().left}))+"px"}),S.each({margin:"",padding:"",border:"Width"},function(n,a){S.cssHooks[n+a]={expand:function(e){for(var t=0,i={},s="string"==typeof e?e.split(" "):[e];t<4;t++)i[n+ie[t]+a]=s[t]||s[t-2]||s[0];return i}},"margin"!==n&&(S.cssHooks[n+a].set=ot)}),S.fn.extend({css:function(e,t){return G(this,function(e,t,i){var s,n,a={},r=0;if(Array.isArray(t)){for(s=Ye(e),n=t.length;r<n;r++)a[t[r]]=S.css(e,t[r],!1,s);return a}return void 0!==i?S.style(e,t,i):S.css(e,t)},e,t,1<arguments.length)}}),((S.Tween=ht).prototype={constructor:ht,init:function(e,t,i,s,n,a){this.elem=e,this.prop=i,this.easing=n||S.easing._default,this.options=t,this.start=this.now=this.cur(),this.end=s,this.unit=a||(S.cssNumber[i]?"":"px")},cur:function(){var e=ht.propHooks[this.prop];return e&&e.get?e.get(this):ht.propHooks._default.get(this)},run:function(e){var t,i=ht.propHooks[this.prop];return this.options.duration?this.pos=t=S.easing[this.easing](e,this.options.duration*e,0,1,this.options.duration):this.pos=t=e,this.now=(this.end-this.start)*t+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),i&&i.set?i.set(this):ht.propHooks._default.set(this),this}}).init.prototype=ht.prototype,(ht.propHooks={_default:{get:function(e){var t;return 1!==e.elem.nodeType||null!=e.elem[e.prop]&&null==e.elem.style[e.prop]?e.elem[e.prop]:(t=S.css(e.elem,e.prop,""))&&"auto"!==t?t:0},set:function(e){S.fx.step[e.prop]?S.fx.step[e.prop](e):1!==e.elem.nodeType||!S.cssHooks[e.prop]&&null==e.elem.style[it(e.prop)]?e.elem[e.prop]=e.now:S.style(e.elem,e.prop,e.now+e.unit)}}}).scrollTop=ht.propHooks.scrollLeft={set:function(e){e.elem.nodeType&&e.elem.parentNode&&(e.elem[e.prop]=e.now)}},S.easing={linear:function(e){return e},swing:function(e){return.5-Math.cos(e*Math.PI)/2},_default:"swing"},S.fx=ht.prototype.init,S.fx.step={};var ut,ct,pt,ft,vt=/^(?:toggle|show|hide)$/,mt=/queueHooks$/;function gt(){ct&&(!1===C.hidden&&E.requestAnimationFrame?E.requestAnimationFrame(gt):E.setTimeout(gt,S.fx.interval),S.fx.tick())}function yt(){return E.setTimeout(function(){ut=void 0}),ut=Date.now()}function bt(e,t){var i,s=0,n={height:e};for(t=t?1:0;s<4;s+=2-t)n["margin"+(i=ie[s])]=n["padding"+i]=e;return t&&(n.opacity=n.width=e),n}function xt(e,t,i){for(var s,n=(wt.tweeners[t]||[]).concat(wt.tweeners["*"]),a=0,r=n.length;a<r;a++)if(s=n[a].call(i,t,e))return s}function wt(a,e,t){var i,r,s=0,n=wt.prefilters.length,o=S.Deferred().always(function(){delete l.elem}),l=function(){if(r)return!1;for(var e=ut||yt(),t=Math.max(0,d.startTime+d.duration-e),i=1-(t/d.duration||0),s=0,n=d.tweens.length;s<n;s++)d.tweens[s].run(i);return o.notifyWith(a,[d,i,t]),i<1&&n?t:(n||o.notifyWith(a,[d,1,0]),o.resolveWith(a,[d]),!1)},d=o.promise({elem:a,props:S.extend({},e),opts:S.extend(!0,{specialEasing:{},easing:S.easing._default},t),originalProperties:e,originalOptions:t,startTime:ut||yt(),duration:t.duration,tweens:[],createTween:function(e,t){var i=S.Tween(a,d.opts,e,t,d.opts.specialEasing[e]||d.opts.easing);return d.tweens.push(i),i},stop:function(e){var t=0,i=e?d.tweens.length:0;if(r)return this;for(r=!0;t<i;t++)d.tweens[t].run(1);return e?(o.notifyWith(a,[d,1,0]),o.resolveWith(a,[d,e])):o.rejectWith(a,[d,e]),this}}),h=d.props;for(!function(e,t){var i,s,n,a,r;for(i in e)if(n=t[s=V(i)],a=e[i],Array.isArray(a)&&(n=a[1],a=e[i]=a[0]),i!==s&&(e[s]=a,delete e[i]),(r=S.cssHooks[s])&&"expand"in r)for(i in a=r.expand(a),delete e[s],a)i in e||(e[i]=a[i],t[i]=n);else t[s]=n}(h,d.opts.specialEasing);s<n;s++)if(i=wt.prefilters[s].call(d,a,h,d.opts))return b(i.stop)&&(S._queueHooks(d.elem,d.opts.queue).stop=i.stop.bind(i)),i;return S.map(h,xt,d),b(d.opts.start)&&d.opts.start.call(a,d),d.progress(d.opts.progress).done(d.opts.done,d.opts.complete).fail(d.opts.fail).always(d.opts.always),S.fx.timer(S.extend(l,{elem:a,anim:d,queue:d.opts.queue})),d}S.Animation=S.extend(wt,{tweeners:{"*":[function(e,t){var i=this.createTween(e,t);return oe(i.elem,e,te.exec(t),i),i}]},tweener:function(e,t){for(var i,s=0,n=(e=b(e)?(t=e,["*"]):e.match(N)).length;s<n;s++)i=e[s],wt.tweeners[i]=wt.tweeners[i]||[],wt.tweeners[i].unshift(t)},prefilters:[function(e,t,i){var s,n,a,r,o,l,d,h,u="width"in t||"height"in t,c=this,p={},f=e.style,v=e.nodeType&&re(e),m=U.get(e,"fxshow");for(s in i.queue||(null==(r=S._queueHooks(e,"fx")).unqueued&&(r.unqueued=0,o=r.empty.fire,r.empty.fire=function(){r.unqueued||o()}),r.unqueued++,c.always(function(){c.always(function(){r.unqueued--,S.queue(e,"fx").length||r.empty.fire()})})),t)if(n=t[s],vt.test(n)){if(delete t[s],a=a||"toggle"===n,n===(v?"hide":"show")){if("show"!==n||!m||void 0===m[s])continue;v=!0}p[s]=m&&m[s]||S.style(e,s)}if((l=!S.isEmptyObject(t))||!S.isEmptyObject(p))for(s in u&&1===e.nodeType&&(i.overflow=[f.overflow,f.overflowX,f.overflowY],null==(d=m&&m.display)&&(d=U.get(e,"display")),"none"===(h=S.css(e,"display"))&&(d?h=d:(de([e],!0),d=e.style.display||d,h=S.css(e,"display"),de([e]))),("inline"===h||"inline-block"===h&&null!=d)&&"none"===S.css(e,"float")&&(l||(c.done(function(){f.display=d}),null==d&&(h=f.display,d="none"===h?"":h)),f.display="inline-block")),i.overflow&&(f.overflow="hidden",c.always(function(){f.overflow=i.overflow[0],f.overflowX=i.overflow[1],f.overflowY=i.overflow[2]})),l=!1,p)l||(m?"hidden"in m&&(v=m.hidden):m=U.access(e,"fxshow",{display:d}),a&&(m.hidden=!v),v&&de([e],!0),c.done(function(){for(s in v||de([e]),U.remove(e,"fxshow"),p)S.style(e,s,p[s])})),l=xt(v?m[s]:0,s,c),s in m||(m[s]=l.start,v&&(l.end=l.start,l.start=0))}],prefilter:function(e,t){t?wt.prefilters.unshift(e):wt.prefilters.push(e)}}),S.speed=function(e,t,i){var s=e&&"object"==typeof e?S.extend({},e):{complete:i||!i&&t||b(e)&&e,duration:e,easing:i&&t||t&&!b(t)&&t};return S.fx.off?s.duration=0:"number"!=typeof s.duration&&(s.duration in S.fx.speeds?s.duration=S.fx.speeds[s.duration]:s.duration=S.fx.speeds._default),null!=s.queue&&!0!==s.queue||(s.queue="fx"),s.old=s.complete,s.complete=function(){b(s.old)&&s.old.call(this),s.queue&&S.dequeue(this,s.queue)},s},S.fn.extend({fadeTo:function(e,t,i,s){return this.filter(re).css("opacity",0).show().end().animate({opacity:t},e,i,s)},animate:function(t,e,i,s){function n(){var e=wt(this,S.extend({},t),r);(a||U.get(this,"finish"))&&e.stop(!0)}var a=S.isEmptyObject(t),r=S.speed(e,i,s);return n.finish=n,a||!1===r.queue?this.each(n):this.queue(r.queue,n)},stop:function(n,e,a){function r(e){var t=e.stop;delete e.stop,t(a)}return"string"!=typeof n&&(a=e,e=n,n=void 0),e&&this.queue(n||"fx",[]),this.each(function(){var e=!0,t=null!=n&&n+"queueHooks",i=S.timers,s=U.get(this);if(t)s[t]&&s[t].stop&&r(s[t]);else for(t in s)s[t]&&s[t].stop&&mt.test(t)&&r(s[t]);for(t=i.length;t--;)i[t].elem!==this||null!=n&&i[t].queue!==n||(i[t].anim.stop(a),e=!1,i.splice(t,1));!e&&a||S.dequeue(this,n)})},finish:function(r){return!1!==r&&(r=r||"fx"),this.each(function(){var e,t=U.get(this),i=t[r+"queue"],s=t[r+"queueHooks"],n=S.timers,a=i?i.length:0;for(t.finish=!0,S.queue(this,r,[]),s&&s.stop&&s.stop.call(this,!0),e=n.length;e--;)n[e].elem===this&&n[e].queue===r&&(n[e].anim.stop(!0),n.splice(e,1));for(e=0;e<a;e++)i[e]&&i[e].finish&&i[e].finish.call(this);delete t.finish})}}),S.each(["toggle","show","hide"],function(e,s){var n=S.fn[s];S.fn[s]=function(e,t,i){return null==e||"boolean"==typeof e?n.apply(this,arguments):this.animate(bt(s,!0),e,t,i)}}),S.each({slideDown:bt("show"),slideUp:bt("hide"),slideToggle:bt("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(e,s){S.fn[e]=function(e,t,i){return this.animate(s,e,t,i)}}),S.timers=[],S.fx.tick=function(){var e,t=0,i=S.timers;for(ut=Date.now();t<i.length;t++)(e=i[t])()||i[t]!==e||i.splice(t--,1);i.length||S.fx.stop(),ut=void 0},S.fx.timer=function(e){S.timers.push(e),S.fx.start()},S.fx.interval=13,S.fx.start=function(){ct||(ct=!0,gt())},S.fx.stop=function(){ct=null},S.fx.speeds={slow:600,fast:200,_default:400},S.fn.delay=function(s,e){return s=S.fx&&S.fx.speeds[s]||s,e=e||"fx",this.queue(e,function(e,t){var i=E.setTimeout(e,s);t.stop=function(){E.clearTimeout(i)}})},pt=C.createElement("input"),ft=C.createElement("select").appendChild(C.createElement("option")),pt.type="checkbox",y.checkOn=""!==pt.value,y.optSelected=ft.selected,(pt=C.createElement("input")).value="t",pt.type="radio",y.radioValue="t"===pt.value;var Tt,Et=S.expr.attrHandle;S.fn.extend({attr:function(e,t){return G(this,S.attr,e,t,1<arguments.length)},removeAttr:function(e){return this.each(function(){S.removeAttr(this,e)})}}),S.extend({attr:function(e,t,i){var s,n,a=e.nodeType;if(3!==a&&8!==a&&2!==a)return void 0===e.getAttribute?S.prop(e,t,i):(1===a&&S.isXMLDoc(e)||(n=S.attrHooks[t.toLowerCase()]||(S.expr.match.bool.test(t)?Tt:void 0)),void 0!==i?null===i?void S.removeAttr(e,t):n&&"set"in n&&void 0!==(s=n.set(e,i,t))?s:(e.setAttribute(t,i+""),i):n&&"get"in n&&null!==(s=n.get(e,t))?s:null==(s=S.find.attr(e,t))?void 0:s)},attrHooks:{type:{set:function(e,t){if(!y.radioValue&&"radio"===t&&k(e,"input")){var i=e.value;return e.setAttribute("type",t),i&&(e.value=i),t}}}},removeAttr:function(e,t){var i,s=0,n=t&&t.match(N);if(n&&1===e.nodeType)for(;i=n[s++];)e.removeAttribute(i)}}),Tt={set:function(e,t,i){return!1===t?S.removeAttr(e,i):e.setAttribute(i,i),i}},S.each(S.expr.match.bool.source.match(/\w+/g),function(e,t){var r=Et[t]||S.find.attr;Et[t]=function(e,t,i){var s,n,a=t.toLowerCase();return i||(n=Et[a],Et[a]=s,s=null!=r(e,t,i)?a:null,Et[a]=n),s}});var Ct=/^(?:input|select|textarea|button)$/i,St=/^(?:a|area)$/i;function Mt(e){return(e.match(N)||[]).join(" ")}function kt(e){return e.getAttribute&&e.getAttribute("class")||""}function Pt(e){return Array.isArray(e)?e:"string"==typeof e&&e.match(N)||[]}S.fn.extend({prop:function(e,t){return G(this,S.prop,e,t,1<arguments.length)},removeProp:function(e){return this.each(function(){delete this[S.propFix[e]||e]})}}),S.extend({prop:function(e,t,i){var s,n,a=e.nodeType;if(3!==a&&8!==a&&2!==a)return 1===a&&S.isXMLDoc(e)||(t=S.propFix[t]||t,n=S.propHooks[t]),void 0!==i?n&&"set"in n&&void 0!==(s=n.set(e,i,t))?s:e[t]=i:n&&"get"in n&&null!==(s=n.get(e,t))?s:e[t]},propHooks:{tabIndex:{get:function(e){var t=S.find.attr(e,"tabindex");return t?parseInt(t,10):Ct.test(e.nodeName)||St.test(e.nodeName)&&e.href?0:-1}}},propFix:{for:"htmlFor",class:"className"}}),y.optSelected||(S.propHooks.selected={get:function(e){var t=e.parentNode;return t&&t.parentNode&&t.parentNode.selectedIndex,null},set:function(e){var t=e.parentNode;t&&(t.selectedIndex,t.parentNode&&t.parentNode.selectedIndex)}}),S.each(["tabIndex","readOnly","maxLength","cellSpacing","cellPadding","rowSpan","colSpan","useMap","frameBorder","contentEditable"],function(){S.propFix[this.toLowerCase()]=this}),S.fn.extend({addClass:function(t){var e,i,s,n,a,r,o,l=0;if(b(t))return this.each(function(e){S(this).addClass(t.call(this,e,kt(this)))});if((e=Pt(t)).length)for(;i=this[l++];)if(n=kt(i),s=1===i.nodeType&&" "+Mt(n)+" "){for(r=0;a=e[r++];)s.indexOf(" "+a+" ")<0&&(s+=a+" ");n!==(o=Mt(s))&&i.setAttribute("class",o)}return this},removeClass:function(t){var e,i,s,n,a,r,o,l=0;if(b(t))return this.each(function(e){S(this).removeClass(t.call(this,e,kt(this)))});if(!arguments.length)return this.attr("class","");if((e=Pt(t)).length)for(;i=this[l++];)if(n=kt(i),s=1===i.nodeType&&" "+Mt(n)+" "){for(r=0;a=e[r++];)for(;-1<s.indexOf(" "+a+" ");)s=s.replace(" "+a+" "," ");n!==(o=Mt(s))&&i.setAttribute("class",o)}return this},toggleClass:function(n,t){var a=typeof n,r="string"==a||Array.isArray(n);return"boolean"==typeof t&&r?t?this.addClass(n):this.removeClass(n):b(n)?this.each(function(e){S(this).toggleClass(n.call(this,e,kt(this),t),t)}):this.each(function(){var e,t,i,s;if(r)for(t=0,i=S(this),s=Pt(n);e=s[t++];)i.hasClass(e)?i.removeClass(e):i.addClass(e);else void 0!==n&&"boolean"!=a||((e=kt(this))&&U.set(this,"__className__",e),this.setAttribute&&this.setAttribute("class",e||!1===n?"":U.get(this,"__className__")||""))})},hasClass:function(e){var t,i,s=0;for(t=" "+e+" ";i=this[s++];)if(1===i.nodeType&&-1<(" "+Mt(kt(i))+" ").indexOf(t))return!0;return!1}});var Lt=/\r/g;S.fn.extend({val:function(i){var s,e,n,t=this[0];return arguments.length?(n=b(i),this.each(function(e){var t;1===this.nodeType&&(null==(t=n?i.call(this,e,S(this).val()):i)?t="":"number"==typeof t?t+="":Array.isArray(t)&&(t=S.map(t,function(e){return null==e?"":e+""})),(s=S.valHooks[this.type]||S.valHooks[this.nodeName.toLowerCase()])&&"set"in s&&void 0!==s.set(this,t,"value")||(this.value=t))})):t?(s=S.valHooks[t.type]||S.valHooks[t.nodeName.toLowerCase()])&&"get"in s&&void 0!==(e=s.get(t,"value"))?e:"string"==typeof(e=t.value)?e.replace(Lt,""):null==e?"":e:void 0}}),S.extend({valHooks:{option:{get:function(e){var t=S.find.attr(e,"value");return null!=t?t:Mt(S.text(e))}},select:{get:function(e){var t,i,s,n=e.options,a=e.selectedIndex,r="select-one"===e.type,o=r?null:[],l=r?a+1:n.length;for(s=a<0?l:r?a:0;s<l;s++)if(((i=n[s]).selected||s===a)&&!i.disabled&&(!i.parentNode.disabled||!k(i.parentNode,"optgroup"))){if(t=S(i).val(),r)return t;o.push(t)}return o},set:function(e,t){for(var i,s,n=e.options,a=S.makeArray(t),r=n.length;r--;)((s=n[r]).selected=-1<S.inArray(S.valHooks.option.get(s),a))&&(i=!0);return i||(e.selectedIndex=-1),a}}}}),S.each(["radio","checkbox"],function(){S.valHooks[this]={set:function(e,t){if(Array.isArray(t))return e.checked=-1<S.inArray(S(e).val(),t)}},y.checkOn||(S.valHooks[this].get=function(e){return null===e.getAttribute("value")?"on":e.value})}),y.focusin="onfocusin"in E;function Dt(e){e.stopPropagation()}var zt=/^(?:focusinfocus|focusoutblur)$/;S.extend(S.event,{trigger:function(e,t,i,s){var n,a,r,o,l,d,h,u,c=[i||C],p=g.call(e,"type")?e.type:e,f=g.call(e,"namespace")?e.namespace.split("."):[];if(a=u=r=i=i||C,3!==i.nodeType&&8!==i.nodeType&&!zt.test(p+S.event.triggered)&&(-1<p.indexOf(".")&&(p=(f=p.split(".")).shift(),f.sort()),l=p.indexOf(":")<0&&"on"+p,(e=e[S.expando]?e:new S.Event(p,"object"==typeof e&&e)).isTrigger=s?2:3,e.namespace=f.join("."),e.rnamespace=e.namespace?new RegExp("(^|\\.)"+f.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,e.result=void 0,e.target||(e.target=i),t=null==t?[e]:S.makeArray(t,[e]),h=S.event.special[p]||{},s||!h.trigger||!1!==h.trigger.apply(i,t))){if(!s&&!h.noBubble&&!v(i)){for(o=h.delegateType||p,zt.test(o+p)||(a=a.parentNode);a;a=a.parentNode)c.push(a),r=a;r===(i.ownerDocument||C)&&c.push(r.defaultView||r.parentWindow||E)}for(n=0;(a=c[n++])&&!e.isPropagationStopped();)u=a,e.type=1<n?o:h.bindType||p,(d=(U.get(a,"events")||Object.create(null))[e.type]&&U.get(a,"handle"))&&d.apply(a,t),(d=l&&a[l])&&d.apply&&Y(a)&&(e.result=d.apply(a,t),!1===e.result&&e.preventDefault());return e.type=p,s||e.isDefaultPrevented()||h._default&&!1!==h._default.apply(c.pop(),t)||!Y(i)||l&&b(i[p])&&!v(i)&&((r=i[l])&&(i[l]=null),S.event.triggered=p,e.isPropagationStopped()&&u.addEventListener(p,Dt),i[p](),e.isPropagationStopped()&&u.removeEventListener(p,Dt),S.event.triggered=void 0,r&&(i[l]=r)),e.result}},simulate:function(e,t,i){var s=S.extend(new S.Event,i,{type:e,isSimulated:!0});S.event.trigger(s,null,t)}}),S.fn.extend({trigger:function(e,t){return this.each(function(){S.event.trigger(e,t,this)})},triggerHandler:function(e,t){var i=this[0];if(i)return S.event.trigger(e,t,i,!0)}}),y.focusin||S.each({focus:"focusin",blur:"focusout"},function(i,s){function n(e){S.event.simulate(s,e.target,S.event.fix(e))}S.event.special[s]={setup:function(){var e=this.ownerDocument||this.document||this,t=U.access(e,s);t||e.addEventListener(i,n,!0),U.access(e,s,(t||0)+1)},teardown:function(){var e=this.ownerDocument||this.document||this,t=U.access(e,s)-1;t?U.access(e,s,t):(e.removeEventListener(i,n,!0),U.remove(e,s))}}});var At=E.location,$t={guid:Date.now()},It=/\?/;S.parseXML=function(e){var t;if(!e||"string"!=typeof e)return null;try{t=(new E.DOMParser).parseFromString(e,"text/xml")}catch(e){t=void 0}return t&&!t.getElementsByTagName("parsererror").length||S.error("Invalid XML: "+e),t};var Nt=/\[\]$/,Ot=/\r?\n/g,Ht=/^(?:submit|button|image|reset|file)$/i,jt=/^(?:input|select|textarea|keygen)/i;function qt(i,e,s,n){var t;if(Array.isArray(e))S.each(e,function(e,t){s||Nt.test(i)?n(i,t):qt(i+"["+("object"==typeof t&&null!=t?e:"")+"]",t,s,n)});else if(s||"object"!==w(e))n(i,e);else for(t in e)qt(i+"["+t+"]",e[t],s,n)}S.param=function(e,t){function i(e,t){var i=b(t)?t():t;n[n.length]=encodeURIComponent(e)+"="+encodeURIComponent(null==i?"":i)}var s,n=[];if(null==e)return"";if(Array.isArray(e)||e.jquery&&!S.isPlainObject(e))S.each(e,function(){i(this.name,this.value)});else for(s in e)qt(s,e[s],t,i);return n.join("&")},S.fn.extend({serialize:function(){return S.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var e=S.prop(this,"elements");return e?S.makeArray(e):this}).filter(function(){var e=this.type;return this.name&&!S(this).is(":disabled")&&jt.test(this.nodeName)&&!Ht.test(e)&&(this.checked||!ce.test(e))}).map(function(e,t){var i=S(this).val();return null==i?null:Array.isArray(i)?S.map(i,function(e){return{name:t.name,value:e.replace(Ot,"\r\n")}}):{name:t.name,value:i.replace(Ot,"\r\n")}}).get()}});var Bt=/%20/g,Rt=/#.*$/,Gt=/([?&])_=[^&]*/,Ft=/^(.*?):[ \t]*([^\r\n]*)$/gm,Wt=/^(?:GET|HEAD)$/,Xt=/^\/\//,Vt={},Yt={},_t="*/".concat("*"),Ut=C.createElement("a");function Kt(a){return function(e,t){"string"!=typeof e&&(t=e,e="*");var i,s=0,n=e.toLowerCase().match(N)||[];if(b(t))for(;i=n[s++];)"+"===i[0]?(i=i.slice(1)||"*",(a[i]=a[i]||[]).unshift(t)):(a[i]=a[i]||[]).push(t)}}function Qt(t,n,a,r){var o={},l=t===Yt;function d(e){var s;return o[e]=!0,S.each(t[e]||[],function(e,t){var i=t(n,a,r);return"string"!=typeof i||l||o[i]?l?!(s=i):void 0:(n.dataTypes.unshift(i),d(i),!1)}),s}return d(n.dataTypes[0])||!o["*"]&&d("*")}function Jt(e,t){var i,s,n=S.ajaxSettings.flatOptions||{};for(i in t)void 0!==t[i]&&((n[i]?e:s=s||{})[i]=t[i]);return s&&S.extend(!0,e,s),e}Ut.href=At.href,S.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:At.href,type:"GET",isLocal:/^(?:about|app|app-storage|.+-extension|file|res|widget):$/.test(At.protocol),global:!0,processData:!0,async:!0,contentType:"application/x-www-form-urlencoded; charset=UTF-8",accepts:{"*":_t,text:"text/plain",html:"text/html",xml:"application/xml, text/xml",json:"application/json, text/javascript"},contents:{xml:/\bxml\b/,html:/\bhtml/,json:/\bjson\b/},responseFields:{xml:"responseXML",text:"responseText",json:"responseJSON"},converters:{"* text":String,"text html":!0,"text json":JSON.parse,"text xml":S.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(e,t){return t?Jt(Jt(e,S.ajaxSettings),t):Jt(S.ajaxSettings,e)},ajaxPrefilter:Kt(Vt),ajaxTransport:Kt(Yt),ajax:function(e,t){"object"==typeof e&&(t=e,e=void 0),t=t||{};var h,u,c,i,p,s,f,v,n,a,m=S.ajaxSetup({},t),g=m.context||m,y=m.context&&(g.nodeType||g.jquery)?S(g):S.event,b=S.Deferred(),x=S.Callbacks("once memory"),w=m.statusCode||{},r={},o={},l="canceled",T={readyState:0,getResponseHeader:function(e){var t;if(f){if(!i)for(i={};t=Ft.exec(c);)i[t[1].toLowerCase()+" "]=(i[t[1].toLowerCase()+" "]||[]).concat(t[2]);t=i[e.toLowerCase()+" "]}return null==t?null:t.join(", ")},getAllResponseHeaders:function(){return f?c:null},setRequestHeader:function(e,t){return null==f&&(e=o[e.toLowerCase()]=o[e.toLowerCase()]||e,r[e]=t),this},overrideMimeType:function(e){return null==f&&(m.mimeType=e),this},statusCode:function(e){var t;if(e)if(f)T.always(e[T.status]);else for(t in e)w[t]=[w[t],e[t]];return this},abort:function(e){var t=e||l;return h&&h.abort(t),d(0,t),this}};if(b.promise(T),m.url=((e||m.url||At.href)+"").replace(Xt,At.protocol+"//"),m.type=t.method||t.type||m.method||m.type,m.dataTypes=(m.dataType||"*").toLowerCase().match(N)||[""],null==m.crossDomain){s=C.createElement("a");try{s.href=m.url,s.href=s.href,m.crossDomain=Ut.protocol+"//"+Ut.host!=s.protocol+"//"+s.host}catch(e){m.crossDomain=!0}}if(m.data&&m.processData&&"string"!=typeof m.data&&(m.data=S.param(m.data,m.traditional)),Qt(Vt,m,t,T),f)return T;for(n in(v=S.event&&m.global)&&0==S.active++&&S.event.trigger("ajaxStart"),m.type=m.type.toUpperCase(),m.hasContent=!Wt.test(m.type),u=m.url.replace(Rt,""),m.hasContent?m.data&&m.processData&&0===(m.contentType||"").indexOf("application/x-www-form-urlencoded")&&(m.data=m.data.replace(Bt,"+")):(a=m.url.slice(u.length),m.data&&(m.processData||"string"==typeof m.data)&&(u+=(It.test(u)?"&":"?")+m.data,delete m.data),!1===m.cache&&(u=u.replace(Gt,"$1"),a=(It.test(u)?"&":"?")+"_="+$t.guid+++a),m.url=u+a),m.ifModified&&(S.lastModified[u]&&T.setRequestHeader("If-Modified-Since",S.lastModified[u]),S.etag[u]&&T.setRequestHeader("If-None-Match",S.etag[u])),(m.data&&m.hasContent&&!1!==m.contentType||t.contentType)&&T.setRequestHeader("Content-Type",m.contentType),T.setRequestHeader("Accept",m.dataTypes[0]&&m.accepts[m.dataTypes[0]]?m.accepts[m.dataTypes[0]]+("*"!==m.dataTypes[0]?", "+_t+"; q=0.01":""):m.accepts["*"]),m.headers)T.setRequestHeader(n,m.headers[n]);if(m.beforeSend&&(!1===m.beforeSend.call(g,T,m)||f))return T.abort();if(l="abort",x.add(m.complete),T.done(m.success),T.fail(m.error),h=Qt(Yt,m,t,T)){if(T.readyState=1,v&&y.trigger("ajaxSend",[T,m]),f)return T;m.async&&0<m.timeout&&(p=E.setTimeout(function(){T.abort("timeout")},m.timeout));try{f=!1,h.send(r,d)}catch(e){if(f)throw e;d(-1,e)}}else d(-1,"No Transport");function d(e,t,i,s){var n,a,r,o,l,d=t;f||(f=!0,p&&E.clearTimeout(p),h=void 0,c=s||"",T.readyState=0<e?4:0,n=200<=e&&e<300||304===e,i&&(o=function(e,t,i){for(var s,n,a,r,o=e.contents,l=e.dataTypes;"*"===l[0];)l.shift(),void 0===s&&(s=e.mimeType||t.getResponseHeader("Content-Type"));if(s)for(n in o)if(o[n]&&o[n].test(s)){l.unshift(n);break}if(l[0]in i)a=l[0];else{for(n in i){if(!l[0]||e.converters[n+" "+l[0]]){a=n;break}r=r||n}a=a||r}if(a)return a!==l[0]&&l.unshift(a),i[a]}(m,T,i)),!n&&-1<S.inArray("script",m.dataTypes)&&(m.converters["text script"]=function(){}),o=function(e,t,i,s){var n,a,r,o,l,d={},h=e.dataTypes.slice();if(h[1])for(r in e.converters)d[r.toLowerCase()]=e.converters[r];for(a=h.shift();a;)if(e.responseFields[a]&&(i[e.responseFields[a]]=t),!l&&s&&e.dataFilter&&(t=e.dataFilter(t,e.dataType)),l=a,a=h.shift())if("*"===a)a=l;else if("*"!==l&&l!==a){if(!(r=d[l+" "+a]||d["* "+a]))for(n in d)if((o=n.split(" "))[1]===a&&(r=d[l+" "+o[0]]||d["* "+o[0]])){!0===r?r=d[n]:!0!==d[n]&&(a=o[0],h.unshift(o[1]));break}if(!0!==r)if(r&&e.throws)t=r(t);else try{t=r(t)}catch(e){return{state:"parsererror",error:r?e:"No conversion from "+l+" to "+a}}}return{state:"success",data:t}}(m,o,T,n),n?(m.ifModified&&((l=T.getResponseHeader("Last-Modified"))&&(S.lastModified[u]=l),(l=T.getResponseHeader("etag"))&&(S.etag[u]=l)),204===e||"HEAD"===m.type?d="nocontent":304===e?d="notmodified":(d=o.state,a=o.data,n=!(r=o.error))):(r=d,!e&&d||(d="error",e<0&&(e=0))),T.status=e,T.statusText=(t||d)+"",n?b.resolveWith(g,[a,d,T]):b.rejectWith(g,[T,d,r]),T.statusCode(w),w=void 0,v&&y.trigger(n?"ajaxSuccess":"ajaxError",[T,m,n?a:r]),x.fireWith(g,[T,d]),v&&(y.trigger("ajaxComplete",[T,m]),--S.active||S.event.trigger("ajaxStop")))}return T},getJSON:function(e,t,i){return S.get(e,t,i,"json")},getScript:function(e,t){return S.get(e,void 0,t,"script")}}),S.each(["get","post"],function(e,n){S[n]=function(e,t,i,s){return b(t)&&(s=s||i,i=t,t=void 0),S.ajax(S.extend({url:e,type:n,dataType:s,data:t,success:i},S.isPlainObject(e)&&e))}}),S.ajaxPrefilter(function(e){var t;for(t in e.headers)"content-type"===t.toLowerCase()&&(e.contentType=e.headers[t]||"")}),S._evalUrl=function(e,t,i){return S.ajax({url:e,type:"GET",dataType:"script",cache:!0,async:!1,global:!1,converters:{"text script":function(){}},dataFilter:function(e){S.globalEval(e,t,i)}})},S.fn.extend({wrapAll:function(e){var t;return this[0]&&(b(e)&&(e=e.call(this[0])),t=S(e,this[0].ownerDocument).eq(0).clone(!0),this[0].parentNode&&t.insertBefore(this[0]),t.map(function(){for(var e=this;e.firstElementChild;)e=e.firstElementChild;return e}).append(this)),this},wrapInner:function(i){return b(i)?this.each(function(e){S(this).wrapInner(i.call(this,e))}):this.each(function(){var e=S(this),t=e.contents();t.length?t.wrapAll(i):e.append(i)})},wrap:function(t){var i=b(t);return this.each(function(e){S(this).wrapAll(i?t.call(this,e):t)})},unwrap:function(e){return this.parent(e).not("body").each(function(){S(this).replaceWith(this.childNodes)}),this}}),S.expr.pseudos.hidden=function(e){return!S.expr.pseudos.visible(e)},S.expr.pseudos.visible=function(e){return!!(e.offsetWidth||e.offsetHeight||e.getClientRects().length)},S.ajaxSettings.xhr=function(){try{return new E.XMLHttpRequest}catch(e){}};var Zt={0:200,1223:204},ei=S.ajaxSettings.xhr();y.cors=!!ei&&"withCredentials"in ei,y.ajax=ei=!!ei,S.ajaxTransport(function(n){var a,r;if(y.cors||ei&&!n.crossDomain)return{send:function(e,t){var i,s=n.xhr();if(s.open(n.type,n.url,n.async,n.username,n.password),n.xhrFields)for(i in n.xhrFields)s[i]=n.xhrFields[i];for(i in n.mimeType&&s.overrideMimeType&&s.overrideMimeType(n.mimeType),n.crossDomain||e["X-Requested-With"]||(e["X-Requested-With"]="XMLHttpRequest"),e)s.setRequestHeader(i,e[i]);a=function(e){return function(){a&&(a=r=s.onload=s.onerror=s.onabort=s.ontimeout=s.onreadystatechange=null,"abort"===e?s.abort():"error"===e?"number"!=typeof s.status?t(0,"error"):t(s.status,s.statusText):t(Zt[s.status]||s.status,s.statusText,"text"!==(s.responseType||"text")||"string"!=typeof s.responseText?{binary:s.response}:{text:s.responseText},s.getAllResponseHeaders()))}},s.onload=a(),r=s.onerror=s.ontimeout=a("error"),void 0!==s.onabort?s.onabort=r:s.onreadystatechange=function(){4===s.readyState&&E.setTimeout(function(){a&&r()})},a=a("abort");try{s.send(n.hasContent&&n.data||null)}catch(e){if(a)throw e}},abort:function(){a&&a()}}}),S.ajaxPrefilter(function(e){e.crossDomain&&(e.contents.script=!1)}),S.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/\b(?:java|ecma)script\b/},converters:{"text script":function(e){return S.globalEval(e),e}}}),S.ajaxPrefilter("script",function(e){void 0===e.cache&&(e.cache=!1),e.crossDomain&&(e.type="GET")}),S.ajaxTransport("script",function(i){var s,n;if(i.crossDomain||i.scriptAttrs)return{send:function(e,t){s=S("<script>").attr(i.scriptAttrs||{}).prop({charset:i.scriptCharset,src:i.url}).on("load error",n=function(e){s.remove(),n=null,e&&t("error"===e.type?404:200,e.type)}),C.head.appendChild(s[0])},abort:function(){n&&n()}}});var ti,ii=[],si=/(=)\?(?=&|$)|\?\?/;S.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var e=ii.pop()||S.expando+"_"+$t.guid++;return this[e]=!0,e}}),S.ajaxPrefilter("json jsonp",function(e,t,i){var s,n,a,r=!1!==e.jsonp&&(si.test(e.url)?"url":"string"==typeof e.data&&0===(e.contentType||"").indexOf("application/x-www-form-urlencoded")&&si.test(e.data)&&"data");if(r||"jsonp"===e.dataTypes[0])return s=e.jsonpCallback=b(e.jsonpCallback)?e.jsonpCallback():e.jsonpCallback,r?e[r]=e[r].replace(si,"$1"+s):!1!==e.jsonp&&(e.url+=(It.test(e.url)?"&":"?")+e.jsonp+"="+s),e.converters["script json"]=function(){return a||S.error(s+" was not called"),a[0]},e.dataTypes[0]="json",n=E[s],E[s]=function(){a=arguments},i.always(function(){void 0===n?S(E).removeProp(s):E[s]=n,e[s]&&(e.jsonpCallback=t.jsonpCallback,ii.push(s)),a&&b(n)&&n(a[0]),a=n=void 0}),"script"}),y.createHTMLDocument=((ti=C.implementation.createHTMLDocument("").body).innerHTML="<form></form><form></form>",2===ti.childNodes.length),S.parseHTML=function(e,t,i){return"string"!=typeof e?[]:("boolean"==typeof t&&(i=t,t=!1),t||(y.createHTMLDocument?((s=(t=C.implementation.createHTMLDocument("")).createElement("base")).href=C.location.href,t.head.appendChild(s)):t=C),a=!i&&[],(n=P.exec(e))?[t.createElement(n[1])]:(n=be([e],t,a),a&&a.length&&S(a).remove(),S.merge([],n.childNodes)));var s,n,a},S.fn.load=function(e,t,i){var s,n,a,r=this,o=e.indexOf(" ");return-1<o&&(s=Mt(e.slice(o)),e=e.slice(0,o)),b(t)?(i=t,t=void 0):t&&"object"==typeof t&&(n="POST"),0<r.length&&S.ajax({url:e,type:n||"GET",dataType:"html",data:t}).done(function(e){a=arguments,r.html(s?S("<div>").append(S.parseHTML(e)).find(s):e)}).always(i&&function(e,t){r.each(function(){i.apply(this,a||[e.responseText,t,e])})}),this},S.expr.pseudos.animated=function(t){return S.grep(S.timers,function(e){return t===e.elem}).length},S.offset={setOffset:function(e,t,i){var s,n,a,r,o,l,d=S.css(e,"position"),h=S(e),u={};"static"===d&&(e.style.position="relative"),o=h.offset(),a=S.css(e,"top"),l=S.css(e,"left"),n=("absolute"===d||"fixed"===d)&&-1<(a+l).indexOf("auto")?(r=(s=h.position()).top,s.left):(r=parseFloat(a)||0,parseFloat(l)||0),b(t)&&(t=t.call(e,i,S.extend({},o))),null!=t.top&&(u.top=t.top-o.top+r),null!=t.left&&(u.left=t.left-o.left+n),"using"in t?t.using.call(e,u):("number"==typeof u.top&&(u.top+="px"),"number"==typeof u.left&&(u.left+="px"),h.css(u))}},S.fn.extend({offset:function(t){if(arguments.length)return void 0===t?this:this.each(function(e){S.offset.setOffset(this,t,e)});var e,i,s=this[0];return s?s.getClientRects().length?(e=s.getBoundingClientRect(),i=s.ownerDocument.defaultView,{top:e.top+i.pageYOffset,left:e.left+i.pageXOffset}):{top:0,left:0}:void 0},position:function(){if(this[0]){var e,t,i,s=this[0],n={top:0,left:0};if("fixed"===S.css(s,"position"))t=s.getBoundingClientRect();else{for(t=this.offset(),i=s.ownerDocument,e=s.offsetParent||i.documentElement;e&&(e===i.body||e===i.documentElement)&&"static"===S.css(e,"position");)e=e.parentNode;e&&e!==s&&1===e.nodeType&&((n=S(e).offset()).top+=S.css(e,"borderTopWidth",!0),n.left+=S.css(e,"borderLeftWidth",!0))}return{top:t.top-n.top-S.css(s,"marginTop",!0),left:t.left-n.left-S.css(s,"marginLeft",!0)}}},offsetParent:function(){return this.map(function(){for(var e=this.offsetParent;e&&"static"===S.css(e,"position");)e=e.offsetParent;return e||se})}}),S.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(t,n){var a="pageYOffset"===n;S.fn[t]=function(e){return G(this,function(e,t,i){var s;if(v(e)?s=e:9===e.nodeType&&(s=e.defaultView),void 0===i)return s?s[n]:e[t];s?s.scrollTo(a?s.pageXOffset:i,a?i:s.pageYOffset):e[t]=i},t,e,arguments.length)}}),S.each(["top","left"],function(e,i){S.cssHooks[i]=Je(y.pixelPosition,function(e,t){if(t)return t=Qe(e,i),Ve.test(t)?S(e).position()[i]+"px":t})}),S.each({Height:"height",Width:"width"},function(r,o){S.each({padding:"inner"+r,content:o,"":"outer"+r},function(s,a){S.fn[a]=function(e,t){var i=arguments.length&&(s||"boolean"!=typeof e),n=s||(!0===e||!0===t?"margin":"border");return G(this,function(e,t,i){var s;return v(e)?0===a.indexOf("outer")?e["inner"+r]:e.document.documentElement["client"+r]:9===e.nodeType?(s=e.documentElement,Math.max(e.body["scroll"+r],s["scroll"+r],e.body["offset"+r],s["offset"+r],s["client"+r])):void 0===i?S.css(e,t,n):S.style(e,t,i,n)},o,i?e:void 0,i)}})}),S.each(["ajaxStart","ajaxStop","ajaxComplete","ajaxError","ajaxSuccess","ajaxSend"],function(e,t){S.fn[t]=function(e){return this.on(t,e)}}),S.fn.extend({bind:function(e,t,i){return this.on(e,null,t,i)},unbind:function(e,t){return this.off(e,null,t)},delegate:function(e,t,i,s){return this.on(t,e,i,s)},undelegate:function(e,t,i){return 1===arguments.length?this.off(e,"**"):this.off(t,e||"**",i)},hover:function(e,t){return this.mouseenter(e).mouseleave(t||e)}}),S.each("blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(" "),function(e,i){S.fn[i]=function(e,t){return 0<arguments.length?this.on(i,null,e,t):this.trigger(i)}});var ni=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g;S.proxy=function(e,t){var i,s,n;if("string"==typeof t&&(i=e[t],t=e,e=i),b(e))return s=o.call(arguments,2),(n=function(){return e.apply(t||this,s.concat(o.call(arguments)))}).guid=e.guid=e.guid||S.guid++,n},S.holdReady=function(e){e?S.readyWait++:S.ready(!0)},S.isArray=Array.isArray,S.parseJSON=JSON.parse,S.nodeName=k,S.isFunction=b,S.isWindow=v,S.camelCase=V,S.type=w,S.now=Date.now,S.isNumeric=function(e){var t=S.type(e);return("number"===t||"string"===t)&&!isNaN(e-parseFloat(e))},S.trim=function(e){return null==e?"":(e+"").replace(ni,"")},"function"==typeof define&&define.amd&&define("jquery",[],function(){return S});var ai=E.jQuery,ri=E.$;return S.noConflict=function(e){return E.$===S&&(E.$=ri),e&&E.jQuery===S&&(E.jQuery=ai),S},void 0===e&&(E.jQuery=E.$=S),S}),function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e=e||self).Swiper=t()}(this,function(){"use strict";function s(e){return null!==e&&"object"==typeof e&&"constructor"in e&&e.constructor===Object}function n(t,i){void 0===t&&(t={}),void 0===i&&(i={}),Object.keys(i).forEach(function(e){void 0===t[e]?t[e]=i[e]:s(i[e])&&s(t[e])&&0<Object.keys(i[e]).length&&n(t[e],i[e])})}var y="undefined"!=typeof document?document:{},e={body:{},addEventListener:function(){},removeEventListener:function(){},activeElement:{blur:function(){},nodeName:""},querySelector:function(){return null},querySelectorAll:function(){return[]},getElementById:function(){return null},createEvent:function(){return{initEvent:function(){}}},createElement:function(){return{children:[],childNodes:[],style:{},setAttribute:function(){},getElementsByTagName:function(){return[]}}},createElementNS:function(){return{}},importNode:function(){return null},location:{hash:"",host:"",hostname:"",href:"",origin:"",pathname:"",protocol:"",search:""}};n(y,e);var ne="undefined"!=typeof window?window:{};n(ne,{document:e,navigator:{userAgent:""},location:{hash:"",host:"",hostname:"",href:"",origin:"",pathname:"",protocol:"",search:""},history:{replaceState:function(){},pushState:function(){},go:function(){},back:function(){}},CustomEvent:function(){return this},addEventListener:function(){},removeEventListener:function(){},getComputedStyle:function(){return{getPropertyValue:function(){return""}}},Image:function(){},Date:function(){},screen:{},setTimeout:function(){},clearTimeout:function(){},matchMedia:function(){return{}}});var l=function(e){for(var t=0;t<e.length;t+=1)this[t]=e[t];return this.length=e.length,this};function D(e,t){var i=[],s=0;if(e&&!t&&e instanceof l)return e;if(e)if("string"==typeof e){var n,a,r=e.trim();if(0<=r.indexOf("<")&&0<=r.indexOf(">")){var o="div";for(0===r.indexOf("<li")&&(o="ul"),0===r.indexOf("<tr")&&(o="tbody"),0!==r.indexOf("<td")&&0!==r.indexOf("<th")||(o="tr"),0===r.indexOf("<tbody")&&(o="table"),0===r.indexOf("<option")&&(o="select"),(a=y.createElement(o)).innerHTML=r,s=0;s<a.childNodes.length;s+=1)i.push(a.childNodes[s])}else for(n=t||"#"!==e[0]||e.match(/[ .<>:~]/)?(t||y).querySelectorAll(e.trim()):[y.getElementById(e.trim().split("#")[1])],s=0;s<n.length;s+=1)n[s]&&i.push(n[s])}else if(e.nodeType||e===ne||e===y)i.push(e);else if(0<e.length&&e[0].nodeType)for(s=0;s<e.length;s+=1)i.push(e[s]);return new l(i)}function a(e){for(var t=[],i=0;i<e.length;i+=1)-1===t.indexOf(e[i])&&t.push(e[i]);return t}D.fn=l.prototype,D.Class=l,D.Dom7=l;var t={addClass:function(e){if(void 0===e)return this;for(var t=e.split(" "),i=0;i<t.length;i+=1)for(var s=0;s<this.length;s+=1)void 0!==this[s]&&void 0!==this[s].classList&&this[s].classList.add(t[i]);return this},removeClass:function(e){for(var t=e.split(" "),i=0;i<t.length;i+=1)for(var s=0;s<this.length;s+=1)void 0!==this[s]&&void 0!==this[s].classList&&this[s].classList.remove(t[i]);return this},hasClass:function(e){return!!this[0]&&this[0].classList.contains(e)},toggleClass:function(e){for(var t=e.split(" "),i=0;i<t.length;i+=1)for(var s=0;s<this.length;s+=1)void 0!==this[s]&&void 0!==this[s].classList&&this[s].classList.toggle(t[i]);return this},attr:function(e,t){var i=arguments;if(1===arguments.length&&"string"==typeof e)return this[0]?this[0].getAttribute(e):void 0;for(var s=0;s<this.length;s+=1)if(2===i.length)this[s].setAttribute(e,t);else for(var n in e)this[s][n]=e[n],this[s].setAttribute(n,e[n]);return this},removeAttr:function(e){for(var t=0;t<this.length;t+=1)this[t].removeAttribute(e);return this},data:function(e,t){var i;if(void 0!==t){for(var s=0;s<this.length;s+=1)(i=this[s]).dom7ElementDataStorage||(i.dom7ElementDataStorage={}),i.dom7ElementDataStorage[e]=t;return this}if(i=this[0])return i.dom7ElementDataStorage&&e in i.dom7ElementDataStorage?i.dom7ElementDataStorage[e]:i.getAttribute("data-"+e)||void 0},transform:function(e){for(var t=0;t<this.length;t+=1){var i=this[t].style;i.webkitTransform=e,i.transform=e}return this},transition:function(e){"string"!=typeof e&&(e+="ms");for(var t=0;t<this.length;t+=1){var i=this[t].style;i.webkitTransitionDuration=e,i.transitionDuration=e}return this},on:function(){for(var e=[],t=arguments.length;t--;)e[t]=arguments[t];var i=e[0],a=e[1],r=e[2],s=e[3];function n(e){var t=e.target;if(t){var i=e.target.dom7EventData||[];if(i.indexOf(e)<0&&i.unshift(e),D(t).is(a))r.apply(t,i);else for(var s=D(t).parents(),n=0;n<s.length;n+=1)D(s[n]).is(a)&&r.apply(s[n],i)}}function o(e){var t=e&&e.target&&e.target.dom7EventData||[];t.indexOf(e)<0&&t.unshift(e),r.apply(this,t)}"function"==typeof e[1]&&(i=e[0],r=e[1],s=e[2],a=void 0),s=s||!1;for(var l,d=i.split(" "),h=0;h<this.length;h+=1){var u=this[h];if(a)for(l=0;l<d.length;l+=1){var c=d[l];u.dom7LiveListeners||(u.dom7LiveListeners={}),u.dom7LiveListeners[c]||(u.dom7LiveListeners[c]=[]),u.dom7LiveListeners[c].push({listener:r,proxyListener:n}),u.addEventListener(c,n,s)}else for(l=0;l<d.length;l+=1){var p=d[l];u.dom7Listeners||(u.dom7Listeners={}),u.dom7Listeners[p]||(u.dom7Listeners[p]=[]),u.dom7Listeners[p].push({listener:r,proxyListener:o}),u.addEventListener(p,o,s)}}return this},off:function(){for(var e=[],t=arguments.length;t--;)e[t]=arguments[t];var i=e[0],s=e[1],n=e[2],a=e[3];"function"==typeof e[1]&&(i=e[0],n=e[1],a=e[2],s=void 0),a=a||!1;for(var r=i.split(" "),o=0;o<r.length;o+=1)for(var l=r[o],d=0;d<this.length;d+=1){var h=this[d],u=void 0;if(!s&&h.dom7Listeners?u=h.dom7Listeners[l]:s&&h.dom7LiveListeners&&(u=h.dom7LiveListeners[l]),u&&u.length)for(var c=u.length-1;0<=c;--c){var p=u[c];n&&p.listener===n||n&&p.listener&&p.listener.dom7proxy&&p.listener.dom7proxy===n?(h.removeEventListener(l,p.proxyListener,a),u.splice(c,1)):n||(h.removeEventListener(l,p.proxyListener,a),u.splice(c,1))}}return this},trigger:function(){for(var e=[],t=arguments.length;t--;)e[t]=arguments[t];for(var i=e[0].split(" "),s=e[1],n=0;n<i.length;n+=1)for(var a=i[n],r=0;r<this.length;r+=1){var o=this[r],l=void 0;try{l=new ne.CustomEvent(a,{detail:s,bubbles:!0,cancelable:!0})}catch(e){(l=y.createEvent("Event")).initEvent(a,!0,!0),l.detail=s}o.dom7EventData=e.filter(function(e,t){return 0<t}),o.dispatchEvent(l),o.dom7EventData=[],delete o.dom7EventData}return this},transitionEnd:function(t){var i,s=["webkitTransitionEnd","transitionend"],n=this;function a(e){if(e.target===this)for(t.call(this,e),i=0;i<s.length;i+=1)n.off(s[i],a)}if(t)for(i=0;i<s.length;i+=1)n.on(s[i],a);return this},outerWidth:function(e){if(0<this.length){if(e){var t=this.styles();return this[0].offsetWidth+parseFloat(t.getPropertyValue("margin-right"))+parseFloat(t.getPropertyValue("margin-left"))}return this[0].offsetWidth}return null},outerHeight:function(e){if(0<this.length){if(e){var t=this.styles();return this[0].offsetHeight+parseFloat(t.getPropertyValue("margin-top"))+parseFloat(t.getPropertyValue("margin-bottom"))}return this[0].offsetHeight}return null},offset:function(){if(0<this.length){var e=this[0],t=e.getBoundingClientRect(),i=y.body,s=e.clientTop||i.clientTop||0,n=e.clientLeft||i.clientLeft||0,a=e===ne?ne.scrollY:e.scrollTop,r=e===ne?ne.scrollX:e.scrollLeft;return{top:t.top+a-s,left:t.left+r-n}}return null},css:function(e,t){var i;if(1===arguments.length){if("string"!=typeof e){for(i=0;i<this.length;i+=1)for(var s in e)this[i].style[s]=e[s];return this}if(this[0])return ne.getComputedStyle(this[0],null).getPropertyValue(e)}if(2!==arguments.length||"string"!=typeof e)return this;for(i=0;i<this.length;i+=1)this[i].style[e]=t;return this},each:function(e){if(!e)return this;for(var t=0;t<this.length;t+=1)if(!1===e.call(this[t],t,this[t]))return this;return this},html:function(e){if(void 0===e)return this[0]?this[0].innerHTML:void 0;for(var t=0;t<this.length;t+=1)this[t].innerHTML=e;return this},text:function(e){if(void 0===e)return this[0]?this[0].textContent.trim():null;for(var t=0;t<this.length;t+=1)this[t].textContent=e;return this},is:function(e){var t,i,s=this[0];if(!s||void 0===e)return!1;if("string"==typeof e){if(s.matches)return s.matches(e);if(s.webkitMatchesSelector)return s.webkitMatchesSelector(e);if(s.msMatchesSelector)return s.msMatchesSelector(e);for(t=D(e),i=0;i<t.length;i+=1)if(t[i]===s)return!0;return!1}if(e===y)return s===y;if(e===ne)return s===ne;if(e.nodeType||e instanceof l){for(t=e.nodeType?[e]:e,i=0;i<t.length;i+=1)if(t[i]===s)return!0;return!1}return!1},index:function(){var e,t=this[0];if(t){for(e=0;null!==(t=t.previousSibling);)1===t.nodeType&&(e+=1);return e}},eq:function(e){if(void 0===e)return this;var t,i=this.length;return new l(i-1<e?[]:e<0?(t=i+e)<0?[]:[this[t]]:[this[e]])},append:function(){for(var e,t=[],i=arguments.length;i--;)t[i]=arguments[i];for(var s=0;s<t.length;s+=1){e=t[s];for(var n=0;n<this.length;n+=1)if("string"==typeof e){var a=y.createElement("div");for(a.innerHTML=e;a.firstChild;)this[n].appendChild(a.firstChild)}else if(e instanceof l)for(var r=0;r<e.length;r+=1)this[n].appendChild(e[r]);else this[n].appendChild(e)}return this},prepend:function(e){var t,i;for(t=0;t<this.length;t+=1)if("string"==typeof e){var s=y.createElement("div");for(s.innerHTML=e,i=s.childNodes.length-1;0<=i;--i)this[t].insertBefore(s.childNodes[i],this[t].childNodes[0])}else if(e instanceof l)for(i=0;i<e.length;i+=1)this[t].insertBefore(e[i],this[t].childNodes[0]);else this[t].insertBefore(e,this[t].childNodes[0]);return this},next:function(e){return 0<this.length?e?this[0].nextElementSibling&&D(this[0].nextElementSibling).is(e)?new l([this[0].nextElementSibling]):new l([]):this[0].nextElementSibling?new l([this[0].nextElementSibling]):new l([]):new l([])},nextAll:function(e){var t=[],i=this[0];if(!i)return new l([]);for(;i.nextElementSibling;){var s=i.nextElementSibling;e?D(s).is(e)&&t.push(s):t.push(s),i=s}return new l(t)},prev:function(e){if(0<this.length){var t=this[0];return e?t.previousElementSibling&&D(t.previousElementSibling).is(e)?new l([t.previousElementSibling]):new l([]):t.previousElementSibling?new l([t.previousElementSibling]):new l([])}return new l([])},prevAll:function(e){var t=[],i=this[0];if(!i)return new l([]);for(;i.previousElementSibling;){var s=i.previousElementSibling;e?D(s).is(e)&&t.push(s):t.push(s),i=s}return new l(t)},parent:function(e){for(var t=[],i=0;i<this.length;i+=1)null!==this[i].parentNode&&(e?D(this[i].parentNode).is(e)&&t.push(this[i].parentNode):t.push(this[i].parentNode));return D(a(t))},parents:function(e){for(var t=[],i=0;i<this.length;i+=1)for(var s=this[i].parentNode;s;)e?D(s).is(e)&&t.push(s):t.push(s),s=s.parentNode;return D(a(t))},closest:function(e){var t=this;return void 0===e?new l([]):(t.is(e)||(t=t.parents(e).eq(0)),t)},find:function(e){for(var t=[],i=0;i<this.length;i+=1)for(var s=this[i].querySelectorAll(e),n=0;n<s.length;n+=1)t.push(s[n]);return new l(t)},children:function(e){for(var t=[],i=0;i<this.length;i+=1)for(var s=this[i].childNodes,n=0;n<s.length;n+=1)e?1===s[n].nodeType&&D(s[n]).is(e)&&t.push(s[n]):1===s[n].nodeType&&t.push(s[n]);return new l(a(t))},filter:function(e){for(var t=[],i=0;i<this.length;i+=1)e.call(this[i],i,this[i])&&t.push(this[i]);return new l(t)},remove:function(){for(var e=0;e<this.length;e+=1)this[e].parentNode&&this[e].parentNode.removeChild(this[e]);return this},add:function(){for(var e=[],t=arguments.length;t--;)e[t]=arguments[t];var i,s;for(i=0;i<e.length;i+=1){var n=D(e[i]);for(s=0;s<n.length;s+=1)this[this.length]=n[s],this.length+=1}return this},styles:function(){return this[0]?ne.getComputedStyle(this[0],null):{}}};Object.keys(t).forEach(function(e){D.fn[e]=D.fn[e]||t[e]});function i(e){void 0===e&&(e={});var t=this;t.params=e,t.eventsListeners={},t.params&&t.params.on&&Object.keys(t.params.on).forEach(function(e){t.on(e,t.params.on[e])})}var ae={deleteProps:function(e){var t=e;Object.keys(t).forEach(function(e){try{t[e]=null}catch(e){}try{delete t[e]}catch(e){}})},nextTick:function(e,t){return void 0===t&&(t=0),setTimeout(e,t)},now:function(){return Date.now()},getTranslate:function(e,t){var i,s,n;void 0===t&&(t="x");var a=ne.getComputedStyle(e,null);return ne.WebKitCSSMatrix?(6<(s=a.transform||a.webkitTransform).split(",").length&&(s=s.split(", ").map(function(e){return e.replace(",",".")}).join(", ")),n=new ne.WebKitCSSMatrix("none"===s?"":s)):i=(n=a.MozTransform||a.OTransform||a.MsTransform||a.msTransform||a.transform||a.getPropertyValue("transform").replace("translate(","matrix(1, 0, 0, 1,")).toString().split(","),"x"===t&&(s=ne.WebKitCSSMatrix?n.m41:16===i.length?parseFloat(i[12]):parseFloat(i[4])),"y"===t&&(s=ne.WebKitCSSMatrix?n.m42:16===i.length?parseFloat(i[13]):parseFloat(i[5])),s||0},parseUrlQuery:function(e){var t,i,s,n,a={},r=e||ne.location.href;if("string"==typeof r&&r.length)for(n=(i=(r=-1<r.indexOf("?")?r.replace(/\S*\?/,""):"").split("&").filter(function(e){return""!==e})).length,t=0;t<n;t+=1)s=i[t].replace(/#\S+/g,"").split("="),a[decodeURIComponent(s[0])]=void 0===s[1]?void 0:decodeURIComponent(s[1])||"";return a},isObject:function(e){return"object"==typeof e&&null!==e&&e.constructor&&e.constructor===Object},extend:function(){for(var e=[],t=arguments.length;t--;)e[t]=arguments[t];for(var i=Object(e[0]),s=1;s<e.length;s+=1){var n=e[s];if(null!=n)for(var a=Object.keys(Object(n)),r=0,o=a.length;r<o;r+=1){var l=a[r],d=Object.getOwnPropertyDescriptor(n,l);void 0!==d&&d.enumerable&&(ae.isObject(i[l])&&ae.isObject(n[l])?ae.extend(i[l],n[l]):!ae.isObject(i[l])&&ae.isObject(n[l])?(i[l]={},ae.extend(i[l],n[l])):i[l]=n[l])}}return i}},M={touch:!!("ontouchstart"in ne||ne.DocumentTouch&&y instanceof ne.DocumentTouch),pointerEvents:!!ne.PointerEvent&&"maxTouchPoints"in ne.navigator&&0<=ne.navigator.maxTouchPoints,observer:"MutationObserver"in ne||"WebkitMutationObserver"in ne,passiveListener:function(){var e=!1;try{var t=Object.defineProperty({},"passive",{get:function(){e=!0}});ne.addEventListener("testPassiveListener",null,t)}catch(e){}return e}(),gestures:"ongesturestart"in ne},r={components:{configurable:!0}};i.prototype.on=function(e,t,i){var s=this;if("function"!=typeof t)return s;var n=i?"unshift":"push";return e.split(" ").forEach(function(e){s.eventsListeners[e]||(s.eventsListeners[e]=[]),s.eventsListeners[e][n](t)}),s},i.prototype.once=function(i,s,e){var n=this;if("function"!=typeof s)return n;function a(){for(var e=[],t=arguments.length;t--;)e[t]=arguments[t];n.off(i,a),a.f7proxy&&delete a.f7proxy,s.apply(n,e)}return a.f7proxy=s,n.on(i,a,e)},i.prototype.off=function(e,s){var n=this;return n.eventsListeners&&e.split(" ").forEach(function(i){void 0===s?n.eventsListeners[i]=[]:n.eventsListeners[i]&&n.eventsListeners[i].length&&n.eventsListeners[i].forEach(function(e,t){(e===s||e.f7proxy&&e.f7proxy===s)&&n.eventsListeners[i].splice(t,1)})}),n},i.prototype.emit=function(){for(var e=[],t=arguments.length;t--;)e[t]=arguments[t];var i,s,n,a=this;return a.eventsListeners&&(n="string"==typeof e[0]||Array.isArray(e[0])?(i=e[0],s=e.slice(1,e.length),a):(i=e[0].events,s=e[0].data,e[0].context||a),(Array.isArray(i)?i:i.split(" ")).forEach(function(e){if(a.eventsListeners&&a.eventsListeners[e]){var t=[];a.eventsListeners[e].forEach(function(e){t.push(e)}),t.forEach(function(e){e.apply(n,s)})}})),a},i.prototype.useModulesParams=function(i){var s=this;s.modules&&Object.keys(s.modules).forEach(function(e){var t=s.modules[e];t.params&&ae.extend(i,t.params)})},i.prototype.useModules=function(s){void 0===s&&(s={});var n=this;n.modules&&Object.keys(n.modules).forEach(function(e){var i=n.modules[e],t=s[e]||{};i.instance&&Object.keys(i.instance).forEach(function(e){var t=i.instance[e];n[e]="function"==typeof t?t.bind(n):t}),i.on&&n.on&&Object.keys(i.on).forEach(function(e){n.on(e,i.on[e])}),i.create&&i.create.bind(n)(t)})},r.components.set=function(e){this.use&&this.use(e)},i.installModule=function(t){for(var e=[],i=arguments.length-1;0<i--;)e[i]=arguments[i+1];var s=this;s.prototype.modules||(s.prototype.modules={});var n=t.name||Object.keys(s.prototype.modules).length+"_"+ae.now();return(s.prototype.modules[n]=t).proto&&Object.keys(t.proto).forEach(function(e){s.prototype[e]=t.proto[e]}),t.static&&Object.keys(t.static).forEach(function(e){s[e]=t.static[e]}),t.install&&t.install.apply(s,e),s},i.use=function(e){for(var t=[],i=arguments.length-1;0<i--;)t[i]=arguments[i+1];var s=this;return Array.isArray(e)?(e.forEach(function(e){return s.installModule(e)}),s):s.installModule.apply(s,[e].concat(t))},Object.defineProperties(i,r);var o,d,h,u,c,p,f,v,m,g,b,x,w,T,E,C={updateSize:function(){var e,t,i=this.$el;e=void 0!==this.params.width?this.params.width:i[0].clientWidth,t=void 0!==this.params.height?this.params.height:i[0].clientHeight,0===e&&this.isHorizontal()||0===t&&this.isVertical()||(e=e-parseInt(i.css("padding-left"),10)-parseInt(i.css("padding-right"),10),t=t-parseInt(i.css("padding-top"),10)-parseInt(i.css("padding-bottom"),10),ae.extend(this,{width:e,height:t,size:this.isHorizontal()?e:t}))},updateSlides:function(){var t=this.params,e=this.$wrapperEl,i=this.size,s=this.rtlTranslate,n=this.wrongRTL,a=this.virtual&&t.virtual.enabled,r=a?this.virtual.slides.length:this.slides.length,o=e.children("."+this.params.slideClass),l=a?this.virtual.slides.length:o.length,d=[],h=[],u=[];function c(e){return!t.cssMode||e!==o.length-1}var p=t.slidesOffsetBefore;"function"==typeof p&&(p=t.slidesOffsetBefore.call(this));var f=t.slidesOffsetAfter;"function"==typeof f&&(f=t.slidesOffsetAfter.call(this));var v=this.snapGrid.length,m=this.snapGrid.length,g=t.spaceBetween,y=-p,b=0,x=0;if(void 0!==i){var w,T;"string"==typeof g&&0<=g.indexOf("%")&&(g=parseFloat(g.replace("%",""))/100*i),this.virtualSize=-g,s?o.css({marginLeft:"",marginTop:""}):o.css({marginRight:"",marginBottom:""}),1<t.slidesPerColumn&&(w=Math.floor(l/t.slidesPerColumn)===l/this.params.slidesPerColumn?l:Math.ceil(l/t.slidesPerColumn)*t.slidesPerColumn,"auto"!==t.slidesPerView&&"row"===t.slidesPerColumnFill&&(w=Math.max(w,t.slidesPerView*t.slidesPerColumn)));for(var E,C=t.slidesPerColumn,S=w/C,M=Math.floor(l/t.slidesPerColumn),k=0;k<l;k+=1){T=0;var P=o.eq(k);if(1<t.slidesPerColumn){var L=void 0,D=void 0,z=void 0;if("row"===t.slidesPerColumnFill&&1<t.slidesPerGroup){var A=Math.floor(k/(t.slidesPerGroup*t.slidesPerColumn)),$=k-t.slidesPerColumn*t.slidesPerGroup*A,I=0===A?t.slidesPerGroup:Math.min(Math.ceil((l-A*C*t.slidesPerGroup)/C),t.slidesPerGroup);L=(D=$-(z=Math.floor($/I))*I+A*t.slidesPerGroup)+z*w/C,P.css({"-webkit-box-ordinal-group":L,"-moz-box-ordinal-group":L,"-ms-flex-order":L,"-webkit-order":L,order:L})}else"column"===t.slidesPerColumnFill?(z=k-(D=Math.floor(k/C))*C,(M<D||D===M&&z===C-1)&&(z+=1)>=C&&(z=0,D+=1)):D=k-(z=Math.floor(k/S))*S;P.css("margin-"+(this.isHorizontal()?"top":"left"),0!==z&&t.spaceBetween&&t.spaceBetween+"px")}if("none"!==P.css("display")){if("auto"===t.slidesPerView){var N=ne.getComputedStyle(P[0],null),O=P[0].style.transform,H=P[0].style.webkitTransform;if(O&&(P[0].style.transform="none"),H&&(P[0].style.webkitTransform="none"),t.roundLengths)T=this.isHorizontal()?P.outerWidth(!0):P.outerHeight(!0);else if(this.isHorizontal()){var j=parseFloat(N.getPropertyValue("width")),q=parseFloat(N.getPropertyValue("padding-left")),B=parseFloat(N.getPropertyValue("padding-right")),R=parseFloat(N.getPropertyValue("margin-left")),G=parseFloat(N.getPropertyValue("margin-right")),F=N.getPropertyValue("box-sizing");T=F&&"border-box"===F?j+R+G:j+q+B+R+G}else{var W=parseFloat(N.getPropertyValue("height")),X=parseFloat(N.getPropertyValue("padding-top")),V=parseFloat(N.getPropertyValue("padding-bottom")),Y=parseFloat(N.getPropertyValue("margin-top")),_=parseFloat(N.getPropertyValue("margin-bottom")),U=N.getPropertyValue("box-sizing");T=U&&"border-box"===U?W+Y+_:W+X+V+Y+_}O&&(P[0].style.transform=O),H&&(P[0].style.webkitTransform=H),t.roundLengths&&(T=Math.floor(T))}else T=(i-(t.slidesPerView-1)*g)/t.slidesPerView,t.roundLengths&&(T=Math.floor(T)),o[k]&&(this.isHorizontal()?o[k].style.width=T+"px":o[k].style.height=T+"px");o[k]&&(o[k].swiperSlideSize=T),u.push(T),t.centeredSlides?(y=y+T/2+b/2+g,0===b&&0!==k&&(y=y-i/2-g),0===k&&(y=y-i/2-g),Math.abs(y)<.001&&(y=0),t.roundLengths&&(y=Math.floor(y)),x%t.slidesPerGroup==0&&d.push(y),h.push(y)):(t.roundLengths&&(y=Math.floor(y)),(x-Math.min(this.params.slidesPerGroupSkip,x))%this.params.slidesPerGroup==0&&d.push(y),h.push(y),y=y+T+g),this.virtualSize+=T+g,b=T,x+=1}}if(this.virtualSize=Math.max(this.virtualSize,i)+f,s&&n&&("slide"===t.effect||"coverflow"===t.effect)&&e.css({width:this.virtualSize+t.spaceBetween+"px"}),t.setWrapperSize&&(this.isHorizontal()?e.css({width:this.virtualSize+t.spaceBetween+"px"}):e.css({height:this.virtualSize+t.spaceBetween+"px"})),1<t.slidesPerColumn&&(this.virtualSize=(T+t.spaceBetween)*w,this.virtualSize=Math.ceil(this.virtualSize/t.slidesPerColumn)-t.spaceBetween,this.isHorizontal()?e.css({width:this.virtualSize+t.spaceBetween+"px"}):e.css({height:this.virtualSize+t.spaceBetween+"px"}),t.centeredSlides)){E=[];for(var K=0;K<d.length;K+=1){var Q=d[K];t.roundLengths&&(Q=Math.floor(Q)),d[K]<this.virtualSize+d[0]&&E.push(Q)}d=E}if(!t.centeredSlides){E=[];for(var J=0;J<d.length;J+=1){var Z=d[J];t.roundLengths&&(Z=Math.floor(Z)),d[J]<=this.virtualSize-i&&E.push(Z)}d=E,1<Math.floor(this.virtualSize-i)-Math.floor(d[d.length-1])&&d.push(this.virtualSize-i)}if(0===d.length&&(d=[0]),0!==t.spaceBetween&&(this.isHorizontal()?s?o.filter(c).css({marginLeft:g+"px"}):o.filter(c).css({marginRight:g+"px"}):o.filter(c).css({marginBottom:g+"px"})),t.centeredSlides&&t.centeredSlidesBounds){var ee=0;u.forEach(function(e){ee+=e+(t.spaceBetween?t.spaceBetween:0)});var te=(ee-=t.spaceBetween)-i;d=d.map(function(e){return e<0?-p:te<e?te+f:e})}if(t.centerInsufficientSlides){var ie=0;if(u.forEach(function(e){ie+=e+(t.spaceBetween?t.spaceBetween:0)}),(ie-=t.spaceBetween)<i){var se=(i-ie)/2;d.forEach(function(e,t){d[t]=e-se}),h.forEach(function(e,t){h[t]=e+se})}}ae.extend(this,{slides:o,snapGrid:d,slidesGrid:h,slidesSizesGrid:u}),l!==r&&this.emit("slidesLengthChange"),d.length!==v&&(this.params.watchOverflow&&this.checkOverflow(),this.emit("snapGridLengthChange")),h.length!==m&&this.emit("slidesGridLengthChange"),(t.watchSlidesProgress||t.watchSlidesVisibility)&&this.updateSlidesOffset()}},updateAutoHeight:function(e){var t,i=[],s=0;if("number"==typeof e?this.setTransition(e):!0===e&&this.setTransition(this.params.speed),"auto"!==this.params.slidesPerView&&1<this.params.slidesPerView)if(this.params.centeredSlides)this.visibleSlides.each(function(e,t){i.push(t)});else for(t=0;t<Math.ceil(this.params.slidesPerView);t+=1){var n=this.activeIndex+t;if(n>this.slides.length)break;i.push(this.slides.eq(n)[0])}else i.push(this.slides.eq(this.activeIndex)[0]);for(t=0;t<i.length;t+=1)if(void 0!==i[t]){var a=i[t].offsetHeight;s=s<a?a:s}s&&this.$wrapperEl.css("height",s+"px")},updateSlidesOffset:function(){for(var e=this.slides,t=0;t<e.length;t+=1)e[t].swiperSlideOffset=this.isHorizontal()?e[t].offsetLeft:e[t].offsetTop},updateSlidesProgress:function(e){void 0===e&&(e=this&&this.translate||0);var t=this.params,i=this.slides,s=this.rtlTranslate;if(0!==i.length){void 0===i[0].swiperSlideOffset&&this.updateSlidesOffset();var n=-e;s&&(n=e),i.removeClass(t.slideVisibleClass),this.visibleSlidesIndexes=[],this.visibleSlides=[];for(var a=0;a<i.length;a+=1){var r=i[a],o=(n+(t.centeredSlides?this.minTranslate():0)-r.swiperSlideOffset)/(r.swiperSlideSize+t.spaceBetween);if(t.watchSlidesVisibility||t.centeredSlides&&t.autoHeight){var l=-(n-r.swiperSlideOffset),d=l+this.slidesSizesGrid[a];(0<=l&&l<this.size-1||1<d&&d<=this.size||l<=0&&d>=this.size)&&(this.visibleSlides.push(r),this.visibleSlidesIndexes.push(a),i.eq(a).addClass(t.slideVisibleClass))}r.progress=s?-o:o}this.visibleSlides=D(this.visibleSlides)}},updateProgress:function(e){if(void 0===e){var t=this.rtlTranslate?-1:1;e=this&&this.translate&&this.translate*t||0}var i=this.params,s=this.maxTranslate()-this.minTranslate(),n=this.progress,a=this.isBeginning,r=this.isEnd,o=a,l=r;r=0==s?a=!(n=0):(a=(n=(e-this.minTranslate())/s)<=0,1<=n),ae.extend(this,{progress:n,isBeginning:a,isEnd:r}),(i.watchSlidesProgress||i.watchSlidesVisibility||i.centeredSlides&&i.autoHeight)&&this.updateSlidesProgress(e),a&&!o&&this.emit("reachBeginning toEdge"),r&&!l&&this.emit("reachEnd toEdge"),(o&&!a||l&&!r)&&this.emit("fromEdge"),this.emit("progress",n)},updateSlidesClasses:function(){var e,t=this.slides,i=this.params,s=this.$wrapperEl,n=this.activeIndex,a=this.realIndex,r=this.virtual&&i.virtual.enabled;t.removeClass(i.slideActiveClass+" "+i.slideNextClass+" "+i.slidePrevClass+" "+i.slideDuplicateActiveClass+" "+i.slideDuplicateNextClass+" "+i.slideDuplicatePrevClass),(e=r?this.$wrapperEl.find("."+i.slideClass+'[data-swiper-slide-index="'+n+'"]'):t.eq(n)).addClass(i.slideActiveClass),i.loop&&(e.hasClass(i.slideDuplicateClass)?s.children("."+i.slideClass+":not(."+i.slideDuplicateClass+')[data-swiper-slide-index="'+a+'"]').addClass(i.slideDuplicateActiveClass):s.children("."+i.slideClass+"."+i.slideDuplicateClass+'[data-swiper-slide-index="'+a+'"]').addClass(i.slideDuplicateActiveClass));var o=e.nextAll("."+i.slideClass).eq(0).addClass(i.slideNextClass);i.loop&&0===o.length&&(o=t.eq(0)).addClass(i.slideNextClass);var l=e.prevAll("."+i.slideClass).eq(0).addClass(i.slidePrevClass);i.loop&&0===l.length&&(l=t.eq(-1)).addClass(i.slidePrevClass),i.loop&&(o.hasClass(i.slideDuplicateClass)?s.children("."+i.slideClass+":not(."+i.slideDuplicateClass+')[data-swiper-slide-index="'+o.attr("data-swiper-slide-index")+'"]').addClass(i.slideDuplicateNextClass):s.children("."+i.slideClass+"."+i.slideDuplicateClass+'[data-swiper-slide-index="'+o.attr("data-swiper-slide-index")+'"]').addClass(i.slideDuplicateNextClass),l.hasClass(i.slideDuplicateClass)?s.children("."+i.slideClass+":not(."+i.slideDuplicateClass+')[data-swiper-slide-index="'+l.attr("data-swiper-slide-index")+'"]').addClass(i.slideDuplicatePrevClass):s.children("."+i.slideClass+"."+i.slideDuplicateClass+'[data-swiper-slide-index="'+l.attr("data-swiper-slide-index")+'"]').addClass(i.slideDuplicatePrevClass))},updateActiveIndex:function(e){var t,i=this.rtlTranslate?this.translate:-this.translate,s=this.slidesGrid,n=this.snapGrid,a=this.params,r=this.activeIndex,o=this.realIndex,l=this.snapIndex,d=e;if(void 0===d){for(var h=0;h<s.length;h+=1)void 0!==s[h+1]?i>=s[h]&&i<s[h+1]-(s[h+1]-s[h])/2?d=h:i>=s[h]&&i<s[h+1]&&(d=h+1):i>=s[h]&&(d=h);a.normalizeSlideIndex&&(d<0||void 0===d)&&(d=0)}if(0<=n.indexOf(i))t=n.indexOf(i);else{var u=Math.min(a.slidesPerGroupSkip,d);t=u+Math.floor((d-u)/a.slidesPerGroup)}if(t>=n.length&&(t=n.length-1),d!==r){var c=parseInt(this.slides.eq(d).attr("data-swiper-slide-index")||d,10);ae.extend(this,{snapIndex:t,realIndex:c,previousIndex:r,activeIndex:d}),this.emit("activeIndexChange"),this.emit("snapIndexChange"),o!==c&&this.emit("realIndexChange"),(this.initialized||this.params.runCallbacksOnInit)&&this.emit("slideChange")}else t!==l&&(this.snapIndex=t,this.emit("snapIndexChange"))},updateClickedSlide:function(e){var t=this.params,i=D(e.target).closest("."+t.slideClass)[0],s=!1;if(i)for(var n=0;n<this.slides.length;n+=1)this.slides[n]===i&&(s=!0);if(!i||!s)return this.clickedSlide=void 0,void(this.clickedIndex=void 0);this.clickedSlide=i,this.virtual&&this.params.virtual.enabled?this.clickedIndex=parseInt(D(i).attr("data-swiper-slide-index"),10):this.clickedIndex=D(i).index(),t.slideToClickedSlide&&void 0!==this.clickedIndex&&this.clickedIndex!==this.activeIndex&&this.slideToClickedSlide()}},S={getTranslate:function(e){void 0===e&&(e=this.isHorizontal()?"x":"y");var t=this.params,i=this.rtlTranslate,s=this.translate,n=this.$wrapperEl;if(t.virtualTranslate)return i?-s:s;if(t.cssMode)return s;var a=ae.getTranslate(n[0],e);return i&&(a=-a),a||0},setTranslate:function(e,t){var i=this.rtlTranslate,s=this.params,n=this.$wrapperEl,a=this.wrapperEl,r=this.progress,o=0,l=0;this.isHorizontal()?o=i?-e:e:l=e,s.roundLengths&&(o=Math.floor(o),l=Math.floor(l)),s.cssMode?a[this.isHorizontal()?"scrollLeft":"scrollTop"]=this.isHorizontal()?-o:-l:s.virtualTranslate||n.transform("translate3d("+o+"px, "+l+"px, 0px)"),this.previousTranslate=this.translate,this.translate=this.isHorizontal()?o:l;var d=this.maxTranslate()-this.minTranslate();(0==d?0:(e-this.minTranslate())/d)!==r&&this.updateProgress(e),this.emit("setTranslate",this.translate,t)},minTranslate:function(){return-this.snapGrid[0]},maxTranslate:function(){return-this.snapGrid[this.snapGrid.length-1]},translateTo:function(e,t,i,s,n){var a;void 0===e&&(e=0),void 0===t&&(t=this.params.speed),void 0===i&&(i=!0),void 0===s&&(s=!0);var r=this,o=r.params,l=r.wrapperEl;if(r.animating&&o.preventInteractionOnTransition)return!1;var d,h=r.minTranslate(),u=r.maxTranslate();if(d=s&&h<e?h:s&&e<u?u:e,r.updateProgress(d),o.cssMode){var c=r.isHorizontal();return 0===t?l[c?"scrollLeft":"scrollTop"]=-d:l.scrollTo?l.scrollTo(((a={})[c?"left":"top"]=-d,a.behavior="smooth",a)):l[c?"scrollLeft":"scrollTop"]=-d,!0}return 0===t?(r.setTransition(0),r.setTranslate(d),i&&(r.emit("beforeTransitionStart",t,n),r.emit("transitionEnd"))):(r.setTransition(t),r.setTranslate(d),i&&(r.emit("beforeTransitionStart",t,n),r.emit("transitionStart")),r.animating||(r.animating=!0,r.onTranslateToWrapperTransitionEnd||(r.onTranslateToWrapperTransitionEnd=function(e){r&&!r.destroyed&&e.target===this&&(r.$wrapperEl[0].removeEventListener("transitionend",r.onTranslateToWrapperTransitionEnd),r.$wrapperEl[0].removeEventListener("webkitTransitionEnd",r.onTranslateToWrapperTransitionEnd),r.onTranslateToWrapperTransitionEnd=null,delete r.onTranslateToWrapperTransitionEnd,i&&r.emit("transitionEnd"))}),r.$wrapperEl[0].addEventListener("transitionend",r.onTranslateToWrapperTransitionEnd),r.$wrapperEl[0].addEventListener("webkitTransitionEnd",r.onTranslateToWrapperTransitionEnd))),!0}},k={slideTo:function(e,t,i,s){var n;void 0===e&&(e=0),void 0===t&&(t=this.params.speed),void 0===i&&(i=!0);var a=this,r=e;r<0&&(r=0);var o=a.params,l=a.snapGrid,d=a.slidesGrid,h=a.previousIndex,u=a.activeIndex,c=a.rtlTranslate,p=a.wrapperEl;if(a.animating&&o.preventInteractionOnTransition)return!1;var f=Math.min(a.params.slidesPerGroupSkip,r),v=f+Math.floor((r-f)/a.params.slidesPerGroup);v>=l.length&&(v=l.length-1),(u||o.initialSlide||0)===(h||0)&&i&&a.emit("beforeSlideChangeStart");var m,g=-l[v];if(a.updateProgress(g),o.normalizeSlideIndex)for(var y=0;y<d.length;y+=1)-Math.floor(100*g)>=Math.floor(100*d[y])&&(r=y);if(a.initialized&&r!==u){if(!a.allowSlideNext&&g<a.translate&&g<a.minTranslate())return!1;if(!a.allowSlidePrev&&g>a.translate&&g>a.maxTranslate()&&(u||0)!==r)return!1}if(m=u<r?"next":r<u?"prev":"reset",c&&-g===a.translate||!c&&g===a.translate)return a.updateActiveIndex(r),o.autoHeight&&a.updateAutoHeight(),a.updateSlidesClasses(),"slide"!==o.effect&&a.setTranslate(g),"reset"!=m&&(a.transitionStart(i,m),a.transitionEnd(i,m)),!1;if(o.cssMode){var b=a.isHorizontal(),x=-g;return c&&(x=p.scrollWidth-p.offsetWidth-x),0===t?p[b?"scrollLeft":"scrollTop"]=x:p.scrollTo?p.scrollTo(((n={})[b?"left":"top"]=x,n.behavior="smooth",n)):p[b?"scrollLeft":"scrollTop"]=x,!0}return 0===t?(a.setTransition(0),a.setTranslate(g),a.updateActiveIndex(r),a.updateSlidesClasses(),a.emit("beforeTransitionStart",t,s),a.transitionStart(i,m),a.transitionEnd(i,m)):(a.setTransition(t),a.setTranslate(g),a.updateActiveIndex(r),a.updateSlidesClasses(),a.emit("beforeTransitionStart",t,s),a.transitionStart(i,m),a.animating||(a.animating=!0,a.onSlideToWrapperTransitionEnd||(a.onSlideToWrapperTransitionEnd=function(e){a&&!a.destroyed&&e.target===this&&(a.$wrapperEl[0].removeEventListener("transitionend",a.onSlideToWrapperTransitionEnd),a.$wrapperEl[0].removeEventListener("webkitTransitionEnd",a.onSlideToWrapperTransitionEnd),a.onSlideToWrapperTransitionEnd=null,delete a.onSlideToWrapperTransitionEnd,a.transitionEnd(i,m))}),a.$wrapperEl[0].addEventListener("transitionend",a.onSlideToWrapperTransitionEnd),a.$wrapperEl[0].addEventListener("webkitTransitionEnd",a.onSlideToWrapperTransitionEnd))),!0},slideToLoop:function(e,t,i,s){void 0===e&&(e=0),void 0===t&&(t=this.params.speed),void 0===i&&(i=!0);var n=e;return this.params.loop&&(n+=this.loopedSlides),this.slideTo(n,t,i,s)},slideNext:function(e,t,i){void 0===e&&(e=this.params.speed),void 0===t&&(t=!0);var s=this.params,n=this.animating,a=this.activeIndex<s.slidesPerGroupSkip?1:s.slidesPerGroup;if(s.loop){if(n)return!1;this.loopFix(),this._clientLeft=this.$wrapperEl[0].clientLeft}return this.slideTo(this.activeIndex+a,e,t,i)},slidePrev:function(e,t,i){void 0===e&&(e=this.params.speed),void 0===t&&(t=!0);var s=this.params,n=this.animating,a=this.snapGrid,r=this.slidesGrid,o=this.rtlTranslate;if(s.loop){if(n)return!1;this.loopFix(),this._clientLeft=this.$wrapperEl[0].clientLeft}function l(e){return e<0?-Math.floor(Math.abs(e)):Math.floor(e)}var d,h=l(o?this.translate:-this.translate),u=a.map(function(e){return l(e)}),c=(r.map(function(e){return l(e)}),a[u.indexOf(h)],a[u.indexOf(h)-1]);return void 0===c&&s.cssMode&&a.forEach(function(e){!c&&e<=h&&(c=e)}),void 0!==c&&(d=r.indexOf(c))<0&&(d=this.activeIndex-1),this.slideTo(d,e,t,i)},slideReset:function(e,t,i){return void 0===e&&(e=this.params.speed),void 0===t&&(t=!0),this.slideTo(this.activeIndex,e,t,i)},slideToClosest:function(e,t,i,s){void 0===e&&(e=this.params.speed),void 0===t&&(t=!0),void 0===s&&(s=.5);var n=this.activeIndex,a=Math.min(this.params.slidesPerGroupSkip,n),r=a+Math.floor((n-a)/this.params.slidesPerGroup),o=this.rtlTranslate?this.translate:-this.translate;if(o>=this.snapGrid[r]){var l=this.snapGrid[r];o-l>(this.snapGrid[r+1]-l)*s&&(n+=this.params.slidesPerGroup)}else{var d=this.snapGrid[r-1];o-d<=(this.snapGrid[r]-d)*s&&(n-=this.params.slidesPerGroup)}return n=Math.max(n,0),n=Math.min(n,this.slidesGrid.length-1),this.slideTo(n,e,t,i)},slideToClickedSlide:function(){var e,t=this,i=t.params,s=t.$wrapperEl,n="auto"===i.slidesPerView?t.slidesPerViewDynamic():i.slidesPerView,a=t.clickedIndex;if(i.loop){if(t.animating)return;e=parseInt(D(t.clickedSlide).attr("data-swiper-slide-index"),10),i.centeredSlides?a<t.loopedSlides-n/2||a>t.slides.length-t.loopedSlides+n/2?(t.loopFix(),a=s.children("."+i.slideClass+'[data-swiper-slide-index="'+e+'"]:not(.'+i.slideDuplicateClass+")").eq(0).index(),ae.nextTick(function(){t.slideTo(a)})):t.slideTo(a):a>t.slides.length-n?(t.loopFix(),a=s.children("."+i.slideClass+'[data-swiper-slide-index="'+e+'"]:not(.'+i.slideDuplicateClass+")").eq(0).index(),ae.nextTick(function(){t.slideTo(a)})):t.slideTo(a)}else t.slideTo(a)}},P={loopCreate:function(){var s=this,e=s.params,t=s.$wrapperEl;t.children("."+e.slideClass+"."+e.slideDuplicateClass).remove();var n=t.children("."+e.slideClass);if(e.loopFillGroupWithBlank){var i=e.slidesPerGroup-n.length%e.slidesPerGroup;if(i!==e.slidesPerGroup){for(var a=0;a<i;a+=1){var r=D(y.createElement("div")).addClass(e.slideClass+" "+e.slideBlankClass);t.append(r)}n=t.children("."+e.slideClass)}}"auto"!==e.slidesPerView||e.loopedSlides||(e.loopedSlides=n.length),s.loopedSlides=Math.ceil(parseFloat(e.loopedSlides||e.slidesPerView,10)),s.loopedSlides+=e.loopAdditionalSlides,s.loopedSlides>n.length&&(s.loopedSlides=n.length);var o=[],l=[];n.each(function(e,t){var i=D(t);e<s.loopedSlides&&l.push(t),e<n.length&&e>=n.length-s.loopedSlides&&o.push(t),i.attr("data-swiper-slide-index",e)});for(var d=0;d<l.length;d+=1)t.append(D(l[d].cloneNode(!0)).addClass(e.slideDuplicateClass));for(var h=o.length-1;0<=h;--h)t.prepend(D(o[h].cloneNode(!0)).addClass(e.slideDuplicateClass))},loopFix:function(){this.emit("beforeLoopFix");var e,t=this.activeIndex,i=this.slides,s=this.loopedSlides,n=this.allowSlidePrev,a=this.allowSlideNext,r=this.snapGrid,o=this.rtlTranslate;this.allowSlidePrev=!0,this.allowSlideNext=!0;var l=-r[t]-this.getTranslate();t<s?(e=i.length-3*s+t,e+=s,this.slideTo(e,0,!1,!0)&&0!=l&&this.setTranslate((o?-this.translate:this.translate)-l)):t>=i.length-s&&(e=-i.length+t+s,e+=s,this.slideTo(e,0,!1,!0)&&0!=l&&this.setTranslate((o?-this.translate:this.translate)-l)),this.allowSlidePrev=n,this.allowSlideNext=a,this.emit("loopFix")},loopDestroy:function(){var e=this.$wrapperEl,t=this.params,i=this.slides;e.children("."+t.slideClass+"."+t.slideDuplicateClass+",."+t.slideClass+"."+t.slideBlankClass).remove(),i.removeAttr("data-swiper-slide-index")}},L={setGrabCursor:function(e){if(!(M.touch||!this.params.simulateTouch||this.params.watchOverflow&&this.isLocked||this.params.cssMode)){var t=this.el;t.style.cursor="move",t.style.cursor=e?"-webkit-grabbing":"-webkit-grab",t.style.cursor=e?"-moz-grabbin":"-moz-grab",t.style.cursor=e?"grabbing":"grab"}},unsetGrabCursor:function(){M.touch||this.params.watchOverflow&&this.isLocked||this.params.cssMode||(this.el.style.cursor="")}},z={appendSlide:function(e){var t=this.$wrapperEl,i=this.params;if(i.loop&&this.loopDestroy(),"object"==typeof e&&"length"in e)for(var s=0;s<e.length;s+=1)e[s]&&t.append(e[s]);else t.append(e);i.loop&&this.loopCreate(),i.observer&&M.observer||this.update()},prependSlide:function(e){var t=this.params,i=this.$wrapperEl,s=this.activeIndex;t.loop&&this.loopDestroy();var n=s+1;if("object"==typeof e&&"length"in e){for(var a=0;a<e.length;a+=1)e[a]&&i.prepend(e[a]);n=s+e.length}else i.prepend(e);t.loop&&this.loopCreate(),t.observer&&M.observer||this.update(),this.slideTo(n,0,!1)},addSlide:function(e,t){var i=this.$wrapperEl,s=this.params,n=this.activeIndex;s.loop&&(n-=this.loopedSlides,this.loopDestroy(),this.slides=i.children("."+s.slideClass));var a=this.slides.length;if(e<=0)this.prependSlide(t);else if(a<=e)this.appendSlide(t);else{for(var r=e<n?n+1:n,o=[],l=a-1;e<=l;--l){var d=this.slides.eq(l);d.remove(),o.unshift(d)}if("object"==typeof t&&"length"in t){for(var h=0;h<t.length;h+=1)t[h]&&i.append(t[h]);r=e<n?n+t.length:n}else i.append(t);for(var u=0;u<o.length;u+=1)i.append(o[u]);s.loop&&this.loopCreate(),s.observer&&M.observer||this.update(),s.loop?this.slideTo(r+this.loopedSlides,0,!1):this.slideTo(r,0,!1)}},removeSlide:function(e){var t=this.params,i=this.$wrapperEl,s=this.activeIndex;t.loop&&(s-=this.loopedSlides,this.loopDestroy(),this.slides=i.children("."+t.slideClass));var n,a=s;if("object"==typeof e&&"length"in e){for(var r=0;r<e.length;r+=1)n=e[r],this.slides[n]&&this.slides.eq(n).remove(),n<a&&--a;a=Math.max(a,0)}else n=e,this.slides[n]&&this.slides.eq(n).remove(),n<a&&--a,a=Math.max(a,0);t.loop&&this.loopCreate(),t.observer&&M.observer||this.update(),t.loop?this.slideTo(a+this.loopedSlides,0,!1):this.slideTo(a,0,!1)},removeAllSlides:function(){for(var e=[],t=0;t<this.slides.length;t+=1)e.push(t);this.removeSlide(e)}},A=(o=ne.navigator.platform,d=ne.navigator.userAgent,h={ios:!1,android:!1,androidChrome:!1,desktop:!1,iphone:!1,ipod:!1,ipad:!1,edge:!1,ie:!1,firefox:!1,macos:!1,windows:!1,cordova:!(!ne.cordova&&!ne.phonegap),phonegap:!(!ne.cordova&&!ne.phonegap),electron:!1},u=ne.screen.width,c=ne.screen.height,p=d.match(/(Android);?[\s\/]+([\d.]+)?/),f=d.match(/(iPad).*OS\s([\d_]+)/),v=d.match(/(iPod)(.*OS\s([\d_]+))?/),m=!f&&d.match(/(iPhone\sOS|iOS)\s([\d_]+)/),g=0<=d.indexOf("MSIE ")||0<=d.indexOf("Trident/"),b=0<=d.indexOf("Edge/"),x=0<=d.indexOf("Gecko/")&&0<=d.indexOf("Firefox/"),w="Win32"===o,T=0<=d.toLowerCase().indexOf("electron"),E="MacIntel"===o,!f&&E&&M.touch&&(1024===u&&1366===c||834===u&&1194===c||834===u&&1112===c||768===u&&1024===c)&&(f=d.match(/(Version)\/([\d.]+)/),E=!1),h.ie=g,h.edge=b,h.firefox=x,p&&!w&&(h.os="android",h.osVersion=p[2],h.android=!0,h.androidChrome=0<=d.toLowerCase().indexOf("chrome")),(f||m||v)&&(h.os="ios",h.ios=!0),m&&!v&&(h.osVersion=m[2].replace(/_/g,"."),h.iphone=!0),f&&(h.osVersion=f[2].replace(/_/g,"."),h.ipad=!0),v&&(h.osVersion=v[3]?v[3].replace(/_/g,"."):null,h.ipod=!0),h.ios&&h.osVersion&&0<=d.indexOf("Version/")&&"10"===h.osVersion.split(".")[0]&&(h.osVersion=d.toLowerCase().split("version/")[1].split(" ")[0]),h.webView=!(!(m||f||v)||!d.match(/.*AppleWebKit(?!.*Safari)/i)&&!ne.navigator.standalone)||ne.matchMedia&&ne.matchMedia("(display-mode: standalone)").matches,h.webview=h.webView,h.standalone=h.webView,h.desktop=!(h.ios||h.android)||T,h.desktop&&(h.electron=T,h.macos=E,h.windows=w,h.macos&&(h.os="macos"),h.windows&&(h.os="windows")),h.pixelRatio=ne.devicePixelRatio||1,h);function $(){var e=this.params,t=this.el;if(!t||0!==t.offsetWidth){e.breakpoints&&this.setBreakpoint();var i=this.allowSlideNext,s=this.allowSlidePrev,n=this.snapGrid;this.allowSlideNext=!0,this.allowSlidePrev=!0,this.updateSize(),this.updateSlides(),this.updateSlidesClasses(),("auto"===e.slidesPerView||1<e.slidesPerView)&&this.isEnd&&!this.isBeginning&&!this.params.centeredSlides?this.slideTo(this.slides.length-1,0,!1,!0):this.slideTo(this.activeIndex,0,!1,!0),this.autoplay&&this.autoplay.running&&this.autoplay.paused&&this.autoplay.run(),this.allowSlidePrev=s,this.allowSlideNext=i,this.params.watchOverflow&&n!==this.snapGrid&&this.checkOverflow()}}var I=!1;function N(){}var O,H={init:!0,direction:"horizontal",touchEventsTarget:"container",initialSlide:0,speed:300,cssMode:!1,updateOnWindowResize:!0,preventInteractionOnTransition:!1,edgeSwipeDetection:!1,edgeSwipeThreshold:20,freeMode:!1,freeModeMomentum:!0,freeModeMomentumRatio:1,freeModeMomentumBounce:!0,freeModeMomentumBounceRatio:1,freeModeMomentumVelocityRatio:1,freeModeSticky:!1,freeModeMinimumVelocity:.02,autoHeight:!1,setWrapperSize:!1,virtualTranslate:!1,effect:"slide",breakpoints:void 0,spaceBetween:0,slidesPerView:1,slidesPerColumn:1,slidesPerColumnFill:"column",slidesPerGroup:1,slidesPerGroupSkip:0,centeredSlides:!1,centeredSlidesBounds:!1,slidesOffsetBefore:0,slidesOffsetAfter:0,normalizeSlideIndex:!0,centerInsufficientSlides:!1,watchOverflow:!1,roundLengths:!1,touchRatio:1,touchAngle:45,simulateTouch:!0,shortSwipes:!0,longSwipes:!0,longSwipesRatio:.5,longSwipesMs:300,followFinger:!0,allowTouchMove:!0,threshold:0,touchMoveStopPropagation:!1,touchStartPreventDefault:!0,touchStartForcePreventDefault:!1,touchReleaseOnEdges:!1,uniqueNavElements:!0,resistance:!0,resistanceRatio:.85,watchSlidesProgress:!1,watchSlidesVisibility:!1,grabCursor:!1,preventClicks:!0,preventClicksPropagation:!0,slideToClickedSlide:!1,preloadImages:!0,updateOnImagesReady:!0,loop:!1,loopAdditionalSlides:0,loopedSlides:null,loopFillGroupWithBlank:!1,allowSlidePrev:!0,allowSlideNext:!0,swipeHandler:null,noSwiping:!0,noSwipingClass:"swiper-no-swiping",noSwipingSelector:null,passiveListeners:!0,containerModifierClass:"swiper-container-",slideClass:"swiper-slide",slideBlankClass:"swiper-slide-invisible-blank",slideActiveClass:"swiper-slide-active",slideDuplicateActiveClass:"swiper-slide-duplicate-active",slideVisibleClass:"swiper-slide-visible",slideDuplicateClass:"swiper-slide-duplicate",slideNextClass:"swiper-slide-next",slideDuplicateNextClass:"swiper-slide-duplicate-next",slidePrevClass:"swiper-slide-prev",slideDuplicatePrevClass:"swiper-slide-duplicate-prev",wrapperClass:"swiper-wrapper",runCallbacksOnInit:!0},j={update:C,translate:S,transition:{setTransition:function(e,t){this.params.cssMode||this.$wrapperEl.transition(e),this.emit("setTransition",e,t)},transitionStart:function(e,t){void 0===e&&(e=!0);var i=this.activeIndex,s=this.params,n=this.previousIndex;if(!s.cssMode){s.autoHeight&&this.updateAutoHeight();var a=t;if(a=a||(n<i?"next":i<n?"prev":"reset"),this.emit("transitionStart"),e&&i!==n){if("reset"===a)return void this.emit("slideResetTransitionStart");this.emit("slideChangeTransitionStart"),"next"===a?this.emit("slideNextTransitionStart"):this.emit("slidePrevTransitionStart")}}},transitionEnd:function(e,t){void 0===e&&(e=!0);var i=this.activeIndex,s=this.previousIndex,n=this.params;if(this.animating=!1,!n.cssMode){this.setTransition(0);var a=t;if(a=a||(s<i?"next":i<s?"prev":"reset"),this.emit("transitionEnd"),e&&i!==s){if("reset"===a)return void this.emit("slideResetTransitionEnd");this.emit("slideChangeTransitionEnd"),"next"===a?this.emit("slideNextTransitionEnd"):this.emit("slidePrevTransitionEnd")}}}},slide:k,loop:P,grabCursor:L,manipulation:z,events:{attachEvents:function(){var e=this.params,t=this.touchEvents,i=this.el,s=this.wrapperEl;this.onTouchStart=function(e){var t=this.touchEventsData,i=this.params,s=this.touches;if(!this.animating||!i.preventInteractionOnTransition){var n=e;n.originalEvent&&(n=n.originalEvent);var a=D(n.target);if(("wrapper"!==i.touchEventsTarget||a.closest(this.wrapperEl).length)&&(t.isTouchEvent="touchstart"===n.type,(t.isTouchEvent||!("which"in n)||3!==n.which)&&!(!t.isTouchEvent&&"button"in n&&0<n.button||t.isTouched&&t.isMoved)))if(i.noSwiping&&a.closest(i.noSwipingSelector?i.noSwipingSelector:"."+i.noSwipingClass)[0])this.allowClick=!0;else if(!i.swipeHandler||a.closest(i.swipeHandler)[0]){s.currentX="touchstart"===n.type?n.targetTouches[0].pageX:n.pageX,s.currentY="touchstart"===n.type?n.targetTouches[0].pageY:n.pageY;var r=s.currentX,o=s.currentY,l=i.edgeSwipeDetection||i.iOSEdgeSwipeDetection,d=i.edgeSwipeThreshold||i.iOSEdgeSwipeThreshold;if(!l||!(r<=d||r>=ne.screen.width-d)){if(ae.extend(t,{isTouched:!0,isMoved:!1,allowTouchCallbacks:!0,isScrolling:void 0,startMoving:void 0}),s.startX=r,s.startY=o,t.touchStartTime=ae.now(),this.allowClick=!0,this.updateSize(),this.swipeDirection=void 0,0<i.threshold&&(t.allowThresholdMove=!1),"touchstart"!==n.type){var h=!0;a.is(t.formElements)&&(h=!1),y.activeElement&&D(y.activeElement).is(t.formElements)&&y.activeElement!==a[0]&&y.activeElement.blur();var u=h&&this.allowTouchMove&&i.touchStartPreventDefault;(i.touchStartForcePreventDefault||u)&&n.preventDefault()}this.emit("touchStart",n)}}}}.bind(this),this.onTouchMove=function(e){var t=this.touchEventsData,i=this.params,s=this.touches,n=this.rtlTranslate,a=e;if(a.originalEvent&&(a=a.originalEvent),t.isTouched){if(!t.isTouchEvent||"touchmove"===a.type){var r="touchmove"===a.type&&a.targetTouches&&(a.targetTouches[0]||a.changedTouches[0]),o="touchmove"===a.type?r.pageX:a.pageX,l="touchmove"===a.type?r.pageY:a.pageY;if(a.preventedByNestedSwiper)return s.startX=o,void(s.startY=l);if(!this.allowTouchMove)return this.allowClick=!1,void(t.isTouched&&(ae.extend(s,{startX:o,startY:l,currentX:o,currentY:l}),t.touchStartTime=ae.now()));if(t.isTouchEvent&&i.touchReleaseOnEdges&&!i.loop)if(this.isVertical()){if(l<s.startY&&this.translate<=this.maxTranslate()||l>s.startY&&this.translate>=this.minTranslate())return t.isTouched=!1,void(t.isMoved=!1)}else if(o<s.startX&&this.translate<=this.maxTranslate()||o>s.startX&&this.translate>=this.minTranslate())return;if(t.isTouchEvent&&y.activeElement&&a.target===y.activeElement&&D(a.target).is(t.formElements))return t.isMoved=!0,void(this.allowClick=!1);if(t.allowTouchCallbacks&&this.emit("touchMove",a),!(a.targetTouches&&1<a.targetTouches.length)){s.currentX=o,s.currentY=l;var d,h=s.currentX-s.startX,u=s.currentY-s.startY;if(!(this.params.threshold&&Math.sqrt(Math.pow(h,2)+Math.pow(u,2))<this.params.threshold))if(void 0===t.isScrolling&&(this.isHorizontal()&&s.currentY===s.startY||this.isVertical()&&s.currentX===s.startX?t.isScrolling=!1:25<=h*h+u*u&&(d=180*Math.atan2(Math.abs(u),Math.abs(h))/Math.PI,t.isScrolling=this.isHorizontal()?d>i.touchAngle:90-d>i.touchAngle)),t.isScrolling&&this.emit("touchMoveOpposite",a),void 0===t.startMoving&&(s.currentX===s.startX&&s.currentY===s.startY||(t.startMoving=!0)),t.isScrolling)t.isTouched=!1;else if(t.startMoving){this.allowClick=!1,!i.cssMode&&a.cancelable&&a.preventDefault(),i.touchMoveStopPropagation&&!i.nested&&a.stopPropagation(),t.isMoved||(i.loop&&this.loopFix(),t.startTranslate=this.getTranslate(),this.setTransition(0),this.animating&&this.$wrapperEl.trigger("webkitTransitionEnd transitionend"),t.allowMomentumBounce=!1,!i.grabCursor||!0!==this.allowSlideNext&&!0!==this.allowSlidePrev||this.setGrabCursor(!0),this.emit("sliderFirstMove",a)),this.emit("sliderMove",a),t.isMoved=!0;var c=this.isHorizontal()?h:u;s.diff=c,c*=i.touchRatio,n&&(c=-c),this.swipeDirection=0<c?"prev":"next",t.currentTranslate=c+t.startTranslate;var p=!0,f=i.resistanceRatio;if(i.touchReleaseOnEdges&&(f=0),0<c&&t.currentTranslate>this.minTranslate()?(p=!1,i.resistance&&(t.currentTranslate=this.minTranslate()-1+Math.pow(-this.minTranslate()+t.startTranslate+c,f))):c<0&&t.currentTranslate<this.maxTranslate()&&(p=!1,i.resistance&&(t.currentTranslate=this.maxTranslate()+1-Math.pow(this.maxTranslate()-t.startTranslate-c,f))),p&&(a.preventedByNestedSwiper=!0),!this.allowSlideNext&&"next"===this.swipeDirection&&t.currentTranslate<t.startTranslate&&(t.currentTranslate=t.startTranslate),!this.allowSlidePrev&&"prev"===this.swipeDirection&&t.currentTranslate>t.startTranslate&&(t.currentTranslate=t.startTranslate),0<i.threshold){if(!(Math.abs(c)>i.threshold||t.allowThresholdMove))return void(t.currentTranslate=t.startTranslate);if(!t.allowThresholdMove)return t.allowThresholdMove=!0,s.startX=s.currentX,s.startY=s.currentY,t.currentTranslate=t.startTranslate,void(s.diff=this.isHorizontal()?s.currentX-s.startX:s.currentY-s.startY)}i.followFinger&&!i.cssMode&&((i.freeMode||i.watchSlidesProgress||i.watchSlidesVisibility)&&(this.updateActiveIndex(),this.updateSlidesClasses()),i.freeMode&&(0===t.velocities.length&&t.velocities.push({position:s[this.isHorizontal()?"startX":"startY"],time:t.touchStartTime}),t.velocities.push({position:s[this.isHorizontal()?"currentX":"currentY"],time:ae.now()})),this.updateProgress(t.currentTranslate),this.setTranslate(t.currentTranslate))}}}}else t.startMoving&&t.isScrolling&&this.emit("touchMoveOpposite",a)}.bind(this),this.onTouchEnd=function(e){var t=this,i=t.touchEventsData,s=t.params,n=t.touches,a=t.rtlTranslate,r=t.$wrapperEl,o=t.slidesGrid,l=t.snapGrid,d=e;if(d.originalEvent&&(d=d.originalEvent),i.allowTouchCallbacks&&t.emit("touchEnd",d),i.allowTouchCallbacks=!1,!i.isTouched)return i.isMoved&&s.grabCursor&&t.setGrabCursor(!1),i.isMoved=!1,void(i.startMoving=!1);s.grabCursor&&i.isMoved&&i.isTouched&&(!0===t.allowSlideNext||!0===t.allowSlidePrev)&&t.setGrabCursor(!1);var h,u=ae.now(),c=u-i.touchStartTime;if(t.allowClick&&(t.updateClickedSlide(d),t.emit("tap click",d),c<300&&u-i.lastClickTime<300&&t.emit("doubleTap doubleClick",d)),i.lastClickTime=ae.now(),ae.nextTick(function(){t.destroyed||(t.allowClick=!0)}),!i.isTouched||!i.isMoved||!t.swipeDirection||0===n.diff||i.currentTranslate===i.startTranslate)return i.isTouched=!1,i.isMoved=!1,void(i.startMoving=!1);if(i.isTouched=!1,i.isMoved=!1,i.startMoving=!1,h=s.followFinger?a?t.translate:-t.translate:-i.currentTranslate,!s.cssMode)if(s.freeMode){if(h<-t.minTranslate())return void t.slideTo(t.activeIndex);if(h>-t.maxTranslate())return void(t.slides.length<l.length?t.slideTo(l.length-1):t.slideTo(t.slides.length-1));if(s.freeModeMomentum){if(1<i.velocities.length){var p=i.velocities.pop(),f=i.velocities.pop(),v=p.position-f.position,m=p.time-f.time;t.velocity=v/m,t.velocity/=2,Math.abs(t.velocity)<s.freeModeMinimumVelocity&&(t.velocity=0),(150<m||300<ae.now()-p.time)&&(t.velocity=0)}else t.velocity=0;t.velocity*=s.freeModeMomentumVelocityRatio,i.velocities.length=0;var g=1e3*s.freeModeMomentumRatio,y=t.velocity*g,b=t.translate+y;a&&(b=-b);var x,w,T=!1,E=20*Math.abs(t.velocity)*s.freeModeMomentumBounceRatio;if(b<t.maxTranslate())s.freeModeMomentumBounce?(b+t.maxTranslate()<-E&&(b=t.maxTranslate()-E),x=t.maxTranslate(),T=!0,i.allowMomentumBounce=!0):b=t.maxTranslate(),s.loop&&s.centeredSlides&&(w=!0);else if(b>t.minTranslate())s.freeModeMomentumBounce?(b-t.minTranslate()>E&&(b=t.minTranslate()+E),x=t.minTranslate(),T=!0,i.allowMomentumBounce=!0):b=t.minTranslate(),s.loop&&s.centeredSlides&&(w=!0);else if(s.freeModeSticky){for(var C,S=0;S<l.length;S+=1)if(l[S]>-b){C=S;break}b=-(Math.abs(l[C]-b)<Math.abs(l[C-1]-b)||"next"===t.swipeDirection?l[C]:l[C-1])}if(w&&t.once("transitionEnd",function(){t.loopFix()}),0!==t.velocity){if(g=a?Math.abs((-b-t.translate)/t.velocity):Math.abs((b-t.translate)/t.velocity),s.freeModeSticky){var M=Math.abs((a?-b:b)-t.translate),k=t.slidesSizesGrid[t.activeIndex];g=M<k?s.speed:M<2*k?1.5*s.speed:2.5*s.speed}}else if(s.freeModeSticky)return void t.slideToClosest();s.freeModeMomentumBounce&&T?(t.updateProgress(x),t.setTransition(g),t.setTranslate(b),t.transitionStart(!0,t.swipeDirection),t.animating=!0,r.transitionEnd(function(){t&&!t.destroyed&&i.allowMomentumBounce&&(t.emit("momentumBounce"),t.setTransition(s.speed),setTimeout(function(){t.setTranslate(x),r.transitionEnd(function(){t&&!t.destroyed&&t.transitionEnd()})},0))})):t.velocity?(t.updateProgress(b),t.setTransition(g),t.setTranslate(b),t.transitionStart(!0,t.swipeDirection),t.animating||(t.animating=!0,r.transitionEnd(function(){t&&!t.destroyed&&t.transitionEnd()}))):t.updateProgress(b),t.updateActiveIndex(),t.updateSlidesClasses()}else if(s.freeModeSticky)return void t.slideToClosest();(!s.freeModeMomentum||c>=s.longSwipesMs)&&(t.updateProgress(),t.updateActiveIndex(),t.updateSlidesClasses())}else{for(var P=0,L=t.slidesSizesGrid[0],D=0;D<o.length;D+=D<s.slidesPerGroupSkip?1:s.slidesPerGroup){var z=D<s.slidesPerGroupSkip-1?1:s.slidesPerGroup;void 0!==o[D+z]?h>=o[D]&&h<o[D+z]&&(L=o[(P=D)+z]-o[D]):h>=o[D]&&(P=D,L=o[o.length-1]-o[o.length-2])}var A=(h-o[P])/L,$=P<s.slidesPerGroupSkip-1?1:s.slidesPerGroup;if(c>s.longSwipesMs){if(!s.longSwipes)return void t.slideTo(t.activeIndex);"next"===t.swipeDirection&&(A>=s.longSwipesRatio?t.slideTo(P+$):t.slideTo(P)),"prev"===t.swipeDirection&&(A>1-s.longSwipesRatio?t.slideTo(P+$):t.slideTo(P))}else{if(!s.shortSwipes)return void t.slideTo(t.activeIndex);!t.navigation||d.target!==t.navigation.nextEl&&d.target!==t.navigation.prevEl?("next"===t.swipeDirection&&t.slideTo(P+$),"prev"===t.swipeDirection&&t.slideTo(P)):d.target===t.navigation.nextEl?t.slideTo(P+$):t.slideTo(P)}}}.bind(this),e.cssMode&&(this.onScroll=function(){var e=this.wrapperEl,t=this.rtlTranslate;this.previousTranslate=this.translate,this.isHorizontal()?this.translate=t?e.scrollWidth-e.offsetWidth-e.scrollLeft:-e.scrollLeft:this.translate=-e.scrollTop,-0===this.translate&&(this.translate=0),this.updateActiveIndex(),this.updateSlidesClasses();var i=this.maxTranslate()-this.minTranslate();(0==i?0:(this.translate-this.minTranslate())/i)!==this.progress&&this.updateProgress(t?-this.translate:this.translate),this.emit("setTranslate",this.translate,!1)}.bind(this)),this.onClick=function(e){this.allowClick||(this.params.preventClicks&&e.preventDefault(),this.params.preventClicksPropagation&&this.animating&&(e.stopPropagation(),e.stopImmediatePropagation()))}.bind(this);var n=!!e.nested;if(!M.touch&&M.pointerEvents)i.addEventListener(t.start,this.onTouchStart,!1),y.addEventListener(t.move,this.onTouchMove,n),y.addEventListener(t.end,this.onTouchEnd,!1);else{if(M.touch){var a=!("touchstart"!==t.start||!M.passiveListener||!e.passiveListeners)&&{passive:!0,capture:!1};i.addEventListener(t.start,this.onTouchStart,a),i.addEventListener(t.move,this.onTouchMove,M.passiveListener?{passive:!1,capture:n}:n),i.addEventListener(t.end,this.onTouchEnd,a),t.cancel&&i.addEventListener(t.cancel,this.onTouchEnd,a),I||(y.addEventListener("touchstart",N),I=!0)}(e.simulateTouch&&!A.ios&&!A.android||e.simulateTouch&&!M.touch&&A.ios)&&(i.addEventListener("mousedown",this.onTouchStart,!1),y.addEventListener("mousemove",this.onTouchMove,n),y.addEventListener("mouseup",this.onTouchEnd,!1))}(e.preventClicks||e.preventClicksPropagation)&&i.addEventListener("click",this.onClick,!0),e.cssMode&&s.addEventListener("scroll",this.onScroll),e.updateOnWindowResize?this.on(A.ios||A.android?"resize orientationchange observerUpdate":"resize observerUpdate",$,!0):this.on("observerUpdate",$,!0)},detachEvents:function(){var e=this.params,t=this.touchEvents,i=this.el,s=this.wrapperEl,n=!!e.nested;if(!M.touch&&M.pointerEvents)i.removeEventListener(t.start,this.onTouchStart,!1),y.removeEventListener(t.move,this.onTouchMove,n),y.removeEventListener(t.end,this.onTouchEnd,!1);else{if(M.touch){var a=!("onTouchStart"!==t.start||!M.passiveListener||!e.passiveListeners)&&{passive:!0,capture:!1};i.removeEventListener(t.start,this.onTouchStart,a),i.removeEventListener(t.move,this.onTouchMove,n),i.removeEventListener(t.end,this.onTouchEnd,a),t.cancel&&i.removeEventListener(t.cancel,this.onTouchEnd,a)}(e.simulateTouch&&!A.ios&&!A.android||e.simulateTouch&&!M.touch&&A.ios)&&(i.removeEventListener("mousedown",this.onTouchStart,!1),y.removeEventListener("mousemove",this.onTouchMove,n),y.removeEventListener("mouseup",this.onTouchEnd,!1))}(e.preventClicks||e.preventClicksPropagation)&&i.removeEventListener("click",this.onClick,!0),e.cssMode&&s.removeEventListener("scroll",this.onScroll),this.off(A.ios||A.android?"resize orientationchange observerUpdate":"resize observerUpdate",$)}},breakpoints:{setBreakpoint:function(){var e=this.activeIndex,t=this.initialized,i=this.loopedSlides;void 0===i&&(i=0);var s=this.params,n=this.$el,a=s.breakpoints;if(a&&(!a||0!==Object.keys(a).length)){var r=this.getBreakpoint(a);if(r&&this.currentBreakpoint!==r){var o=r in a?a[r]:void 0;o&&["slidesPerView","spaceBetween","slidesPerGroup","slidesPerGroupSkip","slidesPerColumn"].forEach(function(e){var t=o[e];void 0!==t&&(o[e]="slidesPerView"!==e||"AUTO"!==t&&"auto"!==t?"slidesPerView"===e?parseFloat(t):parseInt(t,10):"auto")});var l=o||this.originalParams,d=1<s.slidesPerColumn,h=1<l.slidesPerColumn;d&&!h?n.removeClass(s.containerModifierClass+"multirow "+s.containerModifierClass+"multirow-column"):!d&&h&&(n.addClass(s.containerModifierClass+"multirow"),"column"===l.slidesPerColumnFill&&n.addClass(s.containerModifierClass+"multirow-column"));var u=l.direction&&l.direction!==s.direction,c=s.loop&&(l.slidesPerView!==s.slidesPerView||u);u&&t&&this.changeDirection(),ae.extend(this.params,l),ae.extend(this,{allowTouchMove:this.params.allowTouchMove,allowSlideNext:this.params.allowSlideNext,allowSlidePrev:this.params.allowSlidePrev}),this.currentBreakpoint=r,c&&t&&(this.loopDestroy(),this.loopCreate(),this.updateSlides(),this.slideTo(e-i+this.loopedSlides,0,!1)),this.emit("breakpoint",l)}}},getBreakpoint:function(e){if(e){var t=!1,i=Object.keys(e).map(function(e){if("string"!=typeof e||0!==e.indexOf("@"))return{value:e,point:e};var t=parseFloat(e.substr(1));return{value:ne.innerHeight*t,point:e}});i.sort(function(e,t){return parseInt(e.value,10)-parseInt(t.value,10)});for(var s=0;s<i.length;s+=1){var n=i[s],a=n.point;n.value<=ne.innerWidth&&(t=a)}return t||"max"}}},checkOverflow:{checkOverflow:function(){var e=this.params,t=this.isLocked,i=0<this.slides.length&&e.slidesOffsetBefore+e.spaceBetween*(this.slides.length-1)+this.slides[0].offsetWidth*this.slides.length;e.slidesOffsetBefore&&e.slidesOffsetAfter&&i?this.isLocked=i<=this.size:this.isLocked=1===this.snapGrid.length,this.allowSlideNext=!this.isLocked,this.allowSlidePrev=!this.isLocked,t!==this.isLocked&&this.emit(this.isLocked?"lock":"unlock"),t&&t!==this.isLocked&&(this.isEnd=!1,this.navigation&&this.navigation.update())}},classes:{addClasses:function(){var t=this.classNames,i=this.params,e=this.rtl,s=this.$el,n=[];n.push("initialized"),n.push(i.direction),i.freeMode&&n.push("free-mode"),i.autoHeight&&n.push("autoheight"),e&&n.push("rtl"),1<i.slidesPerColumn&&(n.push("multirow"),"column"===i.slidesPerColumnFill&&n.push("multirow-column")),A.android&&n.push("android"),A.ios&&n.push("ios"),i.cssMode&&n.push("css-mode"),n.forEach(function(e){t.push(i.containerModifierClass+e)}),s.addClass(t.join(" "))},removeClasses:function(){var e=this.$el,t=this.classNames;e.removeClass(t.join(" "))}},images:{loadImage:function(e,t,i,s,n,a){var r;function o(){a&&a()}D(e).parent("picture")[0]||e.complete&&n?o():t?((r=new ne.Image).onload=o,r.onerror=o,s&&(r.sizes=s),i&&(r.srcset=i),t&&(r.src=t)):o()},preloadImages:function(){var e=this;function t(){null!=e&&e&&!e.destroyed&&(void 0!==e.imagesLoaded&&(e.imagesLoaded+=1),e.imagesLoaded===e.imagesToLoad.length&&(e.params.updateOnImagesReady&&e.update(),e.emit("imagesReady")))}e.imagesToLoad=e.$el.find("img");for(var i=0;i<e.imagesToLoad.length;i+=1){var s=e.imagesToLoad[i];e.loadImage(s,s.currentSrc||s.getAttribute("src"),s.srcset||s.getAttribute("srcset"),s.sizes||s.getAttribute("sizes"),!0,t)}}}},q={},B=function(u){function c(){for(var e,n,t=[],i=arguments.length;i--;)t[i]=arguments[i];n=(n=1===t.length&&t[0].constructor&&t[0].constructor===Object?t[0]:(e=t[0],t[1]))||{},n=ae.extend({},n),e&&!n.el&&(n.el=e),u.call(this,n),Object.keys(j).forEach(function(t){Object.keys(j[t]).forEach(function(e){c.prototype[e]||(c.prototype[e]=j[t][e])})});var a=this;void 0===a.modules&&(a.modules={}),Object.keys(a.modules).forEach(function(e){var t=a.modules[e];if(t.params){var i=Object.keys(t.params)[0],s=t.params[i];if("object"!=typeof s||null===s)return;if(!(i in n&&"enabled"in s))return;!0===n[i]&&(n[i]={enabled:!0}),"object"!=typeof n[i]||"enabled"in n[i]||(n[i].enabled=!0),n[i]||(n[i]={enabled:!1})}});var s=ae.extend({},H);a.useModulesParams(s),a.params=ae.extend({},s,q,n),a.originalParams=ae.extend({},a.params),a.passedParams=ae.extend({},n);var r=(a.$=D)(a.params.el);if(e=r[0]){if(1<r.length){var o=[];return r.each(function(e,t){var i=ae.extend({},n,{el:t});o.push(new c(i))}),o}var l,d,h;return e.swiper=a,r.data("swiper",a),e&&e.shadowRoot&&e.shadowRoot.querySelector?(l=D(e.shadowRoot.querySelector("."+a.params.wrapperClass))).children=function(e){return r.children(e)}:l=r.children("."+a.params.wrapperClass),ae.extend(a,{$el:r,el:e,$wrapperEl:l,wrapperEl:l[0],classNames:[],slides:D(),slidesGrid:[],snapGrid:[],slidesSizesGrid:[],isHorizontal:function(){return"horizontal"===a.params.direction},isVertical:function(){return"vertical"===a.params.direction},rtl:"rtl"===e.dir.toLowerCase()||"rtl"===r.css("direction"),rtlTranslate:"horizontal"===a.params.direction&&("rtl"===e.dir.toLowerCase()||"rtl"===r.css("direction")),wrongRTL:"-webkit-box"===l.css("display"),activeIndex:0,realIndex:0,isBeginning:!0,isEnd:!1,translate:0,previousTranslate:0,progress:0,velocity:0,animating:!1,allowSlideNext:a.params.allowSlideNext,allowSlidePrev:a.params.allowSlidePrev,touchEvents:(d=["touchstart","touchmove","touchend","touchcancel"],h=["mousedown","mousemove","mouseup"],M.pointerEvents&&(h=["pointerdown","pointermove","pointerup"]),a.touchEventsTouch={start:d[0],move:d[1],end:d[2],cancel:d[3]},a.touchEventsDesktop={start:h[0],move:h[1],end:h[2]},M.touch||!a.params.simulateTouch?a.touchEventsTouch:a.touchEventsDesktop),touchEventsData:{isTouched:void 0,isMoved:void 0,allowTouchCallbacks:void 0,touchStartTime:void 0,isScrolling:void 0,currentTranslate:void 0,startTranslate:void 0,allowThresholdMove:void 0,formElements:"input, select, option, textarea, button, video, label",lastClickTime:ae.now(),clickTimeout:void 0,velocities:[],allowMomentumBounce:void 0,isTouchEvent:void 0,startMoving:void 0},allowClick:!0,allowTouchMove:a.params.allowTouchMove,touches:{startX:0,startY:0,currentX:0,currentY:0,diff:0},imagesToLoad:[],imagesLoaded:0}),a.useModules(),a.params.init&&a.init(),a}}u&&(c.__proto__=u);var e={extendedDefaults:{configurable:!0},defaults:{configurable:!0},Class:{configurable:!0},$:{configurable:!0}};return((c.prototype=Object.create(u&&u.prototype)).constructor=c).prototype.slidesPerViewDynamic=function(){var e=this.params,t=this.slides,i=this.slidesGrid,s=this.size,n=this.activeIndex,a=1;if(e.centeredSlides){for(var r,o=t[n].swiperSlideSize,l=n+1;l<t.length;l+=1)t[l]&&!r&&(a+=1,(o+=t[l].swiperSlideSize)>s&&(r=!0));for(var d=n-1;0<=d;--d)t[d]&&!r&&(a+=1,(o+=t[d].swiperSlideSize)>s&&(r=!0))}else for(var h=n+1;h<t.length;h+=1)i[h]-i[n]<s&&(a+=1);return a},c.prototype.update=function(){var i=this;if(i&&!i.destroyed){var e=i.snapGrid,t=i.params;t.breakpoints&&i.setBreakpoint(),i.updateSize(),i.updateSlides(),i.updateProgress(),i.updateSlidesClasses(),i.params.freeMode?(s(),i.params.autoHeight&&i.updateAutoHeight()):(("auto"===i.params.slidesPerView||1<i.params.slidesPerView)&&i.isEnd&&!i.params.centeredSlides?i.slideTo(i.slides.length-1,0,!1,!0):i.slideTo(i.activeIndex,0,!1,!0))||s(),t.watchOverflow&&e!==i.snapGrid&&i.checkOverflow(),i.emit("update")}function s(){var e=i.rtlTranslate?-1*i.translate:i.translate,t=Math.min(Math.max(e,i.maxTranslate()),i.minTranslate());i.setTranslate(t),i.updateActiveIndex(),i.updateSlidesClasses()}},c.prototype.changeDirection=function(i,e){void 0===e&&(e=!0);var t=this.params.direction;return(i=i||("horizontal"===t?"vertical":"horizontal"))===t||"horizontal"!==i&&"vertical"!==i||(this.$el.removeClass(""+this.params.containerModifierClass+t).addClass(""+this.params.containerModifierClass+i),this.params.direction=i,this.slides.each(function(e,t){"vertical"===i?t.style.width="":t.style.height=""}),this.emit("changeDirection"),e&&this.update()),this},c.prototype.init=function(){this.initialized||(this.emit("beforeInit"),this.params.breakpoints&&this.setBreakpoint(),this.addClasses(),this.params.loop&&this.loopCreate(),this.updateSize(),this.updateSlides(),this.params.watchOverflow&&this.checkOverflow(),this.params.grabCursor&&this.setGrabCursor(),this.params.preloadImages&&this.preloadImages(),this.params.loop?this.slideTo(this.params.initialSlide+this.loopedSlides,0,this.params.runCallbacksOnInit):this.slideTo(this.params.initialSlide,0,this.params.runCallbacksOnInit),this.attachEvents(),this.initialized=!0,this.emit("init"))},c.prototype.destroy=function(e,t){void 0===e&&(e=!0),void 0===t&&(t=!0);var i=this,s=i.params,n=i.$el,a=i.$wrapperEl,r=i.slides;return void 0===i.params||i.destroyed||(i.emit("beforeDestroy"),i.initialized=!1,i.detachEvents(),s.loop&&i.loopDestroy(),t&&(i.removeClasses(),n.removeAttr("style"),a.removeAttr("style"),r&&r.length&&r.removeClass([s.slideVisibleClass,s.slideActiveClass,s.slideNextClass,s.slidePrevClass].join(" ")).removeAttr("style").removeAttr("data-swiper-slide-index")),i.emit("destroy"),Object.keys(i.eventsListeners).forEach(function(e){i.off(e)}),!1!==e&&(i.$el[0].swiper=null,i.$el.data("swiper",null),ae.deleteProps(i)),i.destroyed=!0),null},c.extendDefaults=function(e){ae.extend(q,e)},e.extendedDefaults.get=function(){return q},e.defaults.get=function(){return H},e.Class.get=function(){return u},e.$.get=function(){return D},Object.defineProperties(c,e),c}(i),R={name:"device",proto:{device:A},static:{device:A}},G={name:"support",proto:{support:M},static:{support:M}},F={isEdge:!!ne.navigator.userAgent.match(/Edge/g),isSafari:0<=(O=ne.navigator.userAgent.toLowerCase()).indexOf("safari")&&O.indexOf("chrome")<0&&O.indexOf("android")<0,isWebView:/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(ne.navigator.userAgent)},W={name:"browser",proto:{browser:F},static:{browser:F}},X={name:"resize",create:function(){var e=this;ae.extend(e,{resize:{resizeHandler:function(){e&&!e.destroyed&&e.initialized&&(e.emit("beforeResize"),e.emit("resize"))},orientationChangeHandler:function(){e&&!e.destroyed&&e.initialized&&e.emit("orientationchange")}}})},on:{init:function(){ne.addEventListener("resize",this.resize.resizeHandler),ne.addEventListener("orientationchange",this.resize.orientationChangeHandler)},destroy:function(){ne.removeEventListener("resize",this.resize.resizeHandler),ne.removeEventListener("orientationchange",this.resize.orientationChangeHandler)}}},V={func:ne.MutationObserver||ne.WebkitMutationObserver,attach:function(e,t){void 0===t&&(t={});var i=this,s=new V.func(function(e){if(1!==e.length){var t=function(){i.emit("observerUpdate",e[0])};ne.requestAnimationFrame?ne.requestAnimationFrame(t):ne.setTimeout(t,0)}else i.emit("observerUpdate",e[0])});s.observe(e,{attributes:void 0===t.attributes||t.attributes,childList:void 0===t.childList||t.childList,characterData:void 0===t.characterData||t.characterData}),i.observer.observers.push(s)},init:function(){if(M.observer&&this.params.observer){if(this.params.observeParents)for(var e=this.$el.parents(),t=0;t<e.length;t+=1)this.observer.attach(e[t]);this.observer.attach(this.$el[0],{childList:this.params.observeSlideChildren}),this.observer.attach(this.$wrapperEl[0],{attributes:!1})}},destroy:function(){this.observer.observers.forEach(function(e){e.disconnect()}),this.observer.observers=[]}},Y={name:"observer",params:{observer:!1,observeParents:!1,observeSlideChildren:!1},create:function(){ae.extend(this,{observer:{init:V.init.bind(this),attach:V.attach.bind(this),destroy:V.destroy.bind(this),observers:[]}})},on:{init:function(){this.observer.init()},destroy:function(){this.observer.destroy()}}},_={update:function(e){var t=this,i=t.params,s=i.slidesPerView,n=i.slidesPerGroup,a=i.centeredSlides,r=t.params.virtual,o=r.addSlidesBefore,l=r.addSlidesAfter,d=t.virtual,h=d.from,u=d.to,c=d.slides,p=d.slidesGrid,f=d.renderSlide,v=d.offset;t.updateActiveIndex();var m,g,y,b=t.activeIndex||0;m=t.rtlTranslate?"right":t.isHorizontal()?"left":"top",y=a?(g=Math.floor(s/2)+n+o,Math.floor(s/2)+n+l):(g=s+(n-1)+o,n+l);var x=Math.max((b||0)-y,0),w=Math.min((b||0)+g,c.length-1),T=(t.slidesGrid[x]||0)-(t.slidesGrid[0]||0);function E(){t.updateSlides(),t.updateProgress(),t.updateSlidesClasses(),t.lazy&&t.params.lazy.enabled&&t.lazy.load()}if(ae.extend(t.virtual,{from:x,to:w,offset:T,slidesGrid:t.slidesGrid}),h===x&&u===w&&!e)return t.slidesGrid!==p&&T!==v&&t.slides.css(m,T+"px"),void t.updateProgress();if(t.params.virtual.renderExternal)return t.params.virtual.renderExternal.call(t,{offset:T,from:x,to:w,slides:function(){for(var e=[],t=x;t<=w;t+=1)e.push(c[t]);return e}()}),void E();var C=[],S=[];if(e)t.$wrapperEl.find("."+t.params.slideClass).remove();else for(var M=h;M<=u;M+=1)(M<x||w<M)&&t.$wrapperEl.find("."+t.params.slideClass+'[data-swiper-slide-index="'+M+'"]').remove();for(var k=0;k<c.length;k+=1)x<=k&&k<=w&&(void 0===u||e?S.push(k):(u<k&&S.push(k),k<h&&C.push(k)));S.forEach(function(e){t.$wrapperEl.append(f(c[e],e))}),C.sort(function(e,t){return t-e}).forEach(function(e){t.$wrapperEl.prepend(f(c[e],e))}),t.$wrapperEl.children(".swiper-slide").css(m,T+"px"),E()},renderSlide:function(e,t){var i=this.params.virtual;if(i.cache&&this.virtual.cache[t])return this.virtual.cache[t];var s=i.renderSlide?D(i.renderSlide.call(this,e,t)):D('<div class="'+this.params.slideClass+'" data-swiper-slide-index="'+t+'">'+e+"</div>");return s.attr("data-swiper-slide-index")||s.attr("data-swiper-slide-index",t),i.cache&&(this.virtual.cache[t]=s),s},appendSlide:function(e){if("object"==typeof e&&"length"in e)for(var t=0;t<e.length;t+=1)e[t]&&this.virtual.slides.push(e[t]);else this.virtual.slides.push(e);this.virtual.update(!0)},prependSlide:function(e){var t=this.activeIndex,i=t+1,s=1;if(Array.isArray(e)){for(var n=0;n<e.length;n+=1)e[n]&&this.virtual.slides.unshift(e[n]);i=t+e.length,s=e.length}else this.virtual.slides.unshift(e);if(this.params.virtual.cache){var a=this.virtual.cache,r={};Object.keys(a).forEach(function(e){var t=a[e],i=t.attr("data-swiper-slide-index");i&&t.attr("data-swiper-slide-index",parseInt(i,10)+1),r[parseInt(e,10)+s]=t}),this.virtual.cache=r}this.virtual.update(!0),this.slideTo(i,0)},removeSlide:function(e){if(null!=e){var t=this.activeIndex;if(Array.isArray(e))for(var i=e.length-1;0<=i;--i)this.virtual.slides.splice(e[i],1),this.params.virtual.cache&&delete this.virtual.cache[e[i]],e[i]<t&&--t,t=Math.max(t,0);else this.virtual.slides.splice(e,1),this.params.virtual.cache&&delete this.virtual.cache[e],e<t&&--t,t=Math.max(t,0);this.virtual.update(!0),this.slideTo(t,0)}},removeAllSlides:function(){this.virtual.slides=[],this.params.virtual.cache&&(this.virtual.cache={}),this.virtual.update(!0),this.slideTo(0,0)}},U={name:"virtual",params:{virtual:{enabled:!1,slides:[],cache:!0,renderSlide:null,renderExternal:null,addSlidesBefore:0,addSlidesAfter:0}},create:function(){ae.extend(this,{virtual:{update:_.update.bind(this),appendSlide:_.appendSlide.bind(this),prependSlide:_.prependSlide.bind(this),removeSlide:_.removeSlide.bind(this),removeAllSlides:_.removeAllSlides.bind(this),renderSlide:_.renderSlide.bind(this),slides:this.params.virtual.slides,cache:{}}})},on:{beforeInit:function(){if(this.params.virtual.enabled){this.classNames.push(this.params.containerModifierClass+"virtual");var e={watchSlidesProgress:!0};ae.extend(this.params,e),ae.extend(this.originalParams,e),this.params.initialSlide||this.virtual.update()}},setTranslate:function(){this.params.virtual.enabled&&this.virtual.update()}}},K={handle:function(e){var t=this.rtlTranslate,i=e;i.originalEvent&&(i=i.originalEvent);var s=i.keyCode||i.charCode,n=this.params.keyboard.pageUpDown,a=n&&33===s,r=n&&34===s,o=37===s,l=39===s,d=38===s,h=40===s;if(!this.allowSlideNext&&(this.isHorizontal()&&l||this.isVertical()&&h||r))return!1;if(!this.allowSlidePrev&&(this.isHorizontal()&&o||this.isVertical()&&d||a))return!1;if(!(i.shiftKey||i.altKey||i.ctrlKey||i.metaKey||y.activeElement&&y.activeElement.nodeName&&("input"===y.activeElement.nodeName.toLowerCase()||"textarea"===y.activeElement.nodeName.toLowerCase()))){if(this.params.keyboard.onlyInViewport&&(a||r||o||l||d||h)){var u=!1;if(0<this.$el.parents("."+this.params.slideClass).length&&0===this.$el.parents("."+this.params.slideActiveClass).length)return;var c=ne.innerWidth,p=ne.innerHeight,f=this.$el.offset();t&&(f.left-=this.$el[0].scrollLeft);for(var v=[[f.left,f.top],[f.left+this.width,f.top],[f.left,f.top+this.height],[f.left+this.width,f.top+this.height]],m=0;m<v.length;m+=1){var g=v[m];0<=g[0]&&g[0]<=c&&0<=g[1]&&g[1]<=p&&(u=!0)}if(!u)return}this.isHorizontal()?((a||r||o||l)&&(i.preventDefault?i.preventDefault():i.returnValue=!1),((r||l)&&!t||(a||o)&&t)&&this.slideNext(),((a||o)&&!t||(r||l)&&t)&&this.slidePrev()):((a||r||d||h)&&(i.preventDefault?i.preventDefault():i.returnValue=!1),(r||h)&&this.slideNext(),(a||d)&&this.slidePrev()),this.emit("keyPress",s)}},enable:function(){this.keyboard.enabled||(D(y).on("keydown",this.keyboard.handle),this.keyboard.enabled=!0)},disable:function(){this.keyboard.enabled&&(D(y).off("keydown",this.keyboard.handle),this.keyboard.enabled=!1)}},Q={name:"keyboard",params:{keyboard:{enabled:!1,onlyInViewport:!0,pageUpDown:!0}},create:function(){ae.extend(this,{keyboard:{enabled:!1,enable:K.enable.bind(this),disable:K.disable.bind(this),handle:K.handle.bind(this)}})},on:{init:function(){this.params.keyboard.enabled&&this.keyboard.enable()},destroy:function(){this.keyboard.enabled&&this.keyboard.disable()}}},J={lastScrollTime:ae.now(),lastEventBeforeSnap:void 0,recentWheelEvents:[],event:function(){return-1<ne.navigator.userAgent.indexOf("firefox")?"DOMMouseScroll":function(){var e="onwheel"in y;if(!e){var t=y.createElement("div");t.setAttribute("onwheel","return;"),e="function"==typeof t.onwheel}return!e&&y.implementation&&y.implementation.hasFeature&&!0!==y.implementation.hasFeature("","")&&(e=y.implementation.hasFeature("Events.wheel","3.0")),e}()?"wheel":"mousewheel"},normalize:function(e){var t=0,i=0,s=0,n=0;return"detail"in e&&(i=e.detail),"wheelDelta"in e&&(i=-e.wheelDelta/120),"wheelDeltaY"in e&&(i=-e.wheelDeltaY/120),"wheelDeltaX"in e&&(t=-e.wheelDeltaX/120),"axis"in e&&e.axis===e.HORIZONTAL_AXIS&&(t=i,i=0),s=10*t,n=10*i,"deltaY"in e&&(n=e.deltaY),"deltaX"in e&&(s=e.deltaX),e.shiftKey&&!s&&(s=n,n=0),(s||n)&&e.deltaMode&&(1===e.deltaMode?(s*=40,n*=40):(s*=800,n*=800)),s&&!t&&(t=s<1?-1:1),n&&!i&&(i=n<1?-1:1),{spinX:t,spinY:i,pixelX:s,pixelY:n}},handleMouseEnter:function(){this.mouseEntered=!0},handleMouseLeave:function(){this.mouseEntered=!1},handle:function(e){var t=e,i=this,s=i.params.mousewheel;i.params.cssMode&&t.preventDefault();var n=i.$el;if("container"!==i.params.mousewheel.eventsTarged&&(n=D(i.params.mousewheel.eventsTarged)),!i.mouseEntered&&!n[0].contains(t.target)&&!s.releaseOnEdges)return!0;t.originalEvent&&(t=t.originalEvent);var a=0,r=i.rtlTranslate?-1:1,o=J.normalize(t);if(s.forceToAxis)if(i.isHorizontal()){if(!(Math.abs(o.pixelX)>Math.abs(o.pixelY)))return!0;a=-o.pixelX*r}else{if(!(Math.abs(o.pixelY)>Math.abs(o.pixelX)))return!0;a=-o.pixelY}else a=Math.abs(o.pixelX)>Math.abs(o.pixelY)?-o.pixelX*r:-o.pixelY;if(0===a)return!0;if(s.invert&&(a=-a),i.params.freeMode){var l={time:ae.now(),delta:Math.abs(a),direction:Math.sign(a)},d=i.mousewheel.lastEventBeforeSnap,h=d&&l.time<d.time+500&&l.delta<=d.delta&&l.direction===d.direction;if(!h){i.mousewheel.lastEventBeforeSnap=void 0,i.params.loop&&i.loopFix();var u=i.getTranslate()+a*s.sensitivity,c=i.isBeginning,p=i.isEnd;if(u>=i.minTranslate()&&(u=i.minTranslate()),u<=i.maxTranslate()&&(u=i.maxTranslate()),i.setTransition(0),i.setTranslate(u),i.updateProgress(),i.updateActiveIndex(),i.updateSlidesClasses(),(!c&&i.isBeginning||!p&&i.isEnd)&&i.updateSlidesClasses(),i.params.freeModeSticky){clearTimeout(i.mousewheel.timeout),i.mousewheel.timeout=void 0;var f=i.mousewheel.recentWheelEvents;15<=f.length&&f.shift();var v=f.length?f[f.length-1]:void 0,m=f[0];if(f.push(l),v&&(l.delta>v.delta||l.direction!==v.direction))f.splice(0);else if(15<=f.length&&l.time-m.time<500&&1<=m.delta-l.delta&&l.delta<=6){var g=0<a?.8:.2;i.mousewheel.lastEventBeforeSnap=l,f.splice(0),i.mousewheel.timeout=ae.nextTick(function(){i.slideToClosest(i.params.speed,!0,void 0,g)},0)}i.mousewheel.timeout||(i.mousewheel.timeout=ae.nextTick(function(){i.mousewheel.lastEventBeforeSnap=l,f.splice(0),i.slideToClosest(i.params.speed,!0,void 0,.5)},500))}if(h||i.emit("scroll",t),i.params.autoplay&&i.params.autoplayDisableOnInteraction&&i.autoplay.stop(),u===i.minTranslate()||u===i.maxTranslate())return!0}}else{var y={time:ae.now(),delta:Math.abs(a),direction:Math.sign(a),raw:e},b=i.mousewheel.recentWheelEvents;2<=b.length&&b.shift();var x=b.length?b[b.length-1]:void 0;if(b.push(y),x?(y.direction!==x.direction||y.delta>x.delta||y.time>x.time+150)&&i.mousewheel.animateSlider(y):i.mousewheel.animateSlider(y),i.mousewheel.releaseScroll(y))return!0}return t.preventDefault?t.preventDefault():t.returnValue=!1,!1},animateSlider:function(e){return 6<=e.delta&&ae.now()-this.mousewheel.lastScrollTime<60||(e.direction<0?this.isEnd&&!this.params.loop||this.animating||(this.slideNext(),this.emit("scroll",e.raw)):this.isBeginning&&!this.params.loop||this.animating||(this.slidePrev(),this.emit("scroll",e.raw)),this.mousewheel.lastScrollTime=(new ne.Date).getTime(),!1)},releaseScroll:function(e){var t=this.params.mousewheel;if(e.direction<0){if(this.isEnd&&!this.params.loop&&t.releaseOnEdges)return!0}else if(this.isBeginning&&!this.params.loop&&t.releaseOnEdges)return!0;return!1},enable:function(){var e=J.event();if(this.params.cssMode)return this.wrapperEl.removeEventListener(e,this.mousewheel.handle),!0;if(!e)return!1;if(this.mousewheel.enabled)return!1;var t=this.$el;return"container"!==this.params.mousewheel.eventsTarged&&(t=D(this.params.mousewheel.eventsTarged)),t.on("mouseenter",this.mousewheel.handleMouseEnter),t.on("mouseleave",this.mousewheel.handleMouseLeave),t.on(e,this.mousewheel.handle),this.mousewheel.enabled=!0},disable:function(){var e=J.event();if(this.params.cssMode)return this.wrapperEl.addEventListener(e,this.mousewheel.handle),!0;if(!e)return!1;if(!this.mousewheel.enabled)return!1;var t=this.$el;return"container"!==this.params.mousewheel.eventsTarged&&(t=D(this.params.mousewheel.eventsTarged)),t.off(e,this.mousewheel.handle),!(this.mousewheel.enabled=!1)}},Z={update:function(){var e=this.params.navigation;if(!this.params.loop){var t=this.navigation,i=t.$nextEl,s=t.$prevEl;s&&0<s.length&&(this.isBeginning?s.addClass(e.disabledClass):s.removeClass(e.disabledClass),s[this.params.watchOverflow&&this.isLocked?"addClass":"removeClass"](e.lockClass)),i&&0<i.length&&(this.isEnd?i.addClass(e.disabledClass):i.removeClass(e.disabledClass),i[this.params.watchOverflow&&this.isLocked?"addClass":"removeClass"](e.lockClass))}},onPrevClick:function(e){e.preventDefault(),this.isBeginning&&!this.params.loop||this.slidePrev()},onNextClick:function(e){e.preventDefault(),this.isEnd&&!this.params.loop||this.slideNext()},init:function(){var e,t,i=this.params.navigation;(i.nextEl||i.prevEl)&&(i.nextEl&&(e=D(i.nextEl),this.params.uniqueNavElements&&"string"==typeof i.nextEl&&1<e.length&&1===this.$el.find(i.nextEl).length&&(e=this.$el.find(i.nextEl))),i.prevEl&&(t=D(i.prevEl),this.params.uniqueNavElements&&"string"==typeof i.prevEl&&1<t.length&&1===this.$el.find(i.prevEl).length&&(t=this.$el.find(i.prevEl))),e&&0<e.length&&e.on("click",this.navigation.onNextClick),t&&0<t.length&&t.on("click",this.navigation.onPrevClick),ae.extend(this.navigation,{$nextEl:e,nextEl:e&&e[0],$prevEl:t,prevEl:t&&t[0]}))},destroy:function(){var e=this.navigation,t=e.$nextEl,i=e.$prevEl;t&&t.length&&(t.off("click",this.navigation.onNextClick),t.removeClass(this.params.navigation.disabledClass)),i&&i.length&&(i.off("click",this.navigation.onPrevClick),i.removeClass(this.params.navigation.disabledClass))}},ee={update:function(){var e=this.rtl,n=this.params.pagination;if(n.el&&this.pagination.el&&this.pagination.$el&&0!==this.pagination.$el.length){var a,t=this.virtual&&this.params.virtual.enabled?this.virtual.slides.length:this.slides.length,i=this.pagination.$el,s=this.params.loop?Math.ceil((t-2*this.loopedSlides)/this.params.slidesPerGroup):this.snapGrid.length;if(this.params.loop?((a=Math.ceil((this.activeIndex-this.loopedSlides)/this.params.slidesPerGroup))>t-1-2*this.loopedSlides&&(a-=t-2*this.loopedSlides),s-1<a&&(a-=s),a<0&&"bullets"!==this.params.paginationType&&(a=s+a)):a=void 0!==this.snapIndex?this.snapIndex:this.activeIndex||0,"bullets"===n.type&&this.pagination.bullets&&0<this.pagination.bullets.length){var r,o,l,d=this.pagination.bullets;if(n.dynamicBullets&&(this.pagination.bulletSize=d.eq(0)[this.isHorizontal()?"outerWidth":"outerHeight"](!0),i.css(this.isHorizontal()?"width":"height",this.pagination.bulletSize*(n.dynamicMainBullets+4)+"px"),1<n.dynamicMainBullets&&void 0!==this.previousIndex&&(this.pagination.dynamicBulletIndex+=a-this.previousIndex,this.pagination.dynamicBulletIndex>n.dynamicMainBullets-1?this.pagination.dynamicBulletIndex=n.dynamicMainBullets-1:this.pagination.dynamicBulletIndex<0&&(this.pagination.dynamicBulletIndex=0)),r=a-this.pagination.dynamicBulletIndex,l=((o=r+(Math.min(d.length,n.dynamicMainBullets)-1))+r)/2),d.removeClass(n.bulletActiveClass+" "+n.bulletActiveClass+"-next "+n.bulletActiveClass+"-next-next "+n.bulletActiveClass+"-prev "+n.bulletActiveClass+"-prev-prev "+n.bulletActiveClass+"-main"),1<i.length)d.each(function(e,t){var i=D(t),s=i.index();s===a&&i.addClass(n.bulletActiveClass),n.dynamicBullets&&(r<=s&&s<=o&&i.addClass(n.bulletActiveClass+"-main"),s===r&&i.prev().addClass(n.bulletActiveClass+"-prev").prev().addClass(n.bulletActiveClass+"-prev-prev"),s===o&&i.next().addClass(n.bulletActiveClass+"-next").next().addClass(n.bulletActiveClass+"-next-next"))});else{var h=d.eq(a),u=h.index();if(h.addClass(n.bulletActiveClass),n.dynamicBullets){for(var c=d.eq(r),p=d.eq(o),f=r;f<=o;f+=1)d.eq(f).addClass(n.bulletActiveClass+"-main");if(this.params.loop)if(u>=d.length-n.dynamicMainBullets){for(var v=n.dynamicMainBullets;0<=v;--v)d.eq(d.length-v).addClass(n.bulletActiveClass+"-main");d.eq(d.length-n.dynamicMainBullets-1).addClass(n.bulletActiveClass+"-prev")}else c.prev().addClass(n.bulletActiveClass+"-prev").prev().addClass(n.bulletActiveClass+"-prev-prev"),p.next().addClass(n.bulletActiveClass+"-next").next().addClass(n.bulletActiveClass+"-next-next");else c.prev().addClass(n.bulletActiveClass+"-prev").prev().addClass(n.bulletActiveClass+"-prev-prev"),p.next().addClass(n.bulletActiveClass+"-next").next().addClass(n.bulletActiveClass+"-next-next")}}if(n.dynamicBullets){var m=Math.min(d.length,n.dynamicMainBullets+4),g=(this.pagination.bulletSize*m-this.pagination.bulletSize)/2-l*this.pagination.bulletSize,y=e?"right":"left";d.css(this.isHorizontal()?y:"top",g+"px")}}if("fraction"===n.type&&(i.find("."+n.currentClass).text(n.formatFractionCurrent(a+1)),i.find("."+n.totalClass).text(n.formatFractionTotal(s))),"progressbar"===n.type){var b;b=n.progressbarOpposite?this.isHorizontal()?"vertical":"horizontal":this.isHorizontal()?"horizontal":"vertical";var x=(a+1)/s,w=1,T=1;"horizontal"==b?w=x:T=x,i.find("."+n.progressbarFillClass).transform("translate3d(0,0,0) scaleX("+w+") scaleY("+T+")").transition(this.params.speed)}"custom"===n.type&&n.renderCustom?(i.html(n.renderCustom(this,a+1,s)),this.emit("paginationRender",this,i[0])):this.emit("paginationUpdate",this,i[0]),i[this.params.watchOverflow&&this.isLocked?"addClass":"removeClass"](n.lockClass)}},render:function(){var e=this.params.pagination;if(e.el&&this.pagination.el&&this.pagination.$el&&0!==this.pagination.$el.length){var t=this.virtual&&this.params.virtual.enabled?this.virtual.slides.length:this.slides.length,i=this.pagination.$el,s="";if("bullets"===e.type){for(var n=this.params.loop?Math.ceil((t-2*this.loopedSlides)/this.params.slidesPerGroup):this.snapGrid.length,a=0;a<n;a+=1)e.renderBullet?s+=e.renderBullet.call(this,a,e.bulletClass):s+="<"+e.bulletElement+' class="'+e.bulletClass+'"></'+e.bulletElement+">";i.html(s),this.pagination.bullets=i.find("."+e.bulletClass)}"fraction"===e.type&&(s=e.renderFraction?e.renderFraction.call(this,e.currentClass,e.totalClass):'<span class="'+e.currentClass+'"></span> <span class="fraction-of-slide"></span> <span class="'+e.totalClass+'"></span>',i.html(s)),"progressbar"===e.type&&(s=e.renderProgressbar?e.renderProgressbar.call(this,e.progressbarFillClass):'<span class="'+e.progressbarFillClass+'"></span>',i.html(s)),"custom"!==e.type&&this.emit("paginationRender",this.pagination.$el[0])}},init:function(){var i=this,e=i.params.pagination;if(e.el){var t=D(e.el);0!==t.length&&(i.params.uniqueNavElements&&"string"==typeof e.el&&1<t.length&&(t=i.$el.find(e.el)),"bullets"===e.type&&e.clickable&&t.addClass(e.clickableClass),t.addClass(e.modifierClass+e.type),"bullets"===e.type&&e.dynamicBullets&&(t.addClass(""+e.modifierClass+e.type+"-dynamic"),i.pagination.dynamicBulletIndex=0,e.dynamicMainBullets<1&&(e.dynamicMainBullets=1)),"progressbar"===e.type&&e.progressbarOpposite&&t.addClass(e.progressbarOppositeClass),e.clickable&&t.on("click","."+e.bulletClass,function(e){e.preventDefault();var t=D(this).index()*i.params.slidesPerGroup;i.params.loop&&(t+=i.loopedSlides),i.slideTo(t)}),ae.extend(i.pagination,{$el:t,el:t[0]}))}},destroy:function(){var e=this.params.pagination;if(e.el&&this.pagination.el&&this.pagination.$el&&0!==this.pagination.$el.length){var t=this.pagination.$el;t.removeClass(e.hiddenClass),t.removeClass(e.modifierClass+e.type),this.pagination.bullets&&this.pagination.bullets.removeClass(e.bulletActiveClass),e.clickable&&t.off("click","."+e.bulletClass)}}},te={setTranslate:function(){if(this.params.scrollbar.el&&this.scrollbar.el){var e=this.scrollbar,t=this.rtlTranslate,i=this.progress,s=e.dragSize,n=e.trackSize,a=e.$dragEl,r=e.$el,o=this.params.scrollbar,l=s,d=(n-s)*i;t?0<(d=-d)?(l=s-d,d=0):n<-d+s&&(l=n+d):d<0?(l=s+d,d=0):n<d+s&&(l=n-d),this.isHorizontal()?(a.transform("translate3d("+d+"px, 0, 0)"),a[0].style.width=l+"px"):(a.transform("translate3d(0px, "+d+"px, 0)"),a[0].style.height=l+"px"),o.hide&&(clearTimeout(this.scrollbar.timeout),r[0].style.opacity=1,this.scrollbar.timeout=setTimeout(function(){r[0].style.opacity=0,r.transition(400)},1e3))}},setTransition:function(e){this.params.scrollbar.el&&this.scrollbar.el&&this.scrollbar.$dragEl.transition(e)},updateSize:function(){if(this.params.scrollbar.el&&this.scrollbar.el){var e=this.scrollbar,t=e.$dragEl,i=e.$el;t[0].style.width="",t[0].style.height="";var s,n=this.isHorizontal()?i[0].offsetWidth:i[0].offsetHeight,a=this.size/this.virtualSize,r=a*(n/this.size);s="auto"===this.params.scrollbar.dragSize?n*a:parseInt(this.params.scrollbar.dragSize,10),this.isHorizontal()?t[0].style.width=s+"px":t[0].style.height=s+"px",i[0].style.display=1<=a?"none":"",this.params.scrollbar.hide&&(i[0].style.opacity=0),ae.extend(e,{trackSize:n,divider:a,moveDivider:r,dragSize:s}),e.$el[this.params.watchOverflow&&this.isLocked?"addClass":"removeClass"](this.params.scrollbar.lockClass)}},getPointerPosition:function(e){return this.isHorizontal()?"touchstart"===e.type||"touchmove"===e.type?e.targetTouches[0].clientX:e.clientX:"touchstart"===e.type||"touchmove"===e.type?e.targetTouches[0].clientY:e.clientY},setDragPosition:function(e){var t,i=this.scrollbar,s=this.rtlTranslate,n=i.$el,a=i.dragSize,r=i.trackSize,o=i.dragStartPos;t=(i.getPointerPosition(e)-n.offset()[this.isHorizontal()?"left":"top"]-(null!==o?o:a/2))/(r-a),t=Math.max(Math.min(t,1),0),s&&(t=1-t);var l=this.minTranslate()+(this.maxTranslate()-this.minTranslate())*t;this.updateProgress(l),this.setTranslate(l),this.updateActiveIndex(),this.updateSlidesClasses()},onDragStart:function(e){var t=this.params.scrollbar,i=this.scrollbar,s=this.$wrapperEl,n=i.$el,a=i.$dragEl;this.scrollbar.isTouched=!0,this.scrollbar.dragStartPos=e.target===a[0]||e.target===a?i.getPointerPosition(e)-e.target.getBoundingClientRect()[this.isHorizontal()?"left":"top"]:null,e.preventDefault(),e.stopPropagation(),s.transition(100),a.transition(100),i.setDragPosition(e),clearTimeout(this.scrollbar.dragTimeout),n.transition(0),t.hide&&n.css("opacity",1),this.params.cssMode&&this.$wrapperEl.css("scroll-snap-type","none"),this.emit("scrollbarDragStart",e)},onDragMove:function(e){var t=this.scrollbar,i=this.$wrapperEl,s=t.$el,n=t.$dragEl;this.scrollbar.isTouched&&(e.preventDefault?e.preventDefault():e.returnValue=!1,t.setDragPosition(e),i.transition(0),s.transition(0),n.transition(0),this.emit("scrollbarDragMove",e))},onDragEnd:function(e){var t=this.params.scrollbar,i=this.scrollbar,s=this.$wrapperEl,n=i.$el;this.scrollbar.isTouched&&(this.scrollbar.isTouched=!1,this.params.cssMode&&(this.$wrapperEl.css("scroll-snap-type",""),s.transition("")),t.hide&&(clearTimeout(this.scrollbar.dragTimeout),this.scrollbar.dragTimeout=ae.nextTick(function(){n.css("opacity",0),n.transition(400)},1e3)),this.emit("scrollbarDragEnd",e),t.snapOnRelease&&this.slideToClosest())},enableDraggable:function(){if(this.params.scrollbar.el){var e=this.scrollbar,t=this.touchEventsTouch,i=this.touchEventsDesktop,s=this.params,n=e.$el[0],a=!(!M.passiveListener||!s.passiveListeners)&&{passive:!1,capture:!1},r=!(!M.passiveListener||!s.passiveListeners)&&{passive:!0,capture:!1};M.touch?(n.addEventListener(t.start,this.scrollbar.onDragStart,a),n.addEventListener(t.move,this.scrollbar.onDragMove,a),n.addEventListener(t.end,this.scrollbar.onDragEnd,r)):(n.addEventListener(i.start,this.scrollbar.onDragStart,a),y.addEventListener(i.move,this.scrollbar.onDragMove,a),y.addEventListener(i.end,this.scrollbar.onDragEnd,r))}},disableDraggable:function(){if(this.params.scrollbar.el){var e=this.scrollbar,t=this.touchEventsTouch,i=this.touchEventsDesktop,s=this.params,n=e.$el[0],a=!(!M.passiveListener||!s.passiveListeners)&&{passive:!1,capture:!1},r=!(!M.passiveListener||!s.passiveListeners)&&{passive:!0,capture:!1};M.touch?(n.removeEventListener(t.start,this.scrollbar.onDragStart,a),n.removeEventListener(t.move,this.scrollbar.onDragMove,a),n.removeEventListener(t.end,this.scrollbar.onDragEnd,r)):(n.removeEventListener(i.start,this.scrollbar.onDragStart,a),y.removeEventListener(i.move,this.scrollbar.onDragMove,a),y.removeEventListener(i.end,this.scrollbar.onDragEnd,r))}},init:function(){if(this.params.scrollbar.el){var e=this.scrollbar,t=this.$el,i=this.params.scrollbar,s=D(i.el);this.params.uniqueNavElements&&"string"==typeof i.el&&1<s.length&&1===t.find(i.el).length&&(s=t.find(i.el));var n=s.find("."+this.params.scrollbar.dragClass);0===n.length&&(n=D('<div class="'+this.params.scrollbar.dragClass+'"></div>'),s.append(n)),ae.extend(e,{$el:s,el:s[0],$dragEl:n,dragEl:n[0]}),i.draggable&&e.enableDraggable()}},destroy:function(){this.scrollbar.disableDraggable()}},ie={setTransform:function(e,t){var i=this.rtl,s=D(e),n=i?-1:1,a=s.attr("data-swiper-parallax")||"0",r=s.attr("data-swiper-parallax-x"),o=s.attr("data-swiper-parallax-y"),l=s.attr("data-swiper-parallax-scale"),d=s.attr("data-swiper-parallax-opacity");if(r||o?(r=r||"0",o=o||"0"):this.isHorizontal()?(r=a,o="0"):(o=a,r="0"),r=0<=r.indexOf("%")?parseInt(r,10)*t*n+"%":r*t*n+"px",o=0<=o.indexOf("%")?parseInt(o,10)*t+"%":o*t+"px",null!=d){var h=d-(d-1)*(1-Math.abs(t));s[0].style.opacity=h}if(null==l)s.transform("translate3d("+r+", "+o+", 0px)");else{var u=l-(l-1)*(1-Math.abs(t));s.transform("translate3d("+r+", "+o+", 0px) scale("+u+")")}},setTranslate:function(){var s=this,e=s.$el,t=s.slides,n=s.progress,a=s.snapGrid;e.children("[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]").each(function(e,t){s.parallax.setTransform(t,n)}),t.each(function(e,t){var i=t.progress;1<s.params.slidesPerGroup&&"auto"!==s.params.slidesPerView&&(i+=Math.ceil(e/2)-n*(a.length-1)),i=Math.min(Math.max(i,-1),1),D(t).find("[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]").each(function(e,t){s.parallax.setTransform(t,i)})})},setTransition:function(n){void 0===n&&(n=this.params.speed),this.$el.find("[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]").each(function(e,t){var i=D(t),s=parseInt(i.attr("data-swiper-parallax-duration"),10)||n;0===n&&(s=0),i.transition(s)})}},se={getDistanceBetweenTouches:function(e){if(e.targetTouches.length<2)return 1;var t=e.targetTouches[0].pageX,i=e.targetTouches[0].pageY,s=e.targetTouches[1].pageX,n=e.targetTouches[1].pageY;return Math.sqrt(Math.pow(s-t,2)+Math.pow(n-i,2))},onGestureStart:function(e){var t=this.params.zoom,i=this.zoom,s=i.gesture;if(i.fakeGestureTouched=!1,i.fakeGestureMoved=!1,!M.gestures){if("touchstart"!==e.type||"touchstart"===e.type&&e.targetTouches.length<2)return;i.fakeGestureTouched=!0,s.scaleStart=se.getDistanceBetweenTouches(e)}s.$slideEl&&s.$slideEl.length||(s.$slideEl=D(e.target).closest("."+this.params.slideClass),0===s.$slideEl.length&&(s.$slideEl=this.slides.eq(this.activeIndex)),s.$imageEl=s.$slideEl.find("img, svg, canvas, picture, .swiper-zoom-target"),s.$imageWrapEl=s.$imageEl.parent("."+t.containerClass),s.maxRatio=s.$imageWrapEl.attr("data-swiper-zoom")||t.maxRatio,0!==s.$imageWrapEl.length)?(s.$imageEl&&s.$imageEl.transition(0),this.zoom.isScaling=!0):s.$imageEl=void 0},onGestureChange:function(e){var t=this.params.zoom,i=this.zoom,s=i.gesture;if(!M.gestures){if("touchmove"!==e.type||"touchmove"===e.type&&e.targetTouches.length<2)return;i.fakeGestureMoved=!0,s.scaleMove=se.getDistanceBetweenTouches(e)}s.$imageEl&&0!==s.$imageEl.length&&(i.scale=M.gestures?e.scale*i.currentScale:s.scaleMove/s.scaleStart*i.currentScale,i.scale>s.maxRatio&&(i.scale=s.maxRatio-1+Math.pow(i.scale-s.maxRatio+1,.5)),i.scale<t.minRatio&&(i.scale=t.minRatio+1-Math.pow(t.minRatio-i.scale+1,.5)),s.$imageEl.transform("translate3d(0,0,0) scale("+i.scale+")"))},onGestureEnd:function(e){var t=this.params.zoom,i=this.zoom,s=i.gesture;if(!M.gestures){if(!i.fakeGestureTouched||!i.fakeGestureMoved)return;if("touchend"!==e.type||"touchend"===e.type&&e.changedTouches.length<2&&!A.android)return;i.fakeGestureTouched=!1,i.fakeGestureMoved=!1}s.$imageEl&&0!==s.$imageEl.length&&(i.scale=Math.max(Math.min(i.scale,s.maxRatio),t.minRatio),s.$imageEl.transition(this.params.speed).transform("translate3d(0,0,0) scale("+i.scale+")"),i.currentScale=i.scale,i.isScaling=!1,1===i.scale&&(s.$slideEl=void 0))},onTouchStart:function(e){var t=this.zoom,i=t.gesture,s=t.image;i.$imageEl&&0!==i.$imageEl.length&&(s.isTouched||(A.android&&e.cancelable&&e.preventDefault(),s.isTouched=!0,s.touchesStart.x="touchstart"===e.type?e.targetTouches[0].pageX:e.pageX,s.touchesStart.y="touchstart"===e.type?e.targetTouches[0].pageY:e.pageY))},onTouchMove:function(e){var t=this.zoom,i=t.gesture,s=t.image,n=t.velocity;if(i.$imageEl&&0!==i.$imageEl.length&&(this.allowClick=!1,s.isTouched&&i.$slideEl)){s.isMoved||(s.width=i.$imageEl[0].offsetWidth,s.height=i.$imageEl[0].offsetHeight,s.startX=ae.getTranslate(i.$imageWrapEl[0],"x")||0,s.startY=ae.getTranslate(i.$imageWrapEl[0],"y")||0,i.slideWidth=i.$slideEl[0].offsetWidth,i.slideHeight=i.$slideEl[0].offsetHeight,i.$imageWrapEl.transition(0),this.rtl&&(s.startX=-s.startX,s.startY=-s.startY));var a=s.width*t.scale,r=s.height*t.scale;if(!(a<i.slideWidth&&r<i.slideHeight)){if(s.minX=Math.min(i.slideWidth/2-a/2,0),s.maxX=-s.minX,s.minY=Math.min(i.slideHeight/2-r/2,0),s.maxY=-s.minY,s.touchesCurrent.x="touchmove"===e.type?e.targetTouches[0].pageX:e.pageX,s.touchesCurrent.y="touchmove"===e.type?e.targetTouches[0].pageY:e.pageY,!s.isMoved&&!t.isScaling){if(this.isHorizontal()&&(Math.floor(s.minX)===Math.floor(s.startX)&&s.touchesCurrent.x<s.touchesStart.x||Math.floor(s.maxX)===Math.floor(s.startX)&&s.touchesCurrent.x>s.touchesStart.x))return void(s.isTouched=!1);if(!this.isHorizontal()&&(Math.floor(s.minY)===Math.floor(s.startY)&&s.touchesCurrent.y<s.touchesStart.y||Math.floor(s.maxY)===Math.floor(s.startY)&&s.touchesCurrent.y>s.touchesStart.y))return void(s.isTouched=!1)}e.cancelable&&e.preventDefault(),e.stopPropagation(),s.isMoved=!0,s.currentX=s.touchesCurrent.x-s.touchesStart.x+s.startX,s.currentY=s.touchesCurrent.y-s.touchesStart.y+s.startY,s.currentX<s.minX&&(s.currentX=s.minX+1-Math.pow(s.minX-s.currentX+1,.8)),s.currentX>s.maxX&&(s.currentX=s.maxX-1+Math.pow(s.currentX-s.maxX+1,.8)),s.currentY<s.minY&&(s.currentY=s.minY+1-Math.pow(s.minY-s.currentY+1,.8)),s.currentY>s.maxY&&(s.currentY=s.maxY-1+Math.pow(s.currentY-s.maxY+1,.8)),n.prevPositionX||(n.prevPositionX=s.touchesCurrent.x),n.prevPositionY||(n.prevPositionY=s.touchesCurrent.y),n.prevTime||(n.prevTime=Date.now()),n.x=(s.touchesCurrent.x-n.prevPositionX)/(Date.now()-n.prevTime)/2,n.y=(s.touchesCurrent.y-n.prevPositionY)/(Date.now()-n.prevTime)/2,Math.abs(s.touchesCurrent.x-n.prevPositionX)<2&&(n.x=0),Math.abs(s.touchesCurrent.y-n.prevPositionY)<2&&(n.y=0),n.prevPositionX=s.touchesCurrent.x,n.prevPositionY=s.touchesCurrent.y,n.prevTime=Date.now(),i.$imageWrapEl.transform("translate3d("+s.currentX+"px, "+s.currentY+"px,0)")}}},onTouchEnd:function(){var e=this.zoom,t=e.gesture,i=e.image,s=e.velocity;if(t.$imageEl&&0!==t.$imageEl.length){if(!i.isTouched||!i.isMoved)return i.isTouched=!1,void(i.isMoved=!1);i.isTouched=!1,i.isMoved=!1;var n=300,a=300,r=s.x*n,o=i.currentX+r,l=s.y*a,d=i.currentY+l;0!==s.x&&(n=Math.abs((o-i.currentX)/s.x)),0!==s.y&&(a=Math.abs((d-i.currentY)/s.y));var h=Math.max(n,a);i.currentX=o,i.currentY=d;var u=i.width*e.scale,c=i.height*e.scale;i.minX=Math.min(t.slideWidth/2-u/2,0),i.maxX=-i.minX,i.minY=Math.min(t.slideHeight/2-c/2,0),i.maxY=-i.minY,i.currentX=Math.max(Math.min(i.currentX,i.maxX),i.minX),i.currentY=Math.max(Math.min(i.currentY,i.maxY),i.minY),t.$imageWrapEl.transition(h).transform("translate3d("+i.currentX+"px, "+i.currentY+"px,0)")}},onTransitionEnd:function(){var e=this.zoom,t=e.gesture;t.$slideEl&&this.previousIndex!==this.activeIndex&&(t.$imageEl&&t.$imageEl.transform("translate3d(0,0,0) scale(1)"),t.$imageWrapEl&&t.$imageWrapEl.transform("translate3d(0,0,0)"),e.scale=1,e.currentScale=1,t.$slideEl=void 0,t.$imageEl=void 0,t.$imageWrapEl=void 0)},toggle:function(e){var t=this.zoom;t.scale&&1!==t.scale?t.out():t.in(e)},in:function(e){var t,i,s,n,a,r,o,l,d,h,u,c,p,f,v,m,g=this.zoom,y=this.params.zoom,b=g.gesture,x=g.image;b.$slideEl||(this.params.virtual&&this.params.virtual.enabled&&this.virtual?b.$slideEl=this.$wrapperEl.children("."+this.params.slideActiveClass):b.$slideEl=this.slides.eq(this.activeIndex),b.$imageEl=b.$slideEl.find("img, svg, canvas, picture, .swiper-zoom-target"),b.$imageWrapEl=b.$imageEl.parent("."+y.containerClass)),b.$imageEl&&0!==b.$imageEl.length&&(b.$slideEl.addClass(""+y.zoomedSlideClass),i=void 0===x.touchesStart.x&&e?(t="touchend"===e.type?e.changedTouches[0].pageX:e.pageX,"touchend"===e.type?e.changedTouches[0].pageY:e.pageY):(t=x.touchesStart.x,x.touchesStart.y),g.scale=b.$imageWrapEl.attr("data-swiper-zoom")||y.maxRatio,g.currentScale=b.$imageWrapEl.attr("data-swiper-zoom")||y.maxRatio,e?(v=b.$slideEl[0].offsetWidth,m=b.$slideEl[0].offsetHeight,s=b.$slideEl.offset().left+v/2-t,n=b.$slideEl.offset().top+m/2-i,o=b.$imageEl[0].offsetWidth,l=b.$imageEl[0].offsetHeight,d=o*g.scale,h=l*g.scale,p=-(u=Math.min(v/2-d/2,0)),f=-(c=Math.min(m/2-h/2,0)),(a=s*g.scale)<u&&(a=u),p<a&&(a=p),(r=n*g.scale)<c&&(r=c),f<r&&(r=f)):r=a=0,b.$imageWrapEl.transition(300).transform("translate3d("+a+"px, "+r+"px,0)"),b.$imageEl.transition(300).transform("translate3d(0,0,0) scale("+g.scale+")"))},out:function(){var e=this.zoom,t=this.params.zoom,i=e.gesture;i.$slideEl||(this.params.virtual&&this.params.virtual.enabled&&this.virtual?i.$slideEl=this.$wrapperEl.children("."+this.params.slideActiveClass):i.$slideEl=this.slides.eq(this.activeIndex),i.$imageEl=i.$slideEl.find("img, svg, canvas, picture, .swiper-zoom-target"),i.$imageWrapEl=i.$imageEl.parent("."+t.containerClass)),i.$imageEl&&0!==i.$imageEl.length&&(e.scale=1,e.currentScale=1,i.$imageWrapEl.transition(300).transform("translate3d(0,0,0)"),i.$imageEl.transition(300).transform("translate3d(0,0,0) scale(1)"),i.$slideEl.removeClass(""+t.zoomedSlideClass),i.$slideEl=void 0)},enable:function(){var e=this.zoom;if(!e.enabled){e.enabled=!0;var t=!("touchstart"!==this.touchEvents.start||!M.passiveListener||!this.params.passiveListeners)&&{passive:!0,capture:!1},i=!M.passiveListener||{passive:!1,capture:!0},s="."+this.params.slideClass;M.gestures?(this.$wrapperEl.on("gesturestart",s,e.onGestureStart,t),this.$wrapperEl.on("gesturechange",s,e.onGestureChange,t),this.$wrapperEl.on("gestureend",s,e.onGestureEnd,t)):"touchstart"===this.touchEvents.start&&(this.$wrapperEl.on(this.touchEvents.start,s,e.onGestureStart,t),this.$wrapperEl.on(this.touchEvents.move,s,e.onGestureChange,i),this.$wrapperEl.on(this.touchEvents.end,s,e.onGestureEnd,t),this.touchEvents.cancel&&this.$wrapperEl.on(this.touchEvents.cancel,s,e.onGestureEnd,t)),this.$wrapperEl.on(this.touchEvents.move,"."+this.params.zoom.containerClass,e.onTouchMove,i)}},disable:function(){var e=this.zoom;if(e.enabled){this.zoom.enabled=!1;var t=!("touchstart"!==this.touchEvents.start||!M.passiveListener||!this.params.passiveListeners)&&{passive:!0,capture:!1},i=!M.passiveListener||{passive:!1,capture:!0},s="."+this.params.slideClass;M.gestures?(this.$wrapperEl.off("gesturestart",s,e.onGestureStart,t),this.$wrapperEl.off("gesturechange",s,e.onGestureChange,t),this.$wrapperEl.off("gestureend",s,e.onGestureEnd,t)):"touchstart"===this.touchEvents.start&&(this.$wrapperEl.off(this.touchEvents.start,s,e.onGestureStart,t),this.$wrapperEl.off(this.touchEvents.move,s,e.onGestureChange,i),this.$wrapperEl.off(this.touchEvents.end,s,e.onGestureEnd,t),this.touchEvents.cancel&&this.$wrapperEl.off(this.touchEvents.cancel,s,e.onGestureEnd,t)),this.$wrapperEl.off(this.touchEvents.move,"."+this.params.zoom.containerClass,e.onTouchMove,i)}}},re={loadInSlide:function(e,d){void 0===d&&(d=!0);var h=this,u=h.params.lazy;if(void 0!==e&&0!==h.slides.length){var c=h.virtual&&h.params.virtual.enabled?h.$wrapperEl.children("."+h.params.slideClass+'[data-swiper-slide-index="'+e+'"]'):h.slides.eq(e),t=c.find("."+u.elementClass+":not(."+u.loadedClass+"):not(."+u.loadingClass+")");!c.hasClass(u.elementClass)||c.hasClass(u.loadedClass)||c.hasClass(u.loadingClass)||(t=t.add(c[0])),0!==t.length&&t.each(function(e,t){var s=D(t);s.addClass(u.loadingClass);var n=s.attr("data-background"),a=s.attr("data-src"),r=s.attr("data-srcset"),o=s.attr("data-sizes"),l=s.parent("picture");h.loadImage(s[0],a||n,r,o,!1,function(){if(null!=h&&h&&(!h||h.params)&&!h.destroyed){if(n?(s.css("background-image",'url("'+n+'")'),s.removeAttr("data-background")):(r&&(s.attr("srcset",r),s.removeAttr("data-srcset")),o&&(s.attr("sizes",o),s.removeAttr("data-sizes")),l.length&&l.children("source").each(function(e,t){var i=D(t);i.attr("data-srcset")&&(i.attr("srcset",i.attr("data-srcset")),i.removeAttr("data-srcset"))}),a&&(s.attr("src",a),s.removeAttr("data-src"))),s.addClass(u.loadedClass).removeClass(u.loadingClass),c.find("."+u.preloaderClass).remove(),h.params.loop&&d){var e=c.attr("data-swiper-slide-index");if(c.hasClass(h.params.slideDuplicateClass)){var t=h.$wrapperEl.children('[data-swiper-slide-index="'+e+'"]:not(.'+h.params.slideDuplicateClass+")");h.lazy.loadInSlide(t.index(),!1)}else{var i=h.$wrapperEl.children("."+h.params.slideDuplicateClass+'[data-swiper-slide-index="'+e+'"]');h.lazy.loadInSlide(i.index(),!1)}}h.emit("lazyImageReady",c[0],s[0]),h.params.autoHeight&&h.updateAutoHeight()}}),h.emit("lazyImageLoad",c[0],s[0])})}},load:function(){var s=this,t=s.$wrapperEl,i=s.params,n=s.slides,e=s.activeIndex,a=s.virtual&&i.virtual.enabled,r=i.lazy,o=i.slidesPerView;function l(e){if(a){if(t.children("."+i.slideClass+'[data-swiper-slide-index="'+e+'"]').length)return 1}else if(n[e])return 1}function d(e){return a?D(e).attr("data-swiper-slide-index"):D(e).index()}if("auto"===o&&(o=0),s.lazy.initialImageLoaded||(s.lazy.initialImageLoaded=!0),s.params.watchSlidesVisibility)t.children("."+i.slideVisibleClass).each(function(e,t){var i=a?D(t).attr("data-swiper-slide-index"):D(t).index();s.lazy.loadInSlide(i)});else if(1<o)for(var h=e;h<e+o;h+=1)l(h)&&s.lazy.loadInSlide(h);else s.lazy.loadInSlide(e);if(r.loadPrevNext)if(1<o||r.loadPrevNextAmount&&1<r.loadPrevNextAmount){for(var u=r.loadPrevNextAmount,c=o,p=Math.min(e+c+Math.max(u,c),n.length),f=Math.max(e-Math.max(c,u),0),v=e+o;v<p;v+=1)l(v)&&s.lazy.loadInSlide(v);for(var m=f;m<e;m+=1)l(m)&&s.lazy.loadInSlide(m)}else{var g=t.children("."+i.slideNextClass);0<g.length&&s.lazy.loadInSlide(d(g));var y=t.children("."+i.slidePrevClass);0<y.length&&s.lazy.loadInSlide(d(y))}}},oe={LinearSpline:function(e,t){var i,s,n,a,r;return this.x=e,this.y=t,this.lastIndex=e.length-1,this.interpolate=function(e){return e?(r=function(e,t){for(s=-1,i=e.length;1<i-s;)e[n=i+s>>1]<=t?s=n:i=n;return i}(this.x,e),a=r-1,(e-this.x[a])*(this.y[r]-this.y[a])/(this.x[r]-this.x[a])+this.y[a]):0},this},getInterpolateFunction:function(e){this.controller.spline||(this.controller.spline=this.params.loop?new oe.LinearSpline(this.slidesGrid,e.slidesGrid):new oe.LinearSpline(this.snapGrid,e.snapGrid))},setTranslate:function(e,t){var i,s,n=this,a=n.controller.control;function r(e){var t=n.rtlTranslate?-n.translate:n.translate;"slide"===n.params.controller.by&&(n.controller.getInterpolateFunction(e),s=-n.controller.spline.interpolate(-t)),s&&"container"!==n.params.controller.by||(i=(e.maxTranslate()-e.minTranslate())/(n.maxTranslate()-n.minTranslate()),s=(t-n.minTranslate())*i+e.minTranslate()),n.params.controller.inverse&&(s=e.maxTranslate()-s),e.updateProgress(s),e.setTranslate(s,n),e.updateActiveIndex(),e.updateSlidesClasses()}if(Array.isArray(a))for(var o=0;o<a.length;o+=1)a[o]!==t&&a[o]instanceof B&&r(a[o]);else a instanceof B&&t!==a&&r(a)},setTransition:function(t,e){var i,s=this,n=s.controller.control;function a(e){e.setTransition(t,s),0!==t&&(e.transitionStart(),e.params.autoHeight&&ae.nextTick(function(){e.updateAutoHeight()}),e.$wrapperEl.transitionEnd(function(){n&&(e.params.loop&&"slide"===s.params.controller.by&&e.loopFix(),e.transitionEnd())}))}if(Array.isArray(n))for(i=0;i<n.length;i+=1)n[i]!==e&&n[i]instanceof B&&a(n[i]);else n instanceof B&&e!==n&&a(n)}},le={makeElFocusable:function(e){return e.attr("tabIndex","0"),e},makeElNotFocusable:function(e){return e.attr("tabIndex","-1"),e},addElRole:function(e,t){return e.attr("role",t),e},addElLabel:function(e,t){return e.attr("aria-label",t),e},disableEl:function(e){return e.attr("aria-disabled",!0),e},enableEl:function(e){return e.attr("aria-disabled",!1),e},onEnterKey:function(e){var t=this.params.a11y;if(13===e.keyCode){var i=D(e.target);this.navigation&&this.navigation.$nextEl&&i.is(this.navigation.$nextEl)&&(this.isEnd&&!this.params.loop||this.slideNext(),this.isEnd?this.a11y.notify(t.lastSlideMessage):this.a11y.notify(t.nextSlideMessage)),this.navigation&&this.navigation.$prevEl&&i.is(this.navigation.$prevEl)&&(this.isBeginning&&!this.params.loop||this.slidePrev(),this.isBeginning?this.a11y.notify(t.firstSlideMessage):this.a11y.notify(t.prevSlideMessage)),this.pagination&&i.is("."+this.params.pagination.bulletClass)&&i[0].click()}},notify:function(e){var t=this.a11y.liveRegion;0!==t.length&&(t.html(""),t.html(e))},updateNavigation:function(){if(!this.params.loop&&this.navigation){var e=this.navigation,t=e.$nextEl,i=e.$prevEl;i&&0<i.length&&(this.isBeginning?(this.a11y.disableEl(i),this.a11y.makeElNotFocusable(i)):(this.a11y.enableEl(i),this.a11y.makeElFocusable(i))),t&&0<t.length&&(this.isEnd?(this.a11y.disableEl(t),this.a11y.makeElNotFocusable(t)):(this.a11y.enableEl(t),this.a11y.makeElFocusable(t)))}},updatePagination:function(){var s=this,n=s.params.a11y;s.pagination&&s.params.pagination.clickable&&s.pagination.bullets&&s.pagination.bullets.length&&s.pagination.bullets.each(function(e,t){var i=D(t);s.a11y.makeElFocusable(i),s.a11y.addElRole(i,"button"),s.a11y.addElLabel(i,n.paginationBulletMessage.replace(/\{\{index\}\}/,i.index()+1))})},init:function(){this.$el.append(this.a11y.liveRegion);var e,t,i=this.params.a11y;this.navigation&&this.navigation.$nextEl&&(e=this.navigation.$nextEl),this.navigation&&this.navigation.$prevEl&&(t=this.navigation.$prevEl),e&&(this.a11y.makeElFocusable(e),this.a11y.addElRole(e,"button"),this.a11y.addElLabel(e,i.nextSlideMessage),e.on("keydown",this.a11y.onEnterKey)),t&&(this.a11y.makeElFocusable(t),this.a11y.addElRole(t,"button"),this.a11y.addElLabel(t,i.prevSlideMessage),t.on("keydown",this.a11y.onEnterKey)),this.pagination&&this.params.pagination.clickable&&this.pagination.bullets&&this.pagination.bullets.length&&this.pagination.$el.on("keydown","."+this.params.pagination.bulletClass,this.a11y.onEnterKey)},destroy:function(){var e,t;this.a11y.liveRegion&&0<this.a11y.liveRegion.length&&this.a11y.liveRegion.remove(),this.navigation&&this.navigation.$nextEl&&(e=this.navigation.$nextEl),this.navigation&&this.navigation.$prevEl&&(t=this.navigation.$prevEl),e&&e.off("keydown",this.a11y.onEnterKey),t&&t.off("keydown",this.a11y.onEnterKey),this.pagination&&this.params.pagination.clickable&&this.pagination.bullets&&this.pagination.bullets.length&&this.pagination.$el.off("keydown","."+this.params.pagination.bulletClass,this.a11y.onEnterKey)}},de={init:function(){if(this.params.history){if(!ne.history||!ne.history.pushState)return this.params.history.enabled=!1,void(this.params.hashNavigation.enabled=!0);var e=this.history;e.initialized=!0,e.paths=de.getPathValues(),(e.paths.key||e.paths.value)&&(e.scrollToSlide(0,e.paths.value,this.params.runCallbacksOnInit),this.params.history.replaceState||ne.addEventListener("popstate",this.history.setHistoryPopState))}},destroy:function(){this.params.history.replaceState||ne.removeEventListener("popstate",this.history.setHistoryPopState)},setHistoryPopState:function(){this.history.paths=de.getPathValues(),this.history.scrollToSlide(this.params.speed,this.history.paths.value,!1)},getPathValues:function(){var e=ne.location.pathname.slice(1).split("/").filter(function(e){return""!==e}),t=e.length;return{key:e[t-2],value:e[t-1]}},setHistory:function(e,t){if(this.history.initialized&&this.params.history.enabled){var i=this.slides.eq(t),s=de.slugify(i.attr("data-history"));ne.location.pathname.includes(e)||(s=e+"/"+s);var n=ne.history.state;n&&n.value===s||(this.params.history.replaceState?ne.history.replaceState({value:s},null,s):ne.history.pushState({value:s},null,s))}},slugify:function(e){return e.toString().replace(/\s+/g,"-").replace(/[^\w-]+/g,"").replace(/--+/g,"-").replace(/^-+/,"").replace(/-+$/,"")},scrollToSlide:function(e,t,i){if(t)for(var s=0,n=this.slides.length;s<n;s+=1){var a=this.slides.eq(s);if(de.slugify(a.attr("data-history"))===t&&!a.hasClass(this.params.slideDuplicateClass)){var r=a.index();this.slideTo(r,e,i)}}else this.slideTo(0,e,i)}},he={onHashCange:function(){this.emit("hashChange");var e=y.location.hash.replace("#","");if(e!==this.slides.eq(this.activeIndex).attr("data-hash")){var t=this.$wrapperEl.children("."+this.params.slideClass+'[data-hash="'+e+'"]').index();if(void 0===t)return;this.slideTo(t)}},setHash:function(){if(this.hashNavigation.initialized&&this.params.hashNavigation.enabled)if(this.params.hashNavigation.replaceState&&ne.history&&ne.history.replaceState)ne.history.replaceState(null,null,"#"+this.slides.eq(this.activeIndex).attr("data-hash")||""),this.emit("hashSet");else{var e=this.slides.eq(this.activeIndex),t=e.attr("data-hash")||e.attr("data-history");y.location.hash=t||"",this.emit("hashSet")}},init:function(){if(!(!this.params.hashNavigation.enabled||this.params.history&&this.params.history.enabled)){this.hashNavigation.initialized=!0;var e=y.location.hash.replace("#","");if(e)for(var t=0,i=this.slides.length;t<i;t+=1){var s=this.slides.eq(t);if((s.attr("data-hash")||s.attr("data-history"))===e&&!s.hasClass(this.params.slideDuplicateClass)){var n=s.index();this.slideTo(n,0,this.params.runCallbacksOnInit,!0)}}this.params.hashNavigation.watchState&&D(ne).on("hashchange",this.hashNavigation.onHashCange)}},destroy:function(){this.params.hashNavigation.watchState&&D(ne).off("hashchange",this.hashNavigation.onHashCange)}},ue={run:function(){var e=this,t=e.slides.eq(e.activeIndex),i=e.params.autoplay.delay;t.attr("data-swiper-autoplay")&&(i=t.attr("data-swiper-autoplay")||e.params.autoplay.delay),clearTimeout(e.autoplay.timeout),e.autoplay.timeout=ae.nextTick(function(){e.params.autoplay.reverseDirection?e.params.loop?(e.loopFix(),e.slidePrev(e.params.speed,!0,!0),e.emit("autoplay")):e.isBeginning?e.params.autoplay.stopOnLastSlide?e.autoplay.stop():(e.slideTo(e.slides.length-1,e.params.speed,!0,!0),e.emit("autoplay")):(e.slidePrev(e.params.speed,!0,!0),e.emit("autoplay")):e.params.loop?(e.loopFix(),e.slideNext(e.params.speed,!0,!0),e.emit("autoplay")):e.isEnd?e.params.autoplay.stopOnLastSlide?e.autoplay.stop():(e.slideTo(0,e.params.speed,!0,!0),e.emit("autoplay")):(e.slideNext(e.params.speed,!0,!0),e.emit("autoplay")),e.params.cssMode&&e.autoplay.running&&e.autoplay.run()},i)},start:function(){return void 0===this.autoplay.timeout&&!this.autoplay.running&&(this.autoplay.running=!0,this.emit("autoplayStart"),this.autoplay.run(),!0)},stop:function(){return!!this.autoplay.running&&void 0!==this.autoplay.timeout&&(this.autoplay.timeout&&(clearTimeout(this.autoplay.timeout),this.autoplay.timeout=void 0),this.autoplay.running=!1,this.emit("autoplayStop"),!0)},pause:function(e){this.autoplay.running&&(this.autoplay.paused||(this.autoplay.timeout&&clearTimeout(this.autoplay.timeout),this.autoplay.paused=!0,0!==e&&this.params.autoplay.waitForTransition?(this.$wrapperEl[0].addEventListener("transitionend",this.autoplay.onTransitionEnd),this.$wrapperEl[0].addEventListener("webkitTransitionEnd",this.autoplay.onTransitionEnd)):(this.autoplay.paused=!1,this.autoplay.run())))}},ce={setTranslate:function(){for(var e=this.slides,t=0;t<e.length;t+=1){var i=this.slides.eq(t),s=-i[0].swiperSlideOffset;this.params.virtualTranslate||(s-=this.translate);var n=0;this.isHorizontal()||(n=s,s=0);var a=this.params.fadeEffect.crossFade?Math.max(1-Math.abs(i[0].progress),0):1+Math.min(Math.max(i[0].progress,-1),0);i.css({opacity:a}).transform("translate3d("+s+"px, "+n+"px, 0px)")}},setTransition:function(e){var i=this,t=i.slides,s=i.$wrapperEl;if(t.transition(e),i.params.virtualTranslate&&0!==e){var n=!1;t.transitionEnd(function(){if(!n&&i&&!i.destroyed){n=!0,i.animating=!1;for(var e=["webkitTransitionEnd","transitionend"],t=0;t<e.length;t+=1)s.trigger(e[t])}})}}},pe={setTranslate:function(){var e,t=this.$el,i=this.$wrapperEl,s=this.slides,n=this.width,a=this.height,r=this.rtlTranslate,o=this.size,l=this.params.cubeEffect,d=this.isHorizontal(),h=this.virtual&&this.params.virtual.enabled,u=0;l.shadow&&(d?(0===(e=i.find(".swiper-cube-shadow")).length&&(e=D('<div class="swiper-cube-shadow"></div>'),i.append(e)),e.css({height:n+"px"})):0===(e=t.find(".swiper-cube-shadow")).length&&(e=D('<div class="swiper-cube-shadow"></div>'),t.append(e)));for(var c=0;c<s.length;c+=1){var p=s.eq(c),f=c;h&&(f=parseInt(p.attr("data-swiper-slide-index"),10));var v=90*f,m=Math.floor(v/360);r&&(v=-v,m=Math.floor(-v/360));var g=Math.max(Math.min(p[0].progress,1),-1),y=0,b=0,x=0;f%4==0?(y=4*-m*o,x=0):(f-1)%4==0?(y=0,x=4*-m*o):(f-2)%4==0?(y=o+4*m*o,x=o):(f-3)%4==0&&(y=-o,x=3*o+4*o*m),r&&(y=-y),d||(b=y,y=0);var w="rotateX("+(d?0:-v)+"deg) rotateY("+(d?v:0)+"deg) translate3d("+y+"px, "+b+"px, "+x+"px)";if(g<=1&&-1<g&&(u=90*f+90*g,r&&(u=90*-f-90*g)),p.transform(w),l.slideShadows){var T=d?p.find(".swiper-slide-shadow-left"):p.find(".swiper-slide-shadow-top"),E=d?p.find(".swiper-slide-shadow-right"):p.find(".swiper-slide-shadow-bottom");0===T.length&&(T=D('<div class="swiper-slide-shadow-'+(d?"left":"top")+'"></div>'),p.append(T)),0===E.length&&(E=D('<div class="swiper-slide-shadow-'+(d?"right":"bottom")+'"></div>'),p.append(E)),T.length&&(T[0].style.opacity=Math.max(-g,0)),E.length&&(E[0].style.opacity=Math.max(g,0))}}if(i.css({"-webkit-transform-origin":"50% 50% -"+o/2+"px","-moz-transform-origin":"50% 50% -"+o/2+"px","-ms-transform-origin":"50% 50% -"+o/2+"px","transform-origin":"50% 50% -"+o/2+"px"}),l.shadow)if(d)e.transform("translate3d(0px, "+(n/2+l.shadowOffset)+"px, "+-n/2+"px) rotateX(90deg) rotateZ(0deg) scale("+l.shadowScale+")");else{var C=Math.abs(u)-90*Math.floor(Math.abs(u)/90),S=1.5-(Math.sin(2*C*Math.PI/360)/2+Math.cos(2*C*Math.PI/360)/2),M=l.shadowScale,k=l.shadowScale/S,P=l.shadowOffset;e.transform("scale3d("+M+", 1, "+k+") translate3d(0px, "+(a/2+P)+"px, "+-a/2/k+"px) rotateX(-90deg)")}var L=F.isSafari||F.isWebView?-o/2:0;i.transform("translate3d(0px,0,"+L+"px) rotateX("+(this.isHorizontal()?0:u)+"deg) rotateY("+(this.isHorizontal()?-u:0)+"deg)")},setTransition:function(e){var t=this.$el;this.slides.transition(e).find(".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left").transition(e),this.params.cubeEffect.shadow&&!this.isHorizontal()&&t.find(".swiper-cube-shadow").transition(e)}},fe={setTranslate:function(){for(var e=this.slides,t=this.rtlTranslate,i=0;i<e.length;i+=1){var s=e.eq(i),n=s[0].progress;this.params.flipEffect.limitRotation&&(n=Math.max(Math.min(s[0].progress,1),-1));var a=-180*n,r=0,o=-s[0].swiperSlideOffset,l=0;if(this.isHorizontal()?t&&(a=-a):(l=o,r=-a,a=o=0),s[0].style.zIndex=-Math.abs(Math.round(n))+e.length,this.params.flipEffect.slideShadows){var d=this.isHorizontal()?s.find(".swiper-slide-shadow-left"):s.find(".swiper-slide-shadow-top"),h=this.isHorizontal()?s.find(".swiper-slide-shadow-right"):s.find(".swiper-slide-shadow-bottom");0===d.length&&(d=D('<div class="swiper-slide-shadow-'+(this.isHorizontal()?"left":"top")+'"></div>'),s.append(d)),0===h.length&&(h=D('<div class="swiper-slide-shadow-'+(this.isHorizontal()?"right":"bottom")+'"></div>'),s.append(h)),d.length&&(d[0].style.opacity=Math.max(-n,0)),h.length&&(h[0].style.opacity=Math.max(n,0))}s.transform("translate3d("+o+"px, "+l+"px, 0px) rotateX("+r+"deg) rotateY("+a+"deg)")}},setTransition:function(e){var i=this,t=i.slides,s=i.activeIndex,n=i.$wrapperEl;if(t.transition(e).find(".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left").transition(e),i.params.virtualTranslate&&0!==e){var a=!1;t.eq(s).transitionEnd(function(){if(!a&&i&&!i.destroyed){a=!0,i.animating=!1;for(var e=["webkitTransitionEnd","transitionend"],t=0;t<e.length;t+=1)n.trigger(e[t])}})}}},ve={setTranslate:function(){for(var e=this.width,t=this.height,i=this.slides,s=this.$wrapperEl,n=this.slidesSizesGrid,a=this.params.coverflowEffect,r=this.isHorizontal(),o=this.translate,l=r?e/2-o:t/2-o,d=r?a.rotate:-a.rotate,h=a.depth,u=0,c=i.length;u<c;u+=1){var p=i.eq(u),f=n[u],v=(l-p[0].swiperSlideOffset-f/2)/f*a.modifier,m=r?d*v:0,g=r?0:d*v,y=-h*Math.abs(v),b=a.stretch;"string"==typeof b&&-1!==b.indexOf("%")&&(b=parseFloat(a.stretch)/100*f);var x=r?0:b*v,w=r?b*v:0,T=1-(1-a.scale)*Math.abs(v);Math.abs(w)<.001&&(w=0),Math.abs(x)<.001&&(x=0),Math.abs(y)<.001&&(y=0),Math.abs(m)<.001&&(m=0),Math.abs(g)<.001&&(g=0),Math.abs(T)<.001&&(T=0);var E="translate3d("+w+"px,"+x+"px,"+y+"px)  rotateX("+g+"deg) rotateY("+m+"deg) scale("+T+")";if(p.transform(E),p[0].style.zIndex=1-Math.abs(Math.round(v)),a.slideShadows){var C=r?p.find(".swiper-slide-shadow-left"):p.find(".swiper-slide-shadow-top"),S=r?p.find(".swiper-slide-shadow-right"):p.find(".swiper-slide-shadow-bottom");0===C.length&&(C=D('<div class="swiper-slide-shadow-'+(r?"left":"top")+'"></div>'),p.append(C)),0===S.length&&(S=D('<div class="swiper-slide-shadow-'+(r?"right":"bottom")+'"></div>'),p.append(S)),C.length&&(C[0].style.opacity=0<v?v:0),S.length&&(S[0].style.opacity=0<-v?-v:0)}}(M.pointerEvents||M.prefixedPointerEvents)&&(s[0].style.perspectiveOrigin=l+"px 50%")},setTransition:function(e){this.slides.transition(e).find(".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left").transition(e)}},me={init:function(){var e=this.params.thumbs,t=this.constructor;e.swiper instanceof t?(this.thumbs.swiper=e.swiper,ae.extend(this.thumbs.swiper.originalParams,{watchSlidesProgress:!0,slideToClickedSlide:!1}),ae.extend(this.thumbs.swiper.params,{watchSlidesProgress:!0,slideToClickedSlide:!1})):ae.isObject(e.swiper)&&(this.thumbs.swiper=new t(ae.extend({},e.swiper,{watchSlidesVisibility:!0,watchSlidesProgress:!0,slideToClickedSlide:!1})),this.thumbs.swiperCreated=!0),this.thumbs.swiper.$el.addClass(this.params.thumbs.thumbsContainerClass),this.thumbs.swiper.on("tap",this.thumbs.onThumbClick)},onThumbClick:function(){var e=this.thumbs.swiper;if(e){var t=e.clickedIndex,i=e.clickedSlide;if(!(i&&D(i).hasClass(this.params.thumbs.slideThumbActiveClass)||null==t)){var s;if(s=e.params.loop?parseInt(D(e.clickedSlide).attr("data-swiper-slide-index"),10):t,this.params.loop){var n=this.activeIndex;this.slides.eq(n).hasClass(this.params.slideDuplicateClass)&&(this.loopFix(),this._clientLeft=this.$wrapperEl[0].clientLeft,n=this.activeIndex);var a=this.slides.eq(n).prevAll('[data-swiper-slide-index="'+s+'"]').eq(0).index(),r=this.slides.eq(n).nextAll('[data-swiper-slide-index="'+s+'"]').eq(0).index();s=void 0===a?r:void 0===r?a:r-n<n-a?r:a}this.slideTo(s)}}},update:function(e){var t=this.thumbs.swiper;if(t){var i="auto"===t.params.slidesPerView?t.slidesPerViewDynamic():t.params.slidesPerView,s=this.params.thumbs.autoScrollOffset,n=s&&!t.params.loop;if(this.realIndex!==t.realIndex||n){var a,r,o=t.activeIndex;if(t.params.loop){t.slides.eq(o).hasClass(t.params.slideDuplicateClass)&&(t.loopFix(),t._clientLeft=t.$wrapperEl[0].clientLeft,o=t.activeIndex);var l=t.slides.eq(o).prevAll('[data-swiper-slide-index="'+this.realIndex+'"]').eq(0).index(),d=t.slides.eq(o).nextAll('[data-swiper-slide-index="'+this.realIndex+'"]').eq(0).index();a=void 0===l?d:void 0===d?l:d-o==o-l?o:d-o<o-l?d:l,r=this.activeIndex>this.previousIndex?"next":"prev"}else r=(a=this.realIndex)>this.previousIndex?"next":"prev";n&&(a+="next"===r?s:-1*s),t.visibleSlidesIndexes&&t.visibleSlidesIndexes.indexOf(a)<0&&(t.params.centeredSlides?a=o<a?a-Math.floor(i/2)+1:a+Math.floor(i/2)-1:o<a&&(a=a-i+1),t.slideTo(a,e?0:void 0))}var h=1,u=this.params.thumbs.slideThumbActiveClass;if(1<this.params.slidesPerView&&!this.params.centeredSlides&&(h=this.params.slidesPerView),this.params.thumbs.multipleActiveThumbs||(h=1),h=Math.floor(h),t.slides.removeClass(u),t.params.loop||t.params.virtual&&t.params.virtual.enabled)for(var c=0;c<h;c+=1)t.$wrapperEl.children('[data-swiper-slide-index="'+(this.realIndex+c)+'"]').addClass(u);else for(var p=0;p<h;p+=1)t.slides.eq(this.realIndex+p).addClass(u)}}},ge=[R,G,W,X,Y,U,Q,{name:"mousewheel",params:{mousewheel:{enabled:!1,releaseOnEdges:!1,invert:!1,forceToAxis:!1,sensitivity:1,eventsTarged:"container"}},create:function(){ae.extend(this,{mousewheel:{enabled:!1,enable:J.enable.bind(this),disable:J.disable.bind(this),handle:J.handle.bind(this),handleMouseEnter:J.handleMouseEnter.bind(this),handleMouseLeave:J.handleMouseLeave.bind(this),animateSlider:J.animateSlider.bind(this),releaseScroll:J.releaseScroll.bind(this),lastScrollTime:ae.now(),lastEventBeforeSnap:void 0,recentWheelEvents:[]}})},on:{init:function(){!this.params.mousewheel.enabled&&this.params.cssMode&&this.mousewheel.disable(),this.params.mousewheel.enabled&&this.mousewheel.enable()},destroy:function(){this.params.cssMode&&this.mousewheel.enable(),this.mousewheel.enabled&&this.mousewheel.disable()}}},{name:"navigation",params:{navigation:{nextEl:null,prevEl:null,hideOnClick:!1,disabledClass:"swiper-button-disabled",hiddenClass:"swiper-button-hidden",lockClass:"swiper-button-lock"}},create:function(){ae.extend(this,{navigation:{init:Z.init.bind(this),update:Z.update.bind(this),destroy:Z.destroy.bind(this),onNextClick:Z.onNextClick.bind(this),onPrevClick:Z.onPrevClick.bind(this)}})},on:{init:function(){this.navigation.init(),this.navigation.update()},toEdge:function(){this.navigation.update()},fromEdge:function(){this.navigation.update()},destroy:function(){this.navigation.destroy()},click:function(e){var t,i=this.navigation,s=i.$nextEl,n=i.$prevEl;!this.params.navigation.hideOnClick||D(e.target).is(n)||D(e.target).is(s)||(s?t=s.hasClass(this.params.navigation.hiddenClass):n&&(t=n.hasClass(this.params.navigation.hiddenClass)),!0===t?this.emit("navigationShow",this):this.emit("navigationHide",this),s&&s.toggleClass(this.params.navigation.hiddenClass),n&&n.toggleClass(this.params.navigation.hiddenClass))}}},{name:"pagination",params:{pagination:{el:null,bulletElement:"span",clickable:!1,hideOnClick:!1,renderBullet:null,renderProgressbar:null,renderFraction:null,renderCustom:null,progressbarOpposite:!1,type:"bullets",dynamicBullets:!1,dynamicMainBullets:1,formatFractionCurrent:function(e){return e},formatFractionTotal:function(e){return e},bulletClass:"swiper-pagination-bullet",bulletActiveClass:"swiper-pagination-bullet-active",modifierClass:"swiper-pagination-",currentClass:"swiper-pagination-current",totalClass:"swiper-pagination-total",hiddenClass:"swiper-pagination-hidden",progressbarFillClass:"swiper-pagination-progressbar-fill",progressbarOppositeClass:"swiper-pagination-progressbar-opposite",clickableClass:"swiper-pagination-clickable",lockClass:"swiper-pagination-lock"}},create:function(){ae.extend(this,{pagination:{init:ee.init.bind(this),render:ee.render.bind(this),update:ee.update.bind(this),destroy:ee.destroy.bind(this),dynamicBulletIndex:0}})},on:{init:function(){this.pagination.init(),this.pagination.render(),this.pagination.update()},activeIndexChange:function(){!this.params.loop&&void 0!==this.snapIndex||this.pagination.update()},snapIndexChange:function(){this.params.loop||this.pagination.update()},slidesLengthChange:function(){this.params.loop&&(this.pagination.render(),this.pagination.update())},snapGridLengthChange:function(){this.params.loop||(this.pagination.render(),this.pagination.update())},destroy:function(){this.pagination.destroy()},click:function(e){this.params.pagination.el&&this.params.pagination.hideOnClick&&0<this.pagination.$el.length&&!D(e.target).hasClass(this.params.pagination.bulletClass)&&(!0===this.pagination.$el.hasClass(this.params.pagination.hiddenClass)?this.emit("paginationShow",this):this.emit("paginationHide",this),this.pagination.$el.toggleClass(this.params.pagination.hiddenClass))}}},{name:"scrollbar",params:{scrollbar:{el:null,dragSize:"auto",hide:!1,draggable:!1,snapOnRelease:!0,lockClass:"swiper-scrollbar-lock",dragClass:"swiper-scrollbar-drag"}},create:function(){ae.extend(this,{scrollbar:{init:te.init.bind(this),destroy:te.destroy.bind(this),updateSize:te.updateSize.bind(this),setTranslate:te.setTranslate.bind(this),setTransition:te.setTransition.bind(this),enableDraggable:te.enableDraggable.bind(this),disableDraggable:te.disableDraggable.bind(this),setDragPosition:te.setDragPosition.bind(this),getPointerPosition:te.getPointerPosition.bind(this),onDragStart:te.onDragStart.bind(this),onDragMove:te.onDragMove.bind(this),onDragEnd:te.onDragEnd.bind(this),isTouched:!1,timeout:null,dragTimeout:null}})},on:{init:function(){this.scrollbar.init(),this.scrollbar.updateSize(),this.scrollbar.setTranslate()},update:function(){this.scrollbar.updateSize()},resize:function(){this.scrollbar.updateSize()},observerUpdate:function(){this.scrollbar.updateSize()},setTranslate:function(){this.scrollbar.setTranslate()},setTransition:function(e){this.scrollbar.setTransition(e)},destroy:function(){this.scrollbar.destroy()}}},{name:"parallax",params:{parallax:{enabled:!1}},create:function(){ae.extend(this,{parallax:{setTransform:ie.setTransform.bind(this),setTranslate:ie.setTranslate.bind(this),setTransition:ie.setTransition.bind(this)}})},on:{beforeInit:function(){this.params.parallax.enabled&&(this.params.watchSlidesProgress=!0,this.originalParams.watchSlidesProgress=!0)},init:function(){this.params.parallax.enabled&&this.parallax.setTranslate()},setTranslate:function(){this.params.parallax.enabled&&this.parallax.setTranslate()},setTransition:function(e){this.params.parallax.enabled&&this.parallax.setTransition(e)}}},{name:"zoom",params:{zoom:{enabled:!1,maxRatio:3,minRatio:1,toggle:!0,containerClass:"swiper-zoom-container",zoomedSlideClass:"swiper-slide-zoomed"}},create:function(){var s=this,t={enabled:!1,scale:1,currentScale:1,isScaling:!1,gesture:{$slideEl:void 0,slideWidth:void 0,slideHeight:void 0,$imageEl:void 0,$imageWrapEl:void 0,maxRatio:3},image:{isTouched:void 0,isMoved:void 0,currentX:void 0,currentY:void 0,minX:void 0,minY:void 0,maxX:void 0,maxY:void 0,width:void 0,height:void 0,startX:void 0,startY:void 0,touchesStart:{},touchesCurrent:{}},velocity:{x:void 0,y:void 0,prevPositionX:void 0,prevPositionY:void 0,prevTime:void 0}};"onGestureStart onGestureChange onGestureEnd onTouchStart onTouchMove onTouchEnd onTransitionEnd toggle enable disable in out".split(" ").forEach(function(e){t[e]=se[e].bind(s)}),ae.extend(s,{zoom:t});var n=1;Object.defineProperty(s.zoom,"scale",{get:function(){return n},set:function(e){if(n!==e){var t=s.zoom.gesture.$imageEl?s.zoom.gesture.$imageEl[0]:void 0,i=s.zoom.gesture.$slideEl?s.zoom.gesture.$slideEl[0]:void 0;s.emit("zoomChange",e,t,i)}n=e}})},on:{init:function(){this.params.zoom.enabled&&this.zoom.enable()},destroy:function(){this.zoom.disable()},touchStart:function(e){this.zoom.enabled&&this.zoom.onTouchStart(e)},touchEnd:function(e){this.zoom.enabled&&this.zoom.onTouchEnd(e)},doubleTap:function(e){this.params.zoom.enabled&&this.zoom.enabled&&this.params.zoom.toggle&&this.zoom.toggle(e)},transitionEnd:function(){this.zoom.enabled&&this.params.zoom.enabled&&this.zoom.onTransitionEnd()},slideChange:function(){this.zoom.enabled&&this.params.zoom.enabled&&this.params.cssMode&&this.zoom.onTransitionEnd()}}},{name:"lazy",params:{lazy:{enabled:!1,loadPrevNext:!1,loadPrevNextAmount:1,loadOnTransitionStart:!1,elementClass:"swiper-lazy",loadingClass:"swiper-lazy-loading",loadedClass:"swiper-lazy-loaded",preloaderClass:"swiper-lazy-preloader"}},create:function(){ae.extend(this,{lazy:{initialImageLoaded:!1,load:re.load.bind(this),loadInSlide:re.loadInSlide.bind(this)}})},on:{beforeInit:function(){this.params.lazy.enabled&&this.params.preloadImages&&(this.params.preloadImages=!1)},init:function(){this.params.lazy.enabled&&!this.params.loop&&0===this.params.initialSlide&&this.lazy.load()},scroll:function(){this.params.freeMode&&!this.params.freeModeSticky&&this.lazy.load()},resize:function(){this.params.lazy.enabled&&this.lazy.load()},scrollbarDragMove:function(){this.params.lazy.enabled&&this.lazy.load()},transitionStart:function(){this.params.lazy.enabled&&(this.params.lazy.loadOnTransitionStart||!this.params.lazy.loadOnTransitionStart&&!this.lazy.initialImageLoaded)&&this.lazy.load()},transitionEnd:function(){this.params.lazy.enabled&&!this.params.lazy.loadOnTransitionStart&&this.lazy.load()},slideChange:function(){this.params.lazy.enabled&&this.params.cssMode&&this.lazy.load()}}},{name:"controller",params:{controller:{control:void 0,inverse:!1,by:"slide"}},create:function(){ae.extend(this,{controller:{control:this.params.controller.control,getInterpolateFunction:oe.getInterpolateFunction.bind(this),setTranslate:oe.setTranslate.bind(this),setTransition:oe.setTransition.bind(this)}})},on:{update:function(){this.controller.control&&this.controller.spline&&(this.controller.spline=void 0,delete this.controller.spline)},resize:function(){this.controller.control&&this.controller.spline&&(this.controller.spline=void 0,delete this.controller.spline)},observerUpdate:function(){this.controller.control&&this.controller.spline&&(this.controller.spline=void 0,delete this.controller.spline)},setTranslate:function(e,t){this.controller.control&&this.controller.setTranslate(e,t)},setTransition:function(e,t){this.controller.control&&this.controller.setTransition(e,t)}}},{name:"a11y",params:{a11y:{enabled:!0,notificationClass:"swiper-notification",prevSlideMessage:"Previous slide",nextSlideMessage:"Next slide",firstSlideMessage:"This is the first slide",lastSlideMessage:"This is the last slide",paginationBulletMessage:"Go to slide {{index}}"}},create:function(){var t=this;ae.extend(t,{a11y:{liveRegion:D('<span class="'+t.params.a11y.notificationClass+'" aria-live="assertive" aria-atomic="true"></span>')}}),Object.keys(le).forEach(function(e){t.a11y[e]=le[e].bind(t)})},on:{init:function(){this.params.a11y.enabled&&(this.a11y.init(),this.a11y.updateNavigation())},toEdge:function(){this.params.a11y.enabled&&this.a11y.updateNavigation()},fromEdge:function(){this.params.a11y.enabled&&this.a11y.updateNavigation()},paginationUpdate:function(){this.params.a11y.enabled&&this.a11y.updatePagination()},destroy:function(){this.params.a11y.enabled&&this.a11y.destroy()}}},{name:"history",params:{history:{enabled:!1,replaceState:!1,key:"slides"}},create:function(){ae.extend(this,{history:{init:de.init.bind(this),setHistory:de.setHistory.bind(this),setHistoryPopState:de.setHistoryPopState.bind(this),scrollToSlide:de.scrollToSlide.bind(this),destroy:de.destroy.bind(this)}})},on:{init:function(){this.params.history.enabled&&this.history.init()},destroy:function(){this.params.history.enabled&&this.history.destroy()},transitionEnd:function(){this.history.initialized&&this.history.setHistory(this.params.history.key,this.activeIndex)},slideChange:function(){this.history.initialized&&this.params.cssMode&&this.history.setHistory(this.params.history.key,this.activeIndex)}}},{name:"hash-navigation",params:{hashNavigation:{enabled:!1,replaceState:!1,watchState:!1}},create:function(){ae.extend(this,{hashNavigation:{initialized:!1,init:he.init.bind(this),destroy:he.destroy.bind(this),setHash:he.setHash.bind(this),onHashCange:he.onHashCange.bind(this)}})},on:{init:function(){this.params.hashNavigation.enabled&&this.hashNavigation.init()},destroy:function(){this.params.hashNavigation.enabled&&this.hashNavigation.destroy()},transitionEnd:function(){this.hashNavigation.initialized&&this.hashNavigation.setHash()},slideChange:function(){this.hashNavigation.initialized&&this.params.cssMode&&this.hashNavigation.setHash()}}},{name:"autoplay",params:{autoplay:{enabled:!1,delay:3e3,waitForTransition:!0,disableOnInteraction:!0,stopOnLastSlide:!1,reverseDirection:!1}},create:function(){var t=this;ae.extend(t,{autoplay:{running:!1,paused:!1,run:ue.run.bind(t),start:ue.start.bind(t),stop:ue.stop.bind(t),pause:ue.pause.bind(t),onVisibilityChange:function(){"hidden"===document.visibilityState&&t.autoplay.running&&t.autoplay.pause(),"visible"===document.visibilityState&&t.autoplay.paused&&(t.autoplay.run(),t.autoplay.paused=!1)},onTransitionEnd:function(e){t&&!t.destroyed&&t.$wrapperEl&&e.target===this&&(t.$wrapperEl[0].removeEventListener("transitionend",t.autoplay.onTransitionEnd),t.$wrapperEl[0].removeEventListener("webkitTransitionEnd",t.autoplay.onTransitionEnd),t.autoplay.paused=!1,t.autoplay.running?t.autoplay.run():t.autoplay.stop())}}})},on:{init:function(){this.params.autoplay.enabled&&(this.autoplay.start(),document.addEventListener("visibilitychange",this.autoplay.onVisibilityChange))},beforeTransitionStart:function(e,t){this.autoplay.running&&(t||!this.params.autoplay.disableOnInteraction?this.autoplay.pause(e):this.autoplay.stop())},sliderFirstMove:function(){this.autoplay.running&&(this.params.autoplay.disableOnInteraction?this.autoplay.stop():this.autoplay.pause())},touchEnd:function(){this.params.cssMode&&this.autoplay.paused&&!this.params.autoplay.disableOnInteraction&&this.autoplay.run()},destroy:function(){this.autoplay.running&&this.autoplay.stop(),document.removeEventListener("visibilitychange",this.autoplay.onVisibilityChange)}}},{name:"effect-fade",params:{fadeEffect:{crossFade:!1}},create:function(){ae.extend(this,{fadeEffect:{setTranslate:ce.setTranslate.bind(this),setTransition:ce.setTransition.bind(this)}})},on:{beforeInit:function(){if("fade"===this.params.effect){this.classNames.push(this.params.containerModifierClass+"fade");var e={slidesPerView:1,slidesPerColumn:1,slidesPerGroup:1,watchSlidesProgress:!0,spaceBetween:0,virtualTranslate:!0};ae.extend(this.params,e),ae.extend(this.originalParams,e)}},setTranslate:function(){"fade"===this.params.effect&&this.fadeEffect.setTranslate()},setTransition:function(e){"fade"===this.params.effect&&this.fadeEffect.setTransition(e)}}},{name:"effect-cube",params:{cubeEffect:{slideShadows:!0,shadow:!0,shadowOffset:20,shadowScale:.94}},create:function(){ae.extend(this,{cubeEffect:{setTranslate:pe.setTranslate.bind(this),setTransition:pe.setTransition.bind(this)}})},on:{beforeInit:function(){if("cube"===this.params.effect){this.classNames.push(this.params.containerModifierClass+"cube"),this.classNames.push(this.params.containerModifierClass+"3d");var e={slidesPerView:1,slidesPerColumn:1,slidesPerGroup:1,watchSlidesProgress:!0,resistanceRatio:0,spaceBetween:0,centeredSlides:!1,virtualTranslate:!0};ae.extend(this.params,e),ae.extend(this.originalParams,e)}},setTranslate:function(){"cube"===this.params.effect&&this.cubeEffect.setTranslate()},setTransition:function(e){"cube"===this.params.effect&&this.cubeEffect.setTransition(e)}}},{name:"effect-flip",params:{flipEffect:{slideShadows:!0,limitRotation:!0}},create:function(){ae.extend(this,{flipEffect:{setTranslate:fe.setTranslate.bind(this),setTransition:fe.setTransition.bind(this)}})},on:{beforeInit:function(){if("flip"===this.params.effect){this.classNames.push(this.params.containerModifierClass+"flip"),this.classNames.push(this.params.containerModifierClass+"3d");var e={slidesPerView:1,slidesPerColumn:1,slidesPerGroup:1,watchSlidesProgress:!0,spaceBetween:0,virtualTranslate:!0};ae.extend(this.params,e),ae.extend(this.originalParams,e)}},setTranslate:function(){"flip"===this.params.effect&&this.flipEffect.setTranslate()},setTransition:function(e){"flip"===this.params.effect&&this.flipEffect.setTransition(e)}}},{name:"effect-coverflow",params:{coverflowEffect:{rotate:50,stretch:0,depth:100,scale:1,modifier:1,slideShadows:!0}},create:function(){ae.extend(this,{coverflowEffect:{setTranslate:ve.setTranslate.bind(this),setTransition:ve.setTransition.bind(this)}})},on:{beforeInit:function(){"coverflow"===this.params.effect&&(this.classNames.push(this.params.containerModifierClass+"coverflow"),this.classNames.push(this.params.containerModifierClass+"3d"),this.params.watchSlidesProgress=!0,this.originalParams.watchSlidesProgress=!0)},setTranslate:function(){"coverflow"===this.params.effect&&this.coverflowEffect.setTranslate()},setTransition:function(e){"coverflow"===this.params.effect&&this.coverflowEffect.setTransition(e)}}},{name:"thumbs",params:{thumbs:{swiper:null,multipleActiveThumbs:!0,autoScrollOffset:0,slideThumbActiveClass:"swiper-slide-thumb-active",thumbsContainerClass:"swiper-container-thumbs"}},create:function(){ae.extend(this,{thumbs:{swiper:null,init:me.init.bind(this),update:me.update.bind(this),onThumbClick:me.onThumbClick.bind(this)}})},on:{beforeInit:function(){var e=this.params.thumbs;e&&e.swiper&&(this.thumbs.init(),this.thumbs.update(!0))},slideChange:function(){this.thumbs.swiper&&this.thumbs.update()},update:function(){this.thumbs.swiper&&this.thumbs.update()},resize:function(){this.thumbs.swiper&&this.thumbs.update()},observerUpdate:function(){this.thumbs.swiper&&this.thumbs.update()},setTransition:function(e){var t=this.thumbs.swiper;t&&t.setTransition(e)},beforeDestroy:function(){var e=this.thumbs.swiper;e&&this.thumbs.swiperCreated&&e&&e.destroy()}}}];return void 0===B.use&&(B.use=B.Class.use,B.installModule=B.Class.installModule),B.use(ge),B});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImpxdWVyeS5qcyIsIjAiXSwibmFtZXMiOlsiZ2xvYmFsIiwiZmFjdG9yeSIsIm1vZHVsZSIsImV4cG9ydHMiLCJkb2N1bWVudCIsInciLCJFcnJvciIsIndpbmRvdyIsInRoaXMiLCJub0dsb2JhbCIsImlzV2luZG93Iiwib2JqIiwiYXJyIiwiZ2V0UHJvdG8iLCJPYmplY3QiLCJnZXRQcm90b3R5cGVPZiIsInNsaWNlIiwiZmxhdCIsImFycmF5IiwiY2FsbCIsImNvbmNhdCIsImFwcGx5IiwicHVzaCIsImluZGV4T2YiLCJjbGFzczJ0eXBlIiwidG9TdHJpbmciLCJoYXNPd24iLCJoYXNPd25Qcm9wZXJ0eSIsImZuVG9TdHJpbmciLCJPYmplY3RGdW5jdGlvblN0cmluZyIsInN1cHBvcnQiLCJpc0Z1bmN0aW9uIiwibm9kZVR5cGUiLCJwcmVzZXJ2ZWRTY3JpcHRBdHRyaWJ1dGVzIiwidHlwZSIsInNyYyIsIm5vbmNlIiwibm9Nb2R1bGUiLCJET01FdmFsIiwiY29kZSIsIm5vZGUiLCJkb2MiLCJpIiwidmFsIiwic2NyaXB0IiwiY3JlYXRlRWxlbWVudCIsInRleHQiLCJnZXRBdHRyaWJ1dGUiLCJzZXRBdHRyaWJ1dGUiLCJoZWFkIiwiYXBwZW5kQ2hpbGQiLCJwYXJlbnROb2RlIiwicmVtb3ZlQ2hpbGQiLCJ0b1R5cGUiLCJ2ZXJzaW9uIiwialF1ZXJ5Iiwic2VsZWN0b3IiLCJjb250ZXh0IiwiZm4iLCJpbml0IiwiaXNBcnJheUxpa2UiLCJsZW5ndGgiLCJwcm90b3R5cGUiLCJqcXVlcnkiLCJjb25zdHJ1Y3RvciIsInRvQXJyYXkiLCJnZXQiLCJudW0iLCJwdXNoU3RhY2siLCJlbGVtcyIsInJldCIsIm1lcmdlIiwicHJldk9iamVjdCIsImVhY2giLCJjYWxsYmFjayIsIm1hcCIsImVsZW0iLCJhcmd1bWVudHMiLCJmaXJzdCIsImVxIiwibGFzdCIsImV2ZW4iLCJncmVwIiwiX2VsZW0iLCJvZGQiLCJsZW4iLCJqIiwiZW5kIiwic29ydCIsInNwbGljZSIsImV4dGVuZCIsIm9wdGlvbnMiLCJuYW1lIiwiY29weSIsImNvcHlJc0FycmF5IiwiY2xvbmUiLCJ0YXJnZXQiLCJkZWVwIiwiaXNQbGFpbk9iamVjdCIsIkFycmF5IiwiaXNBcnJheSIsInVuZGVmaW5lZCIsImV4cGFuZG8iLCJNYXRoIiwicmFuZG9tIiwicmVwbGFjZSIsImlzUmVhZHkiLCJlcnJvciIsIm1zZyIsIm5vb3AiLCJwcm90byIsIkN0b3IiLCJpc0VtcHR5T2JqZWN0IiwiZ2xvYmFsRXZhbCIsIm1ha2VBcnJheSIsInJlc3VsdHMiLCJpbkFycmF5Iiwic2Vjb25kIiwiaW52ZXJ0IiwibWF0Y2hlcyIsImNhbGxiYWNrRXhwZWN0IiwiYXJnIiwidmFsdWUiLCJndWlkIiwiU3ltYm9sIiwiaXRlcmF0b3IiLCJzcGxpdCIsIl9pIiwidG9Mb3dlckNhc2UiLCJTaXp6bGUiLCJmdW5lc2NhcGUiLCJlc2NhcGUiLCJub25IZXgiLCJoaWdoIiwiU3RyaW5nIiwiZnJvbUNoYXJDb2RlIiwidW5sb2FkSGFuZGxlciIsInNldERvY3VtZW50IiwiRXhwciIsImdldFRleHQiLCJpc1hNTCIsInRva2VuaXplIiwiY29tcGlsZSIsInNlbGVjdCIsIm91dGVybW9zdENvbnRleHQiLCJzb3J0SW5wdXQiLCJoYXNEdXBsaWNhdGUiLCJkb2NFbGVtIiwiZG9jdW1lbnRJc0hUTUwiLCJyYnVnZ3lRU0EiLCJyYnVnZ3lNYXRjaGVzIiwiY29udGFpbnMiLCJEYXRlIiwicHJlZmVycmVkRG9jIiwiZGlycnVucyIsImRvbmUiLCJjbGFzc0NhY2hlIiwiY3JlYXRlQ2FjaGUiLCJ0b2tlbkNhY2hlIiwiY29tcGlsZXJDYWNoZSIsIm5vbm5hdGl2ZVNlbGVjdG9yQ2FjaGUiLCJzb3J0T3JkZXIiLCJhIiwiYiIsInBvcCIsInB1c2hOYXRpdmUiLCJsaXN0IiwiYm9vbGVhbnMiLCJ3aGl0ZXNwYWNlIiwiaWRlbnRpZmllciIsImF0dHJpYnV0ZXMiLCJwc2V1ZG9zIiwicndoaXRlc3BhY2UiLCJSZWdFeHAiLCJydHJpbSIsInJjb21tYSIsInJjb21iaW5hdG9ycyIsInJkZXNjZW5kIiwicnBzZXVkbyIsInJpZGVudGlmaWVyIiwibWF0Y2hFeHByIiwiSUQiLCJDTEFTUyIsIlRBRyIsIkFUVFIiLCJQU0VVRE8iLCJDSElMRCIsImJvb2wiLCJuZWVkc0NvbnRleHQiLCJyaHRtbCIsInJpbnB1dHMiLCJyaGVhZGVyIiwicm5hdGl2ZSIsInJxdWlja0V4cHIiLCJyc2libGluZyIsInJ1bmVzY2FwZSIsInJjc3Nlc2NhcGUiLCJmY3NzZXNjYXBlIiwiY2giLCJhc0NvZGVQb2ludCIsImNoYXJDb2RlQXQiLCJpbkRpc2FibGVkRmllbGRzZXQiLCJhZGRDb21iaW5hdG9yIiwiZGlzYWJsZWQiLCJub2RlTmFtZSIsImRpciIsIm5leHQiLCJjaGlsZE5vZGVzIiwiZSIsImVscyIsInNlZWQiLCJtIiwibmlkIiwibWF0Y2giLCJncm91cHMiLCJuZXdTZWxlY3RvciIsIm5ld0NvbnRleHQiLCJvd25lckRvY3VtZW50IiwiZXhlYyIsImdldEVsZW1lbnRCeUlkIiwiaWQiLCJnZXRFbGVtZW50c0J5VGFnTmFtZSIsImdldEVsZW1lbnRzQnlDbGFzc05hbWUiLCJxc2EiLCJ0ZXN0IiwidGVzdENvbnRleHQiLCJzY29wZSIsInRvU2VsZWN0b3IiLCJqb2luIiwicXVlcnlTZWxlY3RvckFsbCIsInFzYUVycm9yIiwicmVtb3ZlQXR0cmlidXRlIiwia2V5cyIsImNhY2hlIiwia2V5IiwiY2FjaGVMZW5ndGgiLCJzaGlmdCIsIm1hcmtGdW5jdGlvbiIsImFzc2VydCIsImVsIiwiYWRkSGFuZGxlIiwiYXR0cnMiLCJoYW5kbGVyIiwiYXR0ckhhbmRsZSIsInNpYmxpbmdDaGVjayIsImN1ciIsImRpZmYiLCJzb3VyY2VJbmRleCIsIm5leHRTaWJsaW5nIiwiY3JlYXRlSW5wdXRQc2V1ZG8iLCJjcmVhdGVCdXR0b25Qc2V1ZG8iLCJjcmVhdGVEaXNhYmxlZFBzZXVkbyIsImlzRGlzYWJsZWQiLCJjcmVhdGVQb3NpdGlvbmFsUHNldWRvIiwiYXJndW1lbnQiLCJtYXRjaEluZGV4ZXMiLCJuYW1lc3BhY2UiLCJuYW1lc3BhY2VVUkkiLCJkb2N1bWVudEVsZW1lbnQiLCJoYXNDb21wYXJlIiwic3ViV2luZG93IiwiZGVmYXVsdFZpZXciLCJ0b3AiLCJhZGRFdmVudExpc3RlbmVyIiwiYXR0YWNoRXZlbnQiLCJjbGFzc05hbWUiLCJjcmVhdGVDb21tZW50IiwiZ2V0QnlJZCIsImdldEVsZW1lbnRzQnlOYW1lIiwiZmlsdGVyIiwiYXR0cklkIiwiZmluZCIsImdldEF0dHJpYnV0ZU5vZGUiLCJ0YWciLCJ0bXAiLCJpbnB1dCIsImlubmVySFRNTCIsIm1hdGNoZXNTZWxlY3RvciIsIndlYmtpdE1hdGNoZXNTZWxlY3RvciIsIm1vek1hdGNoZXNTZWxlY3RvciIsIm9NYXRjaGVzU2VsZWN0b3IiLCJtc01hdGNoZXNTZWxlY3RvciIsImRpc2Nvbm5lY3RlZE1hdGNoIiwiY29tcGFyZURvY3VtZW50UG9zaXRpb24iLCJhZG93biIsImJ1cCIsImNvbXBhcmUiLCJzb3J0RGV0YWNoZWQiLCJhdXAiLCJhcCIsImJwIiwidW5zaGlmdCIsImV4cHIiLCJlbGVtZW50cyIsImF0dHIiLCJzcGVjaWZpZWQiLCJzZWwiLCJ1bmlxdWVTb3J0IiwiZHVwbGljYXRlcyIsImRldGVjdER1cGxpY2F0ZXMiLCJzb3J0U3RhYmxlIiwidGV4dENvbnRlbnQiLCJmaXJzdENoaWxkIiwibm9kZVZhbHVlIiwic2VsZWN0b3JzIiwiY3JlYXRlUHNldWRvIiwicmVsYXRpdmUiLCI+IiwiICIsIisiLCJ+IiwicHJlRmlsdGVyIiwiZXhjZXNzIiwidW5xdW90ZWQiLCJub2RlTmFtZVNlbGVjdG9yIiwicGF0dGVybiIsIm9wZXJhdG9yIiwiY2hlY2siLCJyZXN1bHQiLCJ3aGF0IiwiX2FyZ3VtZW50Iiwic2ltcGxlIiwiZm9yd2FyZCIsIm9mVHlwZSIsIl9jb250ZXh0IiwieG1sIiwidW5pcXVlQ2FjaGUiLCJvdXRlckNhY2hlIiwibm9kZUluZGV4Iiwic3RhcnQiLCJwYXJlbnQiLCJ1c2VDYWNoZSIsImxhc3RDaGlsZCIsInVuaXF1ZUlEIiwicHNldWRvIiwiYXJncyIsInNldEZpbHRlcnMiLCJpZHgiLCJtYXRjaGVkIiwibm90IiwibWF0Y2hlciIsInVubWF0Y2hlZCIsImhhcyIsImxhbmciLCJlbGVtTGFuZyIsImhhc2giLCJsb2NhdGlvbiIsInJvb3QiLCJmb2N1cyIsImFjdGl2ZUVsZW1lbnQiLCJoYXNGb2N1cyIsImhyZWYiLCJ0YWJJbmRleCIsImVuYWJsZWQiLCJjaGVja2VkIiwic2VsZWN0ZWQiLCJzZWxlY3RlZEluZGV4IiwiZW1wdHkiLCJoZWFkZXIiLCJidXR0b24iLCJfbWF0Y2hJbmRleGVzIiwibHQiLCJndCIsInJhZGlvIiwiY2hlY2tib3giLCJmaWxlIiwicGFzc3dvcmQiLCJpbWFnZSIsInN1Ym1pdCIsInJlc2V0IiwidG9rZW5zIiwiY29tYmluYXRvciIsImJhc2UiLCJza2lwIiwiY2hlY2tOb25FbGVtZW50cyIsImRvbmVOYW1lIiwib2xkQ2FjaGUiLCJuZXdDYWNoZSIsImVsZW1lbnRNYXRjaGVyIiwibWF0Y2hlcnMiLCJjb25kZW5zZSIsIm5ld1VubWF0Y2hlZCIsIm1hcHBlZCIsInNldE1hdGNoZXIiLCJwb3N0RmlsdGVyIiwicG9zdEZpbmRlciIsInBvc3RTZWxlY3RvciIsInRlbXAiLCJwcmVNYXAiLCJwb3N0TWFwIiwicHJlZXhpc3RpbmciLCJjb250ZXh0cyIsIm11bHRpcGxlQ29udGV4dHMiLCJtYXRjaGVySW4iLCJtYXRjaGVyT3V0IiwibWF0Y2hlckZyb21Ub2tlbnMiLCJjaGVja0NvbnRleHQiLCJsZWFkaW5nUmVsYXRpdmUiLCJpbXBsaWNpdFJlbGF0aXZlIiwibWF0Y2hDb250ZXh0IiwibWF0Y2hBbnlDb250ZXh0IiwibWF0Y2hlckZyb21Hcm91cE1hdGNoZXJzIiwiZWxlbWVudE1hdGNoZXJzIiwic2V0TWF0Y2hlcnMiLCJzdXBlck1hdGNoZXIiLCJvdXRlcm1vc3QiLCJtYXRjaGVkQ291bnQiLCJzZXRNYXRjaGVkIiwiY29udGV4dEJhY2t1cCIsImJ5RWxlbWVudCIsImRpcnJ1bnNVbmlxdWUiLCJieVNldCIsImZpbHRlcnMiLCJwYXJzZU9ubHkiLCJzb0ZhciIsInByZUZpbHRlcnMiLCJjYWNoZWQiLCJ0b2tlbiIsImNvbXBpbGVkIiwiX25hbWUiLCJkZWZhdWx0VmFsdWUiLCJ1bmlxdWUiLCJpc1hNTERvYyIsImVzY2FwZVNlbGVjdG9yIiwidW50aWwiLCJ0cnVuY2F0ZSIsImlzIiwic2libGluZ3MiLCJuIiwicm5lZWRzQ29udGV4dCIsInJzaW5nbGVUYWciLCJ3aW5ub3ciLCJxdWFsaWZpZXIiLCJzZWxmIiwicm9vdGpRdWVyeSIsInJlYWR5IiwicGFyc2VIVE1MIiwicnBhcmVudHNwcmV2IiwiZ3VhcmFudGVlZFVuaXF1ZSIsImNoaWxkcmVuIiwiY29udGVudHMiLCJwcmV2Iiwic2libGluZyIsInRhcmdldHMiLCJsIiwiY2xvc2VzdCIsImluZGV4IiwicHJldkFsbCIsImFkZCIsImFkZEJhY2siLCJwYXJlbnRzIiwicGFyZW50c1VudGlsIiwibmV4dEFsbCIsIm5leHRVbnRpbCIsInByZXZVbnRpbCIsImNvbnRlbnREb2N1bWVudCIsImNvbnRlbnQiLCJyZXZlcnNlIiwicm5vdGh0bWx3aGl0ZSIsIklkZW50aXR5IiwidiIsIlRocm93ZXIiLCJleCIsImFkb3B0VmFsdWUiLCJyZXNvbHZlIiwicmVqZWN0Iiwibm9WYWx1ZSIsIm1ldGhvZCIsInByb21pc2UiLCJmYWlsIiwidGhlbiIsIkNhbGxiYWNrcyIsIm9iamVjdCIsIl8iLCJmbGFnIiwiZmlyZSIsImxvY2tlZCIsIm9uY2UiLCJmaXJlZCIsImZpcmluZyIsInF1ZXVlIiwiZmlyaW5nSW5kZXgiLCJtZW1vcnkiLCJzdG9wT25GYWxzZSIsInJlbW92ZSIsImRpc2FibGUiLCJsb2NrIiwiZmlyZVdpdGgiLCJEZWZlcnJlZCIsImZ1bmMiLCJ0dXBsZXMiLCJzdGF0ZSIsImFsd2F5cyIsImRlZmVycmVkIiwiY2F0Y2giLCJwaXBlIiwiZm5zIiwibmV3RGVmZXIiLCJ0dXBsZSIsInJldHVybmVkIiwicHJvZ3Jlc3MiLCJub3RpZnkiLCJvbkZ1bGZpbGxlZCIsIm9uUmVqZWN0ZWQiLCJvblByb2dyZXNzIiwibWF4RGVwdGgiLCJkZXB0aCIsInNwZWNpYWwiLCJtaWdodFRocm93IiwidGhhdCIsIlR5cGVFcnJvciIsIm5vdGlmeVdpdGgiLCJyZXNvbHZlV2l0aCIsInByb2Nlc3MiLCJleGNlcHRpb25Ib29rIiwic3RhY2tUcmFjZSIsInJlamVjdFdpdGgiLCJnZXRTdGFja0hvb2siLCJzZXRUaW1lb3V0Iiwic3RhdGVTdHJpbmciLCJ3aGVuIiwic2luZ2xlVmFsdWUiLCJ1cGRhdGVGdW5jIiwicmVzb2x2ZUNvbnRleHRzIiwicmVzb2x2ZVZhbHVlcyIsInJlbWFpbmluZyIsIm1hc3RlciIsInJlcnJvck5hbWVzIiwic3RhY2siLCJjb25zb2xlIiwid2FybiIsIm1lc3NhZ2UiLCJyZWFkeUV4Y2VwdGlvbiIsInJlYWR5TGlzdCIsImNvbXBsZXRlZCIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJyZWFkeVdhaXQiLCJ3YWl0IiwicmVhZHlTdGF0ZSIsImRvU2Nyb2xsIiwiYWNjZXNzIiwiY2hhaW5hYmxlIiwiZW1wdHlHZXQiLCJyYXciLCJidWxrIiwiX2tleSIsInJtc1ByZWZpeCIsInJkYXNoQWxwaGEiLCJmY2FtZWxDYXNlIiwiX2FsbCIsImxldHRlciIsInRvVXBwZXJDYXNlIiwiY2FtZWxDYXNlIiwic3RyaW5nIiwiYWNjZXB0RGF0YSIsIm93bmVyIiwiRGF0YSIsInVpZCIsImRlZmluZVByb3BlcnR5IiwiY29uZmlndXJhYmxlIiwic2V0IiwiZGF0YSIsInByb3AiLCJoYXNEYXRhIiwiZGF0YVByaXYiLCJkYXRhVXNlciIsInJicmFjZSIsInJtdWx0aURhc2giLCJkYXRhQXR0ciIsIkpTT04iLCJwYXJzZSIsInJlbW92ZURhdGEiLCJfZGF0YSIsIl9yZW1vdmVEYXRhIiwiZGVxdWV1ZSIsInN0YXJ0TGVuZ3RoIiwiaG9va3MiLCJfcXVldWVIb29rcyIsInN0b3AiLCJzZXR0ZXIiLCJjbGVhclF1ZXVlIiwiY291bnQiLCJkZWZlciIsInBudW0iLCJzb3VyY2UiLCJyY3NzTnVtIiwiY3NzRXhwYW5kIiwiaXNBdHRhY2hlZCIsImNvbXBvc2VkIiwiZ2V0Um9vdE5vZGUiLCJpc0hpZGRlbldpdGhpblRyZWUiLCJzdHlsZSIsImRpc3BsYXkiLCJjc3MiLCJhZGp1c3RDU1MiLCJ2YWx1ZVBhcnRzIiwidHdlZW4iLCJhZGp1c3RlZCIsInNjYWxlIiwibWF4SXRlcmF0aW9ucyIsImN1cnJlbnRWYWx1ZSIsImluaXRpYWwiLCJ1bml0IiwiY3NzTnVtYmVyIiwiaW5pdGlhbEluVW5pdCIsImRlZmF1bHREaXNwbGF5TWFwIiwic2hvd0hpZGUiLCJzaG93IiwidmFsdWVzIiwiYm9keSIsImhpZGUiLCJ0b2dnbGUiLCJkaXYiLCJyY2hlY2thYmxlVHlwZSIsInJ0YWdOYW1lIiwicnNjcmlwdFR5cGUiLCJjcmVhdGVEb2N1bWVudEZyYWdtZW50IiwiY2hlY2tDbG9uZSIsImNsb25lTm9kZSIsIm5vQ2xvbmVDaGVja2VkIiwib3B0aW9uIiwid3JhcE1hcCIsInRoZWFkIiwiY29sIiwidHIiLCJ0ZCIsIl9kZWZhdWx0IiwiZ2V0QWxsIiwic2V0R2xvYmFsRXZhbCIsInJlZkVsZW1lbnRzIiwidGJvZHkiLCJ0Zm9vdCIsImNvbGdyb3VwIiwiY2FwdGlvbiIsInRoIiwib3B0Z3JvdXAiLCJidWlsZEZyYWdtZW50Iiwic2NyaXB0cyIsInNlbGVjdGlvbiIsImlnbm9yZWQiLCJ3cmFwIiwiYXR0YWNoZWQiLCJmcmFnbWVudCIsIm5vZGVzIiwiaHRtbFByZWZpbHRlciIsImNyZWF0ZVRleHROb2RlIiwicmtleUV2ZW50Iiwicm1vdXNlRXZlbnQiLCJydHlwZW5hbWVzcGFjZSIsInJldHVyblRydWUiLCJyZXR1cm5GYWxzZSIsImV4cGVjdFN5bmMiLCJlcnIiLCJzYWZlQWN0aXZlRWxlbWVudCIsIm9uIiwidHlwZXMiLCJvbmUiLCJvcmlnRm4iLCJldmVudCIsIm9mZiIsImxldmVyYWdlTmF0aXZlIiwibm90QXN5bmMiLCJzYXZlZCIsImlzVHJpZ2dlciIsImRlbGVnYXRlVHlwZSIsInN0b3BQcm9wYWdhdGlvbiIsInN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbiIsInByZXZlbnREZWZhdWx0IiwidHJpZ2dlciIsIkV2ZW50IiwiaGFuZGxlT2JqSW4iLCJldmVudEhhbmRsZSIsImV2ZW50cyIsInQiLCJoYW5kbGVPYmoiLCJoYW5kbGVycyIsIm5hbWVzcGFjZXMiLCJvcmlnVHlwZSIsImVsZW1EYXRhIiwiY3JlYXRlIiwiaGFuZGxlIiwidHJpZ2dlcmVkIiwiZGlzcGF0Y2giLCJiaW5kVHlwZSIsImRlbGVnYXRlQ291bnQiLCJzZXR1cCIsIm1hcHBlZFR5cGVzIiwib3JpZ0NvdW50IiwidGVhcmRvd24iLCJyZW1vdmVFdmVudCIsIm5hdGl2ZUV2ZW50IiwiaGFuZGxlclF1ZXVlIiwiZml4IiwiZGVsZWdhdGVUYXJnZXQiLCJwcmVEaXNwYXRjaCIsImlzUHJvcGFnYXRpb25TdG9wcGVkIiwiY3VycmVudFRhcmdldCIsImlzSW1tZWRpYXRlUHJvcGFnYXRpb25TdG9wcGVkIiwicm5hbWVzcGFjZSIsInBvc3REaXNwYXRjaCIsIm1hdGNoZWRIYW5kbGVycyIsIm1hdGNoZWRTZWxlY3RvcnMiLCJhZGRQcm9wIiwiaG9vayIsImVudW1lcmFibGUiLCJvcmlnaW5hbEV2ZW50Iiwid3JpdGFibGUiLCJsb2FkIiwibm9CdWJibGUiLCJjbGljayIsImJlZm9yZXVubG9hZCIsInJldHVyblZhbHVlIiwicHJvcHMiLCJpc0RlZmF1bHRQcmV2ZW50ZWQiLCJkZWZhdWx0UHJldmVudGVkIiwicmVsYXRlZFRhcmdldCIsInRpbWVTdGFtcCIsIm5vdyIsImlzU2ltdWxhdGVkIiwiYWx0S2V5IiwiYnViYmxlcyIsImNhbmNlbGFibGUiLCJjaGFuZ2VkVG91Y2hlcyIsImN0cmxLZXkiLCJkZXRhaWwiLCJldmVudFBoYXNlIiwibWV0YUtleSIsInBhZ2VYIiwicGFnZVkiLCJzaGlmdEtleSIsInZpZXciLCJjaGFyIiwiY2hhckNvZGUiLCJrZXlDb2RlIiwiYnV0dG9ucyIsImNsaWVudFgiLCJjbGllbnRZIiwib2Zmc2V0WCIsIm9mZnNldFkiLCJwb2ludGVySWQiLCJwb2ludGVyVHlwZSIsInNjcmVlblgiLCJzY3JlZW5ZIiwidGFyZ2V0VG91Y2hlcyIsInRvRWxlbWVudCIsInRvdWNoZXMiLCJ3aGljaCIsImJsdXIiLCJtb3VzZWVudGVyIiwibW91c2VsZWF2ZSIsInBvaW50ZXJlbnRlciIsInBvaW50ZXJsZWF2ZSIsIm9yaWciLCJyZWxhdGVkIiwicm5vSW5uZXJodG1sIiwicmNoZWNrZWQiLCJyY2xlYW5TY3JpcHQiLCJtYW5pcHVsYXRpb25UYXJnZXQiLCJkaXNhYmxlU2NyaXB0IiwicmVzdG9yZVNjcmlwdCIsImNsb25lQ29weUV2ZW50IiwiZGVzdCIsInVkYXRhT2xkIiwidWRhdGFDdXIiLCJkb21NYW5pcCIsImNvbGxlY3Rpb24iLCJoYXNTY3JpcHRzIiwiaU5vQ2xvbmUiLCJ2YWx1ZUlzRnVuY3Rpb24iLCJodG1sIiwiX2V2YWxVcmwiLCJrZWVwRGF0YSIsImNsZWFuRGF0YSIsImRhdGFBbmRFdmVudHMiLCJkZWVwRGF0YUFuZEV2ZW50cyIsInNyY0VsZW1lbnRzIiwiZGVzdEVsZW1lbnRzIiwiaW5QYWdlIiwiZGV0YWNoIiwiYXBwZW5kIiwicHJlcGVuZCIsImluc2VydEJlZm9yZSIsImJlZm9yZSIsImFmdGVyIiwicmVwbGFjZVdpdGgiLCJyZXBsYWNlQ2hpbGQiLCJhcHBlbmRUbyIsInByZXBlbmRUbyIsImluc2VydEFmdGVyIiwicmVwbGFjZUFsbCIsIm9yaWdpbmFsIiwiaW5zZXJ0Iiwic3dhcCIsIm9sZCIsInBpeGVsUG9zaXRpb25WYWwiLCJib3hTaXppbmdSZWxpYWJsZVZhbCIsInNjcm9sbGJveFNpemVWYWwiLCJwaXhlbEJveFN0eWxlc1ZhbCIsInJlbGlhYmxlVHJEaW1lbnNpb25zVmFsIiwicmVsaWFibGVNYXJnaW5MZWZ0VmFsIiwiY29udGFpbmVyIiwicm51bW5vbnB4IiwiZ2V0U3R5bGVzIiwib3BlbmVyIiwiZ2V0Q29tcHV0ZWRTdHlsZSIsInJib3hTdHlsZSIsImNvbXB1dGVTdHlsZVRlc3RzIiwiY3NzVGV4dCIsImRpdlN0eWxlIiwicm91bmRQaXhlbE1lYXN1cmVzIiwibWFyZ2luTGVmdCIsInJpZ2h0Iiwid2lkdGgiLCJwb3NpdGlvbiIsIm9mZnNldFdpZHRoIiwibWVhc3VyZSIsInJvdW5kIiwicGFyc2VGbG9hdCIsImN1ckNTUyIsImNvbXB1dGVkIiwibWluV2lkdGgiLCJtYXhXaWR0aCIsImdldFByb3BlcnR5VmFsdWUiLCJwaXhlbEJveFN0eWxlcyIsImFkZEdldEhvb2tJZiIsImNvbmRpdGlvbkZuIiwiaG9va0ZuIiwiYmFja2dyb3VuZENsaXAiLCJjbGVhckNsb25lU3R5bGUiLCJib3hTaXppbmdSZWxpYWJsZSIsInBpeGVsUG9zaXRpb24iLCJyZWxpYWJsZU1hcmdpbkxlZnQiLCJzY3JvbGxib3hTaXplIiwicmVsaWFibGVUckRpbWVuc2lvbnMiLCJ0YWJsZSIsInRyQ2hpbGQiLCJ0clN0eWxlIiwiaGVpZ2h0IiwicGFyc2VJbnQiLCJjc3NQcmVmaXhlcyIsImVtcHR5U3R5bGUiLCJ2ZW5kb3JQcm9wcyIsImZpbmFsUHJvcE5hbWUiLCJmaW5hbCIsImNzc1Byb3BzIiwiY2FwTmFtZSIsInZlbmRvclByb3BOYW1lIiwicmRpc3BsYXlzd2FwIiwicmN1c3RvbVByb3AiLCJjc3NTaG93IiwidmlzaWJpbGl0eSIsImNzc05vcm1hbFRyYW5zZm9ybSIsImxldHRlclNwYWNpbmciLCJmb250V2VpZ2h0Iiwic2V0UG9zaXRpdmVOdW1iZXIiLCJzdWJ0cmFjdCIsIm1heCIsImJveE1vZGVsQWRqdXN0bWVudCIsImRpbWVuc2lvbiIsImJveCIsImlzQm9yZGVyQm94Iiwic3R5bGVzIiwiY29tcHV0ZWRWYWwiLCJleHRyYSIsImRlbHRhIiwiY2VpbCIsImdldFdpZHRoT3JIZWlnaHQiLCJ2YWx1ZUlzQm9yZGVyQm94Iiwib2Zmc2V0UHJvcCIsImdldENsaWVudFJlY3RzIiwiVHdlZW4iLCJlYXNpbmciLCJjc3NIb29rcyIsIm9wYWNpdHkiLCJhbmltYXRpb25JdGVyYXRpb25Db3VudCIsImNvbHVtbkNvdW50IiwiZmlsbE9wYWNpdHkiLCJmbGV4R3JvdyIsImZsZXhTaHJpbmsiLCJncmlkQXJlYSIsImdyaWRDb2x1bW4iLCJncmlkQ29sdW1uRW5kIiwiZ3JpZENvbHVtblN0YXJ0IiwiZ3JpZFJvdyIsImdyaWRSb3dFbmQiLCJncmlkUm93U3RhcnQiLCJsaW5lSGVpZ2h0Iiwib3JkZXIiLCJvcnBoYW5zIiwid2lkb3dzIiwiekluZGV4Iiwiem9vbSIsIm9yaWdOYW1lIiwiaXNDdXN0b21Qcm9wIiwic2V0UHJvcGVydHkiLCJpc0Zpbml0ZSIsImdldEJvdW5kaW5nQ2xpZW50UmVjdCIsInNjcm9sbGJveFNpemVCdWdneSIsImxlZnQiLCJtYXJnaW4iLCJwYWRkaW5nIiwiYm9yZGVyIiwicHJlZml4Iiwic3VmZml4IiwiZXhwYW5kIiwiZXhwYW5kZWQiLCJwYXJ0cyIsInByb3BIb29rcyIsInJ1biIsInBlcmNlbnQiLCJlYXNlZCIsImR1cmF0aW9uIiwicG9zIiwic3RlcCIsImZ4Iiwic2Nyb2xsVG9wIiwic2Nyb2xsTGVmdCIsImxpbmVhciIsInAiLCJzd2luZyIsImNvcyIsIlBJIiwiZnhOb3ciLCJpblByb2dyZXNzIiwib3B0IiwicmZ4dHlwZXMiLCJycnVuIiwic2NoZWR1bGUiLCJoaWRkZW4iLCJyZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJpbnRlcnZhbCIsInRpY2siLCJjcmVhdGVGeE5vdyIsImdlbkZ4IiwiaW5jbHVkZVdpZHRoIiwiY3JlYXRlVHdlZW4iLCJhbmltYXRpb24iLCJBbmltYXRpb24iLCJ0d2VlbmVycyIsInByb3BlcnRpZXMiLCJzdG9wcGVkIiwicHJlZmlsdGVycyIsImN1cnJlbnRUaW1lIiwic3RhcnRUaW1lIiwidHdlZW5zIiwib3B0cyIsInNwZWNpYWxFYXNpbmciLCJvcmlnaW5hbFByb3BlcnRpZXMiLCJvcmlnaW5hbE9wdGlvbnMiLCJnb3RvRW5kIiwicHJvcEZpbHRlciIsImJpbmQiLCJjb21wbGV0ZSIsInRpbWVyIiwiYW5pbSIsIioiLCJ0d2VlbmVyIiwib2xkZmlyZSIsInByb3BUd2VlbiIsInJlc3RvcmVEaXNwbGF5IiwiaXNCb3giLCJkYXRhU2hvdyIsInVucXVldWVkIiwib3ZlcmZsb3ciLCJvdmVyZmxvd1giLCJvdmVyZmxvd1kiLCJwcmVmaWx0ZXIiLCJzcGVlZCIsInNwZWVkcyIsImZhZGVUbyIsInRvIiwiYW5pbWF0ZSIsImRvQW5pbWF0aW9uIiwib3B0YWxsIiwiZmluaXNoIiwic3RvcFF1ZXVlIiwidGltZXJzIiwiY3NzRm4iLCJzbGlkZURvd24iLCJzbGlkZVVwIiwic2xpZGVUb2dnbGUiLCJmYWRlSW4iLCJmYWRlT3V0IiwiZmFkZVRvZ2dsZSIsInNsb3ciLCJmYXN0IiwiZGVsYXkiLCJ0aW1lIiwidGltZW91dCIsImNsZWFyVGltZW91dCIsImNoZWNrT24iLCJvcHRTZWxlY3RlZCIsInJhZGlvVmFsdWUiLCJib29sSG9vayIsInJlbW92ZUF0dHIiLCJuVHlwZSIsImF0dHJIb29rcyIsImF0dHJOYW1lcyIsImdldHRlciIsImxvd2VyY2FzZU5hbWUiLCJyZm9jdXNhYmxlIiwicmNsaWNrYWJsZSIsInN0cmlwQW5kQ29sbGFwc2UiLCJnZXRDbGFzcyIsImNsYXNzZXNUb0FycmF5IiwicmVtb3ZlUHJvcCIsInByb3BGaXgiLCJ0YWJpbmRleCIsImZvciIsImNsYXNzIiwiYWRkQ2xhc3MiLCJjbGFzc2VzIiwiY3VyVmFsdWUiLCJjbGF6eiIsImZpbmFsVmFsdWUiLCJyZW1vdmVDbGFzcyIsInRvZ2dsZUNsYXNzIiwic3RhdGVWYWwiLCJpc1ZhbGlkVmFsdWUiLCJjbGFzc05hbWVzIiwiaGFzQ2xhc3MiLCJycmV0dXJuIiwidmFsSG9va3MiLCJvcHRpb25TZXQiLCJmb2N1c2luIiwic3RvcFByb3BhZ2F0aW9uQ2FsbGJhY2siLCJyZm9jdXNNb3JwaCIsIm9ubHlIYW5kbGVycyIsImJ1YmJsZVR5cGUiLCJvbnR5cGUiLCJsYXN0RWxlbWVudCIsImV2ZW50UGF0aCIsInBhcmVudFdpbmRvdyIsInNpbXVsYXRlIiwidHJpZ2dlckhhbmRsZXIiLCJhdHRhY2hlcyIsInJxdWVyeSIsInBhcnNlWE1MIiwiRE9NUGFyc2VyIiwicGFyc2VGcm9tU3RyaW5nIiwicmJyYWNrZXQiLCJyQ1JMRiIsInJzdWJtaXR0ZXJUeXBlcyIsInJzdWJtaXR0YWJsZSIsImJ1aWxkUGFyYW1zIiwidHJhZGl0aW9uYWwiLCJwYXJhbSIsInZhbHVlT3JGdW5jdGlvbiIsInMiLCJlbmNvZGVVUklDb21wb25lbnQiLCJzZXJpYWxpemUiLCJzZXJpYWxpemVBcnJheSIsInIyMCIsInJoYXNoIiwicmFudGlDYWNoZSIsInJoZWFkZXJzIiwicm5vQ29udGVudCIsInJwcm90b2NvbCIsInRyYW5zcG9ydHMiLCJhbGxUeXBlcyIsIm9yaWdpbkFuY2hvciIsImFkZFRvUHJlZmlsdGVyc09yVHJhbnNwb3J0cyIsInN0cnVjdHVyZSIsImRhdGFUeXBlRXhwcmVzc2lvbiIsImRhdGFUeXBlIiwiZGF0YVR5cGVzIiwiaW5zcGVjdFByZWZpbHRlcnNPclRyYW5zcG9ydHMiLCJqcVhIUiIsImluc3BlY3RlZCIsInNlZWtpbmdUcmFuc3BvcnQiLCJpbnNwZWN0IiwicHJlZmlsdGVyT3JGYWN0b3J5IiwiZGF0YVR5cGVPclRyYW5zcG9ydCIsImFqYXhFeHRlbmQiLCJmbGF0T3B0aW9ucyIsImFqYXhTZXR0aW5ncyIsImFjdGl2ZSIsImxhc3RNb2RpZmllZCIsImV0YWciLCJ1cmwiLCJpc0xvY2FsIiwicHJvdG9jb2wiLCJwcm9jZXNzRGF0YSIsImFzeW5jIiwiY29udGVudFR5cGUiLCJhY2NlcHRzIiwianNvbiIsInJlc3BvbnNlRmllbGRzIiwiY29udmVydGVycyIsIiogdGV4dCIsInRleHQgaHRtbCIsInRleHQganNvbiIsInRleHQgeG1sIiwiYWpheFNldHVwIiwic2V0dGluZ3MiLCJhamF4UHJlZmlsdGVyIiwiYWpheFRyYW5zcG9ydCIsImFqYXgiLCJ0cmFuc3BvcnQiLCJjYWNoZVVSTCIsInJlc3BvbnNlSGVhZGVyc1N0cmluZyIsInJlc3BvbnNlSGVhZGVycyIsInRpbWVvdXRUaW1lciIsInVybEFuY2hvciIsImZpcmVHbG9iYWxzIiwidW5jYWNoZWQiLCJjYWxsYmFja0NvbnRleHQiLCJnbG9iYWxFdmVudENvbnRleHQiLCJjb21wbGV0ZURlZmVycmVkIiwic3RhdHVzQ29kZSIsInJlcXVlc3RIZWFkZXJzIiwicmVxdWVzdEhlYWRlcnNOYW1lcyIsInN0ckFib3J0IiwiZ2V0UmVzcG9uc2VIZWFkZXIiLCJnZXRBbGxSZXNwb25zZUhlYWRlcnMiLCJzZXRSZXF1ZXN0SGVhZGVyIiwib3ZlcnJpZGVNaW1lVHlwZSIsIm1pbWVUeXBlIiwic3RhdHVzIiwiYWJvcnQiLCJzdGF0dXNUZXh0IiwiZmluYWxUZXh0IiwiY3Jvc3NEb21haW4iLCJob3N0IiwiaGFzQ29udGVudCIsImlmTW9kaWZpZWQiLCJoZWFkZXJzIiwiYmVmb3JlU2VuZCIsInN1Y2Nlc3MiLCJzZW5kIiwibmF0aXZlU3RhdHVzVGV4dCIsInJlc3BvbnNlcyIsImlzU3VjY2VzcyIsInJlc3BvbnNlIiwibW9kaWZpZWQiLCJjdCIsImZpbmFsRGF0YVR5cGUiLCJmaXJzdERhdGFUeXBlIiwiYWpheEhhbmRsZVJlc3BvbnNlcyIsImNvbnYyIiwiY3VycmVudCIsImNvbnYiLCJkYXRhRmlsdGVyIiwidGhyb3dzIiwiYWpheENvbnZlcnQiLCJnZXRKU09OIiwiZ2V0U2NyaXB0IiwidGV4dCBzY3JpcHQiLCJ3cmFwQWxsIiwiZmlyc3RFbGVtZW50Q2hpbGQiLCJ3cmFwSW5uZXIiLCJodG1sSXNGdW5jdGlvbiIsInVud3JhcCIsInZpc2libGUiLCJvZmZzZXRIZWlnaHQiLCJ4aHIiLCJYTUxIdHRwUmVxdWVzdCIsInhoclN1Y2Nlc3NTdGF0dXMiLCIwIiwiMTIyMyIsInhoclN1cHBvcnRlZCIsImNvcnMiLCJlcnJvckNhbGxiYWNrIiwib3BlbiIsInVzZXJuYW1lIiwieGhyRmllbGRzIiwib25sb2FkIiwib25lcnJvciIsIm9uYWJvcnQiLCJvbnRpbWVvdXQiLCJvbnJlYWR5c3RhdGVjaGFuZ2UiLCJyZXNwb25zZVR5cGUiLCJyZXNwb25zZVRleHQiLCJiaW5hcnkiLCJzY3JpcHRBdHRycyIsImNoYXJzZXQiLCJzY3JpcHRDaGFyc2V0IiwiZXZ0Iiwib2xkQ2FsbGJhY2tzIiwicmpzb25wIiwianNvbnAiLCJqc29ucENhbGxiYWNrIiwib3JpZ2luYWxTZXR0aW5ncyIsImNhbGxiYWNrTmFtZSIsIm92ZXJ3cml0dGVuIiwicmVzcG9uc2VDb250YWluZXIiLCJqc29uUHJvcCIsImNyZWF0ZUhUTUxEb2N1bWVudCIsImltcGxlbWVudGF0aW9uIiwia2VlcFNjcmlwdHMiLCJwYXJzZWQiLCJwYXJhbXMiLCJhbmltYXRlZCIsIm9mZnNldCIsInNldE9mZnNldCIsImN1clBvc2l0aW9uIiwiY3VyTGVmdCIsImN1ckNTU1RvcCIsImN1clRvcCIsImN1ck9mZnNldCIsImN1ckNTU0xlZnQiLCJjdXJFbGVtIiwidXNpbmciLCJyZWN0Iiwid2luIiwicGFnZVlPZmZzZXQiLCJwYWdlWE9mZnNldCIsIm9mZnNldFBhcmVudCIsInBhcmVudE9mZnNldCIsInNjcm9sbFRvIiwiSGVpZ2h0IiwiV2lkdGgiLCIiLCJkZWZhdWx0RXh0cmEiLCJmdW5jTmFtZSIsInVuYmluZCIsImRlbGVnYXRlIiwidW5kZWxlZ2F0ZSIsImhvdmVyIiwiZm5PdmVyIiwiZm5PdXQiLCJwcm94eSIsImhvbGRSZWFkeSIsImhvbGQiLCJwYXJzZUpTT04iLCJpc051bWVyaWMiLCJpc05hTiIsInRyaW0iLCJkZWZpbmUiLCJhbWQiLCJfalF1ZXJ5IiwiXyQiLCIkIiwibm9Db25mbGljdCIsIlN3aXBlciIsImlzT2JqZWN0IiwiZm9yRWFjaCIsInNzckRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsImNyZWF0ZUV2ZW50IiwiaW5pdEV2ZW50IiwiY3JlYXRlRWxlbWVudE5TIiwiaW1wb3J0Tm9kZSIsImhvc3RuYW1lIiwib3JpZ2luIiwicGF0aG5hbWUiLCJzZWFyY2giLCJuYXZpZ2F0b3IiLCJ1c2VyQWdlbnQiLCJoaXN0b3J5IiwicmVwbGFjZVN0YXRlIiwicHVzaFN0YXRlIiwiZ28iLCJiYWNrIiwiQ3VzdG9tRXZlbnQiLCJJbWFnZSIsInNjcmVlbiIsIm1hdGNoTWVkaWEiLCJEb203IiwidGVtcFBhcmVudCIsInRvQ3JlYXRlIiwidW5pcXVlQXJyYXkiLCJDbGFzcyIsIk1ldGhvZHMiLCJjbGFzc0xpc3QiLCJhcmd1bWVudHMkMSIsImF0dHJOYW1lIiwiZG9tN0VsZW1lbnREYXRhU3RvcmFnZSIsImRhdGFLZXkiLCJ0cmFuc2Zvcm0iLCJlbFN0eWxlIiwid2Via2l0VHJhbnNmb3JtIiwidHJhbnNpdGlvbiIsIndlYmtpdFRyYW5zaXRpb25EdXJhdGlvbiIsInRyYW5zaXRpb25EdXJhdGlvbiIsImV2ZW50VHlwZSIsInRhcmdldFNlbGVjdG9yIiwibGlzdGVuZXIiLCJjYXB0dXJlIiwiaGFuZGxlTGl2ZUV2ZW50IiwiZXZlbnREYXRhIiwiZG9tN0V2ZW50RGF0YSIsImsiLCJoYW5kbGVFdmVudCIsImV2ZW50JDEiLCJkb203TGl2ZUxpc3RlbmVycyIsInByb3h5TGlzdGVuZXIiLCJkb203TGlzdGVuZXJzIiwiZG9tN3Byb3h5IiwiZGF0YUluZGV4IiwiZGlzcGF0Y2hFdmVudCIsInRyYW5zaXRpb25FbmQiLCJkb20iLCJmaXJlQ2FsbEJhY2siLCJvdXRlcldpZHRoIiwiaW5jbHVkZU1hcmdpbnMiLCJvdXRlckhlaWdodCIsImNsaWVudFRvcCIsImNsaWVudExlZnQiLCJzY3JvbGxZIiwic2Nyb2xsWCIsImNvbXBhcmVXaXRoIiwiY2hpbGQiLCJwcmV2aW91c1NpYmxpbmciLCJyZXR1cm5JbmRleCIsIm5ld0NoaWxkIiwidGVtcERpdiIsIm5leHRFbGVtZW50U2libGluZyIsIm5leHRFbHMiLCJwcmV2aW91c0VsZW1lbnRTaWJsaW5nIiwicHJldkVscyIsImZvdW5kRWxlbWVudHMiLCJmb3VuZCIsIm1hdGNoZWRJdGVtcyIsInRvQWRkIiwibWV0aG9kTmFtZSIsIlN3aXBlckNsYXNzIiwiZXZlbnRzTGlzdGVuZXJzIiwiZXZlbnROYW1lIiwiVXRpbHMiLCJkZWxldGVQcm9wcyIsIm5leHRUaWNrIiwiZ2V0VHJhbnNsYXRlIiwiYXhpcyIsIm1hdHJpeCIsImN1clRyYW5zZm9ybSIsInRyYW5zZm9ybU1hdHJpeCIsImN1clN0eWxlIiwiV2ViS2l0Q1NTTWF0cml4IiwiTW96VHJhbnNmb3JtIiwiT1RyYW5zZm9ybSIsIk1zVHJhbnNmb3JtIiwibXNUcmFuc2Zvcm0iLCJtNDEiLCJtNDIiLCJwYXJzZVVybFF1ZXJ5IiwicXVlcnkiLCJ1cmxUb1BhcnNlIiwicGFyYW1zUGFydCIsImRlY29kZVVSSUNvbXBvbmVudCIsIm8iLCJsZW4kMSIsIm5leHRTb3VyY2UiLCJrZXlzQXJyYXkiLCJuZXh0SW5kZXgiLCJuZXh0S2V5IiwiZGVzYyIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsIlN1cHBvcnQiLCJ0b3VjaCIsIkRvY3VtZW50VG91Y2giLCJwb2ludGVyRXZlbnRzIiwiUG9pbnRlckV2ZW50IiwibWF4VG91Y2hQb2ludHMiLCJvYnNlcnZlciIsInBhc3NpdmVMaXN0ZW5lciIsInN1cHBvcnRzUGFzc2l2ZSIsImdlc3R1cmVzIiwic3RhdGljQWNjZXNzb3JzIiwiY29tcG9uZW50cyIsInByaW9yaXR5Iiwib25jZUhhbmRsZXIiLCJmN3Byb3h5IiwiZXZlbnRIYW5kbGVyIiwiZW1pdCIsInVzZU1vZHVsZXNQYXJhbXMiLCJpbnN0YW5jZVBhcmFtcyIsImluc3RhbmNlIiwibW9kdWxlcyIsIm1vZHVsZU5hbWUiLCJ1c2VNb2R1bGVzIiwibW9kdWxlc1BhcmFtcyIsIm1vZHVsZVBhcmFtcyIsIm1vZHVsZVByb3BOYW1lIiwibW9kdWxlUHJvcCIsIm1vZHVsZUV2ZW50TmFtZSIsInVzZSIsImluc3RhbGxNb2R1bGUiLCJzdGF0aWMiLCJpbnN0YWxsIiwiZGVmaW5lUHJvcGVydGllcyIsInBsYXRmb3JtIiwidWEiLCJkZXZpY2UiLCJzY3JlZW5XaWR0aCIsInNjcmVlbkhlaWdodCIsImFuZHJvaWQiLCJpcGFkIiwiaXBvZCIsImlwaG9uZSIsImllIiwiZWRnZSIsImZpcmVmb3giLCJ3aW5kb3dzIiwiZWxlY3Ryb24iLCJtYWNvcyIsInVwZGF0ZSIsInVwZGF0ZVNpemUiLCIkZWwiLCJjbGllbnRXaWR0aCIsImNsaWVudEhlaWdodCIsImlzSG9yaXpvbnRhbCIsImlzVmVydGljYWwiLCJzaXplIiwidXBkYXRlU2xpZGVzIiwiJHdyYXBwZXJFbCIsInN3aXBlclNpemUiLCJydGwiLCJydGxUcmFuc2xhdGUiLCJ3cm9uZ1JUTCIsImlzVmlydHVhbCIsInZpcnR1YWwiLCJwcmV2aW91c1NsaWRlc0xlbmd0aCIsInNsaWRlcyIsInNsaWRlQ2xhc3MiLCJzbGlkZXNMZW5ndGgiLCJzbmFwR3JpZCIsInNsaWRlc0dyaWQiLCJzbGlkZXNTaXplc0dyaWQiLCJzbGlkZXNGb3JNYXJnaW4iLCJzbGlkZUluZGV4IiwiY3NzTW9kZSIsIm9mZnNldEJlZm9yZSIsInNsaWRlc09mZnNldEJlZm9yZSIsIm9mZnNldEFmdGVyIiwic2xpZGVzT2Zmc2V0QWZ0ZXIiLCJwcmV2aW91c1NuYXBHcmlkTGVuZ3RoIiwicHJldmlvdXNTbGlkZXNHcmlkTGVuZ3RoIiwic3BhY2VCZXR3ZWVuIiwic2xpZGVQb3NpdGlvbiIsInByZXZTbGlkZVNpemUiLCJzbGlkZXNOdW1iZXJFdmVuVG9Sb3dzIiwic2xpZGVTaXplIiwidmlydHVhbFNpemUiLCJtYXJnaW5Ub3AiLCJtYXJnaW5SaWdodCIsIm1hcmdpbkJvdHRvbSIsInNsaWRlc1BlckNvbHVtbiIsImZsb29yIiwic2xpZGVzUGVyVmlldyIsInNsaWRlc1BlckNvbHVtbkZpbGwiLCJuZXdTbGlkZXNHcmlkIiwic2xpZGVzUGVyUm93IiwibnVtRnVsbENvbHVtbnMiLCJzbGlkZSIsIm5ld1NsaWRlT3JkZXJJbmRleCIsImNvbHVtbiIsInJvdyIsInNsaWRlc1Blckdyb3VwIiwiZ3JvdXBJbmRleCIsInNsaWRlSW5kZXhJbkdyb3VwIiwiY29sdW1uc0luR3JvdXAiLCJtaW4iLCItd2Via2l0LWJveC1vcmRpbmFsLWdyb3VwIiwiLW1vei1ib3gtb3JkaW5hbC1ncm91cCIsIi1tcy1mbGV4LW9yZGVyIiwiLXdlYmtpdC1vcmRlciIsInNsaWRlU3R5bGVzIiwiY3VycmVudFRyYW5zZm9ybSIsImN1cnJlbnRXZWJLaXRUcmFuc2Zvcm0iLCJyb3VuZExlbmd0aHMiLCJwYWRkaW5nTGVmdCIsInBhZGRpbmdSaWdodCIsImJveFNpemluZyIsInBhZGRpbmdUb3AiLCJwYWRkaW5nQm90dG9tIiwiYm94U2l6aW5nJDEiLCJzd2lwZXJTbGlkZVNpemUiLCJjZW50ZXJlZFNsaWRlcyIsImFicyIsIkUiLCJzbGlkZXNQZXJHcm91cFNraXAiLCJlZmZlY3QiLCJzZXRXcmFwcGVyU2l6ZSIsImkkMSIsInNsaWRlc0dyaWRJdGVtIiwiaSQyIiwic2xpZGVzR3JpZEl0ZW0kMSIsImNlbnRlcmVkU2xpZGVzQm91bmRzIiwiYWxsU2xpZGVzU2l6ZSIsInNsaWRlU2l6ZVZhbHVlIiwibWF4U25hcCIsInNuYXAiLCJjZW50ZXJJbnN1ZmZpY2llbnRTbGlkZXMiLCJhbGxTbGlkZXNTaXplJDEiLCJhbGxTbGlkZXNPZmZzZXQiLCJzbmFwSW5kZXgiLCJ3YXRjaE92ZXJmbG93IiwiY2hlY2tPdmVyZmxvdyIsIndhdGNoU2xpZGVzUHJvZ3Jlc3MiLCJ3YXRjaFNsaWRlc1Zpc2liaWxpdHkiLCJ1cGRhdGVTbGlkZXNPZmZzZXQiLCJ1cGRhdGVBdXRvSGVpZ2h0IiwiYWN0aXZlU2xpZGVzIiwibmV3SGVpZ2h0Iiwic2V0VHJhbnNpdGlvbiIsInZpc2libGVTbGlkZXMiLCJhY3RpdmVJbmRleCIsInN3aXBlclNsaWRlT2Zmc2V0Iiwib2Zmc2V0TGVmdCIsIm9mZnNldFRvcCIsInVwZGF0ZVNsaWRlc1Byb2dyZXNzIiwidHJhbnNsYXRlIiwib2Zmc2V0Q2VudGVyIiwic2xpZGVWaXNpYmxlQ2xhc3MiLCJ2aXNpYmxlU2xpZGVzSW5kZXhlcyIsInNsaWRlUHJvZ3Jlc3MiLCJtaW5UcmFuc2xhdGUiLCJhdXRvSGVpZ2h0Iiwic2xpZGVCZWZvcmUiLCJzbGlkZUFmdGVyIiwidXBkYXRlUHJvZ3Jlc3MiLCJtdWx0aXBsaWVyIiwidHJhbnNsYXRlc0RpZmYiLCJtYXhUcmFuc2xhdGUiLCJpc0JlZ2lubmluZyIsImlzRW5kIiwid2FzQmVnaW5uaW5nIiwid2FzRW5kIiwidXBkYXRlU2xpZGVzQ2xhc3NlcyIsImFjdGl2ZVNsaWRlIiwicmVhbEluZGV4Iiwic2xpZGVBY3RpdmVDbGFzcyIsInNsaWRlTmV4dENsYXNzIiwic2xpZGVQcmV2Q2xhc3MiLCJzbGlkZUR1cGxpY2F0ZUFjdGl2ZUNsYXNzIiwic2xpZGVEdXBsaWNhdGVOZXh0Q2xhc3MiLCJzbGlkZUR1cGxpY2F0ZVByZXZDbGFzcyIsImxvb3AiLCJzbGlkZUR1cGxpY2F0ZUNsYXNzIiwibmV4dFNsaWRlIiwicHJldlNsaWRlIiwidXBkYXRlQWN0aXZlSW5kZXgiLCJuZXdBY3RpdmVJbmRleCIsInByZXZpb3VzSW5kZXgiLCJwcmV2aW91c1JlYWxJbmRleCIsInByZXZpb3VzU25hcEluZGV4Iiwibm9ybWFsaXplU2xpZGVJbmRleCIsImluaXRpYWxpemVkIiwicnVuQ2FsbGJhY2tzT25Jbml0IiwidXBkYXRlQ2xpY2tlZFNsaWRlIiwic2xpZGVGb3VuZCIsImNsaWNrZWRTbGlkZSIsImNsaWNrZWRJbmRleCIsInNsaWRlVG9DbGlja2VkU2xpZGUiLCJ2aXJ0dWFsVHJhbnNsYXRlIiwiY3VycmVudFRyYW5zbGF0ZSIsInNldFRyYW5zbGF0ZSIsImJ5Q29udHJvbGxlciIsIndyYXBwZXJFbCIsIngiLCJ5IiwicHJldmlvdXNUcmFuc2xhdGUiLCJkIiwidHJhbnNsYXRlVG8iLCJydW5DYWxsYmFja3MiLCJ0cmFuc2xhdGVCb3VuZHMiLCJpbnRlcm5hbCIsInN3aXBlciIsImFuaW1hdGluZyIsInByZXZlbnRJbnRlcmFjdGlvbk9uVHJhbnNpdGlvbiIsIm5ld1RyYW5zbGF0ZSIsImlzSCIsImJlaGF2aW9yIiwib25UcmFuc2xhdGVUb1dyYXBwZXJUcmFuc2l0aW9uRW5kIiwiZGVzdHJveWVkIiwic2xpZGVUbyIsImluaXRpYWxTbGlkZSIsImRpcmVjdGlvbiIsImFsbG93U2xpZGVOZXh0IiwiYWxsb3dTbGlkZVByZXYiLCJ0cmFuc2l0aW9uU3RhcnQiLCJzY3JvbGxXaWR0aCIsIm9uU2xpZGVUb1dyYXBwZXJUcmFuc2l0aW9uRW5kIiwic2xpZGVUb0xvb3AiLCJuZXdJbmRleCIsImxvb3BlZFNsaWRlcyIsInNsaWRlTmV4dCIsImluY3JlbWVudCIsImxvb3BGaXgiLCJfY2xpZW50TGVmdCIsInNsaWRlUHJldiIsIm5vcm1hbGl6ZSIsInByZXZJbmRleCIsIm5vcm1hbGl6ZWRUcmFuc2xhdGUiLCJub3JtYWxpemVkU25hcEdyaWQiLCJwcmV2U25hcCIsInNsaWRlUmVzZXQiLCJzbGlkZVRvQ2xvc2VzdCIsInRocmVzaG9sZCIsImN1cnJlbnRTbmFwIiwic2xpZGVzUGVyVmlld0R5bmFtaWMiLCJzbGlkZVRvSW5kZXgiLCJsb29wQ3JlYXRlIiwibG9vcEZpbGxHcm91cFdpdGhCbGFuayIsImJsYW5rU2xpZGVzTnVtIiwiYmxhbmtOb2RlIiwic2xpZGVCbGFua0NsYXNzIiwibG9vcEFkZGl0aW9uYWxTbGlkZXMiLCJwcmVwZW5kU2xpZGVzIiwiYXBwZW5kU2xpZGVzIiwibG9vcERlc3Ryb3kiLCJncmFiQ3Vyc29yIiwic2V0R3JhYkN1cnNvciIsIm1vdmluZyIsInNpbXVsYXRlVG91Y2giLCJpc0xvY2tlZCIsImN1cnNvciIsInVuc2V0R3JhYkN1cnNvciIsIm1hbmlwdWxhdGlvbiIsImFwcGVuZFNsaWRlIiwicHJlcGVuZFNsaWRlIiwiYWRkU2xpZGUiLCJhY3RpdmVJbmRleEJ1ZmZlciIsImJhc2VMZW5ndGgiLCJzbGlkZXNCdWZmZXIiLCJjdXJyZW50U2xpZGUiLCJyZW1vdmVTbGlkZSIsInNsaWRlc0luZGV4ZXMiLCJpbmRleFRvUmVtb3ZlIiwicmVtb3ZlQWxsU2xpZGVzIiwiRGV2aWNlIiwiaW9zIiwiYW5kcm9pZENocm9tZSIsImRlc2t0b3AiLCJjb3Jkb3ZhIiwicGhvbmVnYXAiLCJvcyIsIm9zVmVyc2lvbiIsIndlYlZpZXciLCJzdGFuZGFsb25lIiwid2VidmlldyIsInBpeGVsUmF0aW8iLCJkZXZpY2VQaXhlbFJhdGlvIiwib25SZXNpemUiLCJicmVha3BvaW50cyIsInNldEJyZWFrcG9pbnQiLCJhdXRvcGxheSIsInJ1bm5pbmciLCJwYXVzZWQiLCJkdW1teUV2ZW50QXR0YWNoZWQiLCJkdW1teUV2ZW50TGlzdGVuZXIiLCJkZWZhdWx0cyIsInRvdWNoRXZlbnRzVGFyZ2V0IiwidXBkYXRlT25XaW5kb3dSZXNpemUiLCJlZGdlU3dpcGVEZXRlY3Rpb24iLCJlZGdlU3dpcGVUaHJlc2hvbGQiLCJmcmVlTW9kZSIsImZyZWVNb2RlTW9tZW50dW0iLCJmcmVlTW9kZU1vbWVudHVtUmF0aW8iLCJmcmVlTW9kZU1vbWVudHVtQm91bmNlIiwiZnJlZU1vZGVNb21lbnR1bUJvdW5jZVJhdGlvIiwiZnJlZU1vZGVNb21lbnR1bVZlbG9jaXR5UmF0aW8iLCJmcmVlTW9kZVN0aWNreSIsImZyZWVNb2RlTWluaW11bVZlbG9jaXR5IiwidG91Y2hSYXRpbyIsInRvdWNoQW5nbGUiLCJzaG9ydFN3aXBlcyIsImxvbmdTd2lwZXMiLCJsb25nU3dpcGVzUmF0aW8iLCJsb25nU3dpcGVzTXMiLCJmb2xsb3dGaW5nZXIiLCJhbGxvd1RvdWNoTW92ZSIsInRvdWNoTW92ZVN0b3BQcm9wYWdhdGlvbiIsInRvdWNoU3RhcnRQcmV2ZW50RGVmYXVsdCIsInRvdWNoU3RhcnRGb3JjZVByZXZlbnREZWZhdWx0IiwidG91Y2hSZWxlYXNlT25FZGdlcyIsInVuaXF1ZU5hdkVsZW1lbnRzIiwicmVzaXN0YW5jZSIsInJlc2lzdGFuY2VSYXRpbyIsInByZXZlbnRDbGlja3MiLCJwcmV2ZW50Q2xpY2tzUHJvcGFnYXRpb24iLCJwcmVsb2FkSW1hZ2VzIiwidXBkYXRlT25JbWFnZXNSZWFkeSIsInN3aXBlSGFuZGxlciIsIm5vU3dpcGluZyIsIm5vU3dpcGluZ0NsYXNzIiwibm9Td2lwaW5nU2VsZWN0b3IiLCJwYXNzaXZlTGlzdGVuZXJzIiwiY29udGFpbmVyTW9kaWZpZXJDbGFzcyIsIndyYXBwZXJDbGFzcyIsInByb3RvdHlwZXMiLCJhdHRhY2hFdmVudHMiLCJ0b3VjaEV2ZW50cyIsIm9uVG91Y2hTdGFydCIsInRvdWNoRXZlbnRzRGF0YSIsIiR0YXJnZXRFbCIsImlzVG91Y2hFdmVudCIsImlzVG91Y2hlZCIsImlzTW92ZWQiLCJhbGxvd0NsaWNrIiwiY3VycmVudFgiLCJjdXJyZW50WSIsInN0YXJ0WCIsInN0YXJ0WSIsImlPU0VkZ2VTd2lwZURldGVjdGlvbiIsImlPU0VkZ2VTd2lwZVRocmVzaG9sZCIsImFsbG93VG91Y2hDYWxsYmFja3MiLCJpc1Njcm9sbGluZyIsInN0YXJ0TW92aW5nIiwidG91Y2hTdGFydFRpbWUiLCJzd2lwZURpcmVjdGlvbiIsImFsbG93VGhyZXNob2xkTW92ZSIsImZvcm1FbGVtZW50cyIsInNob3VsZFByZXZlbnREZWZhdWx0Iiwib25Ub3VjaE1vdmUiLCJ0YXJnZXRUb3VjaCIsInByZXZlbnRlZEJ5TmVzdGVkU3dpcGVyIiwiZGlmZlgiLCJkaWZmWSIsInNxcnQiLCJwb3ciLCJhdGFuMiIsIm5lc3RlZCIsInN0YXJ0VHJhbnNsYXRlIiwiYWxsb3dNb21lbnR1bUJvdW5jZSIsImRpc2FibGVQYXJlbnRTd2lwZXIiLCJ2ZWxvY2l0aWVzIiwib25Ub3VjaEVuZCIsImN1cnJlbnRQb3MiLCJ0b3VjaEVuZFRpbWUiLCJ0aW1lRGlmZiIsImxhc3RDbGlja1RpbWUiLCJsYXN0TW92ZUV2ZW50IiwidmVsb2NpdHlFdmVudCIsImRpc3RhbmNlIiwidmVsb2NpdHkiLCJtb21lbnR1bUR1cmF0aW9uIiwibW9tZW50dW1EaXN0YW5jZSIsIm5ld1Bvc2l0aW9uIiwiYWZ0ZXJCb3VuY2VQb3NpdGlvbiIsIm5lZWRzTG9vcEZpeCIsImRvQm91bmNlIiwiYm91bmNlQW1vdW50IiwibW92ZURpc3RhbmNlIiwiY3VycmVudFNsaWRlU2l6ZSIsInN0b3BJbmRleCIsImdyb3VwU2l6ZSIsImluY3JlbWVudCQxIiwicmF0aW8iLCJuYXZpZ2F0aW9uIiwibmV4dEVsIiwicHJldkVsIiwib25TY3JvbGwiLCJvbkNsaWNrIiwibW92ZSIsInBhc3NpdmUiLCJjYW5jZWwiLCJkZXRhY2hFdmVudHMiLCJicmVha3BvaW50IiwiZ2V0QnJlYWtwb2ludCIsImN1cnJlbnRCcmVha3BvaW50IiwiYnJlYWtwb2ludE9ubHlQYXJhbXMiLCJwYXJhbVZhbHVlIiwiYnJlYWtwb2ludFBhcmFtcyIsIm9yaWdpbmFsUGFyYW1zIiwid2FzTXVsdGlSb3ciLCJpc011bHRpUm93IiwiZGlyZWN0aW9uQ2hhbmdlZCIsIm5lZWRzUmVMb29wIiwiY2hhbmdlRGlyZWN0aW9uIiwicG9pbnRzIiwicG9pbnQiLCJtaW5SYXRpbyIsInN1YnN0ciIsImlubmVySGVpZ2h0IiwicmVmIiwiaW5uZXJXaWR0aCIsIndhc0xvY2tlZCIsImxhc3RTbGlkZVBvc2l0aW9uIiwiYWRkQ2xhc3NlcyIsInN1ZmZpeGVzIiwicmVtb3ZlQ2xhc3NlcyIsImltYWdlcyIsImxvYWRJbWFnZSIsImltYWdlRWwiLCJzcmNzZXQiLCJzaXplcyIsImNoZWNrRm9yQ29tcGxldGUiLCJvblJlYWR5IiwiaW1hZ2VzTG9hZGVkIiwiaW1hZ2VzVG9Mb2FkIiwiY3VycmVudFNyYyIsImV4dGVuZGVkRGVmYXVsdHMiLCJwcm90b3R5cGVHcm91cCIsInByb3RvTWV0aG9kIiwibW9kdWxlUGFyYW1OYW1lIiwic3dpcGVyUGFyYW1zIiwicGFzc2VkUGFyYW1zIiwic3dpcGVycyIsImNvbnRhaW5lckVsIiwibmV3UGFyYW1zIiwic2hhZG93Um9vdCIsInRvdWNoRXZlbnRzVG91Y2giLCJ0b3VjaEV2ZW50c0Rlc2t0b3AiLCJjbGlja1RpbWVvdXQiLCJfX3Byb3RvX18iLCJzcHYiLCJicmVha0xvb3AiLCJ0cmFuc2xhdGVWYWx1ZSIsIm5ld0RpcmVjdGlvbiIsIm5lZWRVcGRhdGUiLCJjdXJyZW50RGlyZWN0aW9uIiwic2xpZGVFbCIsImRlc3Ryb3kiLCJkZWxldGVJbnN0YW5jZSIsImNsZWFuU3R5bGVzIiwiZXh0ZW5kRGVmYXVsdHMiLCJuZXdEZWZhdWx0cyIsIkRldmljZSQxIiwiU3VwcG9ydCQxIiwiQnJvd3NlciIsImlzRWRnZSIsImlzU2FmYXJpIiwiaXNXZWJWaWV3IiwiQnJvd3NlciQxIiwiYnJvd3NlciIsIlJlc2l6ZSIsInJlc2l6ZSIsInJlc2l6ZUhhbmRsZXIiLCJvcmllbnRhdGlvbkNoYW5nZUhhbmRsZXIiLCJPYnNlcnZlciIsIk11dGF0aW9uT2JzZXJ2ZXIiLCJXZWJraXRNdXRhdGlvbk9ic2VydmVyIiwiYXR0YWNoIiwibXV0YXRpb25zIiwib2JzZXJ2ZXJVcGRhdGUiLCJvYnNlcnZlIiwiY2hpbGRMaXN0IiwiY2hhcmFjdGVyRGF0YSIsIm9ic2VydmVycyIsIm9ic2VydmVQYXJlbnRzIiwiY29udGFpbmVyUGFyZW50cyIsIm9ic2VydmVTbGlkZUNoaWxkcmVuIiwiZGlzY29ubmVjdCIsIk9ic2VydmVyJDEiLCJWaXJ0dWFsIiwiZm9yY2UiLCJyZWYkMSIsImFkZFNsaWRlc0JlZm9yZSIsImFkZFNsaWRlc0FmdGVyIiwicmVmJDIiLCJwcmV2aW91c0Zyb20iLCJmcm9tIiwicHJldmlvdXNUbyIsInByZXZpb3VzU2xpZGVzR3JpZCIsInJlbmRlclNsaWRlIiwicHJldmlvdXNPZmZzZXQiLCJzbGlkZXNBZnRlciIsInNsaWRlc0JlZm9yZSIsIm9uUmVuZGVyZWQiLCJsYXp5IiwicmVuZGVyRXh0ZXJuYWwiLCJzbGlkZXNUb1JlbmRlciIsInByZXBlbmRJbmRleGVzIiwiYXBwZW5kSW5kZXhlcyIsIiRzbGlkZUVsIiwibnVtYmVyT2ZOZXdTbGlkZXMiLCJjYWNoZWRJbmRleCIsIiRjYWNoZWRFbCIsImNhY2hlZEVsSW5kZXgiLCJWaXJ0dWFsJDEiLCJiZWZvcmVJbml0Iiwib3ZlcndyaXRlUGFyYW1zIiwiS2V5Ym9hcmQiLCJrYyIsInBhZ2VVcERvd24iLCJrZXlib2FyZCIsImlzUGFnZVVwIiwiaXNQYWdlRG93biIsImlzQXJyb3dMZWZ0IiwiaXNBcnJvd1JpZ2h0IiwiaXNBcnJvd1VwIiwiaXNBcnJvd0Rvd24iLCJvbmx5SW5WaWV3cG9ydCIsImluVmlldyIsIndpbmRvd1dpZHRoIiwid2luZG93SGVpZ2h0Iiwic3dpcGVyT2Zmc2V0Iiwic3dpcGVyQ29vcmQiLCJlbmFibGUiLCJLZXlib2FyZCQxIiwiTW91c2V3aGVlbCIsImxhc3RTY3JvbGxUaW1lIiwibGFzdEV2ZW50QmVmb3JlU25hcCIsInJlY2VudFdoZWVsRXZlbnRzIiwiaXNTdXBwb3J0ZWQiLCJlbGVtZW50Iiwib253aGVlbCIsImhhc0ZlYXR1cmUiLCJzWCIsInNZIiwicFgiLCJwWSIsIndoZWVsRGVsdGEiLCJ3aGVlbERlbHRhWSIsIndoZWVsRGVsdGFYIiwiSE9SSVpPTlRBTF9BWElTIiwiZGVsdGFZIiwiZGVsdGFYIiwiZGVsdGFNb2RlIiwic3BpblgiLCJzcGluWSIsInBpeGVsWCIsInBpeGVsWSIsImhhbmRsZU1vdXNlRW50ZXIiLCJtb3VzZUVudGVyZWQiLCJoYW5kbGVNb3VzZUxlYXZlIiwibW91c2V3aGVlbCIsImV2ZW50c1RhcmdlZCIsInJlbGVhc2VPbkVkZ2VzIiwicnRsRmFjdG9yIiwiZm9yY2VUb0F4aXMiLCJuZXdFdmVudCQxIiwic2lnbiIsImlnbm9yZVdoZWVsRXZlbnRzIiwic2Vuc2l0aXZpdHkiLCJyZWNlbnRXaGVlbEV2ZW50cyQxIiwicHJldkV2ZW50JDEiLCJmaXJzdEV2ZW50Iiwic25hcFRvVGhyZXNob2xkIiwiYXV0b3BsYXlEaXNhYmxlT25JbnRlcmFjdGlvbiIsIm5ld0V2ZW50IiwicHJldkV2ZW50IiwiYW5pbWF0ZVNsaWRlciIsInJlbGVhc2VTY3JvbGwiLCJnZXRUaW1lIiwiTmF2aWdhdGlvbiIsIiRuZXh0RWwiLCIkcHJldkVsIiwiZGlzYWJsZWRDbGFzcyIsImxvY2tDbGFzcyIsIm9uUHJldkNsaWNrIiwib25OZXh0Q2xpY2siLCJQYWdpbmF0aW9uIiwicGFnaW5hdGlvbiIsInRvdGFsIiwicGFnaW5hdGlvblR5cGUiLCJidWxsZXRzIiwiZmlyc3RJbmRleCIsImxhc3RJbmRleCIsIm1pZEluZGV4IiwiZHluYW1pY0J1bGxldHMiLCJidWxsZXRTaXplIiwiZHluYW1pY01haW5CdWxsZXRzIiwiZHluYW1pY0J1bGxldEluZGV4IiwiYnVsbGV0QWN0aXZlQ2xhc3MiLCJidWxsZXQiLCIkYnVsbGV0IiwiYnVsbGV0SW5kZXgiLCIkZmlyc3REaXNwbGF5ZWRCdWxsZXQiLCIkbGFzdERpc3BsYXllZEJ1bGxldCIsImR5bmFtaWNCdWxsZXRzTGVuZ3RoIiwiYnVsbGV0c09mZnNldCIsImN1cnJlbnRDbGFzcyIsImZvcm1hdEZyYWN0aW9uQ3VycmVudCIsInRvdGFsQ2xhc3MiLCJmb3JtYXRGcmFjdGlvblRvdGFsIiwicHJvZ3Jlc3NiYXJEaXJlY3Rpb24iLCJwcm9ncmVzc2Jhck9wcG9zaXRlIiwic2NhbGVYIiwic2NhbGVZIiwicHJvZ3Jlc3NiYXJGaWxsQ2xhc3MiLCJyZW5kZXJDdXN0b20iLCJyZW5kZXIiLCJwYWdpbmF0aW9uSFRNTCIsIm51bWJlck9mQnVsbGV0cyIsInJlbmRlckJ1bGxldCIsImJ1bGxldENsYXNzIiwiYnVsbGV0RWxlbWVudCIsInJlbmRlckZyYWN0aW9uIiwicmVuZGVyUHJvZ3Jlc3NiYXIiLCJjbGlja2FibGUiLCJjbGlja2FibGVDbGFzcyIsIm1vZGlmaWVyQ2xhc3MiLCJwcm9ncmVzc2Jhck9wcG9zaXRlQ2xhc3MiLCJoaWRkZW5DbGFzcyIsIlNjcm9sbGJhciIsInNjcm9sbGJhciIsImRyYWdTaXplIiwidHJhY2tTaXplIiwiJGRyYWdFbCIsIm5ld1BvcyIsIm5ld1NpemUiLCJyIiwiZGl2aWRlciIsIm1vdmVEaXZpZGVyIiwiZ2V0UG9pbnRlclBvc2l0aW9uIiwic2V0RHJhZ1Bvc2l0aW9uIiwiZHJhZ1N0YXJ0UG9zIiwicG9zaXRpb25SYXRpbyIsIm9uRHJhZ1N0YXJ0IiwiZHJhZ1RpbWVvdXQiLCJvbkRyYWdNb3ZlIiwib25EcmFnRW5kIiwic25hcE9uUmVsZWFzZSIsImVuYWJsZURyYWdnYWJsZSIsImRpc2FibGVEcmFnZ2FibGUiLCIkc3dpcGVyRWwiLCJkcmFnRWwiLCJkcmFnZ2FibGUiLCJQYXJhbGxheCIsInNldFRyYW5zZm9ybSIsImgiLCJjdXJyZW50T3BhY2l0eSIsImMiLCJwYXJhbGxheCIsInBhcmFsbGF4RHVyYXRpb24iLCJab29tIiwiZ2V0RGlzdGFuY2VCZXR3ZWVuVG91Y2hlcyIsImhlIiwieDEiLCJ5MSIsIm9uR2VzdHVyZVN0YXJ0IiwiZ2VzdHVyZSIsImZha2VHZXN0dXJlVG91Y2hlZCIsImZha2VHZXN0dXJlTW92ZWQiLCJzY2FsZVN0YXJ0IiwiJGltYWdlRWwiLCIkaW1hZ2VXcmFwRWwiLCJtYXhSYXRpbyIsImlzU2NhbGluZyIsIm9uR2VzdHVyZUNoYW5nZSIsInNjYWxlTW92ZSIsImN1cnJlbnRTY2FsZSIsInRvdWNoZXNTdGFydCIsInNsaWRlV2lkdGgiLCJzbGlkZUhlaWdodCIsInNjYWxlZFdpZHRoIiwic2NhbGVkSGVpZ2h0IiwibWluWCIsIm1heFgiLCJtaW5ZIiwibWF4WSIsInRvdWNoZXNDdXJyZW50IiwicHJldlBvc2l0aW9uWCIsInByZXZQb3NpdGlvblkiLCJwcmV2VGltZSIsIm1vbWVudHVtRHVyYXRpb25ZIiwibW9tZW50dW1EdXJhdGlvblgiLCJuZXdQb3NpdGlvblgiLCJtb21lbnR1bURpc3RhbmNlWCIsIm5ld1Bvc2l0aW9uWSIsIm1vbWVudHVtRGlzdGFuY2VZIiwib25UcmFuc2l0aW9uRW5kIiwib3V0IiwiaW4iLCJ0b3VjaFkiLCJ0cmFuc2xhdGVZIiwiaW1hZ2VXaWR0aCIsImltYWdlSGVpZ2h0IiwidHJhbnNsYXRlTWluWSIsImciLCJ0cmFuc2xhdGVNaW5YIiwidHJhbnNsYXRlTWF4WSIsImYiLCJ0cmFuc2xhdGVYIiwidHJhbnNsYXRlTWF4WCIsInNsaWRlU2VsZWN0b3IiLCJvbkdlc3R1cmVFbmQiLCJhY3RpdmVMaXN0ZW5lcldpdGhDYXB0dXJlIiwiY29udGFpbmVyQ2xhc3MiLCJsb2FkSW5EdXBsaWNhdGUiLCJlbGVtZW50Q2xhc3MiLCJsb2FkZWRDbGFzcyIsImxvYWRpbmdDbGFzcyIsIiRpbWFnZXMiLCJpbWFnZUluZGV4IiwiYmFja2dyb3VuZCIsIiRwaWN0dXJlRWwiLCJzb3VyY2VFbCIsIiRzb3VyY2UiLCJzbGlkZU9yaWdpbmFsSW5kZXgiLCJsb2FkSW5TbGlkZSIsInUiLCJpbml0aWFsSW1hZ2VMb2FkZWQiLCJsb2FkUHJldk5leHQiLCJsb2FkUHJldk5leHRBbW91bnQiLCJtYXhJbmRleCIsIm1pbkluZGV4IiwiYW1vdW50Iiwic2xpZGVFeGlzdCIsIkxpbmVhclNwbGluZSIsIkNvbnRyb2xsZXIiLCJpMSIsImJpbmFyeVNlYXJjaCIsImludGVycG9sYXRlIiwieDIiLCJpMyIsImd1ZXNzIiwiZ2V0SW50ZXJwb2xhdGVGdW5jdGlvbiIsImNvbnRyb2xsZXIiLCJjb250cm9sIiwic2V0Q29udHJvbGxlZFRyYW5zbGF0ZSIsImNvbnRyb2xsZWRUcmFuc2xhdGUiLCJieSIsImludmVyc2UiLCJjb250cm9sbGVkIiwic2V0Q29udHJvbGxlZFRyYW5zaXRpb24iLCJtYWtlRWxGb2N1c2FibGUiLCJtYWtlRWxOb3RGb2N1c2FibGUiLCJhZGRFbFJvbGUiLCJhZGRFbExhYmVsIiwiZGlzYWJsZUVsIiwiZW5hYmxlRWwiLCJvbkVudGVyS2V5IiwibGFzdFNsaWRlTWVzc2FnZSIsImExMXkiLCJuZXh0U2xpZGVNZXNzYWdlIiwiZmlyc3RTbGlkZU1lc3NhZ2UiLCJwcmV2U2xpZGVNZXNzYWdlIiwibm90aWZpY2F0aW9uIiwibGl2ZVJlZ2lvbiIsInVwZGF0ZU5hdmlnYXRpb24iLCJ1cGRhdGVQYWdpbmF0aW9uIiwiYnVsbGV0RWwiLCIkYnVsbGV0RWwiLCJwYWdpbmF0aW9uQnVsbGV0TWVzc2FnZSIsIkhpc3RvcnkiLCJoYXNoTmF2aWdhdGlvbiIsInBhdGhzIiwiZ2V0UGF0aFZhbHVlcyIsInNjcm9sbFRvU2xpZGUiLCJzZXRIaXN0b3J5UG9wU3RhdGUiLCJwYXJ0IiwicGF0aEFycmF5Iiwic2V0SGlzdG9yeSIsInNsdWdpZnkiLCJpbmNsdWRlcyIsImN1cnJlbnRTdGF0ZSIsIm9uSGFzaENhbmdlIiwiZmUiLCJuZXdIYXNoIiwic2V0SGFzaCIsIndhdGNoU3RhdGUiLCJyZXZlcnNlRGlyZWN0aW9uIiwic3RvcE9uTGFzdFNsaWRlIiwicGF1c2UiLCJ3YWl0Rm9yVHJhbnNpdGlvbiIsImNyb3NzRmFkZSIsInNsaWRlT3BhY2l0eSIsInR4IiwidHkiLCJldmVudFRyaWdnZXJlZCIsIkN1YmUiLCJ3cmFwcGVyUm90YXRlIiwic2hhZG93IiwiJGN1YmVTaGFkb3dFbCIsInNsaWRlQW5nbGUiLCJ0eiIsInNsaWRlU2hhZG93cyIsIlQiLCJTIiwic2hhZG93QmVmb3JlIiwiLXdlYmtpdC10cmFuc2Zvcm0tb3JpZ2luIiwiLW1vei10cmFuc2Zvcm0tb3JpZ2luIiwiLW1zLXRyYW5zZm9ybS1vcmlnaW4iLCJ0cmFuc2Zvcm0tb3JpZ2luIiwic3dpcGVyV2lkdGgiLCJzaGFkb3dPZmZzZXQiLCJzaGFkb3dBbmdsZSIsIkMiLCJzaGFkb3dTY2FsZSIsIk0iLCJzY2FsZTEiLCJQIiwieiIsInN3aXBlckhlaWdodCIsInpGYWN0b3IiLCJmbGlwRWZmZWN0IiwibGltaXRSb3RhdGlvbiIsInJvdGF0ZVkiLCJDb3ZlcmZsb3ciLCJjb3ZlcmZsb3dFZmZlY3QiLCJjZW50ZXIiLCJyb3RhdGUiLCJtb2RpZmllciIsInRyYW5zbGF0ZVoiLCJzdHJldGNoIiwib2Zmc2V0TXVsdGlwbGllciIsInJvdGF0ZVgiLCJzbGlkZVRyYW5zZm9ybSIsIiRzaGFkb3dCZWZvcmVFbCIsIiRzaGFkb3dBZnRlckVsIiwicHJlZml4ZWRQb2ludGVyRXZlbnRzIiwicGVyc3BlY3RpdmVPcmlnaW4iLCJ0aHVtYnMiLCJ0aHVtYnNQYXJhbXMiLCJ0aHVtYnNDb250YWluZXJDbGFzcyIsIm9uVGh1bWJDbGljayIsInRodW1ic1N3aXBlciIsInNsaWRlVGh1bWJBY3RpdmVDbGFzcyIsImN1cnJlbnRJbmRleCIsImF1dG9TY3JvbGxPZmZzZXQiLCJ1c2VPZmZzZXQiLCJjdXJyZW50VGh1bWJzSW5kZXgiLCJwcmV2VGh1bWJzSW5kZXgiLCJuZXh0VGh1bWJzSW5kZXgiLCJuZXdUaHVtYnNJbmRleCIsInRodW1ic1RvQWN0aXZhdGUiLCJ0aHVtYkFjdGl2ZUNsYXNzIiwibXVsdGlwbGVBY3RpdmVUaHVtYnMiLCJFZSIsImhpZGVPbkNsaWNrIiwidG9FZGdlIiwiZnJvbUVkZ2UiLCJpc0hpZGRlbiIsImFjdGl2ZUluZGV4Q2hhbmdlIiwic25hcEluZGV4Q2hhbmdlIiwic2xpZGVzTGVuZ3RoQ2hhbmdlIiwic25hcEdyaWRMZW5ndGhDaGFuZ2UiLCJkcmFnQ2xhc3MiLCJ6b29tZWRTbGlkZUNsYXNzIiwidG91Y2hTdGFydCIsInRvdWNoRW5kIiwiZG91YmxlVGFwIiwic2xpZGVDaGFuZ2UiLCJsb2FkT25UcmFuc2l0aW9uU3RhcnQiLCJwcmVsb2FkZXJDbGFzcyIsIkxhenkiLCJzY3JvbGwiLCJzY3JvbGxiYXJEcmFnTW92ZSIsInNwbGluZSIsIm5vdGlmaWNhdGlvbkNsYXNzIiwicGFnaW5hdGlvblVwZGF0ZSIsInZlIiwiSGFzaE5hdmlnYXRpb24iLCJkaXNhYmxlT25JbnRlcmFjdGlvbiIsIkF1dG9wbGF5Iiwib25WaXNpYmlsaXR5Q2hhbmdlIiwibWUiLCJ2aXNpYmlsaXR5U3RhdGUiLCJiZWZvcmVUcmFuc2l0aW9uU3RhcnQiLCJzbGlkZXJGaXJzdE1vdmUiLCJmYWRlRWZmZWN0IiwiRmFkZSIsImN1YmVFZmZlY3QiLCJGbGlwIiwiVGh1bWJzIiwiYmVmb3JlRGVzdHJveSIsInN3aXBlckNyZWF0ZWQiXSwibWFwcGluZ3MiOiJDQWFBLFNBQVlBLEVBQVFDLEdBRW5CLGFBRXVCLGlCQUFYQyxRQUFpRCxpQkFBbkJBLE9BQU9DLFFBU2hERCxPQUFPQyxRQUFVSCxFQUFPSSxTQUN2QkgsRUFBU0QsR0FBUSxHQUNqQixTQUFVSyxHQUNULElBQU1BLEVBQUVELFNBQ1AsTUFBTSxJQUFJRSxNQUFPLDRDQUVsQixPQUFPTCxFQUFTSSxJQUdsQkosRUFBU0QsR0F0QlgsQ0EwQnVCLG9CQUFYTyxPQUF5QkEsT0FBU0MsS0FBTSxTQUFVRCxFQUFR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LFVBQzBCc3hCLGNBQ3JCSSxTQUNRdnJCLEdBQUFBLElBQUFBLEVBQWN4a0IsS0FFN0JnekMsT0FBQUEsT0FBZTloRCxHQUFBQSxFQUFBc3pCLGNBQ0EvOEMsSUFDYWtvRSxjQURibG9FLFdBR0Zrb0UsSUFBT3NELEVBQUFBLEtBQUFBLE9BQWlCbEQsT0FDcEJsWSxHQUFBQSxLQUFBQSxPQW1DVjFqQixlQUFPOEksR0FBQUEsRUFDaEI5SSxjQUEwQjhJLFlBQ25CQyxJQUFBQSxFQUFBQSxNQUF1Qm5ILEVBQUFBLElBQU1tSCxFQUFBQSxNQUFBQSxJQUFBQSxFQUd0Qy9JLGNBRU9BLEVBQUFBLE1BQUFBLGVBQUFBLEVBQUFBLElBQUFBLElBQUFBIiwiZmlsZSI6ImxpYnMubWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyohXG4gKiBqUXVlcnkgSmF2YVNjcmlwdCBMaWJyYXJ5IHYzLjUuMVxuICogaHR0cHM6Ly9qcXVlcnkuY29tL1xuICpcbiAqIEluY2x1ZGVzIFNpenpsZS5qc1xuICogaHR0cHM6Ly9zaXp6bGVqcy5jb20vXG4gKlxuICogQ29weXJpZ2h0IEpTIEZvdW5kYXRpb24gYW5kIG90aGVyIGNvbnRyaWJ1dG9yc1xuICogUmVsZWFzZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlXG4gKiBodHRwczovL2pxdWVyeS5vcmcvbGljZW5zZVxuICpcbiAqIERhdGU6IDIwMjAtMDUtMDRUMjI6NDlaXG4gKi9cbiggZnVuY3Rpb24oIGdsb2JhbCwgZmFjdG9yeSApIHtcblxuXHRcInVzZSBzdHJpY3RcIjtcblxuXHRpZiAoIHR5cGVvZiBtb2R1bGUgPT09IFwib2JqZWN0XCIgJiYgdHlwZW9mIG1vZHVsZS5leHBvcnRzID09PSBcIm9iamVjdFwiICkge1xuXG5cdFx0Ly8gRm9yIENvbW1vbkpTIGFuZCBDb21tb25KUy1saWtlIGVudmlyb25tZW50cyB3aGVyZSBhIHByb3BlciBgd2luZG93YFxuXHRcdC8vIGlzIHByZXNlbnQsIGV4ZWN1dGUgdGhlIGZhY3RvcnkgYW5kIGdldCBqUXVlcnkuXG5cdFx0Ly8gRm9yIGVudmlyb25tZW50cyB0aGF0IGRvIG5vdCBoYXZlIGEgYHdpbmRvd2Agd2l0aCBhIGBkb2N1bWVudGBcblx0XHQvLyAoc3VjaCBhcyBOb2RlLmpzKSwgZXhwb3NlIGEgZmFjdG9yeSBhcyBtb2R1bGUuZXhwb3J0cy5cblx0XHQvLyBUaGlzIGFjY2VudHVhdGVzIHRoZSBuZWVkIGZvciB0aGUgY3JlYXRpb24gb2YgYSByZWFsIGB3aW5kb3dgLlxuXHRcdC8vIGUuZy4gdmFyIGpRdWVyeSA9IHJlcXVpcmUoXCJqcXVlcnlcIikod2luZG93KTtcblx0XHQvLyBTZWUgdGlja2V0ICMxNDU0OSBmb3IgbW9yZSBpbmZvLlxuXHRcdG1vZHVsZS5leHBvcnRzID0gZ2xvYmFsLmRvY3VtZW50ID9cblx0XHRcdGZhY3RvcnkoIGdsb2JhbCwgdHJ1ZSApIDpcblx0XHRcdGZ1bmN0aW9uKCB3ICkge1xuXHRcdFx0XHRpZiAoICF3LmRvY3VtZW50ICkge1xuXHRcdFx0XHRcdHRocm93IG5ldyBFcnJvciggXCJqUXVlcnkgcmVxdWlyZXMgYSB3aW5kb3cgd2l0aCBhIGRvY3VtZW50XCIgKTtcblx0XHRcdFx0fVxuXHRcdFx0XHRyZXR1cm4gZmFjdG9yeSggdyApO1xuXHRcdFx0fTtcblx0fSBlbHNlIHtcblx0XHRmYWN0b3J5KCBnbG9iYWwgKTtcblx0fVxuXG4vLyBQYXNzIHRoaXMgaWYgd2luZG93IGlzIG5vdCBkZWZpbmVkIHlldFxufSApKCB0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiID8gd2luZG93IDogdGhpcywgZnVuY3Rpb24oIHdpbmRvdywgbm9HbG9iYWwgKSB7XG5cbi8vIEVkZ2UgPD0gMTIgLSAxMyssIEZpcmVmb3ggPD0xOCAtIDQ1KywgSUUgMTAgLSAxMSwgU2FmYXJpIDUuMSAtIDkrLCBpT1MgNiAtIDkuMVxuLy8gdGhyb3cgZXhjZXB0aW9ucyB3aGVuIG5vbi1zdHJpY3QgY29kZSAoZS5nLiwgQVNQLk5FVCA0LjUpIGFjY2Vzc2VzIHN0cmljdCBtb2RlXG4vLyBhcmd1bWVudHMuY2FsbGVlLmNhbGxlciAodHJhYy0xMzMzNSkuIEJ1dCBhcyBvZiBqUXVlcnkgMy4wICgyMDE2KSwgc3RyaWN0IG1vZGUgc2hvdWxkIGJlIGNvbW1vblxuLy8gZW5vdWdoIHRoYXQgYWxsIHN1Y2ggYXR0ZW1wdHMgYXJlIGd1YXJkZWQgaW4gYSB0cnkgYmxvY2suXG5cInVzZSBzdHJpY3RcIjtcblxudmFyIGFyciA9IFtdO1xuXG52YXIgZ2V0UHJvdG8gPSBPYmplY3QuZ2V0UHJvdG90eXBlT2Y7XG5cbnZhciBzbGljZSA9IGFyci5zbGljZTtcblxudmFyIGZsYXQgPSBhcnIuZmxhdCA/IGZ1bmN0aW9uKCBhcnJheSApIHtcblx0cmV0dXJuIGFyci5mbGF0LmNhbGwoIGFycmF5ICk7XG59IDogZnVuY3Rpb24oIGFycmF5ICkge1xuXHRyZXR1cm4gYXJyLmNvbmNhdC5hcHBseSggW10sIGFycmF5ICk7XG59O1xuXG5cbnZhciBwdXNoID0gYXJyLnB1c2g7XG5cbnZhciBpbmRleE9mID0gYXJyLmluZGV4T2Y7XG5cbnZhciBjbGFzczJ0eXBlID0ge307XG5cbnZhciB0b1N0cmluZyA9IGNsYXNzMnR5cGUudG9TdHJpbmc7XG5cbnZhciBoYXNPd24gPSBjbGFzczJ0eXBlLmhhc093blByb3BlcnR5O1xuXG52YXIgZm5Ub1N0cmluZyA9IGhhc093bi50b1N0cmluZztcblxudmFyIE9iamVjdEZ1bmN0aW9uU3RyaW5nID0gZm5Ub1N0cmluZy5jYWxsKCBPYmplY3QgKTtcblxudmFyIHN1cHBvcnQgPSB7fTtcblxudmFyIGlzRnVuY3Rpb24gPSBmdW5jdGlvbiBpc0Z1bmN0aW9uKCBvYmogKSB7XG5cbiAgICAgIC8vIFN1cHBvcnQ6IENocm9tZSA8PTU3LCBGaXJlZm94IDw9NTJcbiAgICAgIC8vIEluIHNvbWUgYnJvd3NlcnMsIHR5cGVvZiByZXR1cm5zIFwiZnVuY3Rpb25cIiBmb3IgSFRNTCA8b2JqZWN0PiBlbGVtZW50c1xuICAgICAgLy8gKGkuZS4sIGB0eXBlb2YgZG9jdW1lbnQuY3JlYXRlRWxlbWVudCggXCJvYmplY3RcIiApID09PSBcImZ1bmN0aW9uXCJgKS5cbiAgICAgIC8vIFdlIGRvbid0IHdhbnQgdG8gY2xhc3NpZnkgKmFueSogRE9NIG5vZGUgYXMgYSBmdW5jdGlvbi5cbiAgICAgIHJldHVybiB0eXBlb2Ygb2JqID09PSBcImZ1bmN0aW9uXCIgJiYgdHlwZW9mIG9iai5ub2RlVHlwZSAhPT0gXCJudW1iZXJcIjtcbiAgfTtcblxuXG52YXIgaXNXaW5kb3cgPSBmdW5jdGlvbiBpc1dpbmRvdyggb2JqICkge1xuXHRcdHJldHVybiBvYmogIT0gbnVsbCAmJiBvYmogPT09IG9iai53aW5kb3c7XG5cdH07XG5cblxudmFyIGRvY3VtZW50ID0gd2luZG93LmRvY3VtZW50O1xuXG5cblxuXHR2YXIgcHJlc2VydmVkU2NyaXB0QXR0cmlidXRlcyA9IHtcblx0XHR0eXBlOiB0cnVlLFxuXHRcdHNyYzogdHJ1ZSxcblx0XHRub25jZTogdHJ1ZSxcblx0XHRub01vZHVsZTogdHJ1ZVxuXHR9O1xuXG5cdGZ1bmN0aW9uIERPTUV2YWwoIGNvZGUsIG5vZGUsIGRvYyApIHtcblx0XHRkb2MgPSBkb2MgfHwgZG9jdW1lbnQ7XG5cblx0XHR2YXIgaSwgdmFsLFxuXHRcdFx0c2NyaXB0ID0gZG9jLmNyZWF0ZUVsZW1lbnQoIFwic2NyaXB0XCIgKTtcblxuXHRcdHNjcmlwdC50ZXh0ID0gY29kZTtcblx0XHRpZiAoIG5vZGUgKSB7XG5cdFx0XHRmb3IgKCBpIGluIHByZXNlcnZlZFNjcmlwdEF0dHJpYnV0ZXMgKSB7XG5cblx0XHRcdFx0Ly8gU3VwcG9ydDogRmlyZWZveCA2NCssIEVkZ2UgMTgrXG5cdFx0XHRcdC8vIFNvbWUgYnJvd3NlcnMgZG9uJ3Qgc3VwcG9ydCB0aGUgXCJub25jZVwiIHByb3BlcnR5IG9uIHNjcmlwdHMuXG5cdFx0XHRcdC8vIE9uIHRoZSBvdGhlciBoYW5kLCBqdXN0IHVzaW5nIGBnZXRBdHRyaWJ1dGVgIGlzIG5vdCBlbm91Z2ggYXNcblx0XHRcdFx0Ly8gdGhlIGBub25jZWAgYXR0cmlidXRlIGlzIHJlc2V0IHRvIGFuIGVtcHR5IHN0cmluZyB3aGVuZXZlciBpdFxuXHRcdFx0XHQvLyBiZWNvbWVzIGJyb3dzaW5nLWNvbnRleHQgY29ubmVjdGVkLlxuXHRcdFx0XHQvLyBTZWUgaHR0cHM6Ly9naXRodWIuY29tL3doYXR3Zy9odG1sL2lzc3Vlcy8yMzY5XG5cdFx0XHRcdC8vIFNlZSBodHRwczovL2h0bWwuc3BlYy53aGF0d2cub3JnLyNub25jZS1hdHRyaWJ1dGVzXG5cdFx0XHRcdC8vIFRoZSBgbm9kZS5nZXRBdHRyaWJ1dGVgIGNoZWNrIHdhcyBhZGRlZCBmb3IgdGhlIHNha2Ugb2Zcblx0XHRcdFx0Ly8gYGpRdWVyeS5nbG9iYWxFdmFsYCBzbyB0aGF0IGl0IGNhbiBmYWtlIGEgbm9uY2UtY29udGFpbmluZyBub2RlXG5cdFx0XHRcdC8vIHZpYSBhbiBvYmplY3QuXG5cdFx0XHRcdHZhbCA9IG5vZGVbIGkgXSB8fCBub2RlLmdldEF0dHJpYnV0ZSAmJiBub2RlLmdldEF0dHJpYnV0ZSggaSApO1xuXHRcdFx0XHRpZiAoIHZhbCApIHtcblx0XHRcdFx0XHRzY3JpcHQuc2V0QXR0cmlidXRlKCBpLCB2YWwgKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0XHRkb2MuaGVhZC5hcHBlbmRDaGlsZCggc2NyaXB0ICkucGFyZW50Tm9kZS5yZW1vdmVDaGlsZCggc2NyaXB0ICk7XG5cdH1cblxuXG5mdW5jdGlvbiB0b1R5cGUoIG9iaiApIHtcblx0aWYgKCBvYmogPT0gbnVsbCApIHtcblx0XHRyZXR1cm4gb2JqICsgXCJcIjtcblx0fVxuXG5cdC8vIFN1cHBvcnQ6IEFuZHJvaWQgPD0yLjMgb25seSAoZnVuY3Rpb25pc2ggUmVnRXhwKVxuXHRyZXR1cm4gdHlwZW9mIG9iaiA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2Ygb2JqID09PSBcImZ1bmN0aW9uXCIgP1xuXHRcdGNsYXNzMnR5cGVbIHRvU3RyaW5nLmNhbGwoIG9iaiApIF0gfHwgXCJvYmplY3RcIiA6XG5cdFx0dHlwZW9mIG9iajtcbn1cbi8qIGdsb2JhbCBTeW1ib2wgKi9cbi8vIERlZmluaW5nIHRoaXMgZ2xvYmFsIGluIC5lc2xpbnRyYy5qc29uIHdvdWxkIGNyZWF0ZSBhIGRhbmdlciBvZiB1c2luZyB0aGUgZ2xvYmFsXG4vLyB1bmd1YXJkZWQgaW4gYW5vdGhlciBwbGFjZSwgaXQgc2VlbXMgc2FmZXIgdG8gZGVmaW5lIGdsb2JhbCBvbmx5IGZvciB0aGlzIG1vZHVsZVxuXG5cblxudmFyXG5cdHZlcnNpb24gPSBcIjMuNS4xXCIsXG5cblx0Ly8gRGVmaW5lIGEgbG9jYWwgY29weSBvZiBqUXVlcnlcblx0alF1ZXJ5ID0gZnVuY3Rpb24oIHNlbGVjdG9yLCBjb250ZXh0ICkge1xuXG5cdFx0Ly8gVGhlIGpRdWVyeSBvYmplY3QgaXMgYWN0dWFsbHkganVzdCB0aGUgaW5pdCBjb25zdHJ1Y3RvciAnZW5oYW5jZWQnXG5cdFx0Ly8gTmVlZCBpbml0IGlmIGpRdWVyeSBpcyBjYWxsZWQgKGp1c3QgYWxsb3cgZXJyb3IgdG8gYmUgdGhyb3duIGlmIG5vdCBpbmNsdWRlZClcblx0XHRyZXR1cm4gbmV3IGpRdWVyeS5mbi5pbml0KCBzZWxlY3RvciwgY29udGV4dCApO1xuXHR9O1xuXG5qUXVlcnkuZm4gPSBqUXVlcnkucHJvdG90eXBlID0ge1xuXG5cdC8vIFRoZSBjdXJyZW50IHZlcnNpb24gb2YgalF1ZXJ5IGJlaW5nIHVzZWRcblx0anF1ZXJ5OiB2ZXJzaW9uLFxuXG5cdGNvbnN0cnVjdG9yOiBqUXVlcnksXG5cblx0Ly8gVGhlIGRlZmF1bHQgbGVuZ3RoIG9mIGEgalF1ZXJ5IG9iamVjdCBpcyAwXG5cdGxlbmd0aDogMCxcblxuXHR0b0FycmF5OiBmdW5jdGlvbigpIHtcblx0XHRyZXR1cm4gc2xpY2UuY2FsbCggdGhpcyApO1xuXHR9LFxuXG5cdC8vIEdldCB0aGUgTnRoIGVsZW1lbnQgaW4gdGhlIG1hdGNoZWQgZWxlbWVudCBzZXQgT1Jcblx0Ly8gR2V0IHRoZSB3aG9sZSBtYXRjaGVkIGVsZW1lbnQgc2V0IGFzIGEgY2xlYW4gYXJyYXlcblx0Z2V0OiBmdW5jdGlvbiggbnVtICkge1xuXG5cdFx0Ly8gUmV0dXJuIGFsbCB0aGUgZWxlbWVudHMgaW4gYSBjbGVhbiBhcnJheVxuXHRcdGlmICggbnVtID09IG51bGwgKSB7XG5cdFx0XHRyZXR1cm4gc2xpY2UuY2FsbCggdGhpcyApO1xuXHRcdH1cblxuXHRcdC8vIFJldHVybiBqdXN0IHRoZSBvbmUgZWxlbWVudCBmcm9tIHRoZSBzZXRcblx0XHRyZXR1cm4gbnVtIDwgMCA/IHRoaXNbIG51bSArIHRoaXMubGVuZ3RoIF0gOiB0aGlzWyBudW0gXTtcblx0fSxcblxuXHQvLyBUYWtlIGFuIGFycmF5IG9mIGVsZW1lbnRzIGFuZCBwdXNoIGl0IG9udG8gdGhlIHN0YWNrXG5cdC8vIChyZXR1cm5pbmcgdGhlIG5ldyBtYXRjaGVkIGVsZW1lbnQgc2V0KVxuXHRwdXNoU3RhY2s6IGZ1bmN0aW9uKCBlbGVtcyApIHtcblxuXHRcdC8vIEJ1aWxkIGEgbmV3IGpRdWVyeSBtYXRjaGVkIGVsZW1lbnQgc2V0XG5cdFx0dmFyIHJldCA9IGpRdWVyeS5tZXJnZSggdGhpcy5jb25zdHJ1Y3RvcigpLCBlbGVtcyApO1xuXG5cdFx0Ly8gQWRkIHRoZSBvbGQgb2JqZWN0IG9udG8gdGhlIHN0YWNrIChhcyBhIHJlZmVyZW5jZSlcblx0XHRyZXQucHJldk9iamVjdCA9IHRoaXM7XG5cblx0XHQvLyBSZXR1cm4gdGhlIG5ld2x5LWZvcm1lZCBlbGVtZW50IHNldFxuXHRcdHJldHVybiByZXQ7XG5cdH0sXG5cblx0Ly8gRXhlY3V0ZSBhIGNhbGxiYWNrIGZvciBldmVyeSBlbGVtZW50IGluIHRoZSBtYXRjaGVkIHNldC5cblx0ZWFjaDogZnVuY3Rpb24oIGNhbGxiYWNrICkge1xuXHRcdHJldHVybiBqUXVlcnkuZWFjaCggdGhpcywgY2FsbGJhY2sgKTtcblx0fSxcblxuXHRtYXA6IGZ1bmN0aW9uKCBjYWxsYmFjayApIHtcblx0XHRyZXR1cm4gdGhpcy5wdXNoU3RhY2soIGpRdWVyeS5tYXAoIHRoaXMsIGZ1bmN0aW9uKCBlbGVtLCBpICkge1xuXHRcdFx0cmV0dXJuIGNhbGxiYWNrLmNhbGwoIGVsZW0sIGksIGVsZW0gKTtcblx0XHR9ICkgKTtcblx0fSxcblxuXHRzbGljZTogZnVuY3Rpb24oKSB7XG5cdFx0cmV0dXJuIHRoaXMucHVzaFN0YWNrKCBzbGljZS5hcHBseSggdGhpcywgYXJndW1lbnRzICkgKTtcblx0fSxcblxuXHRmaXJzdDogZnVuY3Rpb24oKSB7XG5cdFx0cmV0dXJuIHRoaXMuZXEoIDAgKTtcblx0fSxcblxuXHRsYXN0OiBmdW5jdGlvbigpIHtcblx0XHRyZXR1cm4gdGhpcy5lcSggLTEgKTtcblx0fSxcblxuXHRldmVuOiBmdW5jdGlvbigpIHtcblx0XHRyZXR1cm4gdGhpcy5wdXNoU3RhY2soIGpRdWVyeS5ncmVwKCB0aGlzLCBmdW5jdGlvbiggX2VsZW0sIGkgKSB7XG5cdFx0XHRyZXR1cm4gKCBpICsgMSApICUgMjtcblx0XHR9ICkgKTtcblx0fSxcblxuXHRvZGQ6IGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiB0aGlzLnB1c2hTdGFjayggalF1ZXJ5LmdyZXAoIHRoaXMsIGZ1bmN0aW9uKCBfZWxlbSwgaSApIHtcblx0XHRcdHJldHVybiBpICUgMjtcblx0XHR9ICkgKTtcblx0fSxcblxuXHRlcTogZnVuY3Rpb24oIGkgKSB7XG5cdFx0dmFyIGxlbiA9IHRoaXMubGVuZ3RoLFxuXHRcdFx0aiA9ICtpICsgKCBpIDwgMCA/IGxlbiA6IDAgKTtcblx0XHRyZXR1cm4gdGhpcy5wdXNoU3RhY2soIGogPj0gMCAmJiBqIDwgbGVuID8gWyB0aGlzWyBqIF0gXSA6IFtdICk7XG5cdH0sXG5cblx0ZW5kOiBmdW5jdGlvbigpIHtcblx0XHRyZXR1cm4gdGhpcy5wcmV2T2JqZWN0IHx8IHRoaXMuY29uc3RydWN0b3IoKTtcblx0fSxcblxuXHQvLyBGb3IgaW50ZXJuYWwgdXNlIG9ubHkuXG5cdC8vIEJlaGF2ZXMgbGlrZSBhbiBBcnJheSdzIG1ldGhvZCwgbm90IGxpa2UgYSBqUXVlcnkgbWV0aG9kLlxuXHRwdXNoOiBwdXNoLFxuXHRzb3J0OiBhcnIuc29ydCxcblx0c3BsaWNlOiBhcnIuc3BsaWNlXG59O1xuXG5qUXVlcnkuZXh0ZW5kID0galF1ZXJ5LmZuLmV4dGVuZCA9IGZ1bmN0aW9uKCkge1xuXHR2YXIgb3B0aW9ucywgbmFtZSwgc3JjLCBjb3B5LCBjb3B5SXNBcnJheSwgY2xvbmUsXG5cdFx0dGFyZ2V0ID0gYXJndW1lbnRzWyAwIF0gfHwge30sXG5cdFx0aSA9IDEsXG5cdFx0bGVuZ3RoID0gYXJndW1lbnRzLmxlbmd0aCxcblx0XHRkZWVwID0gZmFsc2U7XG5cblx0Ly8gSGFuZGxlIGEgZGVlcCBjb3B5IHNpdHVhdGlvblxuXHRpZiAoIHR5cGVvZiB0YXJnZXQgPT09IFwiYm9vbGVhblwiICkge1xuXHRcdGRlZXAgPSB0YXJnZXQ7XG5cblx0XHQvLyBTa2lwIHRoZSBib29sZWFuIGFuZCB0aGUgdGFyZ2V0XG5cdFx0dGFyZ2V0ID0gYXJndW1lbnRzWyBpIF0gfHwge307XG5cdFx0aSsrO1xuXHR9XG5cblx0Ly8gSGFuZGxlIGNhc2Ugd2hlbiB0YXJnZXQgaXMgYSBzdHJpbmcgb3Igc29tZXRoaW5nIChwb3NzaWJsZSBpbiBkZWVwIGNvcHkpXG5cdGlmICggdHlwZW9mIHRhcmdldCAhPT0gXCJvYmplY3RcIiAmJiAhaXNGdW5jdGlvbiggdGFyZ2V0ICkgKSB7XG5cdFx0dGFyZ2V0ID0ge307XG5cdH1cblxuXHQvLyBFeHRlbmQgalF1ZXJ5IGl0c2VsZiBpZiBvbmx5IG9uZSBhcmd1bWVudCBpcyBwYXNzZWRcblx0aWYgKCBpID09PSBsZW5ndGggKSB7XG5cdFx0dGFyZ2V0ID0gdGhpcztcblx0XHRpLS07XG5cdH1cblxuXHRmb3IgKCA7IGkgPCBsZW5ndGg7IGkrKyApIHtcblxuXHRcdC8vIE9ubHkgZGVhbCB3aXRoIG5vbi1udWxsL3VuZGVmaW5lZCB2YWx1ZXNcblx0XHRpZiAoICggb3B0aW9ucyA9IGFyZ3VtZW50c1sgaSBdICkgIT0gbnVsbCApIHtcblxuXHRcdFx0Ly8gRXh0ZW5kIHRoZSBiYXNlIG9iamVjdFxuXHRcdFx0Zm9yICggbmFtZSBpbiBvcHRpb25zICkge1xuXHRcdFx0XHRjb3B5ID0gb3B0aW9uc1sgbmFtZSBdO1xuXG5cdFx0XHRcdC8vIFByZXZlbnQgT2JqZWN0LnByb3RvdHlwZSBwb2xsdXRpb25cblx0XHRcdFx0Ly8gUHJldmVudCBuZXZlci1lbmRpbmcgbG9vcFxuXHRcdFx0XHRpZiAoIG5hbWUgPT09IFwiX19wcm90b19fXCIgfHwgdGFyZ2V0ID09PSBjb3B5ICkge1xuXHRcdFx0XHRcdGNvbnRpbnVlO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gUmVjdXJzZSBpZiB3ZSdyZSBtZXJnaW5nIHBsYWluIG9iamVjdHMgb3IgYXJyYXlzXG5cdFx0XHRcdGlmICggZGVlcCAmJiBjb3B5ICYmICggalF1ZXJ5LmlzUGxhaW5PYmplY3QoIGNvcHkgKSB8fFxuXHRcdFx0XHRcdCggY29weUlzQXJyYXkgPSBBcnJheS5pc0FycmF5KCBjb3B5ICkgKSApICkge1xuXHRcdFx0XHRcdHNyYyA9IHRhcmdldFsgbmFtZSBdO1xuXG5cdFx0XHRcdFx0Ly8gRW5zdXJlIHByb3BlciB0eXBlIGZvciB0aGUgc291cmNlIHZhbHVlXG5cdFx0XHRcdFx0aWYgKCBjb3B5SXNBcnJheSAmJiAhQXJyYXkuaXNBcnJheSggc3JjICkgKSB7XG5cdFx0XHRcdFx0XHRjbG9uZSA9IFtdO1xuXHRcdFx0XHRcdH0gZWxzZSBpZiAoICFjb3B5SXNBcnJheSAmJiAhalF1ZXJ5LmlzUGxhaW5PYmplY3QoIHNyYyApICkge1xuXHRcdFx0XHRcdFx0Y2xvbmUgPSB7fTtcblx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0Y2xvbmUgPSBzcmM7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdGNvcHlJc0FycmF5ID0gZmFsc2U7XG5cblx0XHRcdFx0XHQvLyBOZXZlciBtb3ZlIG9yaWdpbmFsIG9iamVjdHMsIGNsb25lIHRoZW1cblx0XHRcdFx0XHR0YXJnZXRbIG5hbWUgXSA9IGpRdWVyeS5leHRlbmQoIGRlZXAsIGNsb25lLCBjb3B5ICk7XG5cblx0XHRcdFx0Ly8gRG9uJ3QgYnJpbmcgaW4gdW5kZWZpbmVkIHZhbHVlc1xuXHRcdFx0XHR9IGVsc2UgaWYgKCBjb3B5ICE9PSB1bmRlZmluZWQgKSB7XG5cdFx0XHRcdFx0dGFyZ2V0WyBuYW1lIF0gPSBjb3B5O1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0Ly8gUmV0dXJuIHRoZSBtb2RpZmllZCBvYmplY3Rcblx0cmV0dXJuIHRhcmdldDtcbn07XG5cbmpRdWVyeS5leHRlbmQoIHtcblxuXHQvLyBVbmlxdWUgZm9yIGVhY2ggY29weSBvZiBqUXVlcnkgb24gdGhlIHBhZ2Vcblx0ZXhwYW5kbzogXCJqUXVlcnlcIiArICggdmVyc2lvbiArIE1hdGgucmFuZG9tKCkgKS5yZXBsYWNlKCAvXFxEL2csIFwiXCIgKSxcblxuXHQvLyBBc3N1bWUgalF1ZXJ5IGlzIHJlYWR5IHdpdGhvdXQgdGhlIHJlYWR5IG1vZHVsZVxuXHRpc1JlYWR5OiB0cnVlLFxuXG5cdGVycm9yOiBmdW5jdGlvbiggbXNnICkge1xuXHRcdHRocm93IG5ldyBFcnJvciggbXNnICk7XG5cdH0sXG5cblx0bm9vcDogZnVuY3Rpb24oKSB7fSxcblxuXHRpc1BsYWluT2JqZWN0OiBmdW5jdGlvbiggb2JqICkge1xuXHRcdHZhciBwcm90bywgQ3RvcjtcblxuXHRcdC8vIERldGVjdCBvYnZpb3VzIG5lZ2F0aXZlc1xuXHRcdC8vIFVzZSB0b1N0cmluZyBpbnN0ZWFkIG9mIGpRdWVyeS50eXBlIHRvIGNhdGNoIGhvc3Qgb2JqZWN0c1xuXHRcdGlmICggIW9iaiB8fCB0b1N0cmluZy5jYWxsKCBvYmogKSAhPT0gXCJbb2JqZWN0IE9iamVjdF1cIiApIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHRwcm90byA9IGdldFByb3RvKCBvYmogKTtcblxuXHRcdC8vIE9iamVjdHMgd2l0aCBubyBwcm90b3R5cGUgKGUuZy4sIGBPYmplY3QuY3JlYXRlKCBudWxsIClgKSBhcmUgcGxhaW5cblx0XHRpZiAoICFwcm90byApIHtcblx0XHRcdHJldHVybiB0cnVlO1xuXHRcdH1cblxuXHRcdC8vIE9iamVjdHMgd2l0aCBwcm90b3R5cGUgYXJlIHBsYWluIGlmZiB0aGV5IHdlcmUgY29uc3RydWN0ZWQgYnkgYSBnbG9iYWwgT2JqZWN0IGZ1bmN0aW9uXG5cdFx0Q3RvciA9IGhhc093bi5jYWxsKCBwcm90bywgXCJjb25zdHJ1Y3RvclwiICkgJiYgcHJvdG8uY29uc3RydWN0b3I7XG5cdFx0cmV0dXJuIHR5cGVvZiBDdG9yID09PSBcImZ1bmN0aW9uXCIgJiYgZm5Ub1N0cmluZy5jYWxsKCBDdG9yICkgPT09IE9iamVjdEZ1bmN0aW9uU3RyaW5nO1xuXHR9LFxuXG5cdGlzRW1wdHlPYmplY3Q6IGZ1bmN0aW9uKCBvYmogKSB7XG5cdFx0dmFyIG5hbWU7XG5cblx0XHRmb3IgKCBuYW1lIGluIG9iaiApIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cdFx0cmV0dXJuIHRydWU7XG5cdH0sXG5cblx0Ly8gRXZhbHVhdGVzIGEgc2NyaXB0IGluIGEgcHJvdmlkZWQgY29udGV4dDsgZmFsbHMgYmFjayB0byB0aGUgZ2xvYmFsIG9uZVxuXHQvLyBpZiBub3Qgc3BlY2lmaWVkLlxuXHRnbG9iYWxFdmFsOiBmdW5jdGlvbiggY29kZSwgb3B0aW9ucywgZG9jICkge1xuXHRcdERPTUV2YWwoIGNvZGUsIHsgbm9uY2U6IG9wdGlvbnMgJiYgb3B0aW9ucy5ub25jZSB9LCBkb2MgKTtcblx0fSxcblxuXHRlYWNoOiBmdW5jdGlvbiggb2JqLCBjYWxsYmFjayApIHtcblx0XHR2YXIgbGVuZ3RoLCBpID0gMDtcblxuXHRcdGlmICggaXNBcnJheUxpa2UoIG9iaiApICkge1xuXHRcdFx0bGVuZ3RoID0gb2JqLmxlbmd0aDtcblx0XHRcdGZvciAoIDsgaSA8IGxlbmd0aDsgaSsrICkge1xuXHRcdFx0XHRpZiAoIGNhbGxiYWNrLmNhbGwoIG9ialsgaSBdLCBpLCBvYmpbIGkgXSApID09PSBmYWxzZSApIHtcblx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH0gZWxzZSB7XG5cdFx0XHRmb3IgKCBpIGluIG9iaiApIHtcblx0XHRcdFx0aWYgKCBjYWxsYmFjay5jYWxsKCBvYmpbIGkgXSwgaSwgb2JqWyBpIF0gKSA9PT0gZmFsc2UgKSB7XG5cdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cblx0XHRyZXR1cm4gb2JqO1xuXHR9LFxuXG5cdC8vIHJlc3VsdHMgaXMgZm9yIGludGVybmFsIHVzYWdlIG9ubHlcblx0bWFrZUFycmF5OiBmdW5jdGlvbiggYXJyLCByZXN1bHRzICkge1xuXHRcdHZhciByZXQgPSByZXN1bHRzIHx8IFtdO1xuXG5cdFx0aWYgKCBhcnIgIT0gbnVsbCApIHtcblx0XHRcdGlmICggaXNBcnJheUxpa2UoIE9iamVjdCggYXJyICkgKSApIHtcblx0XHRcdFx0alF1ZXJ5Lm1lcmdlKCByZXQsXG5cdFx0XHRcdFx0dHlwZW9mIGFyciA9PT0gXCJzdHJpbmdcIiA/XG5cdFx0XHRcdFx0WyBhcnIgXSA6IGFyclxuXHRcdFx0XHQpO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0cHVzaC5jYWxsKCByZXQsIGFyciApO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdHJldHVybiByZXQ7XG5cdH0sXG5cblx0aW5BcnJheTogZnVuY3Rpb24oIGVsZW0sIGFyciwgaSApIHtcblx0XHRyZXR1cm4gYXJyID09IG51bGwgPyAtMSA6IGluZGV4T2YuY2FsbCggYXJyLCBlbGVtLCBpICk7XG5cdH0sXG5cblx0Ly8gU3VwcG9ydDogQW5kcm9pZCA8PTQuMCBvbmx5LCBQaGFudG9tSlMgMSBvbmx5XG5cdC8vIHB1c2guYXBwbHkoXywgYXJyYXlsaWtlKSB0aHJvd3Mgb24gYW5jaWVudCBXZWJLaXRcblx0bWVyZ2U6IGZ1bmN0aW9uKCBmaXJzdCwgc2Vjb25kICkge1xuXHRcdHZhciBsZW4gPSArc2Vjb25kLmxlbmd0aCxcblx0XHRcdGogPSAwLFxuXHRcdFx0aSA9IGZpcnN0Lmxlbmd0aDtcblxuXHRcdGZvciAoIDsgaiA8IGxlbjsgaisrICkge1xuXHRcdFx0Zmlyc3RbIGkrKyBdID0gc2Vjb25kWyBqIF07XG5cdFx0fVxuXG5cdFx0Zmlyc3QubGVuZ3RoID0gaTtcblxuXHRcdHJldHVybiBmaXJzdDtcblx0fSxcblxuXHRncmVwOiBmdW5jdGlvbiggZWxlbXMsIGNhbGxiYWNrLCBpbnZlcnQgKSB7XG5cdFx0dmFyIGNhbGxiYWNrSW52ZXJzZSxcblx0XHRcdG1hdGNoZXMgPSBbXSxcblx0XHRcdGkgPSAwLFxuXHRcdFx0bGVuZ3RoID0gZWxlbXMubGVuZ3RoLFxuXHRcdFx0Y2FsbGJhY2tFeHBlY3QgPSAhaW52ZXJ0O1xuXG5cdFx0Ly8gR28gdGhyb3VnaCB0aGUgYXJyYXksIG9ubHkgc2F2aW5nIHRoZSBpdGVtc1xuXHRcdC8vIHRoYXQgcGFzcyB0aGUgdmFsaWRhdG9yIGZ1bmN0aW9uXG5cdFx0Zm9yICggOyBpIDwgbGVuZ3RoOyBpKysgKSB7XG5cdFx0XHRjYWxsYmFja0ludmVyc2UgPSAhY2FsbGJhY2soIGVsZW1zWyBpIF0sIGkgKTtcblx0XHRcdGlmICggY2FsbGJhY2tJbnZlcnNlICE9PSBjYWxsYmFja0V4cGVjdCApIHtcblx0XHRcdFx0bWF0Y2hlcy5wdXNoKCBlbGVtc1sgaSBdICk7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0cmV0dXJuIG1hdGNoZXM7XG5cdH0sXG5cblx0Ly8gYXJnIGlzIGZvciBpbnRlcm5hbCB1c2FnZSBvbmx5XG5cdG1hcDogZnVuY3Rpb24oIGVsZW1zLCBjYWxsYmFjaywgYXJnICkge1xuXHRcdHZhciBsZW5ndGgsIHZhbHVlLFxuXHRcdFx0aSA9IDAsXG5cdFx0XHRyZXQgPSBbXTtcblxuXHRcdC8vIEdvIHRocm91Z2ggdGhlIGFycmF5LCB0cmFuc2xhdGluZyBlYWNoIG9mIHRoZSBpdGVtcyB0byB0aGVpciBuZXcgdmFsdWVzXG5cdFx0aWYgKCBpc0FycmF5TGlrZSggZWxlbXMgKSApIHtcblx0XHRcdGxlbmd0aCA9IGVsZW1zLmxlbmd0aDtcblx0XHRcdGZvciAoIDsgaSA8IGxlbmd0aDsgaSsrICkge1xuXHRcdFx0XHR2YWx1ZSA9IGNhbGxiYWNrKCBlbGVtc1sgaSBdLCBpLCBhcmcgKTtcblxuXHRcdFx0XHRpZiAoIHZhbHVlICE9IG51bGwgKSB7XG5cdFx0XHRcdFx0cmV0LnB1c2goIHZhbHVlICk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblxuXHRcdC8vIEdvIHRocm91Z2ggZXZlcnkga2V5IG9uIHRoZSBvYmplY3QsXG5cdFx0fSBlbHNlIHtcblx0XHRcdGZvciAoIGkgaW4gZWxlbXMgKSB7XG5cdFx0XHRcdHZhbHVlID0gY2FsbGJhY2soIGVsZW1zWyBpIF0sIGksIGFyZyApO1xuXG5cdFx0XHRcdGlmICggdmFsdWUgIT0gbnVsbCApIHtcblx0XHRcdFx0XHRyZXQucHVzaCggdmFsdWUgKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblxuXHRcdC8vIEZsYXR0ZW4gYW55IG5lc3RlZCBhcnJheXNcblx0XHRyZXR1cm4gZmxhdCggcmV0ICk7XG5cdH0sXG5cblx0Ly8gQSBnbG9iYWwgR1VJRCBjb3VudGVyIGZvciBvYmplY3RzXG5cdGd1aWQ6IDEsXG5cblx0Ly8galF1ZXJ5LnN1cHBvcnQgaXMgbm90IHVzZWQgaW4gQ29yZSBidXQgb3RoZXIgcHJvamVjdHMgYXR0YWNoIHRoZWlyXG5cdC8vIHByb3BlcnRpZXMgdG8gaXQgc28gaXQgbmVlZHMgdG8gZXhpc3QuXG5cdHN1cHBvcnQ6IHN1cHBvcnRcbn0gKTtcblxuaWYgKCB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgKSB7XG5cdGpRdWVyeS5mblsgU3ltYm9sLml0ZXJhdG9yIF0gPSBhcnJbIFN5bWJvbC5pdGVyYXRvciBdO1xufVxuXG4vLyBQb3B1bGF0ZSB0aGUgY2xhc3MydHlwZSBtYXBcbmpRdWVyeS5lYWNoKCBcIkJvb2xlYW4gTnVtYmVyIFN0cmluZyBGdW5jdGlvbiBBcnJheSBEYXRlIFJlZ0V4cCBPYmplY3QgRXJyb3IgU3ltYm9sXCIuc3BsaXQoIFwiIFwiICksXG5mdW5jdGlvbiggX2ksIG5hbWUgKSB7XG5cdGNsYXNzMnR5cGVbIFwiW29iamVjdCBcIiArIG5hbWUgKyBcIl1cIiBdID0gbmFtZS50b0xvd2VyQ2FzZSgpO1xufSApO1xuXG5mdW5jdGlvbiBpc0FycmF5TGlrZSggb2JqICkge1xuXG5cdC8vIFN1cHBvcnQ6IHJlYWwgaU9TIDguMiBvbmx5IChub3QgcmVwcm9kdWNpYmxlIGluIHNpbXVsYXRvcilcblx0Ly8gYGluYCBjaGVjayB1c2VkIHRvIHByZXZlbnQgSklUIGVycm9yIChnaC0yMTQ1KVxuXHQvLyBoYXNPd24gaXNuJ3QgdXNlZCBoZXJlIGR1ZSB0byBmYWxzZSBuZWdhdGl2ZXNcblx0Ly8gcmVnYXJkaW5nIE5vZGVsaXN0IGxlbmd0aCBpbiBJRVxuXHR2YXIgbGVuZ3RoID0gISFvYmogJiYgXCJsZW5ndGhcIiBpbiBvYmogJiYgb2JqLmxlbmd0aCxcblx0XHR0eXBlID0gdG9UeXBlKCBvYmogKTtcblxuXHRpZiAoIGlzRnVuY3Rpb24oIG9iaiApIHx8IGlzV2luZG93KCBvYmogKSApIHtcblx0XHRyZXR1cm4gZmFsc2U7XG5cdH1cblxuXHRyZXR1cm4gdHlwZSA9PT0gXCJhcnJheVwiIHx8IGxlbmd0aCA9PT0gMCB8fFxuXHRcdHR5cGVvZiBsZW5ndGggPT09IFwibnVtYmVyXCIgJiYgbGVuZ3RoID4gMCAmJiAoIGxlbmd0aCAtIDEgKSBpbiBvYmo7XG59XG52YXIgU2l6emxlID1cbi8qIVxuICogU2l6emxlIENTUyBTZWxlY3RvciBFbmdpbmUgdjIuMy41XG4gKiBodHRwczovL3NpenpsZWpzLmNvbS9cbiAqXG4gKiBDb3B5cmlnaHQgSlMgRm91bmRhdGlvbiBhbmQgb3RoZXIgY29udHJpYnV0b3JzXG4gKiBSZWxlYXNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2VcbiAqIGh0dHBzOi8vanMuZm91bmRhdGlvbi9cbiAqXG4gKiBEYXRlOiAyMDIwLTAzLTE0XG4gKi9cbiggZnVuY3Rpb24oIHdpbmRvdyApIHtcbnZhciBpLFxuXHRzdXBwb3J0LFxuXHRFeHByLFxuXHRnZXRUZXh0LFxuXHRpc1hNTCxcblx0dG9rZW5pemUsXG5cdGNvbXBpbGUsXG5cdHNlbGVjdCxcblx0b3V0ZXJtb3N0Q29udGV4dCxcblx0c29ydElucHV0LFxuXHRoYXNEdXBsaWNhdGUsXG5cblx0Ly8gTG9jYWwgZG9jdW1lbnQgdmFyc1xuXHRzZXREb2N1bWVudCxcblx0ZG9jdW1lbnQsXG5cdGRvY0VsZW0sXG5cdGRvY3VtZW50SXNIVE1MLFxuXHRyYnVnZ3lRU0EsXG5cdHJidWdneU1hdGNoZXMsXG5cdG1hdGNoZXMsXG5cdGNvbnRhaW5zLFxuXG5cdC8vIEluc3RhbmNlLXNwZWNpZmljIGRhdGFcblx0ZXhwYW5kbyA9IFwic2l6emxlXCIgKyAxICogbmV3IERhdGUoKSxcblx0cHJlZmVycmVkRG9jID0gd2luZG93LmRvY3VtZW50LFxuXHRkaXJydW5zID0gMCxcblx0ZG9uZSA9IDAsXG5cdGNsYXNzQ2FjaGUgPSBjcmVhdGVDYWNoZSgpLFxuXHR0b2tlbkNhY2hlID0gY3JlYXRlQ2FjaGUoKSxcblx0Y29tcGlsZXJDYWNoZSA9IGNyZWF0ZUNhY2hlKCksXG5cdG5vbm5hdGl2ZVNlbGVjdG9yQ2FjaGUgPSBjcmVhdGVDYWNoZSgpLFxuXHRzb3J0T3JkZXIgPSBmdW5jdGlvbiggYSwgYiApIHtcblx0XHRpZiAoIGEgPT09IGIgKSB7XG5cdFx0XHRoYXNEdXBsaWNhdGUgPSB0cnVlO1xuXHRcdH1cblx0XHRyZXR1cm4gMDtcblx0fSxcblxuXHQvLyBJbnN0YW5jZSBtZXRob2RzXG5cdGhhc093biA9ICgge30gKS5oYXNPd25Qcm9wZXJ0eSxcblx0YXJyID0gW10sXG5cdHBvcCA9IGFyci5wb3AsXG5cdHB1c2hOYXRpdmUgPSBhcnIucHVzaCxcblx0cHVzaCA9IGFyci5wdXNoLFxuXHRzbGljZSA9IGFyci5zbGljZSxcblxuXHQvLyBVc2UgYSBzdHJpcHBlZC1kb3duIGluZGV4T2YgYXMgaXQncyBmYXN0ZXIgdGhhbiBuYXRpdmVcblx0Ly8gaHR0cHM6Ly9qc3BlcmYuY29tL3Rob3ItaW5kZXhvZi12cy1mb3IvNVxuXHRpbmRleE9mID0gZnVuY3Rpb24oIGxpc3QsIGVsZW0gKSB7XG5cdFx0dmFyIGkgPSAwLFxuXHRcdFx0bGVuID0gbGlzdC5sZW5ndGg7XG5cdFx0Zm9yICggOyBpIDwgbGVuOyBpKysgKSB7XG5cdFx0XHRpZiAoIGxpc3RbIGkgXSA9PT0gZWxlbSApIHtcblx0XHRcdFx0cmV0dXJuIGk7XG5cdFx0XHR9XG5cdFx0fVxuXHRcdHJldHVybiAtMTtcblx0fSxcblxuXHRib29sZWFucyA9IFwiY2hlY2tlZHxzZWxlY3RlZHxhc3luY3xhdXRvZm9jdXN8YXV0b3BsYXl8Y29udHJvbHN8ZGVmZXJ8ZGlzYWJsZWR8aGlkZGVufFwiICtcblx0XHRcImlzbWFwfGxvb3B8bXVsdGlwbGV8b3BlbnxyZWFkb25seXxyZXF1aXJlZHxzY29wZWRcIixcblxuXHQvLyBSZWd1bGFyIGV4cHJlc3Npb25zXG5cblx0Ly8gaHR0cDovL3d3dy53My5vcmcvVFIvY3NzMy1zZWxlY3RvcnMvI3doaXRlc3BhY2Vcblx0d2hpdGVzcGFjZSA9IFwiW1xcXFx4MjBcXFxcdFxcXFxyXFxcXG5cXFxcZl1cIixcblxuXHQvLyBodHRwczovL3d3dy53My5vcmcvVFIvY3NzLXN5bnRheC0zLyNpZGVudC10b2tlbi1kaWFncmFtXG5cdGlkZW50aWZpZXIgPSBcIig/OlxcXFxcXFxcW1xcXFxkYS1mQS1GXXsxLDZ9XCIgKyB3aGl0ZXNwYWNlICtcblx0XHRcIj98XFxcXFxcXFxbXlxcXFxyXFxcXG5cXFxcZl18W1xcXFx3LV18W15cXDAtXFxcXHg3Zl0pK1wiLFxuXG5cdC8vIEF0dHJpYnV0ZSBzZWxlY3RvcnM6IGh0dHA6Ly93d3cudzMub3JnL1RSL3NlbGVjdG9ycy8jYXR0cmlidXRlLXNlbGVjdG9yc1xuXHRhdHRyaWJ1dGVzID0gXCJcXFxcW1wiICsgd2hpdGVzcGFjZSArIFwiKihcIiArIGlkZW50aWZpZXIgKyBcIikoPzpcIiArIHdoaXRlc3BhY2UgK1xuXG5cdFx0Ly8gT3BlcmF0b3IgKGNhcHR1cmUgMilcblx0XHRcIiooWypeJHwhfl0/PSlcIiArIHdoaXRlc3BhY2UgK1xuXG5cdFx0Ly8gXCJBdHRyaWJ1dGUgdmFsdWVzIG11c3QgYmUgQ1NTIGlkZW50aWZpZXJzIFtjYXB0dXJlIDVdXG5cdFx0Ly8gb3Igc3RyaW5ncyBbY2FwdHVyZSAzIG9yIGNhcHR1cmUgNF1cIlxuXHRcdFwiKig/OicoKD86XFxcXFxcXFwufFteXFxcXFxcXFwnXSkqKSd8XFxcIigoPzpcXFxcXFxcXC58W15cXFxcXFxcXFxcXCJdKSopXFxcInwoXCIgKyBpZGVudGlmaWVyICsgXCIpKXwpXCIgK1xuXHRcdHdoaXRlc3BhY2UgKyBcIipcXFxcXVwiLFxuXG5cdHBzZXVkb3MgPSBcIjooXCIgKyBpZGVudGlmaWVyICsgXCIpKD86XFxcXCgoXCIgK1xuXG5cdFx0Ly8gVG8gcmVkdWNlIHRoZSBudW1iZXIgb2Ygc2VsZWN0b3JzIG5lZWRpbmcgdG9rZW5pemUgaW4gdGhlIHByZUZpbHRlciwgcHJlZmVyIGFyZ3VtZW50czpcblx0XHQvLyAxLiBxdW90ZWQgKGNhcHR1cmUgMzsgY2FwdHVyZSA0IG9yIGNhcHR1cmUgNSlcblx0XHRcIignKCg/OlxcXFxcXFxcLnxbXlxcXFxcXFxcJ10pKiknfFxcXCIoKD86XFxcXFxcXFwufFteXFxcXFxcXFxcXFwiXSkqKVxcXCIpfFwiICtcblxuXHRcdC8vIDIuIHNpbXBsZSAoY2FwdHVyZSA2KVxuXHRcdFwiKCg/OlxcXFxcXFxcLnxbXlxcXFxcXFxcKClbXFxcXF1dfFwiICsgYXR0cmlidXRlcyArIFwiKSopfFwiICtcblxuXHRcdC8vIDMuIGFueXRoaW5nIGVsc2UgKGNhcHR1cmUgMilcblx0XHRcIi4qXCIgK1xuXHRcdFwiKVxcXFwpfClcIixcblxuXHQvLyBMZWFkaW5nIGFuZCBub24tZXNjYXBlZCB0cmFpbGluZyB3aGl0ZXNwYWNlLCBjYXB0dXJpbmcgc29tZSBub24td2hpdGVzcGFjZSBjaGFyYWN0ZXJzIHByZWNlZGluZyB0aGUgbGF0dGVyXG5cdHJ3aGl0ZXNwYWNlID0gbmV3IFJlZ0V4cCggd2hpdGVzcGFjZSArIFwiK1wiLCBcImdcIiApLFxuXHRydHJpbSA9IG5ldyBSZWdFeHAoIFwiXlwiICsgd2hpdGVzcGFjZSArIFwiK3woKD86XnxbXlxcXFxcXFxcXSkoPzpcXFxcXFxcXC4pKilcIiArXG5cdFx0d2hpdGVzcGFjZSArIFwiKyRcIiwgXCJnXCIgKSxcblxuXHRyY29tbWEgPSBuZXcgUmVnRXhwKCBcIl5cIiArIHdoaXRlc3BhY2UgKyBcIiosXCIgKyB3aGl0ZXNwYWNlICsgXCIqXCIgKSxcblx0cmNvbWJpbmF0b3JzID0gbmV3IFJlZ0V4cCggXCJeXCIgKyB3aGl0ZXNwYWNlICsgXCIqKFs+K35dfFwiICsgd2hpdGVzcGFjZSArIFwiKVwiICsgd2hpdGVzcGFjZSArXG5cdFx0XCIqXCIgKSxcblx0cmRlc2NlbmQgPSBuZXcgUmVnRXhwKCB3aGl0ZXNwYWNlICsgXCJ8PlwiICksXG5cblx0cnBzZXVkbyA9IG5ldyBSZWdFeHAoIHBzZXVkb3MgKSxcblx0cmlkZW50aWZpZXIgPSBuZXcgUmVnRXhwKCBcIl5cIiArIGlkZW50aWZpZXIgKyBcIiRcIiApLFxuXG5cdG1hdGNoRXhwciA9IHtcblx0XHRcIklEXCI6IG5ldyBSZWdFeHAoIFwiXiMoXCIgKyBpZGVudGlmaWVyICsgXCIpXCIgKSxcblx0XHRcIkNMQVNTXCI6IG5ldyBSZWdFeHAoIFwiXlxcXFwuKFwiICsgaWRlbnRpZmllciArIFwiKVwiICksXG5cdFx0XCJUQUdcIjogbmV3IFJlZ0V4cCggXCJeKFwiICsgaWRlbnRpZmllciArIFwifFsqXSlcIiApLFxuXHRcdFwiQVRUUlwiOiBuZXcgUmVnRXhwKCBcIl5cIiArIGF0dHJpYnV0ZXMgKSxcblx0XHRcIlBTRVVET1wiOiBuZXcgUmVnRXhwKCBcIl5cIiArIHBzZXVkb3MgKSxcblx0XHRcIkNISUxEXCI6IG5ldyBSZWdFeHAoIFwiXjoob25seXxmaXJzdHxsYXN0fG50aHxudGgtbGFzdCktKGNoaWxkfG9mLXR5cGUpKD86XFxcXChcIiArXG5cdFx0XHR3aGl0ZXNwYWNlICsgXCIqKGV2ZW58b2RkfCgoWystXXwpKFxcXFxkKilufClcIiArIHdoaXRlc3BhY2UgKyBcIiooPzooWystXXwpXCIgK1xuXHRcdFx0d2hpdGVzcGFjZSArIFwiKihcXFxcZCspfCkpXCIgKyB3aGl0ZXNwYWNlICsgXCIqXFxcXCl8KVwiLCBcImlcIiApLFxuXHRcdFwiYm9vbFwiOiBuZXcgUmVnRXhwKCBcIl4oPzpcIiArIGJvb2xlYW5zICsgXCIpJFwiLCBcImlcIiApLFxuXG5cdFx0Ly8gRm9yIHVzZSBpbiBsaWJyYXJpZXMgaW1wbGVtZW50aW5nIC5pcygpXG5cdFx0Ly8gV2UgdXNlIHRoaXMgZm9yIFBPUyBtYXRjaGluZyBpbiBgc2VsZWN0YFxuXHRcdFwibmVlZHNDb250ZXh0XCI6IG5ldyBSZWdFeHAoIFwiXlwiICsgd2hpdGVzcGFjZSArXG5cdFx0XHRcIipbPit+XXw6KGV2ZW58b2RkfGVxfGd0fGx0fG50aHxmaXJzdHxsYXN0KSg/OlxcXFwoXCIgKyB3aGl0ZXNwYWNlICtcblx0XHRcdFwiKigoPzotXFxcXGQpP1xcXFxkKilcIiArIHdoaXRlc3BhY2UgKyBcIipcXFxcKXwpKD89W14tXXwkKVwiLCBcImlcIiApXG5cdH0sXG5cblx0cmh0bWwgPSAvSFRNTCQvaSxcblx0cmlucHV0cyA9IC9eKD86aW5wdXR8c2VsZWN0fHRleHRhcmVhfGJ1dHRvbikkL2ksXG5cdHJoZWFkZXIgPSAvXmhcXGQkL2ksXG5cblx0cm5hdGl2ZSA9IC9eW157XStcXHtcXHMqXFxbbmF0aXZlIFxcdy8sXG5cblx0Ly8gRWFzaWx5LXBhcnNlYWJsZS9yZXRyaWV2YWJsZSBJRCBvciBUQUcgb3IgQ0xBU1Mgc2VsZWN0b3JzXG5cdHJxdWlja0V4cHIgPSAvXig/OiMoW1xcdy1dKyl8KFxcdyspfFxcLihbXFx3LV0rKSkkLyxcblxuXHRyc2libGluZyA9IC9bK35dLyxcblxuXHQvLyBDU1MgZXNjYXBlc1xuXHQvLyBodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS9zeW5kYXRhLmh0bWwjZXNjYXBlZC1jaGFyYWN0ZXJzXG5cdHJ1bmVzY2FwZSA9IG5ldyBSZWdFeHAoIFwiXFxcXFxcXFxbXFxcXGRhLWZBLUZdezEsNn1cIiArIHdoaXRlc3BhY2UgKyBcIj98XFxcXFxcXFwoW15cXFxcclxcXFxuXFxcXGZdKVwiLCBcImdcIiApLFxuXHRmdW5lc2NhcGUgPSBmdW5jdGlvbiggZXNjYXBlLCBub25IZXggKSB7XG5cdFx0dmFyIGhpZ2ggPSBcIjB4XCIgKyBlc2NhcGUuc2xpY2UoIDEgKSAtIDB4MTAwMDA7XG5cblx0XHRyZXR1cm4gbm9uSGV4ID9cblxuXHRcdFx0Ly8gU3RyaXAgdGhlIGJhY2tzbGFzaCBwcmVmaXggZnJvbSBhIG5vbi1oZXggZXNjYXBlIHNlcXVlbmNlXG5cdFx0XHRub25IZXggOlxuXG5cdFx0XHQvLyBSZXBsYWNlIGEgaGV4YWRlY2ltYWwgZXNjYXBlIHNlcXVlbmNlIHdpdGggdGhlIGVuY29kZWQgVW5pY29kZSBjb2RlIHBvaW50XG5cdFx0XHQvLyBTdXBwb3J0OiBJRSA8PTExK1xuXHRcdFx0Ly8gRm9yIHZhbHVlcyBvdXRzaWRlIHRoZSBCYXNpYyBNdWx0aWxpbmd1YWwgUGxhbmUgKEJNUCksIG1hbnVhbGx5IGNvbnN0cnVjdCBhXG5cdFx0XHQvLyBzdXJyb2dhdGUgcGFpclxuXHRcdFx0aGlnaCA8IDAgP1xuXHRcdFx0XHRTdHJpbmcuZnJvbUNoYXJDb2RlKCBoaWdoICsgMHgxMDAwMCApIDpcblx0XHRcdFx0U3RyaW5nLmZyb21DaGFyQ29kZSggaGlnaCA+PiAxMCB8IDB4RDgwMCwgaGlnaCAmIDB4M0ZGIHwgMHhEQzAwICk7XG5cdH0sXG5cblx0Ly8gQ1NTIHN0cmluZy9pZGVudGlmaWVyIHNlcmlhbGl6YXRpb25cblx0Ly8gaHR0cHM6Ly9kcmFmdHMuY3Nzd2cub3JnL2Nzc29tLyNjb21tb24tc2VyaWFsaXppbmctaWRpb21zXG5cdHJjc3Nlc2NhcGUgPSAvKFtcXDAtXFx4MWZcXHg3Zl18Xi0/XFxkKXxeLSR8W15cXDAtXFx4MWZcXHg3Zi1cXHVGRkZGXFx3LV0vZyxcblx0ZmNzc2VzY2FwZSA9IGZ1bmN0aW9uKCBjaCwgYXNDb2RlUG9pbnQgKSB7XG5cdFx0aWYgKCBhc0NvZGVQb2ludCApIHtcblxuXHRcdFx0Ly8gVSswMDAwIE5VTEwgYmVjb21lcyBVK0ZGRkQgUkVQTEFDRU1FTlQgQ0hBUkFDVEVSXG5cdFx0XHRpZiAoIGNoID09PSBcIlxcMFwiICkge1xuXHRcdFx0XHRyZXR1cm4gXCJcXHVGRkZEXCI7XG5cdFx0XHR9XG5cblx0XHRcdC8vIENvbnRyb2wgY2hhcmFjdGVycyBhbmQgKGRlcGVuZGVudCB1cG9uIHBvc2l0aW9uKSBudW1iZXJzIGdldCBlc2NhcGVkIGFzIGNvZGUgcG9pbnRzXG5cdFx0XHRyZXR1cm4gY2guc2xpY2UoIDAsIC0xICkgKyBcIlxcXFxcIiArXG5cdFx0XHRcdGNoLmNoYXJDb2RlQXQoIGNoLmxlbmd0aCAtIDEgKS50b1N0cmluZyggMTYgKSArIFwiIFwiO1xuXHRcdH1cblxuXHRcdC8vIE90aGVyIHBvdGVudGlhbGx5LXNwZWNpYWwgQVNDSUkgY2hhcmFjdGVycyBnZXQgYmFja3NsYXNoLWVzY2FwZWRcblx0XHRyZXR1cm4gXCJcXFxcXCIgKyBjaDtcblx0fSxcblxuXHQvLyBVc2VkIGZvciBpZnJhbWVzXG5cdC8vIFNlZSBzZXREb2N1bWVudCgpXG5cdC8vIFJlbW92aW5nIHRoZSBmdW5jdGlvbiB3cmFwcGVyIGNhdXNlcyBhIFwiUGVybWlzc2lvbiBEZW5pZWRcIlxuXHQvLyBlcnJvciBpbiBJRVxuXHR1bmxvYWRIYW5kbGVyID0gZnVuY3Rpb24oKSB7XG5cdFx0c2V0RG9jdW1lbnQoKTtcblx0fSxcblxuXHRpbkRpc2FibGVkRmllbGRzZXQgPSBhZGRDb21iaW5hdG9yKFxuXHRcdGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0cmV0dXJuIGVsZW0uZGlzYWJsZWQgPT09IHRydWUgJiYgZWxlbS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpID09PSBcImZpZWxkc2V0XCI7XG5cdFx0fSxcblx0XHR7IGRpcjogXCJwYXJlbnROb2RlXCIsIG5leHQ6IFwibGVnZW5kXCIgfVxuXHQpO1xuXG4vLyBPcHRpbWl6ZSBmb3IgcHVzaC5hcHBseSggXywgTm9kZUxpc3QgKVxudHJ5IHtcblx0cHVzaC5hcHBseShcblx0XHQoIGFyciA9IHNsaWNlLmNhbGwoIHByZWZlcnJlZERvYy5jaGlsZE5vZGVzICkgKSxcblx0XHRwcmVmZXJyZWREb2MuY2hpbGROb2Rlc1xuXHQpO1xuXG5cdC8vIFN1cHBvcnQ6IEFuZHJvaWQ8NC4wXG5cdC8vIERldGVjdCBzaWxlbnRseSBmYWlsaW5nIHB1c2guYXBwbHlcblx0Ly8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVudXNlZC1leHByZXNzaW9uc1xuXHRhcnJbIHByZWZlcnJlZERvYy5jaGlsZE5vZGVzLmxlbmd0aCBdLm5vZGVUeXBlO1xufSBjYXRjaCAoIGUgKSB7XG5cdHB1c2ggPSB7IGFwcGx5OiBhcnIubGVuZ3RoID9cblxuXHRcdC8vIExldmVyYWdlIHNsaWNlIGlmIHBvc3NpYmxlXG5cdFx0ZnVuY3Rpb24oIHRhcmdldCwgZWxzICkge1xuXHRcdFx0cHVzaE5hdGl2ZS5hcHBseSggdGFyZ2V0LCBzbGljZS5jYWxsKCBlbHMgKSApO1xuXHRcdH0gOlxuXG5cdFx0Ly8gU3VwcG9ydDogSUU8OVxuXHRcdC8vIE90aGVyd2lzZSBhcHBlbmQgZGlyZWN0bHlcblx0XHRmdW5jdGlvbiggdGFyZ2V0LCBlbHMgKSB7XG5cdFx0XHR2YXIgaiA9IHRhcmdldC5sZW5ndGgsXG5cdFx0XHRcdGkgPSAwO1xuXG5cdFx0XHQvLyBDYW4ndCB0cnVzdCBOb2RlTGlzdC5sZW5ndGhcblx0XHRcdHdoaWxlICggKCB0YXJnZXRbIGorKyBdID0gZWxzWyBpKysgXSApICkge31cblx0XHRcdHRhcmdldC5sZW5ndGggPSBqIC0gMTtcblx0XHR9XG5cdH07XG59XG5cbmZ1bmN0aW9uIFNpenpsZSggc2VsZWN0b3IsIGNvbnRleHQsIHJlc3VsdHMsIHNlZWQgKSB7XG5cdHZhciBtLCBpLCBlbGVtLCBuaWQsIG1hdGNoLCBncm91cHMsIG5ld1NlbGVjdG9yLFxuXHRcdG5ld0NvbnRleHQgPSBjb250ZXh0ICYmIGNvbnRleHQub3duZXJEb2N1bWVudCxcblxuXHRcdC8vIG5vZGVUeXBlIGRlZmF1bHRzIHRvIDksIHNpbmNlIGNvbnRleHQgZGVmYXVsdHMgdG8gZG9jdW1lbnRcblx0XHRub2RlVHlwZSA9IGNvbnRleHQgPyBjb250ZXh0Lm5vZGVUeXBlIDogOTtcblxuXHRyZXN1bHRzID0gcmVzdWx0cyB8fCBbXTtcblxuXHQvLyBSZXR1cm4gZWFybHkgZnJvbSBjYWxscyB3aXRoIGludmFsaWQgc2VsZWN0b3Igb3IgY29udGV4dFxuXHRpZiAoIHR5cGVvZiBzZWxlY3RvciAhPT0gXCJzdHJpbmdcIiB8fCAhc2VsZWN0b3IgfHxcblx0XHRub2RlVHlwZSAhPT0gMSAmJiBub2RlVHlwZSAhPT0gOSAmJiBub2RlVHlwZSAhPT0gMTEgKSB7XG5cblx0XHRyZXR1cm4gcmVzdWx0cztcblx0fVxuXG5cdC8vIFRyeSB0byBzaG9ydGN1dCBmaW5kIG9wZXJhdGlvbnMgKGFzIG9wcG9zZWQgdG8gZmlsdGVycykgaW4gSFRNTCBkb2N1bWVudHNcblx0aWYgKCAhc2VlZCApIHtcblx0XHRzZXREb2N1bWVudCggY29udGV4dCApO1xuXHRcdGNvbnRleHQgPSBjb250ZXh0IHx8IGRvY3VtZW50O1xuXG5cdFx0aWYgKCBkb2N1bWVudElzSFRNTCApIHtcblxuXHRcdFx0Ly8gSWYgdGhlIHNlbGVjdG9yIGlzIHN1ZmZpY2llbnRseSBzaW1wbGUsIHRyeSB1c2luZyBhIFwiZ2V0KkJ5KlwiIERPTSBtZXRob2Rcblx0XHRcdC8vIChleGNlcHRpbmcgRG9jdW1lbnRGcmFnbWVudCBjb250ZXh0LCB3aGVyZSB0aGUgbWV0aG9kcyBkb24ndCBleGlzdClcblx0XHRcdGlmICggbm9kZVR5cGUgIT09IDExICYmICggbWF0Y2ggPSBycXVpY2tFeHByLmV4ZWMoIHNlbGVjdG9yICkgKSApIHtcblxuXHRcdFx0XHQvLyBJRCBzZWxlY3RvclxuXHRcdFx0XHRpZiAoICggbSA9IG1hdGNoWyAxIF0gKSApIHtcblxuXHRcdFx0XHRcdC8vIERvY3VtZW50IGNvbnRleHRcblx0XHRcdFx0XHRpZiAoIG5vZGVUeXBlID09PSA5ICkge1xuXHRcdFx0XHRcdFx0aWYgKCAoIGVsZW0gPSBjb250ZXh0LmdldEVsZW1lbnRCeUlkKCBtICkgKSApIHtcblxuXHRcdFx0XHRcdFx0XHQvLyBTdXBwb3J0OiBJRSwgT3BlcmEsIFdlYmtpdFxuXHRcdFx0XHRcdFx0XHQvLyBUT0RPOiBpZGVudGlmeSB2ZXJzaW9uc1xuXHRcdFx0XHRcdFx0XHQvLyBnZXRFbGVtZW50QnlJZCBjYW4gbWF0Y2ggZWxlbWVudHMgYnkgbmFtZSBpbnN0ZWFkIG9mIElEXG5cdFx0XHRcdFx0XHRcdGlmICggZWxlbS5pZCA9PT0gbSApIHtcblx0XHRcdFx0XHRcdFx0XHRyZXN1bHRzLnB1c2goIGVsZW0gKTtcblx0XHRcdFx0XHRcdFx0XHRyZXR1cm4gcmVzdWx0cztcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdFx0cmV0dXJuIHJlc3VsdHM7XG5cdFx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHQvLyBFbGVtZW50IGNvbnRleHRcblx0XHRcdFx0XHR9IGVsc2Uge1xuXG5cdFx0XHRcdFx0XHQvLyBTdXBwb3J0OiBJRSwgT3BlcmEsIFdlYmtpdFxuXHRcdFx0XHRcdFx0Ly8gVE9ETzogaWRlbnRpZnkgdmVyc2lvbnNcblx0XHRcdFx0XHRcdC8vIGdldEVsZW1lbnRCeUlkIGNhbiBtYXRjaCBlbGVtZW50cyBieSBuYW1lIGluc3RlYWQgb2YgSURcblx0XHRcdFx0XHRcdGlmICggbmV3Q29udGV4dCAmJiAoIGVsZW0gPSBuZXdDb250ZXh0LmdldEVsZW1lbnRCeUlkKCBtICkgKSAmJlxuXHRcdFx0XHRcdFx0XHRjb250YWlucyggY29udGV4dCwgZWxlbSApICYmXG5cdFx0XHRcdFx0XHRcdGVsZW0uaWQgPT09IG0gKSB7XG5cblx0XHRcdFx0XHRcdFx0cmVzdWx0cy5wdXNoKCBlbGVtICk7XG5cdFx0XHRcdFx0XHRcdHJldHVybiByZXN1bHRzO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBUeXBlIHNlbGVjdG9yXG5cdFx0XHRcdH0gZWxzZSBpZiAoIG1hdGNoWyAyIF0gKSB7XG5cdFx0XHRcdFx0cHVzaC5hcHBseSggcmVzdWx0cywgY29udGV4dC5nZXRFbGVtZW50c0J5VGFnTmFtZSggc2VsZWN0b3IgKSApO1xuXHRcdFx0XHRcdHJldHVybiByZXN1bHRzO1xuXG5cdFx0XHRcdC8vIENsYXNzIHNlbGVjdG9yXG5cdFx0XHRcdH0gZWxzZSBpZiAoICggbSA9IG1hdGNoWyAzIF0gKSAmJiBzdXBwb3J0LmdldEVsZW1lbnRzQnlDbGFzc05hbWUgJiZcblx0XHRcdFx0XHRjb250ZXh0LmdldEVsZW1lbnRzQnlDbGFzc05hbWUgKSB7XG5cblx0XHRcdFx0XHRwdXNoLmFwcGx5KCByZXN1bHRzLCBjb250ZXh0LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoIG0gKSApO1xuXHRcdFx0XHRcdHJldHVybiByZXN1bHRzO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHRcdC8vIFRha2UgYWR2YW50YWdlIG9mIHF1ZXJ5U2VsZWN0b3JBbGxcblx0XHRcdGlmICggc3VwcG9ydC5xc2EgJiZcblx0XHRcdFx0IW5vbm5hdGl2ZVNlbGVjdG9yQ2FjaGVbIHNlbGVjdG9yICsgXCIgXCIgXSAmJlxuXHRcdFx0XHQoICFyYnVnZ3lRU0EgfHwgIXJidWdneVFTQS50ZXN0KCBzZWxlY3RvciApICkgJiZcblxuXHRcdFx0XHQvLyBTdXBwb3J0OiBJRSA4IG9ubHlcblx0XHRcdFx0Ly8gRXhjbHVkZSBvYmplY3QgZWxlbWVudHNcblx0XHRcdFx0KCBub2RlVHlwZSAhPT0gMSB8fCBjb250ZXh0Lm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkgIT09IFwib2JqZWN0XCIgKSApIHtcblxuXHRcdFx0XHRuZXdTZWxlY3RvciA9IHNlbGVjdG9yO1xuXHRcdFx0XHRuZXdDb250ZXh0ID0gY29udGV4dDtcblxuXHRcdFx0XHQvLyBxU0EgY29uc2lkZXJzIGVsZW1lbnRzIG91dHNpZGUgYSBzY29waW5nIHJvb3Qgd2hlbiBldmFsdWF0aW5nIGNoaWxkIG9yXG5cdFx0XHRcdC8vIGRlc2NlbmRhbnQgY29tYmluYXRvcnMsIHdoaWNoIGlzIG5vdCB3aGF0IHdlIHdhbnQuXG5cdFx0XHRcdC8vIEluIHN1Y2ggY2FzZXMsIHdlIHdvcmsgYXJvdW5kIHRoZSBiZWhhdmlvciBieSBwcmVmaXhpbmcgZXZlcnkgc2VsZWN0b3IgaW4gdGhlXG5cdFx0XHRcdC8vIGxpc3Qgd2l0aCBhbiBJRCBzZWxlY3RvciByZWZlcmVuY2luZyB0aGUgc2NvcGUgY29udGV4dC5cblx0XHRcdFx0Ly8gVGhlIHRlY2huaXF1ZSBoYXMgdG8gYmUgdXNlZCBhcyB3ZWxsIHdoZW4gYSBsZWFkaW5nIGNvbWJpbmF0b3IgaXMgdXNlZFxuXHRcdFx0XHQvLyBhcyBzdWNoIHNlbGVjdG9ycyBhcmUgbm90IHJlY29nbml6ZWQgYnkgcXVlcnlTZWxlY3RvckFsbC5cblx0XHRcdFx0Ly8gVGhhbmtzIHRvIEFuZHJldyBEdXBvbnQgZm9yIHRoaXMgdGVjaG5pcXVlLlxuXHRcdFx0XHRpZiAoIG5vZGVUeXBlID09PSAxICYmXG5cdFx0XHRcdFx0KCByZGVzY2VuZC50ZXN0KCBzZWxlY3RvciApIHx8IHJjb21iaW5hdG9ycy50ZXN0KCBzZWxlY3RvciApICkgKSB7XG5cblx0XHRcdFx0XHQvLyBFeHBhbmQgY29udGV4dCBmb3Igc2libGluZyBzZWxlY3RvcnNcblx0XHRcdFx0XHRuZXdDb250ZXh0ID0gcnNpYmxpbmcudGVzdCggc2VsZWN0b3IgKSAmJiB0ZXN0Q29udGV4dCggY29udGV4dC5wYXJlbnROb2RlICkgfHxcblx0XHRcdFx0XHRcdGNvbnRleHQ7XG5cblx0XHRcdFx0XHQvLyBXZSBjYW4gdXNlIDpzY29wZSBpbnN0ZWFkIG9mIHRoZSBJRCBoYWNrIGlmIHRoZSBicm93c2VyXG5cdFx0XHRcdFx0Ly8gc3VwcG9ydHMgaXQgJiBpZiB3ZSdyZSBub3QgY2hhbmdpbmcgdGhlIGNvbnRleHQuXG5cdFx0XHRcdFx0aWYgKCBuZXdDb250ZXh0ICE9PSBjb250ZXh0IHx8ICFzdXBwb3J0LnNjb3BlICkge1xuXG5cdFx0XHRcdFx0XHQvLyBDYXB0dXJlIHRoZSBjb250ZXh0IElELCBzZXR0aW5nIGl0IGZpcnN0IGlmIG5lY2Vzc2FyeVxuXHRcdFx0XHRcdFx0aWYgKCAoIG5pZCA9IGNvbnRleHQuZ2V0QXR0cmlidXRlKCBcImlkXCIgKSApICkge1xuXHRcdFx0XHRcdFx0XHRuaWQgPSBuaWQucmVwbGFjZSggcmNzc2VzY2FwZSwgZmNzc2VzY2FwZSApO1xuXHRcdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdFx0Y29udGV4dC5zZXRBdHRyaWJ1dGUoIFwiaWRcIiwgKCBuaWQgPSBleHBhbmRvICkgKTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHQvLyBQcmVmaXggZXZlcnkgc2VsZWN0b3IgaW4gdGhlIGxpc3Rcblx0XHRcdFx0XHRncm91cHMgPSB0b2tlbml6ZSggc2VsZWN0b3IgKTtcblx0XHRcdFx0XHRpID0gZ3JvdXBzLmxlbmd0aDtcblx0XHRcdFx0XHR3aGlsZSAoIGktLSApIHtcblx0XHRcdFx0XHRcdGdyb3Vwc1sgaSBdID0gKCBuaWQgPyBcIiNcIiArIG5pZCA6IFwiOnNjb3BlXCIgKSArIFwiIFwiICtcblx0XHRcdFx0XHRcdFx0dG9TZWxlY3RvciggZ3JvdXBzWyBpIF0gKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0bmV3U2VsZWN0b3IgPSBncm91cHMuam9pbiggXCIsXCIgKTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdHRyeSB7XG5cdFx0XHRcdFx0cHVzaC5hcHBseSggcmVzdWx0cyxcblx0XHRcdFx0XHRcdG5ld0NvbnRleHQucXVlcnlTZWxlY3RvckFsbCggbmV3U2VsZWN0b3IgKVxuXHRcdFx0XHRcdCk7XG5cdFx0XHRcdFx0cmV0dXJuIHJlc3VsdHM7XG5cdFx0XHRcdH0gY2F0Y2ggKCBxc2FFcnJvciApIHtcblx0XHRcdFx0XHRub25uYXRpdmVTZWxlY3RvckNhY2hlKCBzZWxlY3RvciwgdHJ1ZSApO1xuXHRcdFx0XHR9IGZpbmFsbHkge1xuXHRcdFx0XHRcdGlmICggbmlkID09PSBleHBhbmRvICkge1xuXHRcdFx0XHRcdFx0Y29udGV4dC5yZW1vdmVBdHRyaWJ1dGUoIFwiaWRcIiApO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cdC8vIEFsbCBvdGhlcnNcblx0cmV0dXJuIHNlbGVjdCggc2VsZWN0b3IucmVwbGFjZSggcnRyaW0sIFwiJDFcIiApLCBjb250ZXh0LCByZXN1bHRzLCBzZWVkICk7XG59XG5cbi8qKlxuICogQ3JlYXRlIGtleS12YWx1ZSBjYWNoZXMgb2YgbGltaXRlZCBzaXplXG4gKiBAcmV0dXJucyB7ZnVuY3Rpb24oc3RyaW5nLCBvYmplY3QpfSBSZXR1cm5zIHRoZSBPYmplY3QgZGF0YSBhZnRlciBzdG9yaW5nIGl0IG9uIGl0c2VsZiB3aXRoXG4gKlx0cHJvcGVydHkgbmFtZSB0aGUgKHNwYWNlLXN1ZmZpeGVkKSBzdHJpbmcgYW5kIChpZiB0aGUgY2FjaGUgaXMgbGFyZ2VyIHRoYW4gRXhwci5jYWNoZUxlbmd0aClcbiAqXHRkZWxldGluZyB0aGUgb2xkZXN0IGVudHJ5XG4gKi9cbmZ1bmN0aW9uIGNyZWF0ZUNhY2hlKCkge1xuXHR2YXIga2V5cyA9IFtdO1xuXG5cdGZ1bmN0aW9uIGNhY2hlKCBrZXksIHZhbHVlICkge1xuXG5cdFx0Ly8gVXNlIChrZXkgKyBcIiBcIikgdG8gYXZvaWQgY29sbGlzaW9uIHdpdGggbmF0aXZlIHByb3RvdHlwZSBwcm9wZXJ0aWVzIChzZWUgSXNzdWUgIzE1Nylcblx0XHRpZiAoIGtleXMucHVzaCgga2V5ICsgXCIgXCIgKSA+IEV4cHIuY2FjaGVMZW5ndGggKSB7XG5cblx0XHRcdC8vIE9ubHkga2VlcCB0aGUgbW9zdCByZWNlbnQgZW50cmllc1xuXHRcdFx0ZGVsZXRlIGNhY2hlWyBrZXlzLnNoaWZ0KCkgXTtcblx0XHR9XG5cdFx0cmV0dXJuICggY2FjaGVbIGtleSArIFwiIFwiIF0gPSB2YWx1ZSApO1xuXHR9XG5cdHJldHVybiBjYWNoZTtcbn1cblxuLyoqXG4gKiBNYXJrIGEgZnVuY3Rpb24gZm9yIHNwZWNpYWwgdXNlIGJ5IFNpenpsZVxuICogQHBhcmFtIHtGdW5jdGlvbn0gZm4gVGhlIGZ1bmN0aW9uIHRvIG1hcmtcbiAqL1xuZnVuY3Rpb24gbWFya0Z1bmN0aW9uKCBmbiApIHtcblx0Zm5bIGV4cGFuZG8gXSA9IHRydWU7XG5cdHJldHVybiBmbjtcbn1cblxuLyoqXG4gKiBTdXBwb3J0IHRlc3RpbmcgdXNpbmcgYW4gZWxlbWVudFxuICogQHBhcmFtIHtGdW5jdGlvbn0gZm4gUGFzc2VkIHRoZSBjcmVhdGVkIGVsZW1lbnQgYW5kIHJldHVybnMgYSBib29sZWFuIHJlc3VsdFxuICovXG5mdW5jdGlvbiBhc3NlcnQoIGZuICkge1xuXHR2YXIgZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCBcImZpZWxkc2V0XCIgKTtcblxuXHR0cnkge1xuXHRcdHJldHVybiAhIWZuKCBlbCApO1xuXHR9IGNhdGNoICggZSApIHtcblx0XHRyZXR1cm4gZmFsc2U7XG5cdH0gZmluYWxseSB7XG5cblx0XHQvLyBSZW1vdmUgZnJvbSBpdHMgcGFyZW50IGJ5IGRlZmF1bHRcblx0XHRpZiAoIGVsLnBhcmVudE5vZGUgKSB7XG5cdFx0XHRlbC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKCBlbCApO1xuXHRcdH1cblxuXHRcdC8vIHJlbGVhc2UgbWVtb3J5IGluIElFXG5cdFx0ZWwgPSBudWxsO1xuXHR9XG59XG5cbi8qKlxuICogQWRkcyB0aGUgc2FtZSBoYW5kbGVyIGZvciBhbGwgb2YgdGhlIHNwZWNpZmllZCBhdHRyc1xuICogQHBhcmFtIHtTdHJpbmd9IGF0dHJzIFBpcGUtc2VwYXJhdGVkIGxpc3Qgb2YgYXR0cmlidXRlc1xuICogQHBhcmFtIHtGdW5jdGlvbn0gaGFuZGxlciBUaGUgbWV0aG9kIHRoYXQgd2lsbCBiZSBhcHBsaWVkXG4gKi9cbmZ1bmN0aW9uIGFkZEhhbmRsZSggYXR0cnMsIGhhbmRsZXIgKSB7XG5cdHZhciBhcnIgPSBhdHRycy5zcGxpdCggXCJ8XCIgKSxcblx0XHRpID0gYXJyLmxlbmd0aDtcblxuXHR3aGlsZSAoIGktLSApIHtcblx0XHRFeHByLmF0dHJIYW5kbGVbIGFyclsgaSBdIF0gPSBoYW5kbGVyO1xuXHR9XG59XG5cbi8qKlxuICogQ2hlY2tzIGRvY3VtZW50IG9yZGVyIG9mIHR3byBzaWJsaW5nc1xuICogQHBhcmFtIHtFbGVtZW50fSBhXG4gKiBAcGFyYW0ge0VsZW1lbnR9IGJcbiAqIEByZXR1cm5zIHtOdW1iZXJ9IFJldHVybnMgbGVzcyB0aGFuIDAgaWYgYSBwcmVjZWRlcyBiLCBncmVhdGVyIHRoYW4gMCBpZiBhIGZvbGxvd3MgYlxuICovXG5mdW5jdGlvbiBzaWJsaW5nQ2hlY2soIGEsIGIgKSB7XG5cdHZhciBjdXIgPSBiICYmIGEsXG5cdFx0ZGlmZiA9IGN1ciAmJiBhLm5vZGVUeXBlID09PSAxICYmIGIubm9kZVR5cGUgPT09IDEgJiZcblx0XHRcdGEuc291cmNlSW5kZXggLSBiLnNvdXJjZUluZGV4O1xuXG5cdC8vIFVzZSBJRSBzb3VyY2VJbmRleCBpZiBhdmFpbGFibGUgb24gYm90aCBub2Rlc1xuXHRpZiAoIGRpZmYgKSB7XG5cdFx0cmV0dXJuIGRpZmY7XG5cdH1cblxuXHQvLyBDaGVjayBpZiBiIGZvbGxvd3MgYVxuXHRpZiAoIGN1ciApIHtcblx0XHR3aGlsZSAoICggY3VyID0gY3VyLm5leHRTaWJsaW5nICkgKSB7XG5cdFx0XHRpZiAoIGN1ciA9PT0gYiApIHtcblx0XHRcdFx0cmV0dXJuIC0xO1xuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cdHJldHVybiBhID8gMSA6IC0xO1xufVxuXG4vKipcbiAqIFJldHVybnMgYSBmdW5jdGlvbiB0byB1c2UgaW4gcHNldWRvcyBmb3IgaW5wdXQgdHlwZXNcbiAqIEBwYXJhbSB7U3RyaW5nfSB0eXBlXG4gKi9cbmZ1bmN0aW9uIGNyZWF0ZUlucHV0UHNldWRvKCB0eXBlICkge1xuXHRyZXR1cm4gZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0dmFyIG5hbWUgPSBlbGVtLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7XG5cdFx0cmV0dXJuIG5hbWUgPT09IFwiaW5wdXRcIiAmJiBlbGVtLnR5cGUgPT09IHR5cGU7XG5cdH07XG59XG5cbi8qKlxuICogUmV0dXJucyBhIGZ1bmN0aW9uIHRvIHVzZSBpbiBwc2V1ZG9zIGZvciBidXR0b25zXG4gKiBAcGFyYW0ge1N0cmluZ30gdHlwZVxuICovXG5mdW5jdGlvbiBjcmVhdGVCdXR0b25Qc2V1ZG8oIHR5cGUgKSB7XG5cdHJldHVybiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHR2YXIgbmFtZSA9IGVsZW0ubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtcblx0XHRyZXR1cm4gKCBuYW1lID09PSBcImlucHV0XCIgfHwgbmFtZSA9PT0gXCJidXR0b25cIiApICYmIGVsZW0udHlwZSA9PT0gdHlwZTtcblx0fTtcbn1cblxuLyoqXG4gKiBSZXR1cm5zIGEgZnVuY3Rpb24gdG8gdXNlIGluIHBzZXVkb3MgZm9yIDplbmFibGVkLzpkaXNhYmxlZFxuICogQHBhcmFtIHtCb29sZWFufSBkaXNhYmxlZCB0cnVlIGZvciA6ZGlzYWJsZWQ7IGZhbHNlIGZvciA6ZW5hYmxlZFxuICovXG5mdW5jdGlvbiBjcmVhdGVEaXNhYmxlZFBzZXVkbyggZGlzYWJsZWQgKSB7XG5cblx0Ly8gS25vd24gOmRpc2FibGVkIGZhbHNlIHBvc2l0aXZlczogZmllbGRzZXRbZGlzYWJsZWRdID4gbGVnZW5kOm50aC1vZi10eXBlKG4rMikgOmNhbi1kaXNhYmxlXG5cdHJldHVybiBmdW5jdGlvbiggZWxlbSApIHtcblxuXHRcdC8vIE9ubHkgY2VydGFpbiBlbGVtZW50cyBjYW4gbWF0Y2ggOmVuYWJsZWQgb3IgOmRpc2FibGVkXG5cdFx0Ly8gaHR0cHM6Ly9odG1sLnNwZWMud2hhdHdnLm9yZy9tdWx0aXBhZ2Uvc2NyaXB0aW5nLmh0bWwjc2VsZWN0b3ItZW5hYmxlZFxuXHRcdC8vIGh0dHBzOi8vaHRtbC5zcGVjLndoYXR3Zy5vcmcvbXVsdGlwYWdlL3NjcmlwdGluZy5odG1sI3NlbGVjdG9yLWRpc2FibGVkXG5cdFx0aWYgKCBcImZvcm1cIiBpbiBlbGVtICkge1xuXG5cdFx0XHQvLyBDaGVjayBmb3IgaW5oZXJpdGVkIGRpc2FibGVkbmVzcyBvbiByZWxldmFudCBub24tZGlzYWJsZWQgZWxlbWVudHM6XG5cdFx0XHQvLyAqIGxpc3RlZCBmb3JtLWFzc29jaWF0ZWQgZWxlbWVudHMgaW4gYSBkaXNhYmxlZCBmaWVsZHNldFxuXHRcdFx0Ly8gICBodHRwczovL2h0bWwuc3BlYy53aGF0d2cub3JnL211bHRpcGFnZS9mb3Jtcy5odG1sI2NhdGVnb3J5LWxpc3RlZFxuXHRcdFx0Ly8gICBodHRwczovL2h0bWwuc3BlYy53aGF0d2cub3JnL211bHRpcGFnZS9mb3Jtcy5odG1sI2NvbmNlcHQtZmUtZGlzYWJsZWRcblx0XHRcdC8vICogb3B0aW9uIGVsZW1lbnRzIGluIGEgZGlzYWJsZWQgb3B0Z3JvdXBcblx0XHRcdC8vICAgaHR0cHM6Ly9odG1sLnNwZWMud2hhdHdnLm9yZy9tdWx0aXBhZ2UvZm9ybXMuaHRtbCNjb25jZXB0LW9wdGlvbi1kaXNhYmxlZFxuXHRcdFx0Ly8gQWxsIHN1Y2ggZWxlbWVudHMgaGF2ZSBhIFwiZm9ybVwiIHByb3BlcnR5LlxuXHRcdFx0aWYgKCBlbGVtLnBhcmVudE5vZGUgJiYgZWxlbS5kaXNhYmxlZCA9PT0gZmFsc2UgKSB7XG5cblx0XHRcdFx0Ly8gT3B0aW9uIGVsZW1lbnRzIGRlZmVyIHRvIGEgcGFyZW50IG9wdGdyb3VwIGlmIHByZXNlbnRcblx0XHRcdFx0aWYgKCBcImxhYmVsXCIgaW4gZWxlbSApIHtcblx0XHRcdFx0XHRpZiAoIFwibGFiZWxcIiBpbiBlbGVtLnBhcmVudE5vZGUgKSB7XG5cdFx0XHRcdFx0XHRyZXR1cm4gZWxlbS5wYXJlbnROb2RlLmRpc2FibGVkID09PSBkaXNhYmxlZDtcblx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0cmV0dXJuIGVsZW0uZGlzYWJsZWQgPT09IGRpc2FibGVkO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIFN1cHBvcnQ6IElFIDYgLSAxMVxuXHRcdFx0XHQvLyBVc2UgdGhlIGlzRGlzYWJsZWQgc2hvcnRjdXQgcHJvcGVydHkgdG8gY2hlY2sgZm9yIGRpc2FibGVkIGZpZWxkc2V0IGFuY2VzdG9yc1xuXHRcdFx0XHRyZXR1cm4gZWxlbS5pc0Rpc2FibGVkID09PSBkaXNhYmxlZCB8fFxuXG5cdFx0XHRcdFx0Ly8gV2hlcmUgdGhlcmUgaXMgbm8gaXNEaXNhYmxlZCwgY2hlY2sgbWFudWFsbHlcblx0XHRcdFx0XHQvKiBqc2hpbnQgLVcwMTggKi9cblx0XHRcdFx0XHRlbGVtLmlzRGlzYWJsZWQgIT09ICFkaXNhYmxlZCAmJlxuXHRcdFx0XHRcdGluRGlzYWJsZWRGaWVsZHNldCggZWxlbSApID09PSBkaXNhYmxlZDtcblx0XHRcdH1cblxuXHRcdFx0cmV0dXJuIGVsZW0uZGlzYWJsZWQgPT09IGRpc2FibGVkO1xuXG5cdFx0Ly8gVHJ5IHRvIHdpbm5vdyBvdXQgZWxlbWVudHMgdGhhdCBjYW4ndCBiZSBkaXNhYmxlZCBiZWZvcmUgdHJ1c3RpbmcgdGhlIGRpc2FibGVkIHByb3BlcnR5LlxuXHRcdC8vIFNvbWUgdmljdGltcyBnZXQgY2F1Z2h0IGluIG91ciBuZXQgKGxhYmVsLCBsZWdlbmQsIG1lbnUsIHRyYWNrKSwgYnV0IGl0IHNob3VsZG4ndFxuXHRcdC8vIGV2ZW4gZXhpc3Qgb24gdGhlbSwgbGV0IGFsb25lIGhhdmUgYSBib29sZWFuIHZhbHVlLlxuXHRcdH0gZWxzZSBpZiAoIFwibGFiZWxcIiBpbiBlbGVtICkge1xuXHRcdFx0cmV0dXJuIGVsZW0uZGlzYWJsZWQgPT09IGRpc2FibGVkO1xuXHRcdH1cblxuXHRcdC8vIFJlbWFpbmluZyBlbGVtZW50cyBhcmUgbmVpdGhlciA6ZW5hYmxlZCBub3IgOmRpc2FibGVkXG5cdFx0cmV0dXJuIGZhbHNlO1xuXHR9O1xufVxuXG4vKipcbiAqIFJldHVybnMgYSBmdW5jdGlvbiB0byB1c2UgaW4gcHNldWRvcyBmb3IgcG9zaXRpb25hbHNcbiAqIEBwYXJhbSB7RnVuY3Rpb259IGZuXG4gKi9cbmZ1bmN0aW9uIGNyZWF0ZVBvc2l0aW9uYWxQc2V1ZG8oIGZuICkge1xuXHRyZXR1cm4gbWFya0Z1bmN0aW9uKCBmdW5jdGlvbiggYXJndW1lbnQgKSB7XG5cdFx0YXJndW1lbnQgPSArYXJndW1lbnQ7XG5cdFx0cmV0dXJuIG1hcmtGdW5jdGlvbiggZnVuY3Rpb24oIHNlZWQsIG1hdGNoZXMgKSB7XG5cdFx0XHR2YXIgaixcblx0XHRcdFx0bWF0Y2hJbmRleGVzID0gZm4oIFtdLCBzZWVkLmxlbmd0aCwgYXJndW1lbnQgKSxcblx0XHRcdFx0aSA9IG1hdGNoSW5kZXhlcy5sZW5ndGg7XG5cblx0XHRcdC8vIE1hdGNoIGVsZW1lbnRzIGZvdW5kIGF0IHRoZSBzcGVjaWZpZWQgaW5kZXhlc1xuXHRcdFx0d2hpbGUgKCBpLS0gKSB7XG5cdFx0XHRcdGlmICggc2VlZFsgKCBqID0gbWF0Y2hJbmRleGVzWyBpIF0gKSBdICkge1xuXHRcdFx0XHRcdHNlZWRbIGogXSA9ICEoIG1hdGNoZXNbIGogXSA9IHNlZWRbIGogXSApO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fSApO1xuXHR9ICk7XG59XG5cbi8qKlxuICogQ2hlY2tzIGEgbm9kZSBmb3IgdmFsaWRpdHkgYXMgYSBTaXp6bGUgY29udGV4dFxuICogQHBhcmFtIHtFbGVtZW50fE9iamVjdD19IGNvbnRleHRcbiAqIEByZXR1cm5zIHtFbGVtZW50fE9iamVjdHxCb29sZWFufSBUaGUgaW5wdXQgbm9kZSBpZiBhY2NlcHRhYmxlLCBvdGhlcndpc2UgYSBmYWxzeSB2YWx1ZVxuICovXG5mdW5jdGlvbiB0ZXN0Q29udGV4dCggY29udGV4dCApIHtcblx0cmV0dXJuIGNvbnRleHQgJiYgdHlwZW9mIGNvbnRleHQuZ2V0RWxlbWVudHNCeVRhZ05hbWUgIT09IFwidW5kZWZpbmVkXCIgJiYgY29udGV4dDtcbn1cblxuLy8gRXhwb3NlIHN1cHBvcnQgdmFycyBmb3IgY29udmVuaWVuY2VcbnN1cHBvcnQgPSBTaXp6bGUuc3VwcG9ydCA9IHt9O1xuXG4vKipcbiAqIERldGVjdHMgWE1MIG5vZGVzXG4gKiBAcGFyYW0ge0VsZW1lbnR8T2JqZWN0fSBlbGVtIEFuIGVsZW1lbnQgb3IgYSBkb2N1bWVudFxuICogQHJldHVybnMge0Jvb2xlYW59IFRydWUgaWZmIGVsZW0gaXMgYSBub24tSFRNTCBYTUwgbm9kZVxuICovXG5pc1hNTCA9IFNpenpsZS5pc1hNTCA9IGZ1bmN0aW9uKCBlbGVtICkge1xuXHR2YXIgbmFtZXNwYWNlID0gZWxlbS5uYW1lc3BhY2VVUkksXG5cdFx0ZG9jRWxlbSA9ICggZWxlbS5vd25lckRvY3VtZW50IHx8IGVsZW0gKS5kb2N1bWVudEVsZW1lbnQ7XG5cblx0Ly8gU3VwcG9ydDogSUUgPD04XG5cdC8vIEFzc3VtZSBIVE1MIHdoZW4gZG9jdW1lbnRFbGVtZW50IGRvZXNuJ3QgeWV0IGV4aXN0LCBzdWNoIGFzIGluc2lkZSBsb2FkaW5nIGlmcmFtZXNcblx0Ly8gaHR0cHM6Ly9idWdzLmpxdWVyeS5jb20vdGlja2V0LzQ4MzNcblx0cmV0dXJuICFyaHRtbC50ZXN0KCBuYW1lc3BhY2UgfHwgZG9jRWxlbSAmJiBkb2NFbGVtLm5vZGVOYW1lIHx8IFwiSFRNTFwiICk7XG59O1xuXG4vKipcbiAqIFNldHMgZG9jdW1lbnQtcmVsYXRlZCB2YXJpYWJsZXMgb25jZSBiYXNlZCBvbiB0aGUgY3VycmVudCBkb2N1bWVudFxuICogQHBhcmFtIHtFbGVtZW50fE9iamVjdH0gW2RvY10gQW4gZWxlbWVudCBvciBkb2N1bWVudCBvYmplY3QgdG8gdXNlIHRvIHNldCB0aGUgZG9jdW1lbnRcbiAqIEByZXR1cm5zIHtPYmplY3R9IFJldHVybnMgdGhlIGN1cnJlbnQgZG9jdW1lbnRcbiAqL1xuc2V0RG9jdW1lbnQgPSBTaXp6bGUuc2V0RG9jdW1lbnQgPSBmdW5jdGlvbiggbm9kZSApIHtcblx0dmFyIGhhc0NvbXBhcmUsIHN1YldpbmRvdyxcblx0XHRkb2MgPSBub2RlID8gbm9kZS5vd25lckRvY3VtZW50IHx8IG5vZGUgOiBwcmVmZXJyZWREb2M7XG5cblx0Ly8gUmV0dXJuIGVhcmx5IGlmIGRvYyBpcyBpbnZhbGlkIG9yIGFscmVhZHkgc2VsZWN0ZWRcblx0Ly8gU3VwcG9ydDogSUUgMTErLCBFZGdlIDE3IC0gMTgrXG5cdC8vIElFL0VkZ2Ugc29tZXRpbWVzIHRocm93IGEgXCJQZXJtaXNzaW9uIGRlbmllZFwiIGVycm9yIHdoZW4gc3RyaWN0LWNvbXBhcmluZ1xuXHQvLyB0d28gZG9jdW1lbnRzOyBzaGFsbG93IGNvbXBhcmlzb25zIHdvcmsuXG5cdC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBlcWVxZXFcblx0aWYgKCBkb2MgPT0gZG9jdW1lbnQgfHwgZG9jLm5vZGVUeXBlICE9PSA5IHx8ICFkb2MuZG9jdW1lbnRFbGVtZW50ICkge1xuXHRcdHJldHVybiBkb2N1bWVudDtcblx0fVxuXG5cdC8vIFVwZGF0ZSBnbG9iYWwgdmFyaWFibGVzXG5cdGRvY3VtZW50ID0gZG9jO1xuXHRkb2NFbGVtID0gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50O1xuXHRkb2N1bWVudElzSFRNTCA9ICFpc1hNTCggZG9jdW1lbnQgKTtcblxuXHQvLyBTdXBwb3J0OiBJRSA5IC0gMTErLCBFZGdlIDEyIC0gMTgrXG5cdC8vIEFjY2Vzc2luZyBpZnJhbWUgZG9jdW1lbnRzIGFmdGVyIHVubG9hZCB0aHJvd3MgXCJwZXJtaXNzaW9uIGRlbmllZFwiIGVycm9ycyAoalF1ZXJ5ICMxMzkzNilcblx0Ly8gU3VwcG9ydDogSUUgMTErLCBFZGdlIDE3IC0gMTgrXG5cdC8vIElFL0VkZ2Ugc29tZXRpbWVzIHRocm93IGEgXCJQZXJtaXNzaW9uIGRlbmllZFwiIGVycm9yIHdoZW4gc3RyaWN0LWNvbXBhcmluZ1xuXHQvLyB0d28gZG9jdW1lbnRzOyBzaGFsbG93IGNvbXBhcmlzb25zIHdvcmsuXG5cdC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBlcWVxZXFcblx0aWYgKCBwcmVmZXJyZWREb2MgIT0gZG9jdW1lbnQgJiZcblx0XHQoIHN1YldpbmRvdyA9IGRvY3VtZW50LmRlZmF1bHRWaWV3ICkgJiYgc3ViV2luZG93LnRvcCAhPT0gc3ViV2luZG93ICkge1xuXG5cdFx0Ly8gU3VwcG9ydDogSUUgMTEsIEVkZ2Vcblx0XHRpZiAoIHN1YldpbmRvdy5hZGRFdmVudExpc3RlbmVyICkge1xuXHRcdFx0c3ViV2luZG93LmFkZEV2ZW50TGlzdGVuZXIoIFwidW5sb2FkXCIsIHVubG9hZEhhbmRsZXIsIGZhbHNlICk7XG5cblx0XHQvLyBTdXBwb3J0OiBJRSA5IC0gMTAgb25seVxuXHRcdH0gZWxzZSBpZiAoIHN1YldpbmRvdy5hdHRhY2hFdmVudCApIHtcblx0XHRcdHN1YldpbmRvdy5hdHRhY2hFdmVudCggXCJvbnVubG9hZFwiLCB1bmxvYWRIYW5kbGVyICk7XG5cdFx0fVxuXHR9XG5cblx0Ly8gU3VwcG9ydDogSUUgOCAtIDExKywgRWRnZSAxMiAtIDE4KywgQ2hyb21lIDw9MTYgLSAyNSBvbmx5LCBGaXJlZm94IDw9My42IC0gMzEgb25seSxcblx0Ly8gU2FmYXJpIDQgLSA1IG9ubHksIE9wZXJhIDw9MTEuNiAtIDEyLnggb25seVxuXHQvLyBJRS9FZGdlICYgb2xkZXIgYnJvd3NlcnMgZG9uJ3Qgc3VwcG9ydCB0aGUgOnNjb3BlIHBzZXVkby1jbGFzcy5cblx0Ly8gU3VwcG9ydDogU2FmYXJpIDYuMCBvbmx5XG5cdC8vIFNhZmFyaSA2LjAgc3VwcG9ydHMgOnNjb3BlIGJ1dCBpdCdzIGFuIGFsaWFzIG9mIDpyb290IHRoZXJlLlxuXHRzdXBwb3J0LnNjb3BlID0gYXNzZXJ0KCBmdW5jdGlvbiggZWwgKSB7XG5cdFx0ZG9jRWxlbS5hcHBlbmRDaGlsZCggZWwgKS5hcHBlbmRDaGlsZCggZG9jdW1lbnQuY3JlYXRlRWxlbWVudCggXCJkaXZcIiApICk7XG5cdFx0cmV0dXJuIHR5cGVvZiBlbC5xdWVyeVNlbGVjdG9yQWxsICE9PSBcInVuZGVmaW5lZFwiICYmXG5cdFx0XHQhZWwucXVlcnlTZWxlY3RvckFsbCggXCI6c2NvcGUgZmllbGRzZXQgZGl2XCIgKS5sZW5ndGg7XG5cdH0gKTtcblxuXHQvKiBBdHRyaWJ1dGVzXG5cdC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cblxuXHQvLyBTdXBwb3J0OiBJRTw4XG5cdC8vIFZlcmlmeSB0aGF0IGdldEF0dHJpYnV0ZSByZWFsbHkgcmV0dXJucyBhdHRyaWJ1dGVzIGFuZCBub3QgcHJvcGVydGllc1xuXHQvLyAoZXhjZXB0aW5nIElFOCBib29sZWFucylcblx0c3VwcG9ydC5hdHRyaWJ1dGVzID0gYXNzZXJ0KCBmdW5jdGlvbiggZWwgKSB7XG5cdFx0ZWwuY2xhc3NOYW1lID0gXCJpXCI7XG5cdFx0cmV0dXJuICFlbC5nZXRBdHRyaWJ1dGUoIFwiY2xhc3NOYW1lXCIgKTtcblx0fSApO1xuXG5cdC8qIGdldEVsZW1lbnQocylCeSpcblx0LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuXG5cdC8vIENoZWNrIGlmIGdldEVsZW1lbnRzQnlUYWdOYW1lKFwiKlwiKSByZXR1cm5zIG9ubHkgZWxlbWVudHNcblx0c3VwcG9ydC5nZXRFbGVtZW50c0J5VGFnTmFtZSA9IGFzc2VydCggZnVuY3Rpb24oIGVsICkge1xuXHRcdGVsLmFwcGVuZENoaWxkKCBkb2N1bWVudC5jcmVhdGVDb21tZW50KCBcIlwiICkgKTtcblx0XHRyZXR1cm4gIWVsLmdldEVsZW1lbnRzQnlUYWdOYW1lKCBcIipcIiApLmxlbmd0aDtcblx0fSApO1xuXG5cdC8vIFN1cHBvcnQ6IElFPDlcblx0c3VwcG9ydC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lID0gcm5hdGl2ZS50ZXN0KCBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lICk7XG5cblx0Ly8gU3VwcG9ydDogSUU8MTBcblx0Ly8gQ2hlY2sgaWYgZ2V0RWxlbWVudEJ5SWQgcmV0dXJucyBlbGVtZW50cyBieSBuYW1lXG5cdC8vIFRoZSBicm9rZW4gZ2V0RWxlbWVudEJ5SWQgbWV0aG9kcyBkb24ndCBwaWNrIHVwIHByb2dyYW1tYXRpY2FsbHktc2V0IG5hbWVzLFxuXHQvLyBzbyB1c2UgYSByb3VuZGFib3V0IGdldEVsZW1lbnRzQnlOYW1lIHRlc3Rcblx0c3VwcG9ydC5nZXRCeUlkID0gYXNzZXJ0KCBmdW5jdGlvbiggZWwgKSB7XG5cdFx0ZG9jRWxlbS5hcHBlbmRDaGlsZCggZWwgKS5pZCA9IGV4cGFuZG87XG5cdFx0cmV0dXJuICFkb2N1bWVudC5nZXRFbGVtZW50c0J5TmFtZSB8fCAhZG9jdW1lbnQuZ2V0RWxlbWVudHNCeU5hbWUoIGV4cGFuZG8gKS5sZW5ndGg7XG5cdH0gKTtcblxuXHQvLyBJRCBmaWx0ZXIgYW5kIGZpbmRcblx0aWYgKCBzdXBwb3J0LmdldEJ5SWQgKSB7XG5cdFx0RXhwci5maWx0ZXJbIFwiSURcIiBdID0gZnVuY3Rpb24oIGlkICkge1xuXHRcdFx0dmFyIGF0dHJJZCA9IGlkLnJlcGxhY2UoIHJ1bmVzY2FwZSwgZnVuZXNjYXBlICk7XG5cdFx0XHRyZXR1cm4gZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRcdHJldHVybiBlbGVtLmdldEF0dHJpYnV0ZSggXCJpZFwiICkgPT09IGF0dHJJZDtcblx0XHRcdH07XG5cdFx0fTtcblx0XHRFeHByLmZpbmRbIFwiSURcIiBdID0gZnVuY3Rpb24oIGlkLCBjb250ZXh0ICkge1xuXHRcdFx0aWYgKCB0eXBlb2YgY29udGV4dC5nZXRFbGVtZW50QnlJZCAhPT0gXCJ1bmRlZmluZWRcIiAmJiBkb2N1bWVudElzSFRNTCApIHtcblx0XHRcdFx0dmFyIGVsZW0gPSBjb250ZXh0LmdldEVsZW1lbnRCeUlkKCBpZCApO1xuXHRcdFx0XHRyZXR1cm4gZWxlbSA/IFsgZWxlbSBdIDogW107XG5cdFx0XHR9XG5cdFx0fTtcblx0fSBlbHNlIHtcblx0XHRFeHByLmZpbHRlclsgXCJJRFwiIF0gPSAgZnVuY3Rpb24oIGlkICkge1xuXHRcdFx0dmFyIGF0dHJJZCA9IGlkLnJlcGxhY2UoIHJ1bmVzY2FwZSwgZnVuZXNjYXBlICk7XG5cdFx0XHRyZXR1cm4gZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRcdHZhciBub2RlID0gdHlwZW9mIGVsZW0uZ2V0QXR0cmlidXRlTm9kZSAhPT0gXCJ1bmRlZmluZWRcIiAmJlxuXHRcdFx0XHRcdGVsZW0uZ2V0QXR0cmlidXRlTm9kZSggXCJpZFwiICk7XG5cdFx0XHRcdHJldHVybiBub2RlICYmIG5vZGUudmFsdWUgPT09IGF0dHJJZDtcblx0XHRcdH07XG5cdFx0fTtcblxuXHRcdC8vIFN1cHBvcnQ6IElFIDYgLSA3IG9ubHlcblx0XHQvLyBnZXRFbGVtZW50QnlJZCBpcyBub3QgcmVsaWFibGUgYXMgYSBmaW5kIHNob3J0Y3V0XG5cdFx0RXhwci5maW5kWyBcIklEXCIgXSA9IGZ1bmN0aW9uKCBpZCwgY29udGV4dCApIHtcblx0XHRcdGlmICggdHlwZW9mIGNvbnRleHQuZ2V0RWxlbWVudEJ5SWQgIT09IFwidW5kZWZpbmVkXCIgJiYgZG9jdW1lbnRJc0hUTUwgKSB7XG5cdFx0XHRcdHZhciBub2RlLCBpLCBlbGVtcyxcblx0XHRcdFx0XHRlbGVtID0gY29udGV4dC5nZXRFbGVtZW50QnlJZCggaWQgKTtcblxuXHRcdFx0XHRpZiAoIGVsZW0gKSB7XG5cblx0XHRcdFx0XHQvLyBWZXJpZnkgdGhlIGlkIGF0dHJpYnV0ZVxuXHRcdFx0XHRcdG5vZGUgPSBlbGVtLmdldEF0dHJpYnV0ZU5vZGUoIFwiaWRcIiApO1xuXHRcdFx0XHRcdGlmICggbm9kZSAmJiBub2RlLnZhbHVlID09PSBpZCApIHtcblx0XHRcdFx0XHRcdHJldHVybiBbIGVsZW0gXTtcblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHQvLyBGYWxsIGJhY2sgb24gZ2V0RWxlbWVudHNCeU5hbWVcblx0XHRcdFx0XHRlbGVtcyA9IGNvbnRleHQuZ2V0RWxlbWVudHNCeU5hbWUoIGlkICk7XG5cdFx0XHRcdFx0aSA9IDA7XG5cdFx0XHRcdFx0d2hpbGUgKCAoIGVsZW0gPSBlbGVtc1sgaSsrIF0gKSApIHtcblx0XHRcdFx0XHRcdG5vZGUgPSBlbGVtLmdldEF0dHJpYnV0ZU5vZGUoIFwiaWRcIiApO1xuXHRcdFx0XHRcdFx0aWYgKCBub2RlICYmIG5vZGUudmFsdWUgPT09IGlkICkge1xuXHRcdFx0XHRcdFx0XHRyZXR1cm4gWyBlbGVtIF07XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cblx0XHRcdFx0cmV0dXJuIFtdO1xuXHRcdFx0fVxuXHRcdH07XG5cdH1cblxuXHQvLyBUYWdcblx0RXhwci5maW5kWyBcIlRBR1wiIF0gPSBzdXBwb3J0LmdldEVsZW1lbnRzQnlUYWdOYW1lID9cblx0XHRmdW5jdGlvbiggdGFnLCBjb250ZXh0ICkge1xuXHRcdFx0aWYgKCB0eXBlb2YgY29udGV4dC5nZXRFbGVtZW50c0J5VGFnTmFtZSAhPT0gXCJ1bmRlZmluZWRcIiApIHtcblx0XHRcdFx0cmV0dXJuIGNvbnRleHQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoIHRhZyApO1xuXG5cdFx0XHQvLyBEb2N1bWVudEZyYWdtZW50IG5vZGVzIGRvbid0IGhhdmUgZ0VCVE5cblx0XHRcdH0gZWxzZSBpZiAoIHN1cHBvcnQucXNhICkge1xuXHRcdFx0XHRyZXR1cm4gY29udGV4dC5xdWVyeVNlbGVjdG9yQWxsKCB0YWcgKTtcblx0XHRcdH1cblx0XHR9IDpcblxuXHRcdGZ1bmN0aW9uKCB0YWcsIGNvbnRleHQgKSB7XG5cdFx0XHR2YXIgZWxlbSxcblx0XHRcdFx0dG1wID0gW10sXG5cdFx0XHRcdGkgPSAwLFxuXG5cdFx0XHRcdC8vIEJ5IGhhcHB5IGNvaW5jaWRlbmNlLCBhIChicm9rZW4pIGdFQlROIGFwcGVhcnMgb24gRG9jdW1lbnRGcmFnbWVudCBub2RlcyB0b29cblx0XHRcdFx0cmVzdWx0cyA9IGNvbnRleHQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoIHRhZyApO1xuXG5cdFx0XHQvLyBGaWx0ZXIgb3V0IHBvc3NpYmxlIGNvbW1lbnRzXG5cdFx0XHRpZiAoIHRhZyA9PT0gXCIqXCIgKSB7XG5cdFx0XHRcdHdoaWxlICggKCBlbGVtID0gcmVzdWx0c1sgaSsrIF0gKSApIHtcblx0XHRcdFx0XHRpZiAoIGVsZW0ubm9kZVR5cGUgPT09IDEgKSB7XG5cdFx0XHRcdFx0XHR0bXAucHVzaCggZWxlbSApO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXG5cdFx0XHRcdHJldHVybiB0bXA7XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gcmVzdWx0cztcblx0XHR9O1xuXG5cdC8vIENsYXNzXG5cdEV4cHIuZmluZFsgXCJDTEFTU1wiIF0gPSBzdXBwb3J0LmdldEVsZW1lbnRzQnlDbGFzc05hbWUgJiYgZnVuY3Rpb24oIGNsYXNzTmFtZSwgY29udGV4dCApIHtcblx0XHRpZiAoIHR5cGVvZiBjb250ZXh0LmdldEVsZW1lbnRzQnlDbGFzc05hbWUgIT09IFwidW5kZWZpbmVkXCIgJiYgZG9jdW1lbnRJc0hUTUwgKSB7XG5cdFx0XHRyZXR1cm4gY29udGV4dC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCBjbGFzc05hbWUgKTtcblx0XHR9XG5cdH07XG5cblx0LyogUVNBL21hdGNoZXNTZWxlY3RvclxuXHQtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG5cblx0Ly8gUVNBIGFuZCBtYXRjaGVzU2VsZWN0b3Igc3VwcG9ydFxuXG5cdC8vIG1hdGNoZXNTZWxlY3Rvcig6YWN0aXZlKSByZXBvcnRzIGZhbHNlIHdoZW4gdHJ1ZSAoSUU5L09wZXJhIDExLjUpXG5cdHJidWdneU1hdGNoZXMgPSBbXTtcblxuXHQvLyBxU2EoOmZvY3VzKSByZXBvcnRzIGZhbHNlIHdoZW4gdHJ1ZSAoQ2hyb21lIDIxKVxuXHQvLyBXZSBhbGxvdyB0aGlzIGJlY2F1c2Ugb2YgYSBidWcgaW4gSUU4LzkgdGhhdCB0aHJvd3MgYW4gZXJyb3Jcblx0Ly8gd2hlbmV2ZXIgYGRvY3VtZW50LmFjdGl2ZUVsZW1lbnRgIGlzIGFjY2Vzc2VkIG9uIGFuIGlmcmFtZVxuXHQvLyBTbywgd2UgYWxsb3cgOmZvY3VzIHRvIHBhc3MgdGhyb3VnaCBRU0EgYWxsIHRoZSB0aW1lIHRvIGF2b2lkIHRoZSBJRSBlcnJvclxuXHQvLyBTZWUgaHR0cHM6Ly9idWdzLmpxdWVyeS5jb20vdGlja2V0LzEzMzc4XG5cdHJidWdneVFTQSA9IFtdO1xuXG5cdGlmICggKCBzdXBwb3J0LnFzYSA9IHJuYXRpdmUudGVzdCggZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCApICkgKSB7XG5cblx0XHQvLyBCdWlsZCBRU0EgcmVnZXhcblx0XHQvLyBSZWdleCBzdHJhdGVneSBhZG9wdGVkIGZyb20gRGllZ28gUGVyaW5pXG5cdFx0YXNzZXJ0KCBmdW5jdGlvbiggZWwgKSB7XG5cblx0XHRcdHZhciBpbnB1dDtcblxuXHRcdFx0Ly8gU2VsZWN0IGlzIHNldCB0byBlbXB0eSBzdHJpbmcgb24gcHVycG9zZVxuXHRcdFx0Ly8gVGhpcyBpcyB0byB0ZXN0IElFJ3MgdHJlYXRtZW50IG9mIG5vdCBleHBsaWNpdGx5XG5cdFx0XHQvLyBzZXR0aW5nIGEgYm9vbGVhbiBjb250ZW50IGF0dHJpYnV0ZSxcblx0XHRcdC8vIHNpbmNlIGl0cyBwcmVzZW5jZSBzaG91bGQgYmUgZW5vdWdoXG5cdFx0XHQvLyBodHRwczovL2J1Z3MuanF1ZXJ5LmNvbS90aWNrZXQvMTIzNTlcblx0XHRcdGRvY0VsZW0uYXBwZW5kQ2hpbGQoIGVsICkuaW5uZXJIVE1MID0gXCI8YSBpZD0nXCIgKyBleHBhbmRvICsgXCInPjwvYT5cIiArXG5cdFx0XHRcdFwiPHNlbGVjdCBpZD0nXCIgKyBleHBhbmRvICsgXCItXFxyXFxcXCcgbXNhbGxvd2NhcHR1cmU9Jyc+XCIgK1xuXHRcdFx0XHRcIjxvcHRpb24gc2VsZWN0ZWQ9Jyc+PC9vcHRpb24+PC9zZWxlY3Q+XCI7XG5cblx0XHRcdC8vIFN1cHBvcnQ6IElFOCwgT3BlcmEgMTEtMTIuMTZcblx0XHRcdC8vIE5vdGhpbmcgc2hvdWxkIGJlIHNlbGVjdGVkIHdoZW4gZW1wdHkgc3RyaW5ncyBmb2xsb3cgXj0gb3IgJD0gb3IgKj1cblx0XHRcdC8vIFRoZSB0ZXN0IGF0dHJpYnV0ZSBtdXN0IGJlIHVua25vd24gaW4gT3BlcmEgYnV0IFwic2FmZVwiIGZvciBXaW5SVFxuXHRcdFx0Ly8gaHR0cHM6Ly9tc2RuLm1pY3Jvc29mdC5jb20vZW4tdXMvbGlicmFyeS9pZS9oaDQ2NTM4OC5hc3B4I2F0dHJpYnV0ZV9zZWN0aW9uXG5cdFx0XHRpZiAoIGVsLnF1ZXJ5U2VsZWN0b3JBbGwoIFwiW21zYWxsb3djYXB0dXJlXj0nJ11cIiApLmxlbmd0aCApIHtcblx0XHRcdFx0cmJ1Z2d5UVNBLnB1c2goIFwiWypeJF09XCIgKyB3aGl0ZXNwYWNlICsgXCIqKD86Jyd8XFxcIlxcXCIpXCIgKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gU3VwcG9ydDogSUU4XG5cdFx0XHQvLyBCb29sZWFuIGF0dHJpYnV0ZXMgYW5kIFwidmFsdWVcIiBhcmUgbm90IHRyZWF0ZWQgY29ycmVjdGx5XG5cdFx0XHRpZiAoICFlbC5xdWVyeVNlbGVjdG9yQWxsKCBcIltzZWxlY3RlZF1cIiApLmxlbmd0aCApIHtcblx0XHRcdFx0cmJ1Z2d5UVNBLnB1c2goIFwiXFxcXFtcIiArIHdoaXRlc3BhY2UgKyBcIiooPzp2YWx1ZXxcIiArIGJvb2xlYW5zICsgXCIpXCIgKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gU3VwcG9ydDogQ2hyb21lPDI5LCBBbmRyb2lkPDQuNCwgU2FmYXJpPDcuMCssIGlPUzw3LjArLCBQaGFudG9tSlM8MS45LjgrXG5cdFx0XHRpZiAoICFlbC5xdWVyeVNlbGVjdG9yQWxsKCBcIltpZH49XCIgKyBleHBhbmRvICsgXCItXVwiICkubGVuZ3RoICkge1xuXHRcdFx0XHRyYnVnZ3lRU0EucHVzaCggXCJ+PVwiICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIFN1cHBvcnQ6IElFIDExKywgRWRnZSAxNSAtIDE4K1xuXHRcdFx0Ly8gSUUgMTEvRWRnZSBkb24ndCBmaW5kIGVsZW1lbnRzIG9uIGEgYFtuYW1lPScnXWAgcXVlcnkgaW4gc29tZSBjYXNlcy5cblx0XHRcdC8vIEFkZGluZyBhIHRlbXBvcmFyeSBhdHRyaWJ1dGUgdG8gdGhlIGRvY3VtZW50IGJlZm9yZSB0aGUgc2VsZWN0aW9uIHdvcmtzXG5cdFx0XHQvLyBhcm91bmQgdGhlIGlzc3VlLlxuXHRcdFx0Ly8gSW50ZXJlc3RpbmdseSwgSUUgMTAgJiBvbGRlciBkb24ndCBzZWVtIHRvIGhhdmUgdGhlIGlzc3VlLlxuXHRcdFx0aW5wdXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCBcImlucHV0XCIgKTtcblx0XHRcdGlucHV0LnNldEF0dHJpYnV0ZSggXCJuYW1lXCIsIFwiXCIgKTtcblx0XHRcdGVsLmFwcGVuZENoaWxkKCBpbnB1dCApO1xuXHRcdFx0aWYgKCAhZWwucXVlcnlTZWxlY3RvckFsbCggXCJbbmFtZT0nJ11cIiApLmxlbmd0aCApIHtcblx0XHRcdFx0cmJ1Z2d5UVNBLnB1c2goIFwiXFxcXFtcIiArIHdoaXRlc3BhY2UgKyBcIipuYW1lXCIgKyB3aGl0ZXNwYWNlICsgXCIqPVwiICtcblx0XHRcdFx0XHR3aGl0ZXNwYWNlICsgXCIqKD86Jyd8XFxcIlxcXCIpXCIgKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gV2Via2l0L09wZXJhIC0gOmNoZWNrZWQgc2hvdWxkIHJldHVybiBzZWxlY3RlZCBvcHRpb24gZWxlbWVudHNcblx0XHRcdC8vIGh0dHA6Ly93d3cudzMub3JnL1RSLzIwMTEvUkVDLWNzczMtc2VsZWN0b3JzLTIwMTEwOTI5LyNjaGVja2VkXG5cdFx0XHQvLyBJRTggdGhyb3dzIGVycm9yIGhlcmUgYW5kIHdpbGwgbm90IHNlZSBsYXRlciB0ZXN0c1xuXHRcdFx0aWYgKCAhZWwucXVlcnlTZWxlY3RvckFsbCggXCI6Y2hlY2tlZFwiICkubGVuZ3RoICkge1xuXHRcdFx0XHRyYnVnZ3lRU0EucHVzaCggXCI6Y2hlY2tlZFwiICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIFN1cHBvcnQ6IFNhZmFyaSA4KywgaU9TIDgrXG5cdFx0XHQvLyBodHRwczovL2J1Z3Mud2Via2l0Lm9yZy9zaG93X2J1Zy5jZ2k/aWQ9MTM2ODUxXG5cdFx0XHQvLyBJbi1wYWdlIGBzZWxlY3RvciNpZCBzaWJsaW5nLWNvbWJpbmF0b3Igc2VsZWN0b3JgIGZhaWxzXG5cdFx0XHRpZiAoICFlbC5xdWVyeVNlbGVjdG9yQWxsKCBcImEjXCIgKyBleHBhbmRvICsgXCIrKlwiICkubGVuZ3RoICkge1xuXHRcdFx0XHRyYnVnZ3lRU0EucHVzaCggXCIuIy4rWyt+XVwiICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIFN1cHBvcnQ6IEZpcmVmb3ggPD0zLjYgLSA1IG9ubHlcblx0XHRcdC8vIE9sZCBGaXJlZm94IGRvZXNuJ3QgdGhyb3cgb24gYSBiYWRseS1lc2NhcGVkIGlkZW50aWZpZXIuXG5cdFx0XHRlbC5xdWVyeVNlbGVjdG9yQWxsKCBcIlxcXFxcXGZcIiApO1xuXHRcdFx0cmJ1Z2d5UVNBLnB1c2goIFwiW1xcXFxyXFxcXG5cXFxcZl1cIiApO1xuXHRcdH0gKTtcblxuXHRcdGFzc2VydCggZnVuY3Rpb24oIGVsICkge1xuXHRcdFx0ZWwuaW5uZXJIVE1MID0gXCI8YSBocmVmPScnIGRpc2FibGVkPSdkaXNhYmxlZCc+PC9hPlwiICtcblx0XHRcdFx0XCI8c2VsZWN0IGRpc2FibGVkPSdkaXNhYmxlZCc+PG9wdGlvbi8+PC9zZWxlY3Q+XCI7XG5cblx0XHRcdC8vIFN1cHBvcnQ6IFdpbmRvd3MgOCBOYXRpdmUgQXBwc1xuXHRcdFx0Ly8gVGhlIHR5cGUgYW5kIG5hbWUgYXR0cmlidXRlcyBhcmUgcmVzdHJpY3RlZCBkdXJpbmcgLmlubmVySFRNTCBhc3NpZ25tZW50XG5cdFx0XHR2YXIgaW5wdXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCBcImlucHV0XCIgKTtcblx0XHRcdGlucHV0LnNldEF0dHJpYnV0ZSggXCJ0eXBlXCIsIFwiaGlkZGVuXCIgKTtcblx0XHRcdGVsLmFwcGVuZENoaWxkKCBpbnB1dCApLnNldEF0dHJpYnV0ZSggXCJuYW1lXCIsIFwiRFwiICk7XG5cblx0XHRcdC8vIFN1cHBvcnQ6IElFOFxuXHRcdFx0Ly8gRW5mb3JjZSBjYXNlLXNlbnNpdGl2aXR5IG9mIG5hbWUgYXR0cmlidXRlXG5cdFx0XHRpZiAoIGVsLnF1ZXJ5U2VsZWN0b3JBbGwoIFwiW25hbWU9ZF1cIiApLmxlbmd0aCApIHtcblx0XHRcdFx0cmJ1Z2d5UVNBLnB1c2goIFwibmFtZVwiICsgd2hpdGVzcGFjZSArIFwiKlsqXiR8IX5dPz1cIiApO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBGRiAzLjUgLSA6ZW5hYmxlZC86ZGlzYWJsZWQgYW5kIGhpZGRlbiBlbGVtZW50cyAoaGlkZGVuIGVsZW1lbnRzIGFyZSBzdGlsbCBlbmFibGVkKVxuXHRcdFx0Ly8gSUU4IHRocm93cyBlcnJvciBoZXJlIGFuZCB3aWxsIG5vdCBzZWUgbGF0ZXIgdGVzdHNcblx0XHRcdGlmICggZWwucXVlcnlTZWxlY3RvckFsbCggXCI6ZW5hYmxlZFwiICkubGVuZ3RoICE9PSAyICkge1xuXHRcdFx0XHRyYnVnZ3lRU0EucHVzaCggXCI6ZW5hYmxlZFwiLCBcIjpkaXNhYmxlZFwiICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIFN1cHBvcnQ6IElFOS0xMStcblx0XHRcdC8vIElFJ3MgOmRpc2FibGVkIHNlbGVjdG9yIGRvZXMgbm90IHBpY2sgdXAgdGhlIGNoaWxkcmVuIG9mIGRpc2FibGVkIGZpZWxkc2V0c1xuXHRcdFx0ZG9jRWxlbS5hcHBlbmRDaGlsZCggZWwgKS5kaXNhYmxlZCA9IHRydWU7XG5cdFx0XHRpZiAoIGVsLnF1ZXJ5U2VsZWN0b3JBbGwoIFwiOmRpc2FibGVkXCIgKS5sZW5ndGggIT09IDIgKSB7XG5cdFx0XHRcdHJidWdneVFTQS5wdXNoKCBcIjplbmFibGVkXCIsIFwiOmRpc2FibGVkXCIgKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gU3VwcG9ydDogT3BlcmEgMTAgLSAxMSBvbmx5XG5cdFx0XHQvLyBPcGVyYSAxMC0xMSBkb2VzIG5vdCB0aHJvdyBvbiBwb3N0LWNvbW1hIGludmFsaWQgcHNldWRvc1xuXHRcdFx0ZWwucXVlcnlTZWxlY3RvckFsbCggXCIqLDp4XCIgKTtcblx0XHRcdHJidWdneVFTQS5wdXNoKCBcIiwuKjpcIiApO1xuXHRcdH0gKTtcblx0fVxuXG5cdGlmICggKCBzdXBwb3J0Lm1hdGNoZXNTZWxlY3RvciA9IHJuYXRpdmUudGVzdCggKCBtYXRjaGVzID0gZG9jRWxlbS5tYXRjaGVzIHx8XG5cdFx0ZG9jRWxlbS53ZWJraXRNYXRjaGVzU2VsZWN0b3IgfHxcblx0XHRkb2NFbGVtLm1vek1hdGNoZXNTZWxlY3RvciB8fFxuXHRcdGRvY0VsZW0ub01hdGNoZXNTZWxlY3RvciB8fFxuXHRcdGRvY0VsZW0ubXNNYXRjaGVzU2VsZWN0b3IgKSApICkgKSB7XG5cblx0XHRhc3NlcnQoIGZ1bmN0aW9uKCBlbCApIHtcblxuXHRcdFx0Ly8gQ2hlY2sgdG8gc2VlIGlmIGl0J3MgcG9zc2libGUgdG8gZG8gbWF0Y2hlc1NlbGVjdG9yXG5cdFx0XHQvLyBvbiBhIGRpc2Nvbm5lY3RlZCBub2RlIChJRSA5KVxuXHRcdFx0c3VwcG9ydC5kaXNjb25uZWN0ZWRNYXRjaCA9IG1hdGNoZXMuY2FsbCggZWwsIFwiKlwiICk7XG5cblx0XHRcdC8vIFRoaXMgc2hvdWxkIGZhaWwgd2l0aCBhbiBleGNlcHRpb25cblx0XHRcdC8vIEdlY2tvIGRvZXMgbm90IGVycm9yLCByZXR1cm5zIGZhbHNlIGluc3RlYWRcblx0XHRcdG1hdGNoZXMuY2FsbCggZWwsIFwiW3MhPScnXTp4XCIgKTtcblx0XHRcdHJidWdneU1hdGNoZXMucHVzaCggXCIhPVwiLCBwc2V1ZG9zICk7XG5cdFx0fSApO1xuXHR9XG5cblx0cmJ1Z2d5UVNBID0gcmJ1Z2d5UVNBLmxlbmd0aCAmJiBuZXcgUmVnRXhwKCByYnVnZ3lRU0Euam9pbiggXCJ8XCIgKSApO1xuXHRyYnVnZ3lNYXRjaGVzID0gcmJ1Z2d5TWF0Y2hlcy5sZW5ndGggJiYgbmV3IFJlZ0V4cCggcmJ1Z2d5TWF0Y2hlcy5qb2luKCBcInxcIiApICk7XG5cblx0LyogQ29udGFpbnNcblx0LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuXHRoYXNDb21wYXJlID0gcm5hdGl2ZS50ZXN0KCBkb2NFbGVtLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uICk7XG5cblx0Ly8gRWxlbWVudCBjb250YWlucyBhbm90aGVyXG5cdC8vIFB1cnBvc2VmdWxseSBzZWxmLWV4Y2x1c2l2ZVxuXHQvLyBBcyBpbiwgYW4gZWxlbWVudCBkb2VzIG5vdCBjb250YWluIGl0c2VsZlxuXHRjb250YWlucyA9IGhhc0NvbXBhcmUgfHwgcm5hdGl2ZS50ZXN0KCBkb2NFbGVtLmNvbnRhaW5zICkgP1xuXHRcdGZ1bmN0aW9uKCBhLCBiICkge1xuXHRcdFx0dmFyIGFkb3duID0gYS5ub2RlVHlwZSA9PT0gOSA/IGEuZG9jdW1lbnRFbGVtZW50IDogYSxcblx0XHRcdFx0YnVwID0gYiAmJiBiLnBhcmVudE5vZGU7XG5cdFx0XHRyZXR1cm4gYSA9PT0gYnVwIHx8ICEhKCBidXAgJiYgYnVwLm5vZGVUeXBlID09PSAxICYmIChcblx0XHRcdFx0YWRvd24uY29udGFpbnMgP1xuXHRcdFx0XHRcdGFkb3duLmNvbnRhaW5zKCBidXAgKSA6XG5cdFx0XHRcdFx0YS5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbiAmJiBhLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uKCBidXAgKSAmIDE2XG5cdFx0XHQpICk7XG5cdFx0fSA6XG5cdFx0ZnVuY3Rpb24oIGEsIGIgKSB7XG5cdFx0XHRpZiAoIGIgKSB7XG5cdFx0XHRcdHdoaWxlICggKCBiID0gYi5wYXJlbnROb2RlICkgKSB7XG5cdFx0XHRcdFx0aWYgKCBiID09PSBhICkge1xuXHRcdFx0XHRcdFx0cmV0dXJuIHRydWU7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fTtcblxuXHQvKiBTb3J0aW5nXG5cdC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cblxuXHQvLyBEb2N1bWVudCBvcmRlciBzb3J0aW5nXG5cdHNvcnRPcmRlciA9IGhhc0NvbXBhcmUgP1xuXHRmdW5jdGlvbiggYSwgYiApIHtcblxuXHRcdC8vIEZsYWcgZm9yIGR1cGxpY2F0ZSByZW1vdmFsXG5cdFx0aWYgKCBhID09PSBiICkge1xuXHRcdFx0aGFzRHVwbGljYXRlID0gdHJ1ZTtcblx0XHRcdHJldHVybiAwO1xuXHRcdH1cblxuXHRcdC8vIFNvcnQgb24gbWV0aG9kIGV4aXN0ZW5jZSBpZiBvbmx5IG9uZSBpbnB1dCBoYXMgY29tcGFyZURvY3VtZW50UG9zaXRpb25cblx0XHR2YXIgY29tcGFyZSA9ICFhLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uIC0gIWIuY29tcGFyZURvY3VtZW50UG9zaXRpb247XG5cdFx0aWYgKCBjb21wYXJlICkge1xuXHRcdFx0cmV0dXJuIGNvbXBhcmU7XG5cdFx0fVxuXG5cdFx0Ly8gQ2FsY3VsYXRlIHBvc2l0aW9uIGlmIGJvdGggaW5wdXRzIGJlbG9uZyB0byB0aGUgc2FtZSBkb2N1bWVudFxuXHRcdC8vIFN1cHBvcnQ6IElFIDExKywgRWRnZSAxNyAtIDE4K1xuXHRcdC8vIElFL0VkZ2Ugc29tZXRpbWVzIHRocm93IGEgXCJQZXJtaXNzaW9uIGRlbmllZFwiIGVycm9yIHdoZW4gc3RyaWN0LWNvbXBhcmluZ1xuXHRcdC8vIHR3byBkb2N1bWVudHM7IHNoYWxsb3cgY29tcGFyaXNvbnMgd29yay5cblx0XHQvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZXFlcWVxXG5cdFx0Y29tcGFyZSA9ICggYS5vd25lckRvY3VtZW50IHx8IGEgKSA9PSAoIGIub3duZXJEb2N1bWVudCB8fCBiICkgP1xuXHRcdFx0YS5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbiggYiApIDpcblxuXHRcdFx0Ly8gT3RoZXJ3aXNlIHdlIGtub3cgdGhleSBhcmUgZGlzY29ubmVjdGVkXG5cdFx0XHQxO1xuXG5cdFx0Ly8gRGlzY29ubmVjdGVkIG5vZGVzXG5cdFx0aWYgKCBjb21wYXJlICYgMSB8fFxuXHRcdFx0KCAhc3VwcG9ydC5zb3J0RGV0YWNoZWQgJiYgYi5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbiggYSApID09PSBjb21wYXJlICkgKSB7XG5cblx0XHRcdC8vIENob29zZSB0aGUgZmlyc3QgZWxlbWVudCB0aGF0IGlzIHJlbGF0ZWQgdG8gb3VyIHByZWZlcnJlZCBkb2N1bWVudFxuXHRcdFx0Ly8gU3VwcG9ydDogSUUgMTErLCBFZGdlIDE3IC0gMTgrXG5cdFx0XHQvLyBJRS9FZGdlIHNvbWV0aW1lcyB0aHJvdyBhIFwiUGVybWlzc2lvbiBkZW5pZWRcIiBlcnJvciB3aGVuIHN0cmljdC1jb21wYXJpbmdcblx0XHRcdC8vIHR3byBkb2N1bWVudHM7IHNoYWxsb3cgY29tcGFyaXNvbnMgd29yay5cblx0XHRcdC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBlcWVxZXFcblx0XHRcdGlmICggYSA9PSBkb2N1bWVudCB8fCBhLm93bmVyRG9jdW1lbnQgPT0gcHJlZmVycmVkRG9jICYmXG5cdFx0XHRcdGNvbnRhaW5zKCBwcmVmZXJyZWREb2MsIGEgKSApIHtcblx0XHRcdFx0cmV0dXJuIC0xO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBTdXBwb3J0OiBJRSAxMSssIEVkZ2UgMTcgLSAxOCtcblx0XHRcdC8vIElFL0VkZ2Ugc29tZXRpbWVzIHRocm93IGEgXCJQZXJtaXNzaW9uIGRlbmllZFwiIGVycm9yIHdoZW4gc3RyaWN0LWNvbXBhcmluZ1xuXHRcdFx0Ly8gdHdvIGRvY3VtZW50czsgc2hhbGxvdyBjb21wYXJpc29ucyB3b3JrLlxuXHRcdFx0Ly8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGVxZXFlcVxuXHRcdFx0aWYgKCBiID09IGRvY3VtZW50IHx8IGIub3duZXJEb2N1bWVudCA9PSBwcmVmZXJyZWREb2MgJiZcblx0XHRcdFx0Y29udGFpbnMoIHByZWZlcnJlZERvYywgYiApICkge1xuXHRcdFx0XHRyZXR1cm4gMTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gTWFpbnRhaW4gb3JpZ2luYWwgb3JkZXJcblx0XHRcdHJldHVybiBzb3J0SW5wdXQgP1xuXHRcdFx0XHQoIGluZGV4T2YoIHNvcnRJbnB1dCwgYSApIC0gaW5kZXhPZiggc29ydElucHV0LCBiICkgKSA6XG5cdFx0XHRcdDA7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIGNvbXBhcmUgJiA0ID8gLTEgOiAxO1xuXHR9IDpcblx0ZnVuY3Rpb24oIGEsIGIgKSB7XG5cblx0XHQvLyBFeGl0IGVhcmx5IGlmIHRoZSBub2RlcyBhcmUgaWRlbnRpY2FsXG5cdFx0aWYgKCBhID09PSBiICkge1xuXHRcdFx0aGFzRHVwbGljYXRlID0gdHJ1ZTtcblx0XHRcdHJldHVybiAwO1xuXHRcdH1cblxuXHRcdHZhciBjdXIsXG5cdFx0XHRpID0gMCxcblx0XHRcdGF1cCA9IGEucGFyZW50Tm9kZSxcblx0XHRcdGJ1cCA9IGIucGFyZW50Tm9kZSxcblx0XHRcdGFwID0gWyBhIF0sXG5cdFx0XHRicCA9IFsgYiBdO1xuXG5cdFx0Ly8gUGFyZW50bGVzcyBub2RlcyBhcmUgZWl0aGVyIGRvY3VtZW50cyBvciBkaXNjb25uZWN0ZWRcblx0XHRpZiAoICFhdXAgfHwgIWJ1cCApIHtcblxuXHRcdFx0Ly8gU3VwcG9ydDogSUUgMTErLCBFZGdlIDE3IC0gMTgrXG5cdFx0XHQvLyBJRS9FZGdlIHNvbWV0aW1lcyB0aHJvdyBhIFwiUGVybWlzc2lvbiBkZW5pZWRcIiBlcnJvciB3aGVuIHN0cmljdC1jb21wYXJpbmdcblx0XHRcdC8vIHR3byBkb2N1bWVudHM7IHNoYWxsb3cgY29tcGFyaXNvbnMgd29yay5cblx0XHRcdC8qIGVzbGludC1kaXNhYmxlIGVxZXFlcSAqL1xuXHRcdFx0cmV0dXJuIGEgPT0gZG9jdW1lbnQgPyAtMSA6XG5cdFx0XHRcdGIgPT0gZG9jdW1lbnQgPyAxIDpcblx0XHRcdFx0LyogZXNsaW50LWVuYWJsZSBlcWVxZXEgKi9cblx0XHRcdFx0YXVwID8gLTEgOlxuXHRcdFx0XHRidXAgPyAxIDpcblx0XHRcdFx0c29ydElucHV0ID9cblx0XHRcdFx0KCBpbmRleE9mKCBzb3J0SW5wdXQsIGEgKSAtIGluZGV4T2YoIHNvcnRJbnB1dCwgYiApICkgOlxuXHRcdFx0XHQwO1xuXG5cdFx0Ly8gSWYgdGhlIG5vZGVzIGFyZSBzaWJsaW5ncywgd2UgY2FuIGRvIGEgcXVpY2sgY2hlY2tcblx0XHR9IGVsc2UgaWYgKCBhdXAgPT09IGJ1cCApIHtcblx0XHRcdHJldHVybiBzaWJsaW5nQ2hlY2soIGEsIGIgKTtcblx0XHR9XG5cblx0XHQvLyBPdGhlcndpc2Ugd2UgbmVlZCBmdWxsIGxpc3RzIG9mIHRoZWlyIGFuY2VzdG9ycyBmb3IgY29tcGFyaXNvblxuXHRcdGN1ciA9IGE7XG5cdFx0d2hpbGUgKCAoIGN1ciA9IGN1ci5wYXJlbnROb2RlICkgKSB7XG5cdFx0XHRhcC51bnNoaWZ0KCBjdXIgKTtcblx0XHR9XG5cdFx0Y3VyID0gYjtcblx0XHR3aGlsZSAoICggY3VyID0gY3VyLnBhcmVudE5vZGUgKSApIHtcblx0XHRcdGJwLnVuc2hpZnQoIGN1ciApO1xuXHRcdH1cblxuXHRcdC8vIFdhbGsgZG93biB0aGUgdHJlZSBsb29raW5nIGZvciBhIGRpc2NyZXBhbmN5XG5cdFx0d2hpbGUgKCBhcFsgaSBdID09PSBicFsgaSBdICkge1xuXHRcdFx0aSsrO1xuXHRcdH1cblxuXHRcdHJldHVybiBpID9cblxuXHRcdFx0Ly8gRG8gYSBzaWJsaW5nIGNoZWNrIGlmIHRoZSBub2RlcyBoYXZlIGEgY29tbW9uIGFuY2VzdG9yXG5cdFx0XHRzaWJsaW5nQ2hlY2soIGFwWyBpIF0sIGJwWyBpIF0gKSA6XG5cblx0XHRcdC8vIE90aGVyd2lzZSBub2RlcyBpbiBvdXIgZG9jdW1lbnQgc29ydCBmaXJzdFxuXHRcdFx0Ly8gU3VwcG9ydDogSUUgMTErLCBFZGdlIDE3IC0gMTgrXG5cdFx0XHQvLyBJRS9FZGdlIHNvbWV0aW1lcyB0aHJvdyBhIFwiUGVybWlzc2lvbiBkZW5pZWRcIiBlcnJvciB3aGVuIHN0cmljdC1jb21wYXJpbmdcblx0XHRcdC8vIHR3byBkb2N1bWVudHM7IHNoYWxsb3cgY29tcGFyaXNvbnMgd29yay5cblx0XHRcdC8qIGVzbGludC1kaXNhYmxlIGVxZXFlcSAqL1xuXHRcdFx0YXBbIGkgXSA9PSBwcmVmZXJyZWREb2MgPyAtMSA6XG5cdFx0XHRicFsgaSBdID09IHByZWZlcnJlZERvYyA/IDEgOlxuXHRcdFx0LyogZXNsaW50LWVuYWJsZSBlcWVxZXEgKi9cblx0XHRcdDA7XG5cdH07XG5cblx0cmV0dXJuIGRvY3VtZW50O1xufTtcblxuU2l6emxlLm1hdGNoZXMgPSBmdW5jdGlvbiggZXhwciwgZWxlbWVudHMgKSB7XG5cdHJldHVybiBTaXp6bGUoIGV4cHIsIG51bGwsIG51bGwsIGVsZW1lbnRzICk7XG59O1xuXG5TaXp6bGUubWF0Y2hlc1NlbGVjdG9yID0gZnVuY3Rpb24oIGVsZW0sIGV4cHIgKSB7XG5cdHNldERvY3VtZW50KCBlbGVtICk7XG5cblx0aWYgKCBzdXBwb3J0Lm1hdGNoZXNTZWxlY3RvciAmJiBkb2N1bWVudElzSFRNTCAmJlxuXHRcdCFub25uYXRpdmVTZWxlY3RvckNhY2hlWyBleHByICsgXCIgXCIgXSAmJlxuXHRcdCggIXJidWdneU1hdGNoZXMgfHwgIXJidWdneU1hdGNoZXMudGVzdCggZXhwciApICkgJiZcblx0XHQoICFyYnVnZ3lRU0EgICAgIHx8ICFyYnVnZ3lRU0EudGVzdCggZXhwciApICkgKSB7XG5cblx0XHR0cnkge1xuXHRcdFx0dmFyIHJldCA9IG1hdGNoZXMuY2FsbCggZWxlbSwgZXhwciApO1xuXG5cdFx0XHQvLyBJRSA5J3MgbWF0Y2hlc1NlbGVjdG9yIHJldHVybnMgZmFsc2Ugb24gZGlzY29ubmVjdGVkIG5vZGVzXG5cdFx0XHRpZiAoIHJldCB8fCBzdXBwb3J0LmRpc2Nvbm5lY3RlZE1hdGNoIHx8XG5cblx0XHRcdFx0Ly8gQXMgd2VsbCwgZGlzY29ubmVjdGVkIG5vZGVzIGFyZSBzYWlkIHRvIGJlIGluIGEgZG9jdW1lbnRcblx0XHRcdFx0Ly8gZnJhZ21lbnQgaW4gSUUgOVxuXHRcdFx0XHRlbGVtLmRvY3VtZW50ICYmIGVsZW0uZG9jdW1lbnQubm9kZVR5cGUgIT09IDExICkge1xuXHRcdFx0XHRyZXR1cm4gcmV0O1xuXHRcdFx0fVxuXHRcdH0gY2F0Y2ggKCBlICkge1xuXHRcdFx0bm9ubmF0aXZlU2VsZWN0b3JDYWNoZSggZXhwciwgdHJ1ZSApO1xuXHRcdH1cblx0fVxuXG5cdHJldHVybiBTaXp6bGUoIGV4cHIsIGRvY3VtZW50LCBudWxsLCBbIGVsZW0gXSApLmxlbmd0aCA+IDA7XG59O1xuXG5TaXp6bGUuY29udGFpbnMgPSBmdW5jdGlvbiggY29udGV4dCwgZWxlbSApIHtcblxuXHQvLyBTZXQgZG9jdW1lbnQgdmFycyBpZiBuZWVkZWRcblx0Ly8gU3VwcG9ydDogSUUgMTErLCBFZGdlIDE3IC0gMTgrXG5cdC8vIElFL0VkZ2Ugc29tZXRpbWVzIHRocm93IGEgXCJQZXJtaXNzaW9uIGRlbmllZFwiIGVycm9yIHdoZW4gc3RyaWN0LWNvbXBhcmluZ1xuXHQvLyB0d28gZG9jdW1lbnRzOyBzaGFsbG93IGNvbXBhcmlzb25zIHdvcmsuXG5cdC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBlcWVxZXFcblx0aWYgKCAoIGNvbnRleHQub3duZXJEb2N1bWVudCB8fCBjb250ZXh0ICkgIT0gZG9jdW1lbnQgKSB7XG5cdFx0c2V0RG9jdW1lbnQoIGNvbnRleHQgKTtcblx0fVxuXHRyZXR1cm4gY29udGFpbnMoIGNvbnRleHQsIGVsZW0gKTtcbn07XG5cblNpenpsZS5hdHRyID0gZnVuY3Rpb24oIGVsZW0sIG5hbWUgKSB7XG5cblx0Ly8gU2V0IGRvY3VtZW50IHZhcnMgaWYgbmVlZGVkXG5cdC8vIFN1cHBvcnQ6IElFIDExKywgRWRnZSAxNyAtIDE4K1xuXHQvLyBJRS9FZGdlIHNvbWV0aW1lcyB0aHJvdyBhIFwiUGVybWlzc2lvbiBkZW5pZWRcIiBlcnJvciB3aGVuIHN0cmljdC1jb21wYXJpbmdcblx0Ly8gdHdvIGRvY3VtZW50czsgc2hhbGxvdyBjb21wYXJpc29ucyB3b3JrLlxuXHQvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZXFlcWVxXG5cdGlmICggKCBlbGVtLm93bmVyRG9jdW1lbnQgfHwgZWxlbSApICE9IGRvY3VtZW50ICkge1xuXHRcdHNldERvY3VtZW50KCBlbGVtICk7XG5cdH1cblxuXHR2YXIgZm4gPSBFeHByLmF0dHJIYW5kbGVbIG5hbWUudG9Mb3dlckNhc2UoKSBdLFxuXG5cdFx0Ly8gRG9uJ3QgZ2V0IGZvb2xlZCBieSBPYmplY3QucHJvdG90eXBlIHByb3BlcnRpZXMgKGpRdWVyeSAjMTM4MDcpXG5cdFx0dmFsID0gZm4gJiYgaGFzT3duLmNhbGwoIEV4cHIuYXR0ckhhbmRsZSwgbmFtZS50b0xvd2VyQ2FzZSgpICkgP1xuXHRcdFx0Zm4oIGVsZW0sIG5hbWUsICFkb2N1bWVudElzSFRNTCApIDpcblx0XHRcdHVuZGVmaW5lZDtcblxuXHRyZXR1cm4gdmFsICE9PSB1bmRlZmluZWQgP1xuXHRcdHZhbCA6XG5cdFx0c3VwcG9ydC5hdHRyaWJ1dGVzIHx8ICFkb2N1bWVudElzSFRNTCA/XG5cdFx0XHRlbGVtLmdldEF0dHJpYnV0ZSggbmFtZSApIDpcblx0XHRcdCggdmFsID0gZWxlbS5nZXRBdHRyaWJ1dGVOb2RlKCBuYW1lICkgKSAmJiB2YWwuc3BlY2lmaWVkID9cblx0XHRcdFx0dmFsLnZhbHVlIDpcblx0XHRcdFx0bnVsbDtcbn07XG5cblNpenpsZS5lc2NhcGUgPSBmdW5jdGlvbiggc2VsICkge1xuXHRyZXR1cm4gKCBzZWwgKyBcIlwiICkucmVwbGFjZSggcmNzc2VzY2FwZSwgZmNzc2VzY2FwZSApO1xufTtcblxuU2l6emxlLmVycm9yID0gZnVuY3Rpb24oIG1zZyApIHtcblx0dGhyb3cgbmV3IEVycm9yKCBcIlN5bnRheCBlcnJvciwgdW5yZWNvZ25pemVkIGV4cHJlc3Npb246IFwiICsgbXNnICk7XG59O1xuXG4vKipcbiAqIERvY3VtZW50IHNvcnRpbmcgYW5kIHJlbW92aW5nIGR1cGxpY2F0ZXNcbiAqIEBwYXJhbSB7QXJyYXlMaWtlfSByZXN1bHRzXG4gKi9cblNpenpsZS51bmlxdWVTb3J0ID0gZnVuY3Rpb24oIHJlc3VsdHMgKSB7XG5cdHZhciBlbGVtLFxuXHRcdGR1cGxpY2F0ZXMgPSBbXSxcblx0XHRqID0gMCxcblx0XHRpID0gMDtcblxuXHQvLyBVbmxlc3Mgd2UgKmtub3cqIHdlIGNhbiBkZXRlY3QgZHVwbGljYXRlcywgYXNzdW1lIHRoZWlyIHByZXNlbmNlXG5cdGhhc0R1cGxpY2F0ZSA9ICFzdXBwb3J0LmRldGVjdER1cGxpY2F0ZXM7XG5cdHNvcnRJbnB1dCA9ICFzdXBwb3J0LnNvcnRTdGFibGUgJiYgcmVzdWx0cy5zbGljZSggMCApO1xuXHRyZXN1bHRzLnNvcnQoIHNvcnRPcmRlciApO1xuXG5cdGlmICggaGFzRHVwbGljYXRlICkge1xuXHRcdHdoaWxlICggKCBlbGVtID0gcmVzdWx0c1sgaSsrIF0gKSApIHtcblx0XHRcdGlmICggZWxlbSA9PT0gcmVzdWx0c1sgaSBdICkge1xuXHRcdFx0XHRqID0gZHVwbGljYXRlcy5wdXNoKCBpICk7XG5cdFx0XHR9XG5cdFx0fVxuXHRcdHdoaWxlICggai0tICkge1xuXHRcdFx0cmVzdWx0cy5zcGxpY2UoIGR1cGxpY2F0ZXNbIGogXSwgMSApO1xuXHRcdH1cblx0fVxuXG5cdC8vIENsZWFyIGlucHV0IGFmdGVyIHNvcnRpbmcgdG8gcmVsZWFzZSBvYmplY3RzXG5cdC8vIFNlZSBodHRwczovL2dpdGh1Yi5jb20vanF1ZXJ5L3NpenpsZS9wdWxsLzIyNVxuXHRzb3J0SW5wdXQgPSBudWxsO1xuXG5cdHJldHVybiByZXN1bHRzO1xufTtcblxuLyoqXG4gKiBVdGlsaXR5IGZ1bmN0aW9uIGZvciByZXRyaWV2aW5nIHRoZSB0ZXh0IHZhbHVlIG9mIGFuIGFycmF5IG9mIERPTSBub2Rlc1xuICogQHBhcmFtIHtBcnJheXxFbGVtZW50fSBlbGVtXG4gKi9cbmdldFRleHQgPSBTaXp6bGUuZ2V0VGV4dCA9IGZ1bmN0aW9uKCBlbGVtICkge1xuXHR2YXIgbm9kZSxcblx0XHRyZXQgPSBcIlwiLFxuXHRcdGkgPSAwLFxuXHRcdG5vZGVUeXBlID0gZWxlbS5ub2RlVHlwZTtcblxuXHRpZiAoICFub2RlVHlwZSApIHtcblxuXHRcdC8vIElmIG5vIG5vZGVUeXBlLCB0aGlzIGlzIGV4cGVjdGVkIHRvIGJlIGFuIGFycmF5XG5cdFx0d2hpbGUgKCAoIG5vZGUgPSBlbGVtWyBpKysgXSApICkge1xuXG5cdFx0XHQvLyBEbyBub3QgdHJhdmVyc2UgY29tbWVudCBub2Rlc1xuXHRcdFx0cmV0ICs9IGdldFRleHQoIG5vZGUgKTtcblx0XHR9XG5cdH0gZWxzZSBpZiAoIG5vZGVUeXBlID09PSAxIHx8IG5vZGVUeXBlID09PSA5IHx8IG5vZGVUeXBlID09PSAxMSApIHtcblxuXHRcdC8vIFVzZSB0ZXh0Q29udGVudCBmb3IgZWxlbWVudHNcblx0XHQvLyBpbm5lclRleHQgdXNhZ2UgcmVtb3ZlZCBmb3IgY29uc2lzdGVuY3kgb2YgbmV3IGxpbmVzIChqUXVlcnkgIzExMTUzKVxuXHRcdGlmICggdHlwZW9mIGVsZW0udGV4dENvbnRlbnQgPT09IFwic3RyaW5nXCIgKSB7XG5cdFx0XHRyZXR1cm4gZWxlbS50ZXh0Q29udGVudDtcblx0XHR9IGVsc2Uge1xuXG5cdFx0XHQvLyBUcmF2ZXJzZSBpdHMgY2hpbGRyZW5cblx0XHRcdGZvciAoIGVsZW0gPSBlbGVtLmZpcnN0Q2hpbGQ7IGVsZW07IGVsZW0gPSBlbGVtLm5leHRTaWJsaW5nICkge1xuXHRcdFx0XHRyZXQgKz0gZ2V0VGV4dCggZWxlbSApO1xuXHRcdFx0fVxuXHRcdH1cblx0fSBlbHNlIGlmICggbm9kZVR5cGUgPT09IDMgfHwgbm9kZVR5cGUgPT09IDQgKSB7XG5cdFx0cmV0dXJuIGVsZW0ubm9kZVZhbHVlO1xuXHR9XG5cblx0Ly8gRG8gbm90IGluY2x1ZGUgY29tbWVudCBvciBwcm9jZXNzaW5nIGluc3RydWN0aW9uIG5vZGVzXG5cblx0cmV0dXJuIHJldDtcbn07XG5cbkV4cHIgPSBTaXp6bGUuc2VsZWN0b3JzID0ge1xuXG5cdC8vIENhbiBiZSBhZGp1c3RlZCBieSB0aGUgdXNlclxuXHRjYWNoZUxlbmd0aDogNTAsXG5cblx0Y3JlYXRlUHNldWRvOiBtYXJrRnVuY3Rpb24sXG5cblx0bWF0Y2g6IG1hdGNoRXhwcixcblxuXHRhdHRySGFuZGxlOiB7fSxcblxuXHRmaW5kOiB7fSxcblxuXHRyZWxhdGl2ZToge1xuXHRcdFwiPlwiOiB7IGRpcjogXCJwYXJlbnROb2RlXCIsIGZpcnN0OiB0cnVlIH0sXG5cdFx0XCIgXCI6IHsgZGlyOiBcInBhcmVudE5vZGVcIiB9LFxuXHRcdFwiK1wiOiB7IGRpcjogXCJwcmV2aW91c1NpYmxpbmdcIiwgZmlyc3Q6IHRydWUgfSxcblx0XHRcIn5cIjogeyBkaXI6IFwicHJldmlvdXNTaWJsaW5nXCIgfVxuXHR9LFxuXG5cdHByZUZpbHRlcjoge1xuXHRcdFwiQVRUUlwiOiBmdW5jdGlvbiggbWF0Y2ggKSB7XG5cdFx0XHRtYXRjaFsgMSBdID0gbWF0Y2hbIDEgXS5yZXBsYWNlKCBydW5lc2NhcGUsIGZ1bmVzY2FwZSApO1xuXG5cdFx0XHQvLyBNb3ZlIHRoZSBnaXZlbiB2YWx1ZSB0byBtYXRjaFszXSB3aGV0aGVyIHF1b3RlZCBvciB1bnF1b3RlZFxuXHRcdFx0bWF0Y2hbIDMgXSA9ICggbWF0Y2hbIDMgXSB8fCBtYXRjaFsgNCBdIHx8XG5cdFx0XHRcdG1hdGNoWyA1IF0gfHwgXCJcIiApLnJlcGxhY2UoIHJ1bmVzY2FwZSwgZnVuZXNjYXBlICk7XG5cblx0XHRcdGlmICggbWF0Y2hbIDIgXSA9PT0gXCJ+PVwiICkge1xuXHRcdFx0XHRtYXRjaFsgMyBdID0gXCIgXCIgKyBtYXRjaFsgMyBdICsgXCIgXCI7XG5cdFx0XHR9XG5cblx0XHRcdHJldHVybiBtYXRjaC5zbGljZSggMCwgNCApO1xuXHRcdH0sXG5cblx0XHRcIkNISUxEXCI6IGZ1bmN0aW9uKCBtYXRjaCApIHtcblxuXHRcdFx0LyogbWF0Y2hlcyBmcm9tIG1hdGNoRXhwcltcIkNISUxEXCJdXG5cdFx0XHRcdDEgdHlwZSAob25seXxudGh8Li4uKVxuXHRcdFx0XHQyIHdoYXQgKGNoaWxkfG9mLXR5cGUpXG5cdFx0XHRcdDMgYXJndW1lbnQgKGV2ZW58b2RkfFxcZCp8XFxkKm4oWystXVxcZCspP3wuLi4pXG5cdFx0XHRcdDQgeG4tY29tcG9uZW50IG9mIHhuK3kgYXJndW1lbnQgKFsrLV0/XFxkKm58KVxuXHRcdFx0XHQ1IHNpZ24gb2YgeG4tY29tcG9uZW50XG5cdFx0XHRcdDYgeCBvZiB4bi1jb21wb25lbnRcblx0XHRcdFx0NyBzaWduIG9mIHktY29tcG9uZW50XG5cdFx0XHRcdDggeSBvZiB5LWNvbXBvbmVudFxuXHRcdFx0Ki9cblx0XHRcdG1hdGNoWyAxIF0gPSBtYXRjaFsgMSBdLnRvTG93ZXJDYXNlKCk7XG5cblx0XHRcdGlmICggbWF0Y2hbIDEgXS5zbGljZSggMCwgMyApID09PSBcIm50aFwiICkge1xuXG5cdFx0XHRcdC8vIG50aC0qIHJlcXVpcmVzIGFyZ3VtZW50XG5cdFx0XHRcdGlmICggIW1hdGNoWyAzIF0gKSB7XG5cdFx0XHRcdFx0U2l6emxlLmVycm9yKCBtYXRjaFsgMCBdICk7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBudW1lcmljIHggYW5kIHkgcGFyYW1ldGVycyBmb3IgRXhwci5maWx0ZXIuQ0hJTERcblx0XHRcdFx0Ly8gcmVtZW1iZXIgdGhhdCBmYWxzZS90cnVlIGNhc3QgcmVzcGVjdGl2ZWx5IHRvIDAvMVxuXHRcdFx0XHRtYXRjaFsgNCBdID0gKyggbWF0Y2hbIDQgXSA/XG5cdFx0XHRcdFx0bWF0Y2hbIDUgXSArICggbWF0Y2hbIDYgXSB8fCAxICkgOlxuXHRcdFx0XHRcdDIgKiAoIG1hdGNoWyAzIF0gPT09IFwiZXZlblwiIHx8IG1hdGNoWyAzIF0gPT09IFwib2RkXCIgKSApO1xuXHRcdFx0XHRtYXRjaFsgNSBdID0gKyggKCBtYXRjaFsgNyBdICsgbWF0Y2hbIDggXSApIHx8IG1hdGNoWyAzIF0gPT09IFwib2RkXCIgKTtcblxuXHRcdFx0XHQvLyBvdGhlciB0eXBlcyBwcm9oaWJpdCBhcmd1bWVudHNcblx0XHRcdH0gZWxzZSBpZiAoIG1hdGNoWyAzIF0gKSB7XG5cdFx0XHRcdFNpenpsZS5lcnJvciggbWF0Y2hbIDAgXSApO1xuXHRcdFx0fVxuXG5cdFx0XHRyZXR1cm4gbWF0Y2g7XG5cdFx0fSxcblxuXHRcdFwiUFNFVURPXCI6IGZ1bmN0aW9uKCBtYXRjaCApIHtcblx0XHRcdHZhciBleGNlc3MsXG5cdFx0XHRcdHVucXVvdGVkID0gIW1hdGNoWyA2IF0gJiYgbWF0Y2hbIDIgXTtcblxuXHRcdFx0aWYgKCBtYXRjaEV4cHJbIFwiQ0hJTERcIiBdLnRlc3QoIG1hdGNoWyAwIF0gKSApIHtcblx0XHRcdFx0cmV0dXJuIG51bGw7XG5cdFx0XHR9XG5cblx0XHRcdC8vIEFjY2VwdCBxdW90ZWQgYXJndW1lbnRzIGFzLWlzXG5cdFx0XHRpZiAoIG1hdGNoWyAzIF0gKSB7XG5cdFx0XHRcdG1hdGNoWyAyIF0gPSBtYXRjaFsgNCBdIHx8IG1hdGNoWyA1IF0gfHwgXCJcIjtcblxuXHRcdFx0Ly8gU3RyaXAgZXhjZXNzIGNoYXJhY3RlcnMgZnJvbSB1bnF1b3RlZCBhcmd1bWVudHNcblx0XHRcdH0gZWxzZSBpZiAoIHVucXVvdGVkICYmIHJwc2V1ZG8udGVzdCggdW5xdW90ZWQgKSAmJlxuXG5cdFx0XHRcdC8vIEdldCBleGNlc3MgZnJvbSB0b2tlbml6ZSAocmVjdXJzaXZlbHkpXG5cdFx0XHRcdCggZXhjZXNzID0gdG9rZW5pemUoIHVucXVvdGVkLCB0cnVlICkgKSAmJlxuXG5cdFx0XHRcdC8vIGFkdmFuY2UgdG8gdGhlIG5leHQgY2xvc2luZyBwYXJlbnRoZXNpc1xuXHRcdFx0XHQoIGV4Y2VzcyA9IHVucXVvdGVkLmluZGV4T2YoIFwiKVwiLCB1bnF1b3RlZC5sZW5ndGggLSBleGNlc3MgKSAtIHVucXVvdGVkLmxlbmd0aCApICkge1xuXG5cdFx0XHRcdC8vIGV4Y2VzcyBpcyBhIG5lZ2F0aXZlIGluZGV4XG5cdFx0XHRcdG1hdGNoWyAwIF0gPSBtYXRjaFsgMCBdLnNsaWNlKCAwLCBleGNlc3MgKTtcblx0XHRcdFx0bWF0Y2hbIDIgXSA9IHVucXVvdGVkLnNsaWNlKCAwLCBleGNlc3MgKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gUmV0dXJuIG9ubHkgY2FwdHVyZXMgbmVlZGVkIGJ5IHRoZSBwc2V1ZG8gZmlsdGVyIG1ldGhvZCAodHlwZSBhbmQgYXJndW1lbnQpXG5cdFx0XHRyZXR1cm4gbWF0Y2guc2xpY2UoIDAsIDMgKTtcblx0XHR9XG5cdH0sXG5cblx0ZmlsdGVyOiB7XG5cblx0XHRcIlRBR1wiOiBmdW5jdGlvbiggbm9kZU5hbWVTZWxlY3RvciApIHtcblx0XHRcdHZhciBub2RlTmFtZSA9IG5vZGVOYW1lU2VsZWN0b3IucmVwbGFjZSggcnVuZXNjYXBlLCBmdW5lc2NhcGUgKS50b0xvd2VyQ2FzZSgpO1xuXHRcdFx0cmV0dXJuIG5vZGVOYW1lU2VsZWN0b3IgPT09IFwiKlwiID9cblx0XHRcdFx0ZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0cmV0dXJuIHRydWU7XG5cdFx0XHRcdH0gOlxuXHRcdFx0XHRmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdFx0XHRyZXR1cm4gZWxlbS5ub2RlTmFtZSAmJiBlbGVtLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkgPT09IG5vZGVOYW1lO1xuXHRcdFx0XHR9O1xuXHRcdH0sXG5cblx0XHRcIkNMQVNTXCI6IGZ1bmN0aW9uKCBjbGFzc05hbWUgKSB7XG5cdFx0XHR2YXIgcGF0dGVybiA9IGNsYXNzQ2FjaGVbIGNsYXNzTmFtZSArIFwiIFwiIF07XG5cblx0XHRcdHJldHVybiBwYXR0ZXJuIHx8XG5cdFx0XHRcdCggcGF0dGVybiA9IG5ldyBSZWdFeHAoIFwiKF58XCIgKyB3aGl0ZXNwYWNlICtcblx0XHRcdFx0XHRcIilcIiArIGNsYXNzTmFtZSArIFwiKFwiICsgd2hpdGVzcGFjZSArIFwifCQpXCIgKSApICYmIGNsYXNzQ2FjaGUoXG5cdFx0XHRcdFx0XHRjbGFzc05hbWUsIGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0XHRcdFx0XHRyZXR1cm4gcGF0dGVybi50ZXN0KFxuXHRcdFx0XHRcdFx0XHRcdHR5cGVvZiBlbGVtLmNsYXNzTmFtZSA9PT0gXCJzdHJpbmdcIiAmJiBlbGVtLmNsYXNzTmFtZSB8fFxuXHRcdFx0XHRcdFx0XHRcdHR5cGVvZiBlbGVtLmdldEF0dHJpYnV0ZSAhPT0gXCJ1bmRlZmluZWRcIiAmJlxuXHRcdFx0XHRcdFx0XHRcdFx0ZWxlbS5nZXRBdHRyaWJ1dGUoIFwiY2xhc3NcIiApIHx8XG5cdFx0XHRcdFx0XHRcdFx0XCJcIlxuXHRcdFx0XHRcdFx0XHQpO1xuXHRcdFx0XHR9ICk7XG5cdFx0fSxcblxuXHRcdFwiQVRUUlwiOiBmdW5jdGlvbiggbmFtZSwgb3BlcmF0b3IsIGNoZWNrICkge1xuXHRcdFx0cmV0dXJuIGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0XHR2YXIgcmVzdWx0ID0gU2l6emxlLmF0dHIoIGVsZW0sIG5hbWUgKTtcblxuXHRcdFx0XHRpZiAoIHJlc3VsdCA9PSBudWxsICkge1xuXHRcdFx0XHRcdHJldHVybiBvcGVyYXRvciA9PT0gXCIhPVwiO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGlmICggIW9wZXJhdG9yICkge1xuXHRcdFx0XHRcdHJldHVybiB0cnVlO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0cmVzdWx0ICs9IFwiXCI7XG5cblx0XHRcdFx0LyogZXNsaW50LWRpc2FibGUgbWF4LWxlbiAqL1xuXG5cdFx0XHRcdHJldHVybiBvcGVyYXRvciA9PT0gXCI9XCIgPyByZXN1bHQgPT09IGNoZWNrIDpcblx0XHRcdFx0XHRvcGVyYXRvciA9PT0gXCIhPVwiID8gcmVzdWx0ICE9PSBjaGVjayA6XG5cdFx0XHRcdFx0b3BlcmF0b3IgPT09IFwiXj1cIiA/IGNoZWNrICYmIHJlc3VsdC5pbmRleE9mKCBjaGVjayApID09PSAwIDpcblx0XHRcdFx0XHRvcGVyYXRvciA9PT0gXCIqPVwiID8gY2hlY2sgJiYgcmVzdWx0LmluZGV4T2YoIGNoZWNrICkgPiAtMSA6XG5cdFx0XHRcdFx0b3BlcmF0b3IgPT09IFwiJD1cIiA/IGNoZWNrICYmIHJlc3VsdC5zbGljZSggLWNoZWNrLmxlbmd0aCApID09PSBjaGVjayA6XG5cdFx0XHRcdFx0b3BlcmF0b3IgPT09IFwifj1cIiA/ICggXCIgXCIgKyByZXN1bHQucmVwbGFjZSggcndoaXRlc3BhY2UsIFwiIFwiICkgKyBcIiBcIiApLmluZGV4T2YoIGNoZWNrICkgPiAtMSA6XG5cdFx0XHRcdFx0b3BlcmF0b3IgPT09IFwifD1cIiA/IHJlc3VsdCA9PT0gY2hlY2sgfHwgcmVzdWx0LnNsaWNlKCAwLCBjaGVjay5sZW5ndGggKyAxICkgPT09IGNoZWNrICsgXCItXCIgOlxuXHRcdFx0XHRcdGZhbHNlO1xuXHRcdFx0XHQvKiBlc2xpbnQtZW5hYmxlIG1heC1sZW4gKi9cblxuXHRcdFx0fTtcblx0XHR9LFxuXG5cdFx0XCJDSElMRFwiOiBmdW5jdGlvbiggdHlwZSwgd2hhdCwgX2FyZ3VtZW50LCBmaXJzdCwgbGFzdCApIHtcblx0XHRcdHZhciBzaW1wbGUgPSB0eXBlLnNsaWNlKCAwLCAzICkgIT09IFwibnRoXCIsXG5cdFx0XHRcdGZvcndhcmQgPSB0eXBlLnNsaWNlKCAtNCApICE9PSBcImxhc3RcIixcblx0XHRcdFx0b2ZUeXBlID0gd2hhdCA9PT0gXCJvZi10eXBlXCI7XG5cblx0XHRcdHJldHVybiBmaXJzdCA9PT0gMSAmJiBsYXN0ID09PSAwID9cblxuXHRcdFx0XHQvLyBTaG9ydGN1dCBmb3IgOm50aC0qKG4pXG5cdFx0XHRcdGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0XHRcdHJldHVybiAhIWVsZW0ucGFyZW50Tm9kZTtcblx0XHRcdFx0fSA6XG5cblx0XHRcdFx0ZnVuY3Rpb24oIGVsZW0sIF9jb250ZXh0LCB4bWwgKSB7XG5cdFx0XHRcdFx0dmFyIGNhY2hlLCB1bmlxdWVDYWNoZSwgb3V0ZXJDYWNoZSwgbm9kZSwgbm9kZUluZGV4LCBzdGFydCxcblx0XHRcdFx0XHRcdGRpciA9IHNpbXBsZSAhPT0gZm9yd2FyZCA/IFwibmV4dFNpYmxpbmdcIiA6IFwicHJldmlvdXNTaWJsaW5nXCIsXG5cdFx0XHRcdFx0XHRwYXJlbnQgPSBlbGVtLnBhcmVudE5vZGUsXG5cdFx0XHRcdFx0XHRuYW1lID0gb2ZUeXBlICYmIGVsZW0ubm9kZU5hbWUudG9Mb3dlckNhc2UoKSxcblx0XHRcdFx0XHRcdHVzZUNhY2hlID0gIXhtbCAmJiAhb2ZUeXBlLFxuXHRcdFx0XHRcdFx0ZGlmZiA9IGZhbHNlO1xuXG5cdFx0XHRcdFx0aWYgKCBwYXJlbnQgKSB7XG5cblx0XHRcdFx0XHRcdC8vIDooZmlyc3R8bGFzdHxvbmx5KS0oY2hpbGR8b2YtdHlwZSlcblx0XHRcdFx0XHRcdGlmICggc2ltcGxlICkge1xuXHRcdFx0XHRcdFx0XHR3aGlsZSAoIGRpciApIHtcblx0XHRcdFx0XHRcdFx0XHRub2RlID0gZWxlbTtcblx0XHRcdFx0XHRcdFx0XHR3aGlsZSAoICggbm9kZSA9IG5vZGVbIGRpciBdICkgKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRpZiAoIG9mVHlwZSA/XG5cdFx0XHRcdFx0XHRcdFx0XHRcdG5vZGUubm9kZU5hbWUudG9Mb3dlckNhc2UoKSA9PT0gbmFtZSA6XG5cdFx0XHRcdFx0XHRcdFx0XHRcdG5vZGUubm9kZVR5cGUgPT09IDEgKSB7XG5cblx0XHRcdFx0XHRcdFx0XHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdFx0XHRcdC8vIFJldmVyc2UgZGlyZWN0aW9uIGZvciA6b25seS0qIChpZiB3ZSBoYXZlbid0IHlldCBkb25lIHNvKVxuXHRcdFx0XHRcdFx0XHRcdHN0YXJ0ID0gZGlyID0gdHlwZSA9PT0gXCJvbmx5XCIgJiYgIXN0YXJ0ICYmIFwibmV4dFNpYmxpbmdcIjtcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHRyZXR1cm4gdHJ1ZTtcblx0XHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdFx0c3RhcnQgPSBbIGZvcndhcmQgPyBwYXJlbnQuZmlyc3RDaGlsZCA6IHBhcmVudC5sYXN0Q2hpbGQgXTtcblxuXHRcdFx0XHRcdFx0Ly8gbm9uLXhtbCA6bnRoLWNoaWxkKC4uLikgc3RvcmVzIGNhY2hlIGRhdGEgb24gYHBhcmVudGBcblx0XHRcdFx0XHRcdGlmICggZm9yd2FyZCAmJiB1c2VDYWNoZSApIHtcblxuXHRcdFx0XHRcdFx0XHQvLyBTZWVrIGBlbGVtYCBmcm9tIGEgcHJldmlvdXNseS1jYWNoZWQgaW5kZXhcblxuXHRcdFx0XHRcdFx0XHQvLyAuLi5pbiBhIGd6aXAtZnJpZW5kbHkgd2F5XG5cdFx0XHRcdFx0XHRcdG5vZGUgPSBwYXJlbnQ7XG5cdFx0XHRcdFx0XHRcdG91dGVyQ2FjaGUgPSBub2RlWyBleHBhbmRvIF0gfHwgKCBub2RlWyBleHBhbmRvIF0gPSB7fSApO1xuXG5cdFx0XHRcdFx0XHRcdC8vIFN1cHBvcnQ6IElFIDw5IG9ubHlcblx0XHRcdFx0XHRcdFx0Ly8gRGVmZW5kIGFnYWluc3QgY2xvbmVkIGF0dHJvcGVydGllcyAoalF1ZXJ5IGdoLTE3MDkpXG5cdFx0XHRcdFx0XHRcdHVuaXF1ZUNhY2hlID0gb3V0ZXJDYWNoZVsgbm9kZS51bmlxdWVJRCBdIHx8XG5cdFx0XHRcdFx0XHRcdFx0KCBvdXRlckNhY2hlWyBub2RlLnVuaXF1ZUlEIF0gPSB7fSApO1xuXG5cdFx0XHRcdFx0XHRcdGNhY2hlID0gdW5pcXVlQ2FjaGVbIHR5cGUgXSB8fCBbXTtcblx0XHRcdFx0XHRcdFx0bm9kZUluZGV4ID0gY2FjaGVbIDAgXSA9PT0gZGlycnVucyAmJiBjYWNoZVsgMSBdO1xuXHRcdFx0XHRcdFx0XHRkaWZmID0gbm9kZUluZGV4ICYmIGNhY2hlWyAyIF07XG5cdFx0XHRcdFx0XHRcdG5vZGUgPSBub2RlSW5kZXggJiYgcGFyZW50LmNoaWxkTm9kZXNbIG5vZGVJbmRleCBdO1xuXG5cdFx0XHRcdFx0XHRcdHdoaWxlICggKCBub2RlID0gKytub2RlSW5kZXggJiYgbm9kZSAmJiBub2RlWyBkaXIgXSB8fFxuXG5cdFx0XHRcdFx0XHRcdFx0Ly8gRmFsbGJhY2sgdG8gc2Vla2luZyBgZWxlbWAgZnJvbSB0aGUgc3RhcnRcblx0XHRcdFx0XHRcdFx0XHQoIGRpZmYgPSBub2RlSW5kZXggPSAwICkgfHwgc3RhcnQucG9wKCkgKSApIHtcblxuXHRcdFx0XHRcdFx0XHRcdC8vIFdoZW4gZm91bmQsIGNhY2hlIGluZGV4ZXMgb24gYHBhcmVudGAgYW5kIGJyZWFrXG5cdFx0XHRcdFx0XHRcdFx0aWYgKCBub2RlLm5vZGVUeXBlID09PSAxICYmICsrZGlmZiAmJiBub2RlID09PSBlbGVtICkge1xuXHRcdFx0XHRcdFx0XHRcdFx0dW5pcXVlQ2FjaGVbIHR5cGUgXSA9IFsgZGlycnVucywgbm9kZUluZGV4LCBkaWZmIF07XG5cdFx0XHRcdFx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdFx0fSBlbHNlIHtcblxuXHRcdFx0XHRcdFx0XHQvLyBVc2UgcHJldmlvdXNseS1jYWNoZWQgZWxlbWVudCBpbmRleCBpZiBhdmFpbGFibGVcblx0XHRcdFx0XHRcdFx0aWYgKCB1c2VDYWNoZSApIHtcblxuXHRcdFx0XHRcdFx0XHRcdC8vIC4uLmluIGEgZ3ppcC1mcmllbmRseSB3YXlcblx0XHRcdFx0XHRcdFx0XHRub2RlID0gZWxlbTtcblx0XHRcdFx0XHRcdFx0XHRvdXRlckNhY2hlID0gbm9kZVsgZXhwYW5kbyBdIHx8ICggbm9kZVsgZXhwYW5kbyBdID0ge30gKTtcblxuXHRcdFx0XHRcdFx0XHRcdC8vIFN1cHBvcnQ6IElFIDw5IG9ubHlcblx0XHRcdFx0XHRcdFx0XHQvLyBEZWZlbmQgYWdhaW5zdCBjbG9uZWQgYXR0cm9wZXJ0aWVzIChqUXVlcnkgZ2gtMTcwOSlcblx0XHRcdFx0XHRcdFx0XHR1bmlxdWVDYWNoZSA9IG91dGVyQ2FjaGVbIG5vZGUudW5pcXVlSUQgXSB8fFxuXHRcdFx0XHRcdFx0XHRcdFx0KCBvdXRlckNhY2hlWyBub2RlLnVuaXF1ZUlEIF0gPSB7fSApO1xuXG5cdFx0XHRcdFx0XHRcdFx0Y2FjaGUgPSB1bmlxdWVDYWNoZVsgdHlwZSBdIHx8IFtdO1xuXHRcdFx0XHRcdFx0XHRcdG5vZGVJbmRleCA9IGNhY2hlWyAwIF0gPT09IGRpcnJ1bnMgJiYgY2FjaGVbIDEgXTtcblx0XHRcdFx0XHRcdFx0XHRkaWZmID0gbm9kZUluZGV4O1xuXHRcdFx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRcdFx0Ly8geG1sIDpudGgtY2hpbGQoLi4uKVxuXHRcdFx0XHRcdFx0XHQvLyBvciA6bnRoLWxhc3QtY2hpbGQoLi4uKSBvciA6bnRoKC1sYXN0KT8tb2YtdHlwZSguLi4pXG5cdFx0XHRcdFx0XHRcdGlmICggZGlmZiA9PT0gZmFsc2UgKSB7XG5cblx0XHRcdFx0XHRcdFx0XHQvLyBVc2UgdGhlIHNhbWUgbG9vcCBhcyBhYm92ZSB0byBzZWVrIGBlbGVtYCBmcm9tIHRoZSBzdGFydFxuXHRcdFx0XHRcdFx0XHRcdHdoaWxlICggKCBub2RlID0gKytub2RlSW5kZXggJiYgbm9kZSAmJiBub2RlWyBkaXIgXSB8fFxuXHRcdFx0XHRcdFx0XHRcdFx0KCBkaWZmID0gbm9kZUluZGV4ID0gMCApIHx8IHN0YXJ0LnBvcCgpICkgKSB7XG5cblx0XHRcdFx0XHRcdFx0XHRcdGlmICggKCBvZlR5cGUgP1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRub2RlLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkgPT09IG5hbWUgOlxuXHRcdFx0XHRcdFx0XHRcdFx0XHRub2RlLm5vZGVUeXBlID09PSAxICkgJiZcblx0XHRcdFx0XHRcdFx0XHRcdFx0KytkaWZmICkge1xuXG5cdFx0XHRcdFx0XHRcdFx0XHRcdC8vIENhY2hlIHRoZSBpbmRleCBvZiBlYWNoIGVuY291bnRlcmVkIGVsZW1lbnRcblx0XHRcdFx0XHRcdFx0XHRcdFx0aWYgKCB1c2VDYWNoZSApIHtcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRvdXRlckNhY2hlID0gbm9kZVsgZXhwYW5kbyBdIHx8XG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHQoIG5vZGVbIGV4cGFuZG8gXSA9IHt9ICk7XG5cblx0XHRcdFx0XHRcdFx0XHRcdFx0XHQvLyBTdXBwb3J0OiBJRSA8OSBvbmx5XG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0Ly8gRGVmZW5kIGFnYWluc3QgY2xvbmVkIGF0dHJvcGVydGllcyAoalF1ZXJ5IGdoLTE3MDkpXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0dW5pcXVlQ2FjaGUgPSBvdXRlckNhY2hlWyBub2RlLnVuaXF1ZUlEIF0gfHxcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdCggb3V0ZXJDYWNoZVsgbm9kZS51bmlxdWVJRCBdID0ge30gKTtcblxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdHVuaXF1ZUNhY2hlWyB0eXBlIF0gPSBbIGRpcnJ1bnMsIGRpZmYgXTtcblx0XHRcdFx0XHRcdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0XHRcdFx0XHRcdGlmICggbm9kZSA9PT0gZWxlbSApIHtcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0XHQvLyBJbmNvcnBvcmF0ZSB0aGUgb2Zmc2V0LCB0aGVuIGNoZWNrIGFnYWluc3QgY3ljbGUgc2l6ZVxuXHRcdFx0XHRcdFx0ZGlmZiAtPSBsYXN0O1xuXHRcdFx0XHRcdFx0cmV0dXJuIGRpZmYgPT09IGZpcnN0IHx8ICggZGlmZiAlIGZpcnN0ID09PSAwICYmIGRpZmYgLyBmaXJzdCA+PSAwICk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9O1xuXHRcdH0sXG5cblx0XHRcIlBTRVVET1wiOiBmdW5jdGlvbiggcHNldWRvLCBhcmd1bWVudCApIHtcblxuXHRcdFx0Ly8gcHNldWRvLWNsYXNzIG5hbWVzIGFyZSBjYXNlLWluc2Vuc2l0aXZlXG5cdFx0XHQvLyBodHRwOi8vd3d3LnczLm9yZy9UUi9zZWxlY3RvcnMvI3BzZXVkby1jbGFzc2VzXG5cdFx0XHQvLyBQcmlvcml0aXplIGJ5IGNhc2Ugc2Vuc2l0aXZpdHkgaW4gY2FzZSBjdXN0b20gcHNldWRvcyBhcmUgYWRkZWQgd2l0aCB1cHBlcmNhc2UgbGV0dGVyc1xuXHRcdFx0Ly8gUmVtZW1iZXIgdGhhdCBzZXRGaWx0ZXJzIGluaGVyaXRzIGZyb20gcHNldWRvc1xuXHRcdFx0dmFyIGFyZ3MsXG5cdFx0XHRcdGZuID0gRXhwci5wc2V1ZG9zWyBwc2V1ZG8gXSB8fCBFeHByLnNldEZpbHRlcnNbIHBzZXVkby50b0xvd2VyQ2FzZSgpIF0gfHxcblx0XHRcdFx0XHRTaXp6bGUuZXJyb3IoIFwidW5zdXBwb3J0ZWQgcHNldWRvOiBcIiArIHBzZXVkbyApO1xuXG5cdFx0XHQvLyBUaGUgdXNlciBtYXkgdXNlIGNyZWF0ZVBzZXVkbyB0byBpbmRpY2F0ZSB0aGF0XG5cdFx0XHQvLyBhcmd1bWVudHMgYXJlIG5lZWRlZCB0byBjcmVhdGUgdGhlIGZpbHRlciBmdW5jdGlvblxuXHRcdFx0Ly8ganVzdCBhcyBTaXp6bGUgZG9lc1xuXHRcdFx0aWYgKCBmblsgZXhwYW5kbyBdICkge1xuXHRcdFx0XHRyZXR1cm4gZm4oIGFyZ3VtZW50ICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIEJ1dCBtYWludGFpbiBzdXBwb3J0IGZvciBvbGQgc2lnbmF0dXJlc1xuXHRcdFx0aWYgKCBmbi5sZW5ndGggPiAxICkge1xuXHRcdFx0XHRhcmdzID0gWyBwc2V1ZG8sIHBzZXVkbywgXCJcIiwgYXJndW1lbnQgXTtcblx0XHRcdFx0cmV0dXJuIEV4cHIuc2V0RmlsdGVycy5oYXNPd25Qcm9wZXJ0eSggcHNldWRvLnRvTG93ZXJDYXNlKCkgKSA/XG5cdFx0XHRcdFx0bWFya0Z1bmN0aW9uKCBmdW5jdGlvbiggc2VlZCwgbWF0Y2hlcyApIHtcblx0XHRcdFx0XHRcdHZhciBpZHgsXG5cdFx0XHRcdFx0XHRcdG1hdGNoZWQgPSBmbiggc2VlZCwgYXJndW1lbnQgKSxcblx0XHRcdFx0XHRcdFx0aSA9IG1hdGNoZWQubGVuZ3RoO1xuXHRcdFx0XHRcdFx0d2hpbGUgKCBpLS0gKSB7XG5cdFx0XHRcdFx0XHRcdGlkeCA9IGluZGV4T2YoIHNlZWQsIG1hdGNoZWRbIGkgXSApO1xuXHRcdFx0XHRcdFx0XHRzZWVkWyBpZHggXSA9ICEoIG1hdGNoZXNbIGlkeCBdID0gbWF0Y2hlZFsgaSBdICk7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fSApIDpcblx0XHRcdFx0XHRmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdFx0XHRcdHJldHVybiBmbiggZWxlbSwgMCwgYXJncyApO1xuXHRcdFx0XHRcdH07XG5cdFx0XHR9XG5cblx0XHRcdHJldHVybiBmbjtcblx0XHR9XG5cdH0sXG5cblx0cHNldWRvczoge1xuXG5cdFx0Ly8gUG90ZW50aWFsbHkgY29tcGxleCBwc2V1ZG9zXG5cdFx0XCJub3RcIjogbWFya0Z1bmN0aW9uKCBmdW5jdGlvbiggc2VsZWN0b3IgKSB7XG5cblx0XHRcdC8vIFRyaW0gdGhlIHNlbGVjdG9yIHBhc3NlZCB0byBjb21waWxlXG5cdFx0XHQvLyB0byBhdm9pZCB0cmVhdGluZyBsZWFkaW5nIGFuZCB0cmFpbGluZ1xuXHRcdFx0Ly8gc3BhY2VzIGFzIGNvbWJpbmF0b3JzXG5cdFx0XHR2YXIgaW5wdXQgPSBbXSxcblx0XHRcdFx0cmVzdWx0cyA9IFtdLFxuXHRcdFx0XHRtYXRjaGVyID0gY29tcGlsZSggc2VsZWN0b3IucmVwbGFjZSggcnRyaW0sIFwiJDFcIiApICk7XG5cblx0XHRcdHJldHVybiBtYXRjaGVyWyBleHBhbmRvIF0gP1xuXHRcdFx0XHRtYXJrRnVuY3Rpb24oIGZ1bmN0aW9uKCBzZWVkLCBtYXRjaGVzLCBfY29udGV4dCwgeG1sICkge1xuXHRcdFx0XHRcdHZhciBlbGVtLFxuXHRcdFx0XHRcdFx0dW5tYXRjaGVkID0gbWF0Y2hlciggc2VlZCwgbnVsbCwgeG1sLCBbXSApLFxuXHRcdFx0XHRcdFx0aSA9IHNlZWQubGVuZ3RoO1xuXG5cdFx0XHRcdFx0Ly8gTWF0Y2ggZWxlbWVudHMgdW5tYXRjaGVkIGJ5IGBtYXRjaGVyYFxuXHRcdFx0XHRcdHdoaWxlICggaS0tICkge1xuXHRcdFx0XHRcdFx0aWYgKCAoIGVsZW0gPSB1bm1hdGNoZWRbIGkgXSApICkge1xuXHRcdFx0XHRcdFx0XHRzZWVkWyBpIF0gPSAhKCBtYXRjaGVzWyBpIF0gPSBlbGVtICk7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9ICkgOlxuXHRcdFx0XHRmdW5jdGlvbiggZWxlbSwgX2NvbnRleHQsIHhtbCApIHtcblx0XHRcdFx0XHRpbnB1dFsgMCBdID0gZWxlbTtcblx0XHRcdFx0XHRtYXRjaGVyKCBpbnB1dCwgbnVsbCwgeG1sLCByZXN1bHRzICk7XG5cblx0XHRcdFx0XHQvLyBEb24ndCBrZWVwIHRoZSBlbGVtZW50IChpc3N1ZSAjMjk5KVxuXHRcdFx0XHRcdGlucHV0WyAwIF0gPSBudWxsO1xuXHRcdFx0XHRcdHJldHVybiAhcmVzdWx0cy5wb3AoKTtcblx0XHRcdFx0fTtcblx0XHR9ICksXG5cblx0XHRcImhhc1wiOiBtYXJrRnVuY3Rpb24oIGZ1bmN0aW9uKCBzZWxlY3RvciApIHtcblx0XHRcdHJldHVybiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdFx0cmV0dXJuIFNpenpsZSggc2VsZWN0b3IsIGVsZW0gKS5sZW5ndGggPiAwO1xuXHRcdFx0fTtcblx0XHR9ICksXG5cblx0XHRcImNvbnRhaW5zXCI6IG1hcmtGdW5jdGlvbiggZnVuY3Rpb24oIHRleHQgKSB7XG5cdFx0XHR0ZXh0ID0gdGV4dC5yZXBsYWNlKCBydW5lc2NhcGUsIGZ1bmVzY2FwZSApO1xuXHRcdFx0cmV0dXJuIGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0XHRyZXR1cm4gKCBlbGVtLnRleHRDb250ZW50IHx8IGdldFRleHQoIGVsZW0gKSApLmluZGV4T2YoIHRleHQgKSA+IC0xO1xuXHRcdFx0fTtcblx0XHR9ICksXG5cblx0XHQvLyBcIldoZXRoZXIgYW4gZWxlbWVudCBpcyByZXByZXNlbnRlZCBieSBhIDpsYW5nKCkgc2VsZWN0b3Jcblx0XHQvLyBpcyBiYXNlZCBzb2xlbHkgb24gdGhlIGVsZW1lbnQncyBsYW5ndWFnZSB2YWx1ZVxuXHRcdC8vIGJlaW5nIGVxdWFsIHRvIHRoZSBpZGVudGlmaWVyIEMsXG5cdFx0Ly8gb3IgYmVnaW5uaW5nIHdpdGggdGhlIGlkZW50aWZpZXIgQyBpbW1lZGlhdGVseSBmb2xsb3dlZCBieSBcIi1cIi5cblx0XHQvLyBUaGUgbWF0Y2hpbmcgb2YgQyBhZ2FpbnN0IHRoZSBlbGVtZW50J3MgbGFuZ3VhZ2UgdmFsdWUgaXMgcGVyZm9ybWVkIGNhc2UtaW5zZW5zaXRpdmVseS5cblx0XHQvLyBUaGUgaWRlbnRpZmllciBDIGRvZXMgbm90IGhhdmUgdG8gYmUgYSB2YWxpZCBsYW5ndWFnZSBuYW1lLlwiXG5cdFx0Ly8gaHR0cDovL3d3dy53My5vcmcvVFIvc2VsZWN0b3JzLyNsYW5nLXBzZXVkb1xuXHRcdFwibGFuZ1wiOiBtYXJrRnVuY3Rpb24oIGZ1bmN0aW9uKCBsYW5nICkge1xuXG5cdFx0XHQvLyBsYW5nIHZhbHVlIG11c3QgYmUgYSB2YWxpZCBpZGVudGlmaWVyXG5cdFx0XHRpZiAoICFyaWRlbnRpZmllci50ZXN0KCBsYW5nIHx8IFwiXCIgKSApIHtcblx0XHRcdFx0U2l6emxlLmVycm9yKCBcInVuc3VwcG9ydGVkIGxhbmc6IFwiICsgbGFuZyApO1xuXHRcdFx0fVxuXHRcdFx0bGFuZyA9IGxhbmcucmVwbGFjZSggcnVuZXNjYXBlLCBmdW5lc2NhcGUgKS50b0xvd2VyQ2FzZSgpO1xuXHRcdFx0cmV0dXJuIGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0XHR2YXIgZWxlbUxhbmc7XG5cdFx0XHRcdGRvIHtcblx0XHRcdFx0XHRpZiAoICggZWxlbUxhbmcgPSBkb2N1bWVudElzSFRNTCA/XG5cdFx0XHRcdFx0XHRlbGVtLmxhbmcgOlxuXHRcdFx0XHRcdFx0ZWxlbS5nZXRBdHRyaWJ1dGUoIFwieG1sOmxhbmdcIiApIHx8IGVsZW0uZ2V0QXR0cmlidXRlKCBcImxhbmdcIiApICkgKSB7XG5cblx0XHRcdFx0XHRcdGVsZW1MYW5nID0gZWxlbUxhbmcudG9Mb3dlckNhc2UoKTtcblx0XHRcdFx0XHRcdHJldHVybiBlbGVtTGFuZyA9PT0gbGFuZyB8fCBlbGVtTGFuZy5pbmRleE9mKCBsYW5nICsgXCItXCIgKSA9PT0gMDtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH0gd2hpbGUgKCAoIGVsZW0gPSBlbGVtLnBhcmVudE5vZGUgKSAmJiBlbGVtLm5vZGVUeXBlID09PSAxICk7XG5cdFx0XHRcdHJldHVybiBmYWxzZTtcblx0XHRcdH07XG5cdFx0fSApLFxuXG5cdFx0Ly8gTWlzY2VsbGFuZW91c1xuXHRcdFwidGFyZ2V0XCI6IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0dmFyIGhhc2ggPSB3aW5kb3cubG9jYXRpb24gJiYgd2luZG93LmxvY2F0aW9uLmhhc2g7XG5cdFx0XHRyZXR1cm4gaGFzaCAmJiBoYXNoLnNsaWNlKCAxICkgPT09IGVsZW0uaWQ7XG5cdFx0fSxcblxuXHRcdFwicm9vdFwiOiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdHJldHVybiBlbGVtID09PSBkb2NFbGVtO1xuXHRcdH0sXG5cblx0XHRcImZvY3VzXCI6IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0cmV0dXJuIGVsZW0gPT09IGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQgJiZcblx0XHRcdFx0KCAhZG9jdW1lbnQuaGFzRm9jdXMgfHwgZG9jdW1lbnQuaGFzRm9jdXMoKSApICYmXG5cdFx0XHRcdCEhKCBlbGVtLnR5cGUgfHwgZWxlbS5ocmVmIHx8IH5lbGVtLnRhYkluZGV4ICk7XG5cdFx0fSxcblxuXHRcdC8vIEJvb2xlYW4gcHJvcGVydGllc1xuXHRcdFwiZW5hYmxlZFwiOiBjcmVhdGVEaXNhYmxlZFBzZXVkbyggZmFsc2UgKSxcblx0XHRcImRpc2FibGVkXCI6IGNyZWF0ZURpc2FibGVkUHNldWRvKCB0cnVlICksXG5cblx0XHRcImNoZWNrZWRcIjogZnVuY3Rpb24oIGVsZW0gKSB7XG5cblx0XHRcdC8vIEluIENTUzMsIDpjaGVja2VkIHNob3VsZCByZXR1cm4gYm90aCBjaGVja2VkIGFuZCBzZWxlY3RlZCBlbGVtZW50c1xuXHRcdFx0Ly8gaHR0cDovL3d3dy53My5vcmcvVFIvMjAxMS9SRUMtY3NzMy1zZWxlY3RvcnMtMjAxMTA5MjkvI2NoZWNrZWRcblx0XHRcdHZhciBub2RlTmFtZSA9IGVsZW0ubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtcblx0XHRcdHJldHVybiAoIG5vZGVOYW1lID09PSBcImlucHV0XCIgJiYgISFlbGVtLmNoZWNrZWQgKSB8fFxuXHRcdFx0XHQoIG5vZGVOYW1lID09PSBcIm9wdGlvblwiICYmICEhZWxlbS5zZWxlY3RlZCApO1xuXHRcdH0sXG5cblx0XHRcInNlbGVjdGVkXCI6IGZ1bmN0aW9uKCBlbGVtICkge1xuXG5cdFx0XHQvLyBBY2Nlc3NpbmcgdGhpcyBwcm9wZXJ0eSBtYWtlcyBzZWxlY3RlZC1ieS1kZWZhdWx0XG5cdFx0XHQvLyBvcHRpb25zIGluIFNhZmFyaSB3b3JrIHByb3Blcmx5XG5cdFx0XHRpZiAoIGVsZW0ucGFyZW50Tm9kZSApIHtcblx0XHRcdFx0Ly8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVudXNlZC1leHByZXNzaW9uc1xuXHRcdFx0XHRlbGVtLnBhcmVudE5vZGUuc2VsZWN0ZWRJbmRleDtcblx0XHRcdH1cblxuXHRcdFx0cmV0dXJuIGVsZW0uc2VsZWN0ZWQgPT09IHRydWU7XG5cdFx0fSxcblxuXHRcdC8vIENvbnRlbnRzXG5cdFx0XCJlbXB0eVwiOiBmdW5jdGlvbiggZWxlbSApIHtcblxuXHRcdFx0Ly8gaHR0cDovL3d3dy53My5vcmcvVFIvc2VsZWN0b3JzLyNlbXB0eS1wc2V1ZG9cblx0XHRcdC8vIDplbXB0eSBpcyBuZWdhdGVkIGJ5IGVsZW1lbnQgKDEpIG9yIGNvbnRlbnQgbm9kZXMgKHRleHQ6IDM7IGNkYXRhOiA0OyBlbnRpdHkgcmVmOiA1KSxcblx0XHRcdC8vICAgYnV0IG5vdCBieSBvdGhlcnMgKGNvbW1lbnQ6IDg7IHByb2Nlc3NpbmcgaW5zdHJ1Y3Rpb246IDc7IGV0Yy4pXG5cdFx0XHQvLyBub2RlVHlwZSA8IDYgd29ya3MgYmVjYXVzZSBhdHRyaWJ1dGVzICgyKSBkbyBub3QgYXBwZWFyIGFzIGNoaWxkcmVuXG5cdFx0XHRmb3IgKCBlbGVtID0gZWxlbS5maXJzdENoaWxkOyBlbGVtOyBlbGVtID0gZWxlbS5uZXh0U2libGluZyApIHtcblx0XHRcdFx0aWYgKCBlbGVtLm5vZGVUeXBlIDwgNiApIHtcblx0XHRcdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHRcdHJldHVybiB0cnVlO1xuXHRcdH0sXG5cblx0XHRcInBhcmVudFwiOiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdHJldHVybiAhRXhwci5wc2V1ZG9zWyBcImVtcHR5XCIgXSggZWxlbSApO1xuXHRcdH0sXG5cblx0XHQvLyBFbGVtZW50L2lucHV0IHR5cGVzXG5cdFx0XCJoZWFkZXJcIjogZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRyZXR1cm4gcmhlYWRlci50ZXN0KCBlbGVtLm5vZGVOYW1lICk7XG5cdFx0fSxcblxuXHRcdFwiaW5wdXRcIjogZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRyZXR1cm4gcmlucHV0cy50ZXN0KCBlbGVtLm5vZGVOYW1lICk7XG5cdFx0fSxcblxuXHRcdFwiYnV0dG9uXCI6IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0dmFyIG5hbWUgPSBlbGVtLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7XG5cdFx0XHRyZXR1cm4gbmFtZSA9PT0gXCJpbnB1dFwiICYmIGVsZW0udHlwZSA9PT0gXCJidXR0b25cIiB8fCBuYW1lID09PSBcImJ1dHRvblwiO1xuXHRcdH0sXG5cblx0XHRcInRleHRcIjogZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHR2YXIgYXR0cjtcblx0XHRcdHJldHVybiBlbGVtLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkgPT09IFwiaW5wdXRcIiAmJlxuXHRcdFx0XHRlbGVtLnR5cGUgPT09IFwidGV4dFwiICYmXG5cblx0XHRcdFx0Ly8gU3VwcG9ydDogSUU8OFxuXHRcdFx0XHQvLyBOZXcgSFRNTDUgYXR0cmlidXRlIHZhbHVlcyAoZS5nLiwgXCJzZWFyY2hcIikgYXBwZWFyIHdpdGggZWxlbS50eXBlID09PSBcInRleHRcIlxuXHRcdFx0XHQoICggYXR0ciA9IGVsZW0uZ2V0QXR0cmlidXRlKCBcInR5cGVcIiApICkgPT0gbnVsbCB8fFxuXHRcdFx0XHRcdGF0dHIudG9Mb3dlckNhc2UoKSA9PT0gXCJ0ZXh0XCIgKTtcblx0XHR9LFxuXG5cdFx0Ly8gUG9zaXRpb24taW4tY29sbGVjdGlvblxuXHRcdFwiZmlyc3RcIjogY3JlYXRlUG9zaXRpb25hbFBzZXVkbyggZnVuY3Rpb24oKSB7XG5cdFx0XHRyZXR1cm4gWyAwIF07XG5cdFx0fSApLFxuXG5cdFx0XCJsYXN0XCI6IGNyZWF0ZVBvc2l0aW9uYWxQc2V1ZG8oIGZ1bmN0aW9uKCBfbWF0Y2hJbmRleGVzLCBsZW5ndGggKSB7XG5cdFx0XHRyZXR1cm4gWyBsZW5ndGggLSAxIF07XG5cdFx0fSApLFxuXG5cdFx0XCJlcVwiOiBjcmVhdGVQb3NpdGlvbmFsUHNldWRvKCBmdW5jdGlvbiggX21hdGNoSW5kZXhlcywgbGVuZ3RoLCBhcmd1bWVudCApIHtcblx0XHRcdHJldHVybiBbIGFyZ3VtZW50IDwgMCA/IGFyZ3VtZW50ICsgbGVuZ3RoIDogYXJndW1lbnQgXTtcblx0XHR9ICksXG5cblx0XHRcImV2ZW5cIjogY3JlYXRlUG9zaXRpb25hbFBzZXVkbyggZnVuY3Rpb24oIG1hdGNoSW5kZXhlcywgbGVuZ3RoICkge1xuXHRcdFx0dmFyIGkgPSAwO1xuXHRcdFx0Zm9yICggOyBpIDwgbGVuZ3RoOyBpICs9IDIgKSB7XG5cdFx0XHRcdG1hdGNoSW5kZXhlcy5wdXNoKCBpICk7XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gbWF0Y2hJbmRleGVzO1xuXHRcdH0gKSxcblxuXHRcdFwib2RkXCI6IGNyZWF0ZVBvc2l0aW9uYWxQc2V1ZG8oIGZ1bmN0aW9uKCBtYXRjaEluZGV4ZXMsIGxlbmd0aCApIHtcblx0XHRcdHZhciBpID0gMTtcblx0XHRcdGZvciAoIDsgaSA8IGxlbmd0aDsgaSArPSAyICkge1xuXHRcdFx0XHRtYXRjaEluZGV4ZXMucHVzaCggaSApO1xuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIG1hdGNoSW5kZXhlcztcblx0XHR9ICksXG5cblx0XHRcImx0XCI6IGNyZWF0ZVBvc2l0aW9uYWxQc2V1ZG8oIGZ1bmN0aW9uKCBtYXRjaEluZGV4ZXMsIGxlbmd0aCwgYXJndW1lbnQgKSB7XG5cdFx0XHR2YXIgaSA9IGFyZ3VtZW50IDwgMCA/XG5cdFx0XHRcdGFyZ3VtZW50ICsgbGVuZ3RoIDpcblx0XHRcdFx0YXJndW1lbnQgPiBsZW5ndGggP1xuXHRcdFx0XHRcdGxlbmd0aCA6XG5cdFx0XHRcdFx0YXJndW1lbnQ7XG5cdFx0XHRmb3IgKCA7IC0taSA+PSAwOyApIHtcblx0XHRcdFx0bWF0Y2hJbmRleGVzLnB1c2goIGkgKTtcblx0XHRcdH1cblx0XHRcdHJldHVybiBtYXRjaEluZGV4ZXM7XG5cdFx0fSApLFxuXG5cdFx0XCJndFwiOiBjcmVhdGVQb3NpdGlvbmFsUHNldWRvKCBmdW5jdGlvbiggbWF0Y2hJbmRleGVzLCBsZW5ndGgsIGFyZ3VtZW50ICkge1xuXHRcdFx0dmFyIGkgPSBhcmd1bWVudCA8IDAgPyBhcmd1bWVudCArIGxlbmd0aCA6IGFyZ3VtZW50O1xuXHRcdFx0Zm9yICggOyArK2kgPCBsZW5ndGg7ICkge1xuXHRcdFx0XHRtYXRjaEluZGV4ZXMucHVzaCggaSApO1xuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIG1hdGNoSW5kZXhlcztcblx0XHR9IClcblx0fVxufTtcblxuRXhwci5wc2V1ZG9zWyBcIm50aFwiIF0gPSBFeHByLnBzZXVkb3NbIFwiZXFcIiBdO1xuXG4vLyBBZGQgYnV0dG9uL2lucHV0IHR5cGUgcHNldWRvc1xuZm9yICggaSBpbiB7IHJhZGlvOiB0cnVlLCBjaGVja2JveDogdHJ1ZSwgZmlsZTogdHJ1ZSwgcGFzc3dvcmQ6IHRydWUsIGltYWdlOiB0cnVlIH0gKSB7XG5cdEV4cHIucHNldWRvc1sgaSBdID0gY3JlYXRlSW5wdXRQc2V1ZG8oIGkgKTtcbn1cbmZvciAoIGkgaW4geyBzdWJtaXQ6IHRydWUsIHJlc2V0OiB0cnVlIH0gKSB7XG5cdEV4cHIucHNldWRvc1sgaSBdID0gY3JlYXRlQnV0dG9uUHNldWRvKCBpICk7XG59XG5cbi8vIEVhc3kgQVBJIGZvciBjcmVhdGluZyBuZXcgc2V0RmlsdGVyc1xuZnVuY3Rpb24gc2V0RmlsdGVycygpIHt9XG5zZXRGaWx0ZXJzLnByb3RvdHlwZSA9IEV4cHIuZmlsdGVycyA9IEV4cHIucHNldWRvcztcbkV4cHIuc2V0RmlsdGVycyA9IG5ldyBzZXRGaWx0ZXJzKCk7XG5cbnRva2VuaXplID0gU2l6emxlLnRva2VuaXplID0gZnVuY3Rpb24oIHNlbGVjdG9yLCBwYXJzZU9ubHkgKSB7XG5cdHZhciBtYXRjaGVkLCBtYXRjaCwgdG9rZW5zLCB0eXBlLFxuXHRcdHNvRmFyLCBncm91cHMsIHByZUZpbHRlcnMsXG5cdFx0Y2FjaGVkID0gdG9rZW5DYWNoZVsgc2VsZWN0b3IgKyBcIiBcIiBdO1xuXG5cdGlmICggY2FjaGVkICkge1xuXHRcdHJldHVybiBwYXJzZU9ubHkgPyAwIDogY2FjaGVkLnNsaWNlKCAwICk7XG5cdH1cblxuXHRzb0ZhciA9IHNlbGVjdG9yO1xuXHRncm91cHMgPSBbXTtcblx0cHJlRmlsdGVycyA9IEV4cHIucHJlRmlsdGVyO1xuXG5cdHdoaWxlICggc29GYXIgKSB7XG5cblx0XHQvLyBDb21tYSBhbmQgZmlyc3QgcnVuXG5cdFx0aWYgKCAhbWF0Y2hlZCB8fCAoIG1hdGNoID0gcmNvbW1hLmV4ZWMoIHNvRmFyICkgKSApIHtcblx0XHRcdGlmICggbWF0Y2ggKSB7XG5cblx0XHRcdFx0Ly8gRG9uJ3QgY29uc3VtZSB0cmFpbGluZyBjb21tYXMgYXMgdmFsaWRcblx0XHRcdFx0c29GYXIgPSBzb0Zhci5zbGljZSggbWF0Y2hbIDAgXS5sZW5ndGggKSB8fCBzb0Zhcjtcblx0XHRcdH1cblx0XHRcdGdyb3Vwcy5wdXNoKCAoIHRva2VucyA9IFtdICkgKTtcblx0XHR9XG5cblx0XHRtYXRjaGVkID0gZmFsc2U7XG5cblx0XHQvLyBDb21iaW5hdG9yc1xuXHRcdGlmICggKCBtYXRjaCA9IHJjb21iaW5hdG9ycy5leGVjKCBzb0ZhciApICkgKSB7XG5cdFx0XHRtYXRjaGVkID0gbWF0Y2guc2hpZnQoKTtcblx0XHRcdHRva2Vucy5wdXNoKCB7XG5cdFx0XHRcdHZhbHVlOiBtYXRjaGVkLFxuXG5cdFx0XHRcdC8vIENhc3QgZGVzY2VuZGFudCBjb21iaW5hdG9ycyB0byBzcGFjZVxuXHRcdFx0XHR0eXBlOiBtYXRjaFsgMCBdLnJlcGxhY2UoIHJ0cmltLCBcIiBcIiApXG5cdFx0XHR9ICk7XG5cdFx0XHRzb0ZhciA9IHNvRmFyLnNsaWNlKCBtYXRjaGVkLmxlbmd0aCApO1xuXHRcdH1cblxuXHRcdC8vIEZpbHRlcnNcblx0XHRmb3IgKCB0eXBlIGluIEV4cHIuZmlsdGVyICkge1xuXHRcdFx0aWYgKCAoIG1hdGNoID0gbWF0Y2hFeHByWyB0eXBlIF0uZXhlYyggc29GYXIgKSApICYmICggIXByZUZpbHRlcnNbIHR5cGUgXSB8fFxuXHRcdFx0XHQoIG1hdGNoID0gcHJlRmlsdGVyc1sgdHlwZSBdKCBtYXRjaCApICkgKSApIHtcblx0XHRcdFx0bWF0Y2hlZCA9IG1hdGNoLnNoaWZ0KCk7XG5cdFx0XHRcdHRva2Vucy5wdXNoKCB7XG5cdFx0XHRcdFx0dmFsdWU6IG1hdGNoZWQsXG5cdFx0XHRcdFx0dHlwZTogdHlwZSxcblx0XHRcdFx0XHRtYXRjaGVzOiBtYXRjaFxuXHRcdFx0XHR9ICk7XG5cdFx0XHRcdHNvRmFyID0gc29GYXIuc2xpY2UoIG1hdGNoZWQubGVuZ3RoICk7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0aWYgKCAhbWF0Y2hlZCApIHtcblx0XHRcdGJyZWFrO1xuXHRcdH1cblx0fVxuXG5cdC8vIFJldHVybiB0aGUgbGVuZ3RoIG9mIHRoZSBpbnZhbGlkIGV4Y2Vzc1xuXHQvLyBpZiB3ZSdyZSBqdXN0IHBhcnNpbmdcblx0Ly8gT3RoZXJ3aXNlLCB0aHJvdyBhbiBlcnJvciBvciByZXR1cm4gdG9rZW5zXG5cdHJldHVybiBwYXJzZU9ubHkgP1xuXHRcdHNvRmFyLmxlbmd0aCA6XG5cdFx0c29GYXIgP1xuXHRcdFx0U2l6emxlLmVycm9yKCBzZWxlY3RvciApIDpcblxuXHRcdFx0Ly8gQ2FjaGUgdGhlIHRva2Vuc1xuXHRcdFx0dG9rZW5DYWNoZSggc2VsZWN0b3IsIGdyb3VwcyApLnNsaWNlKCAwICk7XG59O1xuXG5mdW5jdGlvbiB0b1NlbGVjdG9yKCB0b2tlbnMgKSB7XG5cdHZhciBpID0gMCxcblx0XHRsZW4gPSB0b2tlbnMubGVuZ3RoLFxuXHRcdHNlbGVjdG9yID0gXCJcIjtcblx0Zm9yICggOyBpIDwgbGVuOyBpKysgKSB7XG5cdFx0c2VsZWN0b3IgKz0gdG9rZW5zWyBpIF0udmFsdWU7XG5cdH1cblx0cmV0dXJuIHNlbGVjdG9yO1xufVxuXG5mdW5jdGlvbiBhZGRDb21iaW5hdG9yKCBtYXRjaGVyLCBjb21iaW5hdG9yLCBiYXNlICkge1xuXHR2YXIgZGlyID0gY29tYmluYXRvci5kaXIsXG5cdFx0c2tpcCA9IGNvbWJpbmF0b3IubmV4dCxcblx0XHRrZXkgPSBza2lwIHx8IGRpcixcblx0XHRjaGVja05vbkVsZW1lbnRzID0gYmFzZSAmJiBrZXkgPT09IFwicGFyZW50Tm9kZVwiLFxuXHRcdGRvbmVOYW1lID0gZG9uZSsrO1xuXG5cdHJldHVybiBjb21iaW5hdG9yLmZpcnN0ID9cblxuXHRcdC8vIENoZWNrIGFnYWluc3QgY2xvc2VzdCBhbmNlc3Rvci9wcmVjZWRpbmcgZWxlbWVudFxuXHRcdGZ1bmN0aW9uKCBlbGVtLCBjb250ZXh0LCB4bWwgKSB7XG5cdFx0XHR3aGlsZSAoICggZWxlbSA9IGVsZW1bIGRpciBdICkgKSB7XG5cdFx0XHRcdGlmICggZWxlbS5ub2RlVHlwZSA9PT0gMSB8fCBjaGVja05vbkVsZW1lbnRzICkge1xuXHRcdFx0XHRcdHJldHVybiBtYXRjaGVyKCBlbGVtLCBjb250ZXh0LCB4bWwgKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH0gOlxuXG5cdFx0Ly8gQ2hlY2sgYWdhaW5zdCBhbGwgYW5jZXN0b3IvcHJlY2VkaW5nIGVsZW1lbnRzXG5cdFx0ZnVuY3Rpb24oIGVsZW0sIGNvbnRleHQsIHhtbCApIHtcblx0XHRcdHZhciBvbGRDYWNoZSwgdW5pcXVlQ2FjaGUsIG91dGVyQ2FjaGUsXG5cdFx0XHRcdG5ld0NhY2hlID0gWyBkaXJydW5zLCBkb25lTmFtZSBdO1xuXG5cdFx0XHQvLyBXZSBjYW4ndCBzZXQgYXJiaXRyYXJ5IGRhdGEgb24gWE1MIG5vZGVzLCBzbyB0aGV5IGRvbid0IGJlbmVmaXQgZnJvbSBjb21iaW5hdG9yIGNhY2hpbmdcblx0XHRcdGlmICggeG1sICkge1xuXHRcdFx0XHR3aGlsZSAoICggZWxlbSA9IGVsZW1bIGRpciBdICkgKSB7XG5cdFx0XHRcdFx0aWYgKCBlbGVtLm5vZGVUeXBlID09PSAxIHx8IGNoZWNrTm9uRWxlbWVudHMgKSB7XG5cdFx0XHRcdFx0XHRpZiAoIG1hdGNoZXIoIGVsZW0sIGNvbnRleHQsIHhtbCApICkge1xuXHRcdFx0XHRcdFx0XHRyZXR1cm4gdHJ1ZTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdHdoaWxlICggKCBlbGVtID0gZWxlbVsgZGlyIF0gKSApIHtcblx0XHRcdFx0XHRpZiAoIGVsZW0ubm9kZVR5cGUgPT09IDEgfHwgY2hlY2tOb25FbGVtZW50cyApIHtcblx0XHRcdFx0XHRcdG91dGVyQ2FjaGUgPSBlbGVtWyBleHBhbmRvIF0gfHwgKCBlbGVtWyBleHBhbmRvIF0gPSB7fSApO1xuXG5cdFx0XHRcdFx0XHQvLyBTdXBwb3J0OiBJRSA8OSBvbmx5XG5cdFx0XHRcdFx0XHQvLyBEZWZlbmQgYWdhaW5zdCBjbG9uZWQgYXR0cm9wZXJ0aWVzIChqUXVlcnkgZ2gtMTcwOSlcblx0XHRcdFx0XHRcdHVuaXF1ZUNhY2hlID0gb3V0ZXJDYWNoZVsgZWxlbS51bmlxdWVJRCBdIHx8XG5cdFx0XHRcdFx0XHRcdCggb3V0ZXJDYWNoZVsgZWxlbS51bmlxdWVJRCBdID0ge30gKTtcblxuXHRcdFx0XHRcdFx0aWYgKCBza2lwICYmIHNraXAgPT09IGVsZW0ubm9kZU5hbWUudG9Mb3dlckNhc2UoKSApIHtcblx0XHRcdFx0XHRcdFx0ZWxlbSA9IGVsZW1bIGRpciBdIHx8IGVsZW07XG5cdFx0XHRcdFx0XHR9IGVsc2UgaWYgKCAoIG9sZENhY2hlID0gdW5pcXVlQ2FjaGVbIGtleSBdICkgJiZcblx0XHRcdFx0XHRcdFx0b2xkQ2FjaGVbIDAgXSA9PT0gZGlycnVucyAmJiBvbGRDYWNoZVsgMSBdID09PSBkb25lTmFtZSApIHtcblxuXHRcdFx0XHRcdFx0XHQvLyBBc3NpZ24gdG8gbmV3Q2FjaGUgc28gcmVzdWx0cyBiYWNrLXByb3BhZ2F0ZSB0byBwcmV2aW91cyBlbGVtZW50c1xuXHRcdFx0XHRcdFx0XHRyZXR1cm4gKCBuZXdDYWNoZVsgMiBdID0gb2xkQ2FjaGVbIDIgXSApO1xuXHRcdFx0XHRcdFx0fSBlbHNlIHtcblxuXHRcdFx0XHRcdFx0XHQvLyBSZXVzZSBuZXdjYWNoZSBzbyByZXN1bHRzIGJhY2stcHJvcGFnYXRlIHRvIHByZXZpb3VzIGVsZW1lbnRzXG5cdFx0XHRcdFx0XHRcdHVuaXF1ZUNhY2hlWyBrZXkgXSA9IG5ld0NhY2hlO1xuXG5cdFx0XHRcdFx0XHRcdC8vIEEgbWF0Y2ggbWVhbnMgd2UncmUgZG9uZTsgYSBmYWlsIG1lYW5zIHdlIGhhdmUgdG8ga2VlcCBjaGVja2luZ1xuXHRcdFx0XHRcdFx0XHRpZiAoICggbmV3Q2FjaGVbIDIgXSA9IG1hdGNoZXIoIGVsZW0sIGNvbnRleHQsIHhtbCApICkgKSB7XG5cdFx0XHRcdFx0XHRcdFx0cmV0dXJuIHRydWU7XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9O1xufVxuXG5mdW5jdGlvbiBlbGVtZW50TWF0Y2hlciggbWF0Y2hlcnMgKSB7XG5cdHJldHVybiBtYXRjaGVycy5sZW5ndGggPiAxID9cblx0XHRmdW5jdGlvbiggZWxlbSwgY29udGV4dCwgeG1sICkge1xuXHRcdFx0dmFyIGkgPSBtYXRjaGVycy5sZW5ndGg7XG5cdFx0XHR3aGlsZSAoIGktLSApIHtcblx0XHRcdFx0aWYgKCAhbWF0Y2hlcnNbIGkgXSggZWxlbSwgY29udGV4dCwgeG1sICkgKSB7XG5cdFx0XHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gdHJ1ZTtcblx0XHR9IDpcblx0XHRtYXRjaGVyc1sgMCBdO1xufVxuXG5mdW5jdGlvbiBtdWx0aXBsZUNvbnRleHRzKCBzZWxlY3RvciwgY29udGV4dHMsIHJlc3VsdHMgKSB7XG5cdHZhciBpID0gMCxcblx0XHRsZW4gPSBjb250ZXh0cy5sZW5ndGg7XG5cdGZvciAoIDsgaSA8IGxlbjsgaSsrICkge1xuXHRcdFNpenpsZSggc2VsZWN0b3IsIGNvbnRleHRzWyBpIF0sIHJlc3VsdHMgKTtcblx0fVxuXHRyZXR1cm4gcmVzdWx0cztcbn1cblxuZnVuY3Rpb24gY29uZGVuc2UoIHVubWF0Y2hlZCwgbWFwLCBmaWx0ZXIsIGNvbnRleHQsIHhtbCApIHtcblx0dmFyIGVsZW0sXG5cdFx0bmV3VW5tYXRjaGVkID0gW10sXG5cdFx0aSA9IDAsXG5cdFx0bGVuID0gdW5tYXRjaGVkLmxlbmd0aCxcblx0XHRtYXBwZWQgPSBtYXAgIT0gbnVsbDtcblxuXHRmb3IgKCA7IGkgPCBsZW47IGkrKyApIHtcblx0XHRpZiAoICggZWxlbSA9IHVubWF0Y2hlZFsgaSBdICkgKSB7XG5cdFx0XHRpZiAoICFmaWx0ZXIgfHwgZmlsdGVyKCBlbGVtLCBjb250ZXh0LCB4bWwgKSApIHtcblx0XHRcdFx0bmV3VW5tYXRjaGVkLnB1c2goIGVsZW0gKTtcblx0XHRcdFx0aWYgKCBtYXBwZWQgKSB7XG5cdFx0XHRcdFx0bWFwLnB1c2goIGkgKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cdHJldHVybiBuZXdVbm1hdGNoZWQ7XG59XG5cbmZ1bmN0aW9uIHNldE1hdGNoZXIoIHByZUZpbHRlciwgc2VsZWN0b3IsIG1hdGNoZXIsIHBvc3RGaWx0ZXIsIHBvc3RGaW5kZXIsIHBvc3RTZWxlY3RvciApIHtcblx0aWYgKCBwb3N0RmlsdGVyICYmICFwb3N0RmlsdGVyWyBleHBhbmRvIF0gKSB7XG5cdFx0cG9zdEZpbHRlciA9IHNldE1hdGNoZXIoIHBvc3RGaWx0ZXIgKTtcblx0fVxuXHRpZiAoIHBvc3RGaW5kZXIgJiYgIXBvc3RGaW5kZXJbIGV4cGFuZG8gXSApIHtcblx0XHRwb3N0RmluZGVyID0gc2V0TWF0Y2hlciggcG9zdEZpbmRlciwgcG9zdFNlbGVjdG9yICk7XG5cdH1cblx0cmV0dXJuIG1hcmtGdW5jdGlvbiggZnVuY3Rpb24oIHNlZWQsIHJlc3VsdHMsIGNvbnRleHQsIHhtbCApIHtcblx0XHR2YXIgdGVtcCwgaSwgZWxlbSxcblx0XHRcdHByZU1hcCA9IFtdLFxuXHRcdFx0cG9zdE1hcCA9IFtdLFxuXHRcdFx0cHJlZXhpc3RpbmcgPSByZXN1bHRzLmxlbmd0aCxcblxuXHRcdFx0Ly8gR2V0IGluaXRpYWwgZWxlbWVudHMgZnJvbSBzZWVkIG9yIGNvbnRleHRcblx0XHRcdGVsZW1zID0gc2VlZCB8fCBtdWx0aXBsZUNvbnRleHRzKFxuXHRcdFx0XHRzZWxlY3RvciB8fCBcIipcIixcblx0XHRcdFx0Y29udGV4dC5ub2RlVHlwZSA/IFsgY29udGV4dCBdIDogY29udGV4dCxcblx0XHRcdFx0W11cblx0XHRcdCksXG5cblx0XHRcdC8vIFByZWZpbHRlciB0byBnZXQgbWF0Y2hlciBpbnB1dCwgcHJlc2VydmluZyBhIG1hcCBmb3Igc2VlZC1yZXN1bHRzIHN5bmNocm9uaXphdGlvblxuXHRcdFx0bWF0Y2hlckluID0gcHJlRmlsdGVyICYmICggc2VlZCB8fCAhc2VsZWN0b3IgKSA/XG5cdFx0XHRcdGNvbmRlbnNlKCBlbGVtcywgcHJlTWFwLCBwcmVGaWx0ZXIsIGNvbnRleHQsIHhtbCApIDpcblx0XHRcdFx0ZWxlbXMsXG5cblx0XHRcdG1hdGNoZXJPdXQgPSBtYXRjaGVyID9cblxuXHRcdFx0XHQvLyBJZiB3ZSBoYXZlIGEgcG9zdEZpbmRlciwgb3IgZmlsdGVyZWQgc2VlZCwgb3Igbm9uLXNlZWQgcG9zdEZpbHRlciBvciBwcmVleGlzdGluZyByZXN1bHRzLFxuXHRcdFx0XHRwb3N0RmluZGVyIHx8ICggc2VlZCA/IHByZUZpbHRlciA6IHByZWV4aXN0aW5nIHx8IHBvc3RGaWx0ZXIgKSA/XG5cblx0XHRcdFx0XHQvLyAuLi5pbnRlcm1lZGlhdGUgcHJvY2Vzc2luZyBpcyBuZWNlc3Nhcnlcblx0XHRcdFx0XHRbXSA6XG5cblx0XHRcdFx0XHQvLyAuLi5vdGhlcndpc2UgdXNlIHJlc3VsdHMgZGlyZWN0bHlcblx0XHRcdFx0XHRyZXN1bHRzIDpcblx0XHRcdFx0bWF0Y2hlckluO1xuXG5cdFx0Ly8gRmluZCBwcmltYXJ5IG1hdGNoZXNcblx0XHRpZiAoIG1hdGNoZXIgKSB7XG5cdFx0XHRtYXRjaGVyKCBtYXRjaGVySW4sIG1hdGNoZXJPdXQsIGNvbnRleHQsIHhtbCApO1xuXHRcdH1cblxuXHRcdC8vIEFwcGx5IHBvc3RGaWx0ZXJcblx0XHRpZiAoIHBvc3RGaWx0ZXIgKSB7XG5cdFx0XHR0ZW1wID0gY29uZGVuc2UoIG1hdGNoZXJPdXQsIHBvc3RNYXAgKTtcblx0XHRcdHBvc3RGaWx0ZXIoIHRlbXAsIFtdLCBjb250ZXh0LCB4bWwgKTtcblxuXHRcdFx0Ly8gVW4tbWF0Y2ggZmFpbGluZyBlbGVtZW50cyBieSBtb3ZpbmcgdGhlbSBiYWNrIHRvIG1hdGNoZXJJblxuXHRcdFx0aSA9IHRlbXAubGVuZ3RoO1xuXHRcdFx0d2hpbGUgKCBpLS0gKSB7XG5cdFx0XHRcdGlmICggKCBlbGVtID0gdGVtcFsgaSBdICkgKSB7XG5cdFx0XHRcdFx0bWF0Y2hlck91dFsgcG9zdE1hcFsgaSBdIF0gPSAhKCBtYXRjaGVySW5bIHBvc3RNYXBbIGkgXSBdID0gZWxlbSApO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0aWYgKCBzZWVkICkge1xuXHRcdFx0aWYgKCBwb3N0RmluZGVyIHx8IHByZUZpbHRlciApIHtcblx0XHRcdFx0aWYgKCBwb3N0RmluZGVyICkge1xuXG5cdFx0XHRcdFx0Ly8gR2V0IHRoZSBmaW5hbCBtYXRjaGVyT3V0IGJ5IGNvbmRlbnNpbmcgdGhpcyBpbnRlcm1lZGlhdGUgaW50byBwb3N0RmluZGVyIGNvbnRleHRzXG5cdFx0XHRcdFx0dGVtcCA9IFtdO1xuXHRcdFx0XHRcdGkgPSBtYXRjaGVyT3V0Lmxlbmd0aDtcblx0XHRcdFx0XHR3aGlsZSAoIGktLSApIHtcblx0XHRcdFx0XHRcdGlmICggKCBlbGVtID0gbWF0Y2hlck91dFsgaSBdICkgKSB7XG5cblx0XHRcdFx0XHRcdFx0Ly8gUmVzdG9yZSBtYXRjaGVySW4gc2luY2UgZWxlbSBpcyBub3QgeWV0IGEgZmluYWwgbWF0Y2hcblx0XHRcdFx0XHRcdFx0dGVtcC5wdXNoKCAoIG1hdGNoZXJJblsgaSBdID0gZWxlbSApICk7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdHBvc3RGaW5kZXIoIG51bGwsICggbWF0Y2hlck91dCA9IFtdICksIHRlbXAsIHhtbCApO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gTW92ZSBtYXRjaGVkIGVsZW1lbnRzIGZyb20gc2VlZCB0byByZXN1bHRzIHRvIGtlZXAgdGhlbSBzeW5jaHJvbml6ZWRcblx0XHRcdFx0aSA9IG1hdGNoZXJPdXQubGVuZ3RoO1xuXHRcdFx0XHR3aGlsZSAoIGktLSApIHtcblx0XHRcdFx0XHRpZiAoICggZWxlbSA9IG1hdGNoZXJPdXRbIGkgXSApICYmXG5cdFx0XHRcdFx0XHQoIHRlbXAgPSBwb3N0RmluZGVyID8gaW5kZXhPZiggc2VlZCwgZWxlbSApIDogcHJlTWFwWyBpIF0gKSA+IC0xICkge1xuXG5cdFx0XHRcdFx0XHRzZWVkWyB0ZW1wIF0gPSAhKCByZXN1bHRzWyB0ZW1wIF0gPSBlbGVtICk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHQvLyBBZGQgZWxlbWVudHMgdG8gcmVzdWx0cywgdGhyb3VnaCBwb3N0RmluZGVyIGlmIGRlZmluZWRcblx0XHR9IGVsc2Uge1xuXHRcdFx0bWF0Y2hlck91dCA9IGNvbmRlbnNlKFxuXHRcdFx0XHRtYXRjaGVyT3V0ID09PSByZXN1bHRzID9cblx0XHRcdFx0XHRtYXRjaGVyT3V0LnNwbGljZSggcHJlZXhpc3RpbmcsIG1hdGNoZXJPdXQubGVuZ3RoICkgOlxuXHRcdFx0XHRcdG1hdGNoZXJPdXRcblx0XHRcdCk7XG5cdFx0XHRpZiAoIHBvc3RGaW5kZXIgKSB7XG5cdFx0XHRcdHBvc3RGaW5kZXIoIG51bGwsIHJlc3VsdHMsIG1hdGNoZXJPdXQsIHhtbCApO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0cHVzaC5hcHBseSggcmVzdWx0cywgbWF0Y2hlck91dCApO1xuXHRcdFx0fVxuXHRcdH1cblx0fSApO1xufVxuXG5mdW5jdGlvbiBtYXRjaGVyRnJvbVRva2VucyggdG9rZW5zICkge1xuXHR2YXIgY2hlY2tDb250ZXh0LCBtYXRjaGVyLCBqLFxuXHRcdGxlbiA9IHRva2Vucy5sZW5ndGgsXG5cdFx0bGVhZGluZ1JlbGF0aXZlID0gRXhwci5yZWxhdGl2ZVsgdG9rZW5zWyAwIF0udHlwZSBdLFxuXHRcdGltcGxpY2l0UmVsYXRpdmUgPSBsZWFkaW5nUmVsYXRpdmUgfHwgRXhwci5yZWxhdGl2ZVsgXCIgXCIgXSxcblx0XHRpID0gbGVhZGluZ1JlbGF0aXZlID8gMSA6IDAsXG5cblx0XHQvLyBUaGUgZm91bmRhdGlvbmFsIG1hdGNoZXIgZW5zdXJlcyB0aGF0IGVsZW1lbnRzIGFyZSByZWFjaGFibGUgZnJvbSB0b3AtbGV2ZWwgY29udGV4dChzKVxuXHRcdG1hdGNoQ29udGV4dCA9IGFkZENvbWJpbmF0b3IoIGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0cmV0dXJuIGVsZW0gPT09IGNoZWNrQ29udGV4dDtcblx0XHR9LCBpbXBsaWNpdFJlbGF0aXZlLCB0cnVlICksXG5cdFx0bWF0Y2hBbnlDb250ZXh0ID0gYWRkQ29tYmluYXRvciggZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRyZXR1cm4gaW5kZXhPZiggY2hlY2tDb250ZXh0LCBlbGVtICkgPiAtMTtcblx0XHR9LCBpbXBsaWNpdFJlbGF0aXZlLCB0cnVlICksXG5cdFx0bWF0Y2hlcnMgPSBbIGZ1bmN0aW9uKCBlbGVtLCBjb250ZXh0LCB4bWwgKSB7XG5cdFx0XHR2YXIgcmV0ID0gKCAhbGVhZGluZ1JlbGF0aXZlICYmICggeG1sIHx8IGNvbnRleHQgIT09IG91dGVybW9zdENvbnRleHQgKSApIHx8IChcblx0XHRcdFx0KCBjaGVja0NvbnRleHQgPSBjb250ZXh0ICkubm9kZVR5cGUgP1xuXHRcdFx0XHRcdG1hdGNoQ29udGV4dCggZWxlbSwgY29udGV4dCwgeG1sICkgOlxuXHRcdFx0XHRcdG1hdGNoQW55Q29udGV4dCggZWxlbSwgY29udGV4dCwgeG1sICkgKTtcblxuXHRcdFx0Ly8gQXZvaWQgaGFuZ2luZyBvbnRvIGVsZW1lbnQgKGlzc3VlICMyOTkpXG5cdFx0XHRjaGVja0NvbnRleHQgPSBudWxsO1xuXHRcdFx0cmV0dXJuIHJldDtcblx0XHR9IF07XG5cblx0Zm9yICggOyBpIDwgbGVuOyBpKysgKSB7XG5cdFx0aWYgKCAoIG1hdGNoZXIgPSBFeHByLnJlbGF0aXZlWyB0b2tlbnNbIGkgXS50eXBlIF0gKSApIHtcblx0XHRcdG1hdGNoZXJzID0gWyBhZGRDb21iaW5hdG9yKCBlbGVtZW50TWF0Y2hlciggbWF0Y2hlcnMgKSwgbWF0Y2hlciApIF07XG5cdFx0fSBlbHNlIHtcblx0XHRcdG1hdGNoZXIgPSBFeHByLmZpbHRlclsgdG9rZW5zWyBpIF0udHlwZSBdLmFwcGx5KCBudWxsLCB0b2tlbnNbIGkgXS5tYXRjaGVzICk7XG5cblx0XHRcdC8vIFJldHVybiBzcGVjaWFsIHVwb24gc2VlaW5nIGEgcG9zaXRpb25hbCBtYXRjaGVyXG5cdFx0XHRpZiAoIG1hdGNoZXJbIGV4cGFuZG8gXSApIHtcblxuXHRcdFx0XHQvLyBGaW5kIHRoZSBuZXh0IHJlbGF0aXZlIG9wZXJhdG9yIChpZiBhbnkpIGZvciBwcm9wZXIgaGFuZGxpbmdcblx0XHRcdFx0aiA9ICsraTtcblx0XHRcdFx0Zm9yICggOyBqIDwgbGVuOyBqKysgKSB7XG5cdFx0XHRcdFx0aWYgKCBFeHByLnJlbGF0aXZlWyB0b2tlbnNbIGogXS50eXBlIF0gKSB7XG5cdFx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdFx0cmV0dXJuIHNldE1hdGNoZXIoXG5cdFx0XHRcdFx0aSA+IDEgJiYgZWxlbWVudE1hdGNoZXIoIG1hdGNoZXJzICksXG5cdFx0XHRcdFx0aSA+IDEgJiYgdG9TZWxlY3RvcihcblxuXHRcdFx0XHRcdC8vIElmIHRoZSBwcmVjZWRpbmcgdG9rZW4gd2FzIGEgZGVzY2VuZGFudCBjb21iaW5hdG9yLCBpbnNlcnQgYW4gaW1wbGljaXQgYW55LWVsZW1lbnQgYCpgXG5cdFx0XHRcdFx0dG9rZW5zXG5cdFx0XHRcdFx0XHQuc2xpY2UoIDAsIGkgLSAxIClcblx0XHRcdFx0XHRcdC5jb25jYXQoIHsgdmFsdWU6IHRva2Vuc1sgaSAtIDIgXS50eXBlID09PSBcIiBcIiA/IFwiKlwiIDogXCJcIiB9IClcblx0XHRcdFx0XHQpLnJlcGxhY2UoIHJ0cmltLCBcIiQxXCIgKSxcblx0XHRcdFx0XHRtYXRjaGVyLFxuXHRcdFx0XHRcdGkgPCBqICYmIG1hdGNoZXJGcm9tVG9rZW5zKCB0b2tlbnMuc2xpY2UoIGksIGogKSApLFxuXHRcdFx0XHRcdGogPCBsZW4gJiYgbWF0Y2hlckZyb21Ub2tlbnMoICggdG9rZW5zID0gdG9rZW5zLnNsaWNlKCBqICkgKSApLFxuXHRcdFx0XHRcdGogPCBsZW4gJiYgdG9TZWxlY3RvciggdG9rZW5zIClcblx0XHRcdFx0KTtcblx0XHRcdH1cblx0XHRcdG1hdGNoZXJzLnB1c2goIG1hdGNoZXIgKTtcblx0XHR9XG5cdH1cblxuXHRyZXR1cm4gZWxlbWVudE1hdGNoZXIoIG1hdGNoZXJzICk7XG59XG5cbmZ1bmN0aW9uIG1hdGNoZXJGcm9tR3JvdXBNYXRjaGVycyggZWxlbWVudE1hdGNoZXJzLCBzZXRNYXRjaGVycyApIHtcblx0dmFyIGJ5U2V0ID0gc2V0TWF0Y2hlcnMubGVuZ3RoID4gMCxcblx0XHRieUVsZW1lbnQgPSBlbGVtZW50TWF0Y2hlcnMubGVuZ3RoID4gMCxcblx0XHRzdXBlck1hdGNoZXIgPSBmdW5jdGlvbiggc2VlZCwgY29udGV4dCwgeG1sLCByZXN1bHRzLCBvdXRlcm1vc3QgKSB7XG5cdFx0XHR2YXIgZWxlbSwgaiwgbWF0Y2hlcixcblx0XHRcdFx0bWF0Y2hlZENvdW50ID0gMCxcblx0XHRcdFx0aSA9IFwiMFwiLFxuXHRcdFx0XHR1bm1hdGNoZWQgPSBzZWVkICYmIFtdLFxuXHRcdFx0XHRzZXRNYXRjaGVkID0gW10sXG5cdFx0XHRcdGNvbnRleHRCYWNrdXAgPSBvdXRlcm1vc3RDb250ZXh0LFxuXG5cdFx0XHRcdC8vIFdlIG11c3QgYWx3YXlzIGhhdmUgZWl0aGVyIHNlZWQgZWxlbWVudHMgb3Igb3V0ZXJtb3N0IGNvbnRleHRcblx0XHRcdFx0ZWxlbXMgPSBzZWVkIHx8IGJ5RWxlbWVudCAmJiBFeHByLmZpbmRbIFwiVEFHXCIgXSggXCIqXCIsIG91dGVybW9zdCApLFxuXG5cdFx0XHRcdC8vIFVzZSBpbnRlZ2VyIGRpcnJ1bnMgaWZmIHRoaXMgaXMgdGhlIG91dGVybW9zdCBtYXRjaGVyXG5cdFx0XHRcdGRpcnJ1bnNVbmlxdWUgPSAoIGRpcnJ1bnMgKz0gY29udGV4dEJhY2t1cCA9PSBudWxsID8gMSA6IE1hdGgucmFuZG9tKCkgfHwgMC4xICksXG5cdFx0XHRcdGxlbiA9IGVsZW1zLmxlbmd0aDtcblxuXHRcdFx0aWYgKCBvdXRlcm1vc3QgKSB7XG5cblx0XHRcdFx0Ly8gU3VwcG9ydDogSUUgMTErLCBFZGdlIDE3IC0gMTgrXG5cdFx0XHRcdC8vIElFL0VkZ2Ugc29tZXRpbWVzIHRocm93IGEgXCJQZXJtaXNzaW9uIGRlbmllZFwiIGVycm9yIHdoZW4gc3RyaWN0LWNvbXBhcmluZ1xuXHRcdFx0XHQvLyB0d28gZG9jdW1lbnRzOyBzaGFsbG93IGNvbXBhcmlzb25zIHdvcmsuXG5cdFx0XHRcdC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBlcWVxZXFcblx0XHRcdFx0b3V0ZXJtb3N0Q29udGV4dCA9IGNvbnRleHQgPT0gZG9jdW1lbnQgfHwgY29udGV4dCB8fCBvdXRlcm1vc3Q7XG5cdFx0XHR9XG5cblx0XHRcdC8vIEFkZCBlbGVtZW50cyBwYXNzaW5nIGVsZW1lbnRNYXRjaGVycyBkaXJlY3RseSB0byByZXN1bHRzXG5cdFx0XHQvLyBTdXBwb3J0OiBJRTw5LCBTYWZhcmlcblx0XHRcdC8vIFRvbGVyYXRlIE5vZGVMaXN0IHByb3BlcnRpZXMgKElFOiBcImxlbmd0aFwiOyBTYWZhcmk6IDxudW1iZXI+KSBtYXRjaGluZyBlbGVtZW50cyBieSBpZFxuXHRcdFx0Zm9yICggOyBpICE9PSBsZW4gJiYgKCBlbGVtID0gZWxlbXNbIGkgXSApICE9IG51bGw7IGkrKyApIHtcblx0XHRcdFx0aWYgKCBieUVsZW1lbnQgJiYgZWxlbSApIHtcblx0XHRcdFx0XHRqID0gMDtcblxuXHRcdFx0XHRcdC8vIFN1cHBvcnQ6IElFIDExKywgRWRnZSAxNyAtIDE4K1xuXHRcdFx0XHRcdC8vIElFL0VkZ2Ugc29tZXRpbWVzIHRocm93IGEgXCJQZXJtaXNzaW9uIGRlbmllZFwiIGVycm9yIHdoZW4gc3RyaWN0LWNvbXBhcmluZ1xuXHRcdFx0XHRcdC8vIHR3byBkb2N1bWVudHM7IHNoYWxsb3cgY29tcGFyaXNvbnMgd29yay5cblx0XHRcdFx0XHQvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZXFlcWVxXG5cdFx0XHRcdFx0aWYgKCAhY29udGV4dCAmJiBlbGVtLm93bmVyRG9jdW1lbnQgIT0gZG9jdW1lbnQgKSB7XG5cdFx0XHRcdFx0XHRzZXREb2N1bWVudCggZWxlbSApO1xuXHRcdFx0XHRcdFx0eG1sID0gIWRvY3VtZW50SXNIVE1MO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHR3aGlsZSAoICggbWF0Y2hlciA9IGVsZW1lbnRNYXRjaGVyc1sgaisrIF0gKSApIHtcblx0XHRcdFx0XHRcdGlmICggbWF0Y2hlciggZWxlbSwgY29udGV4dCB8fCBkb2N1bWVudCwgeG1sICkgKSB7XG5cdFx0XHRcdFx0XHRcdHJlc3VsdHMucHVzaCggZWxlbSApO1xuXHRcdFx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0aWYgKCBvdXRlcm1vc3QgKSB7XG5cdFx0XHRcdFx0XHRkaXJydW5zID0gZGlycnVuc1VuaXF1ZTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBUcmFjayB1bm1hdGNoZWQgZWxlbWVudHMgZm9yIHNldCBmaWx0ZXJzXG5cdFx0XHRcdGlmICggYnlTZXQgKSB7XG5cblx0XHRcdFx0XHQvLyBUaGV5IHdpbGwgaGF2ZSBnb25lIHRocm91Z2ggYWxsIHBvc3NpYmxlIG1hdGNoZXJzXG5cdFx0XHRcdFx0aWYgKCAoIGVsZW0gPSAhbWF0Y2hlciAmJiBlbGVtICkgKSB7XG5cdFx0XHRcdFx0XHRtYXRjaGVkQ291bnQtLTtcblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHQvLyBMZW5ndGhlbiB0aGUgYXJyYXkgZm9yIGV2ZXJ5IGVsZW1lbnQsIG1hdGNoZWQgb3Igbm90XG5cdFx0XHRcdFx0aWYgKCBzZWVkICkge1xuXHRcdFx0XHRcdFx0dW5tYXRjaGVkLnB1c2goIGVsZW0gKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblxuXHRcdFx0Ly8gYGlgIGlzIG5vdyB0aGUgY291bnQgb2YgZWxlbWVudHMgdmlzaXRlZCBhYm92ZSwgYW5kIGFkZGluZyBpdCB0byBgbWF0Y2hlZENvdW50YFxuXHRcdFx0Ly8gbWFrZXMgdGhlIGxhdHRlciBub25uZWdhdGl2ZS5cblx0XHRcdG1hdGNoZWRDb3VudCArPSBpO1xuXG5cdFx0XHQvLyBBcHBseSBzZXQgZmlsdGVycyB0byB1bm1hdGNoZWQgZWxlbWVudHNcblx0XHRcdC8vIE5PVEU6IFRoaXMgY2FuIGJlIHNraXBwZWQgaWYgdGhlcmUgYXJlIG5vIHVubWF0Y2hlZCBlbGVtZW50cyAoaS5lLiwgYG1hdGNoZWRDb3VudGBcblx0XHRcdC8vIGVxdWFscyBgaWApLCB1bmxlc3Mgd2UgZGlkbid0IHZpc2l0IF9hbnlfIGVsZW1lbnRzIGluIHRoZSBhYm92ZSBsb29wIGJlY2F1c2Ugd2UgaGF2ZVxuXHRcdFx0Ly8gbm8gZWxlbWVudCBtYXRjaGVycyBhbmQgbm8gc2VlZC5cblx0XHRcdC8vIEluY3JlbWVudGluZyBhbiBpbml0aWFsbHktc3RyaW5nIFwiMFwiIGBpYCBhbGxvd3MgYGlgIHRvIHJlbWFpbiBhIHN0cmluZyBvbmx5IGluIHRoYXRcblx0XHRcdC8vIGNhc2UsIHdoaWNoIHdpbGwgcmVzdWx0IGluIGEgXCIwMFwiIGBtYXRjaGVkQ291bnRgIHRoYXQgZGlmZmVycyBmcm9tIGBpYCBidXQgaXMgYWxzb1xuXHRcdFx0Ly8gbnVtZXJpY2FsbHkgemVyby5cblx0XHRcdGlmICggYnlTZXQgJiYgaSAhPT0gbWF0Y2hlZENvdW50ICkge1xuXHRcdFx0XHRqID0gMDtcblx0XHRcdFx0d2hpbGUgKCAoIG1hdGNoZXIgPSBzZXRNYXRjaGVyc1sgaisrIF0gKSApIHtcblx0XHRcdFx0XHRtYXRjaGVyKCB1bm1hdGNoZWQsIHNldE1hdGNoZWQsIGNvbnRleHQsIHhtbCApO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0aWYgKCBzZWVkICkge1xuXG5cdFx0XHRcdFx0Ly8gUmVpbnRlZ3JhdGUgZWxlbWVudCBtYXRjaGVzIHRvIGVsaW1pbmF0ZSB0aGUgbmVlZCBmb3Igc29ydGluZ1xuXHRcdFx0XHRcdGlmICggbWF0Y2hlZENvdW50ID4gMCApIHtcblx0XHRcdFx0XHRcdHdoaWxlICggaS0tICkge1xuXHRcdFx0XHRcdFx0XHRpZiAoICEoIHVubWF0Y2hlZFsgaSBdIHx8IHNldE1hdGNoZWRbIGkgXSApICkge1xuXHRcdFx0XHRcdFx0XHRcdHNldE1hdGNoZWRbIGkgXSA9IHBvcC5jYWxsKCByZXN1bHRzICk7XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHQvLyBEaXNjYXJkIGluZGV4IHBsYWNlaG9sZGVyIHZhbHVlcyB0byBnZXQgb25seSBhY3R1YWwgbWF0Y2hlc1xuXHRcdFx0XHRcdHNldE1hdGNoZWQgPSBjb25kZW5zZSggc2V0TWF0Y2hlZCApO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gQWRkIG1hdGNoZXMgdG8gcmVzdWx0c1xuXHRcdFx0XHRwdXNoLmFwcGx5KCByZXN1bHRzLCBzZXRNYXRjaGVkICk7XG5cblx0XHRcdFx0Ly8gU2VlZGxlc3Mgc2V0IG1hdGNoZXMgc3VjY2VlZGluZyBtdWx0aXBsZSBzdWNjZXNzZnVsIG1hdGNoZXJzIHN0aXB1bGF0ZSBzb3J0aW5nXG5cdFx0XHRcdGlmICggb3V0ZXJtb3N0ICYmICFzZWVkICYmIHNldE1hdGNoZWQubGVuZ3RoID4gMCAmJlxuXHRcdFx0XHRcdCggbWF0Y2hlZENvdW50ICsgc2V0TWF0Y2hlcnMubGVuZ3RoICkgPiAxICkge1xuXG5cdFx0XHRcdFx0U2l6emxlLnVuaXF1ZVNvcnQoIHJlc3VsdHMgKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXG5cdFx0XHQvLyBPdmVycmlkZSBtYW5pcHVsYXRpb24gb2YgZ2xvYmFscyBieSBuZXN0ZWQgbWF0Y2hlcnNcblx0XHRcdGlmICggb3V0ZXJtb3N0ICkge1xuXHRcdFx0XHRkaXJydW5zID0gZGlycnVuc1VuaXF1ZTtcblx0XHRcdFx0b3V0ZXJtb3N0Q29udGV4dCA9IGNvbnRleHRCYWNrdXA7XG5cdFx0XHR9XG5cblx0XHRcdHJldHVybiB1bm1hdGNoZWQ7XG5cdFx0fTtcblxuXHRyZXR1cm4gYnlTZXQgP1xuXHRcdG1hcmtGdW5jdGlvbiggc3VwZXJNYXRjaGVyICkgOlxuXHRcdHN1cGVyTWF0Y2hlcjtcbn1cblxuY29tcGlsZSA9IFNpenpsZS5jb21waWxlID0gZnVuY3Rpb24oIHNlbGVjdG9yLCBtYXRjaCAvKiBJbnRlcm5hbCBVc2UgT25seSAqLyApIHtcblx0dmFyIGksXG5cdFx0c2V0TWF0Y2hlcnMgPSBbXSxcblx0XHRlbGVtZW50TWF0Y2hlcnMgPSBbXSxcblx0XHRjYWNoZWQgPSBjb21waWxlckNhY2hlWyBzZWxlY3RvciArIFwiIFwiIF07XG5cblx0aWYgKCAhY2FjaGVkICkge1xuXG5cdFx0Ly8gR2VuZXJhdGUgYSBmdW5jdGlvbiBvZiByZWN1cnNpdmUgZnVuY3Rpb25zIHRoYXQgY2FuIGJlIHVzZWQgdG8gY2hlY2sgZWFjaCBlbGVtZW50XG5cdFx0aWYgKCAhbWF0Y2ggKSB7XG5cdFx0XHRtYXRjaCA9IHRva2VuaXplKCBzZWxlY3RvciApO1xuXHRcdH1cblx0XHRpID0gbWF0Y2gubGVuZ3RoO1xuXHRcdHdoaWxlICggaS0tICkge1xuXHRcdFx0Y2FjaGVkID0gbWF0Y2hlckZyb21Ub2tlbnMoIG1hdGNoWyBpIF0gKTtcblx0XHRcdGlmICggY2FjaGVkWyBleHBhbmRvIF0gKSB7XG5cdFx0XHRcdHNldE1hdGNoZXJzLnB1c2goIGNhY2hlZCApO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0ZWxlbWVudE1hdGNoZXJzLnB1c2goIGNhY2hlZCApO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdC8vIENhY2hlIHRoZSBjb21waWxlZCBmdW5jdGlvblxuXHRcdGNhY2hlZCA9IGNvbXBpbGVyQ2FjaGUoXG5cdFx0XHRzZWxlY3Rvcixcblx0XHRcdG1hdGNoZXJGcm9tR3JvdXBNYXRjaGVycyggZWxlbWVudE1hdGNoZXJzLCBzZXRNYXRjaGVycyApXG5cdFx0KTtcblxuXHRcdC8vIFNhdmUgc2VsZWN0b3IgYW5kIHRva2VuaXphdGlvblxuXHRcdGNhY2hlZC5zZWxlY3RvciA9IHNlbGVjdG9yO1xuXHR9XG5cdHJldHVybiBjYWNoZWQ7XG59O1xuXG4vKipcbiAqIEEgbG93LWxldmVsIHNlbGVjdGlvbiBmdW5jdGlvbiB0aGF0IHdvcmtzIHdpdGggU2l6emxlJ3MgY29tcGlsZWRcbiAqICBzZWxlY3RvciBmdW5jdGlvbnNcbiAqIEBwYXJhbSB7U3RyaW5nfEZ1bmN0aW9ufSBzZWxlY3RvciBBIHNlbGVjdG9yIG9yIGEgcHJlLWNvbXBpbGVkXG4gKiAgc2VsZWN0b3IgZnVuY3Rpb24gYnVpbHQgd2l0aCBTaXp6bGUuY29tcGlsZVxuICogQHBhcmFtIHtFbGVtZW50fSBjb250ZXh0XG4gKiBAcGFyYW0ge0FycmF5fSBbcmVzdWx0c11cbiAqIEBwYXJhbSB7QXJyYXl9IFtzZWVkXSBBIHNldCBvZiBlbGVtZW50cyB0byBtYXRjaCBhZ2FpbnN0XG4gKi9cbnNlbGVjdCA9IFNpenpsZS5zZWxlY3QgPSBmdW5jdGlvbiggc2VsZWN0b3IsIGNvbnRleHQsIHJlc3VsdHMsIHNlZWQgKSB7XG5cdHZhciBpLCB0b2tlbnMsIHRva2VuLCB0eXBlLCBmaW5kLFxuXHRcdGNvbXBpbGVkID0gdHlwZW9mIHNlbGVjdG9yID09PSBcImZ1bmN0aW9uXCIgJiYgc2VsZWN0b3IsXG5cdFx0bWF0Y2ggPSAhc2VlZCAmJiB0b2tlbml6ZSggKCBzZWxlY3RvciA9IGNvbXBpbGVkLnNlbGVjdG9yIHx8IHNlbGVjdG9yICkgKTtcblxuXHRyZXN1bHRzID0gcmVzdWx0cyB8fCBbXTtcblxuXHQvLyBUcnkgdG8gbWluaW1pemUgb3BlcmF0aW9ucyBpZiB0aGVyZSBpcyBvbmx5IG9uZSBzZWxlY3RvciBpbiB0aGUgbGlzdCBhbmQgbm8gc2VlZFxuXHQvLyAodGhlIGxhdHRlciBvZiB3aGljaCBndWFyYW50ZWVzIHVzIGNvbnRleHQpXG5cdGlmICggbWF0Y2gubGVuZ3RoID09PSAxICkge1xuXG5cdFx0Ly8gUmVkdWNlIGNvbnRleHQgaWYgdGhlIGxlYWRpbmcgY29tcG91bmQgc2VsZWN0b3IgaXMgYW4gSURcblx0XHR0b2tlbnMgPSBtYXRjaFsgMCBdID0gbWF0Y2hbIDAgXS5zbGljZSggMCApO1xuXHRcdGlmICggdG9rZW5zLmxlbmd0aCA+IDIgJiYgKCB0b2tlbiA9IHRva2Vuc1sgMCBdICkudHlwZSA9PT0gXCJJRFwiICYmXG5cdFx0XHRjb250ZXh0Lm5vZGVUeXBlID09PSA5ICYmIGRvY3VtZW50SXNIVE1MICYmIEV4cHIucmVsYXRpdmVbIHRva2Vuc1sgMSBdLnR5cGUgXSApIHtcblxuXHRcdFx0Y29udGV4dCA9ICggRXhwci5maW5kWyBcIklEXCIgXSggdG9rZW4ubWF0Y2hlc1sgMCBdXG5cdFx0XHRcdC5yZXBsYWNlKCBydW5lc2NhcGUsIGZ1bmVzY2FwZSApLCBjb250ZXh0ICkgfHwgW10gKVsgMCBdO1xuXHRcdFx0aWYgKCAhY29udGV4dCApIHtcblx0XHRcdFx0cmV0dXJuIHJlc3VsdHM7XG5cblx0XHRcdC8vIFByZWNvbXBpbGVkIG1hdGNoZXJzIHdpbGwgc3RpbGwgdmVyaWZ5IGFuY2VzdHJ5LCBzbyBzdGVwIHVwIGEgbGV2ZWxcblx0XHRcdH0gZWxzZSBpZiAoIGNvbXBpbGVkICkge1xuXHRcdFx0XHRjb250ZXh0ID0gY29udGV4dC5wYXJlbnROb2RlO1xuXHRcdFx0fVxuXG5cdFx0XHRzZWxlY3RvciA9IHNlbGVjdG9yLnNsaWNlKCB0b2tlbnMuc2hpZnQoKS52YWx1ZS5sZW5ndGggKTtcblx0XHR9XG5cblx0XHQvLyBGZXRjaCBhIHNlZWQgc2V0IGZvciByaWdodC10by1sZWZ0IG1hdGNoaW5nXG5cdFx0aSA9IG1hdGNoRXhwclsgXCJuZWVkc0NvbnRleHRcIiBdLnRlc3QoIHNlbGVjdG9yICkgPyAwIDogdG9rZW5zLmxlbmd0aDtcblx0XHR3aGlsZSAoIGktLSApIHtcblx0XHRcdHRva2VuID0gdG9rZW5zWyBpIF07XG5cblx0XHRcdC8vIEFib3J0IGlmIHdlIGhpdCBhIGNvbWJpbmF0b3Jcblx0XHRcdGlmICggRXhwci5yZWxhdGl2ZVsgKCB0eXBlID0gdG9rZW4udHlwZSApIF0gKSB7XG5cdFx0XHRcdGJyZWFrO1xuXHRcdFx0fVxuXHRcdFx0aWYgKCAoIGZpbmQgPSBFeHByLmZpbmRbIHR5cGUgXSApICkge1xuXG5cdFx0XHRcdC8vIFNlYXJjaCwgZXhwYW5kaW5nIGNvbnRleHQgZm9yIGxlYWRpbmcgc2libGluZyBjb21iaW5hdG9yc1xuXHRcdFx0XHRpZiAoICggc2VlZCA9IGZpbmQoXG5cdFx0XHRcdFx0dG9rZW4ubWF0Y2hlc1sgMCBdLnJlcGxhY2UoIHJ1bmVzY2FwZSwgZnVuZXNjYXBlICksXG5cdFx0XHRcdFx0cnNpYmxpbmcudGVzdCggdG9rZW5zWyAwIF0udHlwZSApICYmIHRlc3RDb250ZXh0KCBjb250ZXh0LnBhcmVudE5vZGUgKSB8fFxuXHRcdFx0XHRcdFx0Y29udGV4dFxuXHRcdFx0XHQpICkgKSB7XG5cblx0XHRcdFx0XHQvLyBJZiBzZWVkIGlzIGVtcHR5IG9yIG5vIHRva2VucyByZW1haW4sIHdlIGNhbiByZXR1cm4gZWFybHlcblx0XHRcdFx0XHR0b2tlbnMuc3BsaWNlKCBpLCAxICk7XG5cdFx0XHRcdFx0c2VsZWN0b3IgPSBzZWVkLmxlbmd0aCAmJiB0b1NlbGVjdG9yKCB0b2tlbnMgKTtcblx0XHRcdFx0XHRpZiAoICFzZWxlY3RvciApIHtcblx0XHRcdFx0XHRcdHB1c2guYXBwbHkoIHJlc3VsdHMsIHNlZWQgKTtcblx0XHRcdFx0XHRcdHJldHVybiByZXN1bHRzO1xuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0Ly8gQ29tcGlsZSBhbmQgZXhlY3V0ZSBhIGZpbHRlcmluZyBmdW5jdGlvbiBpZiBvbmUgaXMgbm90IHByb3ZpZGVkXG5cdC8vIFByb3ZpZGUgYG1hdGNoYCB0byBhdm9pZCByZXRva2VuaXphdGlvbiBpZiB3ZSBtb2RpZmllZCB0aGUgc2VsZWN0b3IgYWJvdmVcblx0KCBjb21waWxlZCB8fCBjb21waWxlKCBzZWxlY3RvciwgbWF0Y2ggKSApKFxuXHRcdHNlZWQsXG5cdFx0Y29udGV4dCxcblx0XHQhZG9jdW1lbnRJc0hUTUwsXG5cdFx0cmVzdWx0cyxcblx0XHQhY29udGV4dCB8fCByc2libGluZy50ZXN0KCBzZWxlY3RvciApICYmIHRlc3RDb250ZXh0KCBjb250ZXh0LnBhcmVudE5vZGUgKSB8fCBjb250ZXh0XG5cdCk7XG5cdHJldHVybiByZXN1bHRzO1xufTtcblxuLy8gT25lLXRpbWUgYXNzaWdubWVudHNcblxuLy8gU29ydCBzdGFiaWxpdHlcbnN1cHBvcnQuc29ydFN0YWJsZSA9IGV4cGFuZG8uc3BsaXQoIFwiXCIgKS5zb3J0KCBzb3J0T3JkZXIgKS5qb2luKCBcIlwiICkgPT09IGV4cGFuZG87XG5cbi8vIFN1cHBvcnQ6IENocm9tZSAxNC0zNStcbi8vIEFsd2F5cyBhc3N1bWUgZHVwbGljYXRlcyBpZiB0aGV5IGFyZW4ndCBwYXNzZWQgdG8gdGhlIGNvbXBhcmlzb24gZnVuY3Rpb25cbnN1cHBvcnQuZGV0ZWN0RHVwbGljYXRlcyA9ICEhaGFzRHVwbGljYXRlO1xuXG4vLyBJbml0aWFsaXplIGFnYWluc3QgdGhlIGRlZmF1bHQgZG9jdW1lbnRcbnNldERvY3VtZW50KCk7XG5cbi8vIFN1cHBvcnQ6IFdlYmtpdDw1MzcuMzIgLSBTYWZhcmkgNi4wLjMvQ2hyb21lIDI1IChmaXhlZCBpbiBDaHJvbWUgMjcpXG4vLyBEZXRhY2hlZCBub2RlcyBjb25mb3VuZGluZ2x5IGZvbGxvdyAqZWFjaCBvdGhlcipcbnN1cHBvcnQuc29ydERldGFjaGVkID0gYXNzZXJ0KCBmdW5jdGlvbiggZWwgKSB7XG5cblx0Ly8gU2hvdWxkIHJldHVybiAxLCBidXQgcmV0dXJucyA0IChmb2xsb3dpbmcpXG5cdHJldHVybiBlbC5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbiggZG9jdW1lbnQuY3JlYXRlRWxlbWVudCggXCJmaWVsZHNldFwiICkgKSAmIDE7XG59ICk7XG5cbi8vIFN1cHBvcnQ6IElFPDhcbi8vIFByZXZlbnQgYXR0cmlidXRlL3Byb3BlcnR5IFwiaW50ZXJwb2xhdGlvblwiXG4vLyBodHRwczovL21zZG4ubWljcm9zb2Z0LmNvbS9lbi11cy9saWJyYXJ5L21zNTM2NDI5JTI4VlMuODUlMjkuYXNweFxuaWYgKCAhYXNzZXJ0KCBmdW5jdGlvbiggZWwgKSB7XG5cdGVsLmlubmVySFRNTCA9IFwiPGEgaHJlZj0nIyc+PC9hPlwiO1xuXHRyZXR1cm4gZWwuZmlyc3RDaGlsZC5nZXRBdHRyaWJ1dGUoIFwiaHJlZlwiICkgPT09IFwiI1wiO1xufSApICkge1xuXHRhZGRIYW5kbGUoIFwidHlwZXxocmVmfGhlaWdodHx3aWR0aFwiLCBmdW5jdGlvbiggZWxlbSwgbmFtZSwgaXNYTUwgKSB7XG5cdFx0aWYgKCAhaXNYTUwgKSB7XG5cdFx0XHRyZXR1cm4gZWxlbS5nZXRBdHRyaWJ1dGUoIG5hbWUsIG5hbWUudG9Mb3dlckNhc2UoKSA9PT0gXCJ0eXBlXCIgPyAxIDogMiApO1xuXHRcdH1cblx0fSApO1xufVxuXG4vLyBTdXBwb3J0OiBJRTw5XG4vLyBVc2UgZGVmYXVsdFZhbHVlIGluIHBsYWNlIG9mIGdldEF0dHJpYnV0ZShcInZhbHVlXCIpXG5pZiAoICFzdXBwb3J0LmF0dHJpYnV0ZXMgfHwgIWFzc2VydCggZnVuY3Rpb24oIGVsICkge1xuXHRlbC5pbm5lckhUTUwgPSBcIjxpbnB1dC8+XCI7XG5cdGVsLmZpcnN0Q2hpbGQuc2V0QXR0cmlidXRlKCBcInZhbHVlXCIsIFwiXCIgKTtcblx0cmV0dXJuIGVsLmZpcnN0Q2hpbGQuZ2V0QXR0cmlidXRlKCBcInZhbHVlXCIgKSA9PT0gXCJcIjtcbn0gKSApIHtcblx0YWRkSGFuZGxlKCBcInZhbHVlXCIsIGZ1bmN0aW9uKCBlbGVtLCBfbmFtZSwgaXNYTUwgKSB7XG5cdFx0aWYgKCAhaXNYTUwgJiYgZWxlbS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpID09PSBcImlucHV0XCIgKSB7XG5cdFx0XHRyZXR1cm4gZWxlbS5kZWZhdWx0VmFsdWU7XG5cdFx0fVxuXHR9ICk7XG59XG5cbi8vIFN1cHBvcnQ6IElFPDlcbi8vIFVzZSBnZXRBdHRyaWJ1dGVOb2RlIHRvIGZldGNoIGJvb2xlYW5zIHdoZW4gZ2V0QXR0cmlidXRlIGxpZXNcbmlmICggIWFzc2VydCggZnVuY3Rpb24oIGVsICkge1xuXHRyZXR1cm4gZWwuZ2V0QXR0cmlidXRlKCBcImRpc2FibGVkXCIgKSA9PSBudWxsO1xufSApICkge1xuXHRhZGRIYW5kbGUoIGJvb2xlYW5zLCBmdW5jdGlvbiggZWxlbSwgbmFtZSwgaXNYTUwgKSB7XG5cdFx0dmFyIHZhbDtcblx0XHRpZiAoICFpc1hNTCApIHtcblx0XHRcdHJldHVybiBlbGVtWyBuYW1lIF0gPT09IHRydWUgPyBuYW1lLnRvTG93ZXJDYXNlKCkgOlxuXHRcdFx0XHQoIHZhbCA9IGVsZW0uZ2V0QXR0cmlidXRlTm9kZSggbmFtZSApICkgJiYgdmFsLnNwZWNpZmllZCA/XG5cdFx0XHRcdFx0dmFsLnZhbHVlIDpcblx0XHRcdFx0XHRudWxsO1xuXHRcdH1cblx0fSApO1xufVxuXG5yZXR1cm4gU2l6emxlO1xuXG59ICkoIHdpbmRvdyApO1xuXG5cblxualF1ZXJ5LmZpbmQgPSBTaXp6bGU7XG5qUXVlcnkuZXhwciA9IFNpenpsZS5zZWxlY3RvcnM7XG5cbi8vIERlcHJlY2F0ZWRcbmpRdWVyeS5leHByWyBcIjpcIiBdID0galF1ZXJ5LmV4cHIucHNldWRvcztcbmpRdWVyeS51bmlxdWVTb3J0ID0galF1ZXJ5LnVuaXF1ZSA9IFNpenpsZS51bmlxdWVTb3J0O1xualF1ZXJ5LnRleHQgPSBTaXp6bGUuZ2V0VGV4dDtcbmpRdWVyeS5pc1hNTERvYyA9IFNpenpsZS5pc1hNTDtcbmpRdWVyeS5jb250YWlucyA9IFNpenpsZS5jb250YWlucztcbmpRdWVyeS5lc2NhcGVTZWxlY3RvciA9IFNpenpsZS5lc2NhcGU7XG5cblxuXG5cbnZhciBkaXIgPSBmdW5jdGlvbiggZWxlbSwgZGlyLCB1bnRpbCApIHtcblx0dmFyIG1hdGNoZWQgPSBbXSxcblx0XHR0cnVuY2F0ZSA9IHVudGlsICE9PSB1bmRlZmluZWQ7XG5cblx0d2hpbGUgKCAoIGVsZW0gPSBlbGVtWyBkaXIgXSApICYmIGVsZW0ubm9kZVR5cGUgIT09IDkgKSB7XG5cdFx0aWYgKCBlbGVtLm5vZGVUeXBlID09PSAxICkge1xuXHRcdFx0aWYgKCB0cnVuY2F0ZSAmJiBqUXVlcnkoIGVsZW0gKS5pcyggdW50aWwgKSApIHtcblx0XHRcdFx0YnJlYWs7XG5cdFx0XHR9XG5cdFx0XHRtYXRjaGVkLnB1c2goIGVsZW0gKTtcblx0XHR9XG5cdH1cblx0cmV0dXJuIG1hdGNoZWQ7XG59O1xuXG5cbnZhciBzaWJsaW5ncyA9IGZ1bmN0aW9uKCBuLCBlbGVtICkge1xuXHR2YXIgbWF0Y2hlZCA9IFtdO1xuXG5cdGZvciAoIDsgbjsgbiA9IG4ubmV4dFNpYmxpbmcgKSB7XG5cdFx0aWYgKCBuLm5vZGVUeXBlID09PSAxICYmIG4gIT09IGVsZW0gKSB7XG5cdFx0XHRtYXRjaGVkLnB1c2goIG4gKTtcblx0XHR9XG5cdH1cblxuXHRyZXR1cm4gbWF0Y2hlZDtcbn07XG5cblxudmFyIHJuZWVkc0NvbnRleHQgPSBqUXVlcnkuZXhwci5tYXRjaC5uZWVkc0NvbnRleHQ7XG5cblxuXG5mdW5jdGlvbiBub2RlTmFtZSggZWxlbSwgbmFtZSApIHtcblxuICByZXR1cm4gZWxlbS5ub2RlTmFtZSAmJiBlbGVtLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkgPT09IG5hbWUudG9Mb3dlckNhc2UoKTtcblxufTtcbnZhciByc2luZ2xlVGFnID0gKCAvXjwoW2Etel1bXlxcL1xcMD46XFx4MjBcXHRcXHJcXG5cXGZdKilbXFx4MjBcXHRcXHJcXG5cXGZdKlxcLz8+KD86PFxcL1xcMT58KSQvaSApO1xuXG5cblxuLy8gSW1wbGVtZW50IHRoZSBpZGVudGljYWwgZnVuY3Rpb25hbGl0eSBmb3IgZmlsdGVyIGFuZCBub3RcbmZ1bmN0aW9uIHdpbm5vdyggZWxlbWVudHMsIHF1YWxpZmllciwgbm90ICkge1xuXHRpZiAoIGlzRnVuY3Rpb24oIHF1YWxpZmllciApICkge1xuXHRcdHJldHVybiBqUXVlcnkuZ3JlcCggZWxlbWVudHMsIGZ1bmN0aW9uKCBlbGVtLCBpICkge1xuXHRcdFx0cmV0dXJuICEhcXVhbGlmaWVyLmNhbGwoIGVsZW0sIGksIGVsZW0gKSAhPT0gbm90O1xuXHRcdH0gKTtcblx0fVxuXG5cdC8vIFNpbmdsZSBlbGVtZW50XG5cdGlmICggcXVhbGlmaWVyLm5vZGVUeXBlICkge1xuXHRcdHJldHVybiBqUXVlcnkuZ3JlcCggZWxlbWVudHMsIGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0cmV0dXJuICggZWxlbSA9PT0gcXVhbGlmaWVyICkgIT09IG5vdDtcblx0XHR9ICk7XG5cdH1cblxuXHQvLyBBcnJheWxpa2Ugb2YgZWxlbWVudHMgKGpRdWVyeSwgYXJndW1lbnRzLCBBcnJheSlcblx0aWYgKCB0eXBlb2YgcXVhbGlmaWVyICE9PSBcInN0cmluZ1wiICkge1xuXHRcdHJldHVybiBqUXVlcnkuZ3JlcCggZWxlbWVudHMsIGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0cmV0dXJuICggaW5kZXhPZi5jYWxsKCBxdWFsaWZpZXIsIGVsZW0gKSA+IC0xICkgIT09IG5vdDtcblx0XHR9ICk7XG5cdH1cblxuXHQvLyBGaWx0ZXJlZCBkaXJlY3RseSBmb3IgYm90aCBzaW1wbGUgYW5kIGNvbXBsZXggc2VsZWN0b3JzXG5cdHJldHVybiBqUXVlcnkuZmlsdGVyKCBxdWFsaWZpZXIsIGVsZW1lbnRzLCBub3QgKTtcbn1cblxualF1ZXJ5LmZpbHRlciA9IGZ1bmN0aW9uKCBleHByLCBlbGVtcywgbm90ICkge1xuXHR2YXIgZWxlbSA9IGVsZW1zWyAwIF07XG5cblx0aWYgKCBub3QgKSB7XG5cdFx0ZXhwciA9IFwiOm5vdChcIiArIGV4cHIgKyBcIilcIjtcblx0fVxuXG5cdGlmICggZWxlbXMubGVuZ3RoID09PSAxICYmIGVsZW0ubm9kZVR5cGUgPT09IDEgKSB7XG5cdFx0cmV0dXJuIGpRdWVyeS5maW5kLm1hdGNoZXNTZWxlY3RvciggZWxlbSwgZXhwciApID8gWyBlbGVtIF0gOiBbXTtcblx0fVxuXG5cdHJldHVybiBqUXVlcnkuZmluZC5tYXRjaGVzKCBleHByLCBqUXVlcnkuZ3JlcCggZWxlbXMsIGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdHJldHVybiBlbGVtLm5vZGVUeXBlID09PSAxO1xuXHR9ICkgKTtcbn07XG5cbmpRdWVyeS5mbi5leHRlbmQoIHtcblx0ZmluZDogZnVuY3Rpb24oIHNlbGVjdG9yICkge1xuXHRcdHZhciBpLCByZXQsXG5cdFx0XHRsZW4gPSB0aGlzLmxlbmd0aCxcblx0XHRcdHNlbGYgPSB0aGlzO1xuXG5cdFx0aWYgKCB0eXBlb2Ygc2VsZWN0b3IgIT09IFwic3RyaW5nXCIgKSB7XG5cdFx0XHRyZXR1cm4gdGhpcy5wdXNoU3RhY2soIGpRdWVyeSggc2VsZWN0b3IgKS5maWx0ZXIoIGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRmb3IgKCBpID0gMDsgaSA8IGxlbjsgaSsrICkge1xuXHRcdFx0XHRcdGlmICggalF1ZXJ5LmNvbnRhaW5zKCBzZWxmWyBpIF0sIHRoaXMgKSApIHtcblx0XHRcdFx0XHRcdHJldHVybiB0cnVlO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fSApICk7XG5cdFx0fVxuXG5cdFx0cmV0ID0gdGhpcy5wdXNoU3RhY2soIFtdICk7XG5cblx0XHRmb3IgKCBpID0gMDsgaSA8IGxlbjsgaSsrICkge1xuXHRcdFx0alF1ZXJ5LmZpbmQoIHNlbGVjdG9yLCBzZWxmWyBpIF0sIHJldCApO1xuXHRcdH1cblxuXHRcdHJldHVybiBsZW4gPiAxID8galF1ZXJ5LnVuaXF1ZVNvcnQoIHJldCApIDogcmV0O1xuXHR9LFxuXHRmaWx0ZXI6IGZ1bmN0aW9uKCBzZWxlY3RvciApIHtcblx0XHRyZXR1cm4gdGhpcy5wdXNoU3RhY2soIHdpbm5vdyggdGhpcywgc2VsZWN0b3IgfHwgW10sIGZhbHNlICkgKTtcblx0fSxcblx0bm90OiBmdW5jdGlvbiggc2VsZWN0b3IgKSB7XG5cdFx0cmV0dXJuIHRoaXMucHVzaFN0YWNrKCB3aW5ub3coIHRoaXMsIHNlbGVjdG9yIHx8IFtdLCB0cnVlICkgKTtcblx0fSxcblx0aXM6IGZ1bmN0aW9uKCBzZWxlY3RvciApIHtcblx0XHRyZXR1cm4gISF3aW5ub3coXG5cdFx0XHR0aGlzLFxuXG5cdFx0XHQvLyBJZiB0aGlzIGlzIGEgcG9zaXRpb25hbC9yZWxhdGl2ZSBzZWxlY3RvciwgY2hlY2sgbWVtYmVyc2hpcCBpbiB0aGUgcmV0dXJuZWQgc2V0XG5cdFx0XHQvLyBzbyAkKFwicDpmaXJzdFwiKS5pcyhcInA6bGFzdFwiKSB3b24ndCByZXR1cm4gdHJ1ZSBmb3IgYSBkb2Mgd2l0aCB0d28gXCJwXCIuXG5cdFx0XHR0eXBlb2Ygc2VsZWN0b3IgPT09IFwic3RyaW5nXCIgJiYgcm5lZWRzQ29udGV4dC50ZXN0KCBzZWxlY3RvciApID9cblx0XHRcdFx0alF1ZXJ5KCBzZWxlY3RvciApIDpcblx0XHRcdFx0c2VsZWN0b3IgfHwgW10sXG5cdFx0XHRmYWxzZVxuXHRcdCkubGVuZ3RoO1xuXHR9XG59ICk7XG5cblxuLy8gSW5pdGlhbGl6ZSBhIGpRdWVyeSBvYmplY3RcblxuXG4vLyBBIGNlbnRyYWwgcmVmZXJlbmNlIHRvIHRoZSByb290IGpRdWVyeShkb2N1bWVudClcbnZhciByb290alF1ZXJ5LFxuXG5cdC8vIEEgc2ltcGxlIHdheSB0byBjaGVjayBmb3IgSFRNTCBzdHJpbmdzXG5cdC8vIFByaW9yaXRpemUgI2lkIG92ZXIgPHRhZz4gdG8gYXZvaWQgWFNTIHZpYSBsb2NhdGlvbi5oYXNoICgjOTUyMSlcblx0Ly8gU3RyaWN0IEhUTUwgcmVjb2duaXRpb24gKCMxMTI5MDogbXVzdCBzdGFydCB3aXRoIDwpXG5cdC8vIFNob3J0Y3V0IHNpbXBsZSAjaWQgY2FzZSBmb3Igc3BlZWRcblx0cnF1aWNrRXhwciA9IC9eKD86XFxzKig8W1xcd1xcV10rPilbXj5dKnwjKFtcXHctXSspKSQvLFxuXG5cdGluaXQgPSBqUXVlcnkuZm4uaW5pdCA9IGZ1bmN0aW9uKCBzZWxlY3RvciwgY29udGV4dCwgcm9vdCApIHtcblx0XHR2YXIgbWF0Y2gsIGVsZW07XG5cblx0XHQvLyBIQU5ETEU6ICQoXCJcIiksICQobnVsbCksICQodW5kZWZpbmVkKSwgJChmYWxzZSlcblx0XHRpZiAoICFzZWxlY3RvciApIHtcblx0XHRcdHJldHVybiB0aGlzO1xuXHRcdH1cblxuXHRcdC8vIE1ldGhvZCBpbml0KCkgYWNjZXB0cyBhbiBhbHRlcm5hdGUgcm9vdGpRdWVyeVxuXHRcdC8vIHNvIG1pZ3JhdGUgY2FuIHN1cHBvcnQgalF1ZXJ5LnN1YiAoZ2gtMjEwMSlcblx0XHRyb290ID0gcm9vdCB8fCByb290alF1ZXJ5O1xuXG5cdFx0Ly8gSGFuZGxlIEhUTUwgc3RyaW5nc1xuXHRcdGlmICggdHlwZW9mIHNlbGVjdG9yID09PSBcInN0cmluZ1wiICkge1xuXHRcdFx0aWYgKCBzZWxlY3RvclsgMCBdID09PSBcIjxcIiAmJlxuXHRcdFx0XHRzZWxlY3Rvclsgc2VsZWN0b3IubGVuZ3RoIC0gMSBdID09PSBcIj5cIiAmJlxuXHRcdFx0XHRzZWxlY3Rvci5sZW5ndGggPj0gMyApIHtcblxuXHRcdFx0XHQvLyBBc3N1bWUgdGhhdCBzdHJpbmdzIHRoYXQgc3RhcnQgYW5kIGVuZCB3aXRoIDw+IGFyZSBIVE1MIGFuZCBza2lwIHRoZSByZWdleCBjaGVja1xuXHRcdFx0XHRtYXRjaCA9IFsgbnVsbCwgc2VsZWN0b3IsIG51bGwgXTtcblxuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0bWF0Y2ggPSBycXVpY2tFeHByLmV4ZWMoIHNlbGVjdG9yICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIE1hdGNoIGh0bWwgb3IgbWFrZSBzdXJlIG5vIGNvbnRleHQgaXMgc3BlY2lmaWVkIGZvciAjaWRcblx0XHRcdGlmICggbWF0Y2ggJiYgKCBtYXRjaFsgMSBdIHx8ICFjb250ZXh0ICkgKSB7XG5cblx0XHRcdFx0Ly8gSEFORExFOiAkKGh0bWwpIC0+ICQoYXJyYXkpXG5cdFx0XHRcdGlmICggbWF0Y2hbIDEgXSApIHtcblx0XHRcdFx0XHRjb250ZXh0ID0gY29udGV4dCBpbnN0YW5jZW9mIGpRdWVyeSA/IGNvbnRleHRbIDAgXSA6IGNvbnRleHQ7XG5cblx0XHRcdFx0XHQvLyBPcHRpb24gdG8gcnVuIHNjcmlwdHMgaXMgdHJ1ZSBmb3IgYmFjay1jb21wYXRcblx0XHRcdFx0XHQvLyBJbnRlbnRpb25hbGx5IGxldCB0aGUgZXJyb3IgYmUgdGhyb3duIGlmIHBhcnNlSFRNTCBpcyBub3QgcHJlc2VudFxuXHRcdFx0XHRcdGpRdWVyeS5tZXJnZSggdGhpcywgalF1ZXJ5LnBhcnNlSFRNTChcblx0XHRcdFx0XHRcdG1hdGNoWyAxIF0sXG5cdFx0XHRcdFx0XHRjb250ZXh0ICYmIGNvbnRleHQubm9kZVR5cGUgPyBjb250ZXh0Lm93bmVyRG9jdW1lbnQgfHwgY29udGV4dCA6IGRvY3VtZW50LFxuXHRcdFx0XHRcdFx0dHJ1ZVxuXHRcdFx0XHRcdCkgKTtcblxuXHRcdFx0XHRcdC8vIEhBTkRMRTogJChodG1sLCBwcm9wcylcblx0XHRcdFx0XHRpZiAoIHJzaW5nbGVUYWcudGVzdCggbWF0Y2hbIDEgXSApICYmIGpRdWVyeS5pc1BsYWluT2JqZWN0KCBjb250ZXh0ICkgKSB7XG5cdFx0XHRcdFx0XHRmb3IgKCBtYXRjaCBpbiBjb250ZXh0ICkge1xuXG5cdFx0XHRcdFx0XHRcdC8vIFByb3BlcnRpZXMgb2YgY29udGV4dCBhcmUgY2FsbGVkIGFzIG1ldGhvZHMgaWYgcG9zc2libGVcblx0XHRcdFx0XHRcdFx0aWYgKCBpc0Z1bmN0aW9uKCB0aGlzWyBtYXRjaCBdICkgKSB7XG5cdFx0XHRcdFx0XHRcdFx0dGhpc1sgbWF0Y2ggXSggY29udGV4dFsgbWF0Y2ggXSApO1xuXG5cdFx0XHRcdFx0XHRcdC8vIC4uLmFuZCBvdGhlcndpc2Ugc2V0IGFzIGF0dHJpYnV0ZXNcblx0XHRcdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdFx0XHR0aGlzLmF0dHIoIG1hdGNoLCBjb250ZXh0WyBtYXRjaCBdICk7XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRyZXR1cm4gdGhpcztcblxuXHRcdFx0XHQvLyBIQU5ETEU6ICQoI2lkKVxuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdGVsZW0gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCggbWF0Y2hbIDIgXSApO1xuXG5cdFx0XHRcdFx0aWYgKCBlbGVtICkge1xuXG5cdFx0XHRcdFx0XHQvLyBJbmplY3QgdGhlIGVsZW1lbnQgZGlyZWN0bHkgaW50byB0aGUgalF1ZXJ5IG9iamVjdFxuXHRcdFx0XHRcdFx0dGhpc1sgMCBdID0gZWxlbTtcblx0XHRcdFx0XHRcdHRoaXMubGVuZ3RoID0gMTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0cmV0dXJuIHRoaXM7XG5cdFx0XHRcdH1cblxuXHRcdFx0Ly8gSEFORExFOiAkKGV4cHIsICQoLi4uKSlcblx0XHRcdH0gZWxzZSBpZiAoICFjb250ZXh0IHx8IGNvbnRleHQuanF1ZXJ5ICkge1xuXHRcdFx0XHRyZXR1cm4gKCBjb250ZXh0IHx8IHJvb3QgKS5maW5kKCBzZWxlY3RvciApO1xuXG5cdFx0XHQvLyBIQU5ETEU6ICQoZXhwciwgY29udGV4dClcblx0XHRcdC8vICh3aGljaCBpcyBqdXN0IGVxdWl2YWxlbnQgdG86ICQoY29udGV4dCkuZmluZChleHByKVxuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0cmV0dXJuIHRoaXMuY29uc3RydWN0b3IoIGNvbnRleHQgKS5maW5kKCBzZWxlY3RvciApO1xuXHRcdFx0fVxuXG5cdFx0Ly8gSEFORExFOiAkKERPTUVsZW1lbnQpXG5cdFx0fSBlbHNlIGlmICggc2VsZWN0b3Iubm9kZVR5cGUgKSB7XG5cdFx0XHR0aGlzWyAwIF0gPSBzZWxlY3Rvcjtcblx0XHRcdHRoaXMubGVuZ3RoID0gMTtcblx0XHRcdHJldHVybiB0aGlzO1xuXG5cdFx0Ly8gSEFORExFOiAkKGZ1bmN0aW9uKVxuXHRcdC8vIFNob3J0Y3V0IGZvciBkb2N1bWVudCByZWFkeVxuXHRcdH0gZWxzZSBpZiAoIGlzRnVuY3Rpb24oIHNlbGVjdG9yICkgKSB7XG5cdFx0XHRyZXR1cm4gcm9vdC5yZWFkeSAhPT0gdW5kZWZpbmVkID9cblx0XHRcdFx0cm9vdC5yZWFkeSggc2VsZWN0b3IgKSA6XG5cblx0XHRcdFx0Ly8gRXhlY3V0ZSBpbW1lZGlhdGVseSBpZiByZWFkeSBpcyBub3QgcHJlc2VudFxuXHRcdFx0XHRzZWxlY3RvciggalF1ZXJ5ICk7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIGpRdWVyeS5tYWtlQXJyYXkoIHNlbGVjdG9yLCB0aGlzICk7XG5cdH07XG5cbi8vIEdpdmUgdGhlIGluaXQgZnVuY3Rpb24gdGhlIGpRdWVyeSBwcm90b3R5cGUgZm9yIGxhdGVyIGluc3RhbnRpYXRpb25cbmluaXQucHJvdG90eXBlID0galF1ZXJ5LmZuO1xuXG4vLyBJbml0aWFsaXplIGNlbnRyYWwgcmVmZXJlbmNlXG5yb290alF1ZXJ5ID0galF1ZXJ5KCBkb2N1bWVudCApO1xuXG5cbnZhciBycGFyZW50c3ByZXYgPSAvXig/OnBhcmVudHN8cHJldig/OlVudGlsfEFsbCkpLyxcblxuXHQvLyBNZXRob2RzIGd1YXJhbnRlZWQgdG8gcHJvZHVjZSBhIHVuaXF1ZSBzZXQgd2hlbiBzdGFydGluZyBmcm9tIGEgdW5pcXVlIHNldFxuXHRndWFyYW50ZWVkVW5pcXVlID0ge1xuXHRcdGNoaWxkcmVuOiB0cnVlLFxuXHRcdGNvbnRlbnRzOiB0cnVlLFxuXHRcdG5leHQ6IHRydWUsXG5cdFx0cHJldjogdHJ1ZVxuXHR9O1xuXG5qUXVlcnkuZm4uZXh0ZW5kKCB7XG5cdGhhczogZnVuY3Rpb24oIHRhcmdldCApIHtcblx0XHR2YXIgdGFyZ2V0cyA9IGpRdWVyeSggdGFyZ2V0LCB0aGlzICksXG5cdFx0XHRsID0gdGFyZ2V0cy5sZW5ndGg7XG5cblx0XHRyZXR1cm4gdGhpcy5maWx0ZXIoIGZ1bmN0aW9uKCkge1xuXHRcdFx0dmFyIGkgPSAwO1xuXHRcdFx0Zm9yICggOyBpIDwgbDsgaSsrICkge1xuXHRcdFx0XHRpZiAoIGpRdWVyeS5jb250YWlucyggdGhpcywgdGFyZ2V0c1sgaSBdICkgKSB7XG5cdFx0XHRcdFx0cmV0dXJuIHRydWU7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9ICk7XG5cdH0sXG5cblx0Y2xvc2VzdDogZnVuY3Rpb24oIHNlbGVjdG9ycywgY29udGV4dCApIHtcblx0XHR2YXIgY3VyLFxuXHRcdFx0aSA9IDAsXG5cdFx0XHRsID0gdGhpcy5sZW5ndGgsXG5cdFx0XHRtYXRjaGVkID0gW10sXG5cdFx0XHR0YXJnZXRzID0gdHlwZW9mIHNlbGVjdG9ycyAhPT0gXCJzdHJpbmdcIiAmJiBqUXVlcnkoIHNlbGVjdG9ycyApO1xuXG5cdFx0Ly8gUG9zaXRpb25hbCBzZWxlY3RvcnMgbmV2ZXIgbWF0Y2gsIHNpbmNlIHRoZXJlJ3Mgbm8gX3NlbGVjdGlvbl8gY29udGV4dFxuXHRcdGlmICggIXJuZWVkc0NvbnRleHQudGVzdCggc2VsZWN0b3JzICkgKSB7XG5cdFx0XHRmb3IgKCA7IGkgPCBsOyBpKysgKSB7XG5cdFx0XHRcdGZvciAoIGN1ciA9IHRoaXNbIGkgXTsgY3VyICYmIGN1ciAhPT0gY29udGV4dDsgY3VyID0gY3VyLnBhcmVudE5vZGUgKSB7XG5cblx0XHRcdFx0XHQvLyBBbHdheXMgc2tpcCBkb2N1bWVudCBmcmFnbWVudHNcblx0XHRcdFx0XHRpZiAoIGN1ci5ub2RlVHlwZSA8IDExICYmICggdGFyZ2V0cyA/XG5cdFx0XHRcdFx0XHR0YXJnZXRzLmluZGV4KCBjdXIgKSA+IC0xIDpcblxuXHRcdFx0XHRcdFx0Ly8gRG9uJ3QgcGFzcyBub24tZWxlbWVudHMgdG8gU2l6emxlXG5cdFx0XHRcdFx0XHRjdXIubm9kZVR5cGUgPT09IDEgJiZcblx0XHRcdFx0XHRcdFx0alF1ZXJ5LmZpbmQubWF0Y2hlc1NlbGVjdG9yKCBjdXIsIHNlbGVjdG9ycyApICkgKSB7XG5cblx0XHRcdFx0XHRcdG1hdGNoZWQucHVzaCggY3VyICk7XG5cdFx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cblx0XHRyZXR1cm4gdGhpcy5wdXNoU3RhY2soIG1hdGNoZWQubGVuZ3RoID4gMSA/IGpRdWVyeS51bmlxdWVTb3J0KCBtYXRjaGVkICkgOiBtYXRjaGVkICk7XG5cdH0sXG5cblx0Ly8gRGV0ZXJtaW5lIHRoZSBwb3NpdGlvbiBvZiBhbiBlbGVtZW50IHdpdGhpbiB0aGUgc2V0XG5cdGluZGV4OiBmdW5jdGlvbiggZWxlbSApIHtcblxuXHRcdC8vIE5vIGFyZ3VtZW50LCByZXR1cm4gaW5kZXggaW4gcGFyZW50XG5cdFx0aWYgKCAhZWxlbSApIHtcblx0XHRcdHJldHVybiAoIHRoaXNbIDAgXSAmJiB0aGlzWyAwIF0ucGFyZW50Tm9kZSApID8gdGhpcy5maXJzdCgpLnByZXZBbGwoKS5sZW5ndGggOiAtMTtcblx0XHR9XG5cblx0XHQvLyBJbmRleCBpbiBzZWxlY3RvclxuXHRcdGlmICggdHlwZW9mIGVsZW0gPT09IFwic3RyaW5nXCIgKSB7XG5cdFx0XHRyZXR1cm4gaW5kZXhPZi5jYWxsKCBqUXVlcnkoIGVsZW0gKSwgdGhpc1sgMCBdICk7XG5cdFx0fVxuXG5cdFx0Ly8gTG9jYXRlIHRoZSBwb3NpdGlvbiBvZiB0aGUgZGVzaXJlZCBlbGVtZW50XG5cdFx0cmV0dXJuIGluZGV4T2YuY2FsbCggdGhpcyxcblxuXHRcdFx0Ly8gSWYgaXQgcmVjZWl2ZXMgYSBqUXVlcnkgb2JqZWN0LCB0aGUgZmlyc3QgZWxlbWVudCBpcyB1c2VkXG5cdFx0XHRlbGVtLmpxdWVyeSA/IGVsZW1bIDAgXSA6IGVsZW1cblx0XHQpO1xuXHR9LFxuXG5cdGFkZDogZnVuY3Rpb24oIHNlbGVjdG9yLCBjb250ZXh0ICkge1xuXHRcdHJldHVybiB0aGlzLnB1c2hTdGFjayhcblx0XHRcdGpRdWVyeS51bmlxdWVTb3J0KFxuXHRcdFx0XHRqUXVlcnkubWVyZ2UoIHRoaXMuZ2V0KCksIGpRdWVyeSggc2VsZWN0b3IsIGNvbnRleHQgKSApXG5cdFx0XHQpXG5cdFx0KTtcblx0fSxcblxuXHRhZGRCYWNrOiBmdW5jdGlvbiggc2VsZWN0b3IgKSB7XG5cdFx0cmV0dXJuIHRoaXMuYWRkKCBzZWxlY3RvciA9PSBudWxsID9cblx0XHRcdHRoaXMucHJldk9iamVjdCA6IHRoaXMucHJldk9iamVjdC5maWx0ZXIoIHNlbGVjdG9yIClcblx0XHQpO1xuXHR9XG59ICk7XG5cbmZ1bmN0aW9uIHNpYmxpbmcoIGN1ciwgZGlyICkge1xuXHR3aGlsZSAoICggY3VyID0gY3VyWyBkaXIgXSApICYmIGN1ci5ub2RlVHlwZSAhPT0gMSApIHt9XG5cdHJldHVybiBjdXI7XG59XG5cbmpRdWVyeS5lYWNoKCB7XG5cdHBhcmVudDogZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0dmFyIHBhcmVudCA9IGVsZW0ucGFyZW50Tm9kZTtcblx0XHRyZXR1cm4gcGFyZW50ICYmIHBhcmVudC5ub2RlVHlwZSAhPT0gMTEgPyBwYXJlbnQgOiBudWxsO1xuXHR9LFxuXHRwYXJlbnRzOiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRyZXR1cm4gZGlyKCBlbGVtLCBcInBhcmVudE5vZGVcIiApO1xuXHR9LFxuXHRwYXJlbnRzVW50aWw6IGZ1bmN0aW9uKCBlbGVtLCBfaSwgdW50aWwgKSB7XG5cdFx0cmV0dXJuIGRpciggZWxlbSwgXCJwYXJlbnROb2RlXCIsIHVudGlsICk7XG5cdH0sXG5cdG5leHQ6IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdHJldHVybiBzaWJsaW5nKCBlbGVtLCBcIm5leHRTaWJsaW5nXCIgKTtcblx0fSxcblx0cHJldjogZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0cmV0dXJuIHNpYmxpbmcoIGVsZW0sIFwicHJldmlvdXNTaWJsaW5nXCIgKTtcblx0fSxcblx0bmV4dEFsbDogZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0cmV0dXJuIGRpciggZWxlbSwgXCJuZXh0U2libGluZ1wiICk7XG5cdH0sXG5cdHByZXZBbGw6IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdHJldHVybiBkaXIoIGVsZW0sIFwicHJldmlvdXNTaWJsaW5nXCIgKTtcblx0fSxcblx0bmV4dFVudGlsOiBmdW5jdGlvbiggZWxlbSwgX2ksIHVudGlsICkge1xuXHRcdHJldHVybiBkaXIoIGVsZW0sIFwibmV4dFNpYmxpbmdcIiwgdW50aWwgKTtcblx0fSxcblx0cHJldlVudGlsOiBmdW5jdGlvbiggZWxlbSwgX2ksIHVudGlsICkge1xuXHRcdHJldHVybiBkaXIoIGVsZW0sIFwicHJldmlvdXNTaWJsaW5nXCIsIHVudGlsICk7XG5cdH0sXG5cdHNpYmxpbmdzOiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRyZXR1cm4gc2libGluZ3MoICggZWxlbS5wYXJlbnROb2RlIHx8IHt9ICkuZmlyc3RDaGlsZCwgZWxlbSApO1xuXHR9LFxuXHRjaGlsZHJlbjogZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0cmV0dXJuIHNpYmxpbmdzKCBlbGVtLmZpcnN0Q2hpbGQgKTtcblx0fSxcblx0Y29udGVudHM6IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdGlmICggZWxlbS5jb250ZW50RG9jdW1lbnQgIT0gbnVsbCAmJlxuXG5cdFx0XHQvLyBTdXBwb3J0OiBJRSAxMStcblx0XHRcdC8vIDxvYmplY3Q+IGVsZW1lbnRzIHdpdGggbm8gYGRhdGFgIGF0dHJpYnV0ZSBoYXMgYW4gb2JqZWN0XG5cdFx0XHQvLyBgY29udGVudERvY3VtZW50YCB3aXRoIGEgYG51bGxgIHByb3RvdHlwZS5cblx0XHRcdGdldFByb3RvKCBlbGVtLmNvbnRlbnREb2N1bWVudCApICkge1xuXG5cdFx0XHRyZXR1cm4gZWxlbS5jb250ZW50RG9jdW1lbnQ7XG5cdFx0fVxuXG5cdFx0Ly8gU3VwcG9ydDogSUUgOSAtIDExIG9ubHksIGlPUyA3IG9ubHksIEFuZHJvaWQgQnJvd3NlciA8PTQuMyBvbmx5XG5cdFx0Ly8gVHJlYXQgdGhlIHRlbXBsYXRlIGVsZW1lbnQgYXMgYSByZWd1bGFyIG9uZSBpbiBicm93c2VycyB0aGF0XG5cdFx0Ly8gZG9uJ3Qgc3VwcG9ydCBpdC5cblx0XHRpZiAoIG5vZGVOYW1lKCBlbGVtLCBcInRlbXBsYXRlXCIgKSApIHtcblx0XHRcdGVsZW0gPSBlbGVtLmNvbnRlbnQgfHwgZWxlbTtcblx0XHR9XG5cblx0XHRyZXR1cm4galF1ZXJ5Lm1lcmdlKCBbXSwgZWxlbS5jaGlsZE5vZGVzICk7XG5cdH1cbn0sIGZ1bmN0aW9uKCBuYW1lLCBmbiApIHtcblx0alF1ZXJ5LmZuWyBuYW1lIF0gPSBmdW5jdGlvbiggdW50aWwsIHNlbGVjdG9yICkge1xuXHRcdHZhciBtYXRjaGVkID0galF1ZXJ5Lm1hcCggdGhpcywgZm4sIHVudGlsICk7XG5cblx0XHRpZiAoIG5hbWUuc2xpY2UoIC01ICkgIT09IFwiVW50aWxcIiApIHtcblx0XHRcdHNlbGVjdG9yID0gdW50aWw7XG5cdFx0fVxuXG5cdFx0aWYgKCBzZWxlY3RvciAmJiB0eXBlb2Ygc2VsZWN0b3IgPT09IFwic3RyaW5nXCIgKSB7XG5cdFx0XHRtYXRjaGVkID0galF1ZXJ5LmZpbHRlciggc2VsZWN0b3IsIG1hdGNoZWQgKTtcblx0XHR9XG5cblx0XHRpZiAoIHRoaXMubGVuZ3RoID4gMSApIHtcblxuXHRcdFx0Ly8gUmVtb3ZlIGR1cGxpY2F0ZXNcblx0XHRcdGlmICggIWd1YXJhbnRlZWRVbmlxdWVbIG5hbWUgXSApIHtcblx0XHRcdFx0alF1ZXJ5LnVuaXF1ZVNvcnQoIG1hdGNoZWQgKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gUmV2ZXJzZSBvcmRlciBmb3IgcGFyZW50cyogYW5kIHByZXYtZGVyaXZhdGl2ZXNcblx0XHRcdGlmICggcnBhcmVudHNwcmV2LnRlc3QoIG5hbWUgKSApIHtcblx0XHRcdFx0bWF0Y2hlZC5yZXZlcnNlKCk7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHRoaXMucHVzaFN0YWNrKCBtYXRjaGVkICk7XG5cdH07XG59ICk7XG52YXIgcm5vdGh0bWx3aGl0ZSA9ICggL1teXFx4MjBcXHRcXHJcXG5cXGZdKy9nICk7XG5cblxuXG4vLyBDb252ZXJ0IFN0cmluZy1mb3JtYXR0ZWQgb3B0aW9ucyBpbnRvIE9iamVjdC1mb3JtYXR0ZWQgb25lc1xuZnVuY3Rpb24gY3JlYXRlT3B0aW9ucyggb3B0aW9ucyApIHtcblx0dmFyIG9iamVjdCA9IHt9O1xuXHRqUXVlcnkuZWFjaCggb3B0aW9ucy5tYXRjaCggcm5vdGh0bWx3aGl0ZSApIHx8IFtdLCBmdW5jdGlvbiggXywgZmxhZyApIHtcblx0XHRvYmplY3RbIGZsYWcgXSA9IHRydWU7XG5cdH0gKTtcblx0cmV0dXJuIG9iamVjdDtcbn1cblxuLypcbiAqIENyZWF0ZSBhIGNhbGxiYWNrIGxpc3QgdXNpbmcgdGhlIGZvbGxvd2luZyBwYXJhbWV0ZXJzOlxuICpcbiAqXHRvcHRpb25zOiBhbiBvcHRpb25hbCBsaXN0IG9mIHNwYWNlLXNlcGFyYXRlZCBvcHRpb25zIHRoYXQgd2lsbCBjaGFuZ2UgaG93XG4gKlx0XHRcdHRoZSBjYWxsYmFjayBsaXN0IGJlaGF2ZXMgb3IgYSBtb3JlIHRyYWRpdGlvbmFsIG9wdGlvbiBvYmplY3RcbiAqXG4gKiBCeSBkZWZhdWx0IGEgY2FsbGJhY2sgbGlzdCB3aWxsIGFjdCBsaWtlIGFuIGV2ZW50IGNhbGxiYWNrIGxpc3QgYW5kIGNhbiBiZVxuICogXCJmaXJlZFwiIG11bHRpcGxlIHRpbWVzLlxuICpcbiAqIFBvc3NpYmxlIG9wdGlvbnM6XG4gKlxuICpcdG9uY2U6XHRcdFx0d2lsbCBlbnN1cmUgdGhlIGNhbGxiYWNrIGxpc3QgY2FuIG9ubHkgYmUgZmlyZWQgb25jZSAobGlrZSBhIERlZmVycmVkKVxuICpcbiAqXHRtZW1vcnk6XHRcdFx0d2lsbCBrZWVwIHRyYWNrIG9mIHByZXZpb3VzIHZhbHVlcyBhbmQgd2lsbCBjYWxsIGFueSBjYWxsYmFjayBhZGRlZFxuICpcdFx0XHRcdFx0YWZ0ZXIgdGhlIGxpc3QgaGFzIGJlZW4gZmlyZWQgcmlnaHQgYXdheSB3aXRoIHRoZSBsYXRlc3QgXCJtZW1vcml6ZWRcIlxuICpcdFx0XHRcdFx0dmFsdWVzIChsaWtlIGEgRGVmZXJyZWQpXG4gKlxuICpcdHVuaXF1ZTpcdFx0XHR3aWxsIGVuc3VyZSBhIGNhbGxiYWNrIGNhbiBvbmx5IGJlIGFkZGVkIG9uY2UgKG5vIGR1cGxpY2F0ZSBpbiB0aGUgbGlzdClcbiAqXG4gKlx0c3RvcE9uRmFsc2U6XHRpbnRlcnJ1cHQgY2FsbGluZ3Mgd2hlbiBhIGNhbGxiYWNrIHJldHVybnMgZmFsc2VcbiAqXG4gKi9cbmpRdWVyeS5DYWxsYmFja3MgPSBmdW5jdGlvbiggb3B0aW9ucyApIHtcblxuXHQvLyBDb252ZXJ0IG9wdGlvbnMgZnJvbSBTdHJpbmctZm9ybWF0dGVkIHRvIE9iamVjdC1mb3JtYXR0ZWQgaWYgbmVlZGVkXG5cdC8vICh3ZSBjaGVjayBpbiBjYWNoZSBmaXJzdClcblx0b3B0aW9ucyA9IHR5cGVvZiBvcHRpb25zID09PSBcInN0cmluZ1wiID9cblx0XHRjcmVhdGVPcHRpb25zKCBvcHRpb25zICkgOlxuXHRcdGpRdWVyeS5leHRlbmQoIHt9LCBvcHRpb25zICk7XG5cblx0dmFyIC8vIEZsYWcgdG8ga25vdyBpZiBsaXN0IGlzIGN1cnJlbnRseSBmaXJpbmdcblx0XHRmaXJpbmcsXG5cblx0XHQvLyBMYXN0IGZpcmUgdmFsdWUgZm9yIG5vbi1mb3JnZXR0YWJsZSBsaXN0c1xuXHRcdG1lbW9yeSxcblxuXHRcdC8vIEZsYWcgdG8ga25vdyBpZiBsaXN0IHdhcyBhbHJlYWR5IGZpcmVkXG5cdFx0ZmlyZWQsXG5cblx0XHQvLyBGbGFnIHRvIHByZXZlbnQgZmlyaW5nXG5cdFx0bG9ja2VkLFxuXG5cdFx0Ly8gQWN0dWFsIGNhbGxiYWNrIGxpc3Rcblx0XHRsaXN0ID0gW10sXG5cblx0XHQvLyBRdWV1ZSBvZiBleGVjdXRpb24gZGF0YSBmb3IgcmVwZWF0YWJsZSBsaXN0c1xuXHRcdHF1ZXVlID0gW10sXG5cblx0XHQvLyBJbmRleCBvZiBjdXJyZW50bHkgZmlyaW5nIGNhbGxiYWNrIChtb2RpZmllZCBieSBhZGQvcmVtb3ZlIGFzIG5lZWRlZClcblx0XHRmaXJpbmdJbmRleCA9IC0xLFxuXG5cdFx0Ly8gRmlyZSBjYWxsYmFja3Ncblx0XHRmaXJlID0gZnVuY3Rpb24oKSB7XG5cblx0XHRcdC8vIEVuZm9yY2Ugc2luZ2xlLWZpcmluZ1xuXHRcdFx0bG9ja2VkID0gbG9ja2VkIHx8IG9wdGlvbnMub25jZTtcblxuXHRcdFx0Ly8gRXhlY3V0ZSBjYWxsYmFja3MgZm9yIGFsbCBwZW5kaW5nIGV4ZWN1dGlvbnMsXG5cdFx0XHQvLyByZXNwZWN0aW5nIGZpcmluZ0luZGV4IG92ZXJyaWRlcyBhbmQgcnVudGltZSBjaGFuZ2VzXG5cdFx0XHRmaXJlZCA9IGZpcmluZyA9IHRydWU7XG5cdFx0XHRmb3IgKCA7IHF1ZXVlLmxlbmd0aDsgZmlyaW5nSW5kZXggPSAtMSApIHtcblx0XHRcdFx0bWVtb3J5ID0gcXVldWUuc2hpZnQoKTtcblx0XHRcdFx0d2hpbGUgKCArK2ZpcmluZ0luZGV4IDwgbGlzdC5sZW5ndGggKSB7XG5cblx0XHRcdFx0XHQvLyBSdW4gY2FsbGJhY2sgYW5kIGNoZWNrIGZvciBlYXJseSB0ZXJtaW5hdGlvblxuXHRcdFx0XHRcdGlmICggbGlzdFsgZmlyaW5nSW5kZXggXS5hcHBseSggbWVtb3J5WyAwIF0sIG1lbW9yeVsgMSBdICkgPT09IGZhbHNlICYmXG5cdFx0XHRcdFx0XHRvcHRpb25zLnN0b3BPbkZhbHNlICkge1xuXG5cdFx0XHRcdFx0XHQvLyBKdW1wIHRvIGVuZCBhbmQgZm9yZ2V0IHRoZSBkYXRhIHNvIC5hZGQgZG9lc24ndCByZS1maXJlXG5cdFx0XHRcdFx0XHRmaXJpbmdJbmRleCA9IGxpc3QubGVuZ3RoO1xuXHRcdFx0XHRcdFx0bWVtb3J5ID0gZmFsc2U7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHRcdC8vIEZvcmdldCB0aGUgZGF0YSBpZiB3ZSdyZSBkb25lIHdpdGggaXRcblx0XHRcdGlmICggIW9wdGlvbnMubWVtb3J5ICkge1xuXHRcdFx0XHRtZW1vcnkgPSBmYWxzZTtcblx0XHRcdH1cblxuXHRcdFx0ZmlyaW5nID0gZmFsc2U7XG5cblx0XHRcdC8vIENsZWFuIHVwIGlmIHdlJ3JlIGRvbmUgZmlyaW5nIGZvciBnb29kXG5cdFx0XHRpZiAoIGxvY2tlZCApIHtcblxuXHRcdFx0XHQvLyBLZWVwIGFuIGVtcHR5IGxpc3QgaWYgd2UgaGF2ZSBkYXRhIGZvciBmdXR1cmUgYWRkIGNhbGxzXG5cdFx0XHRcdGlmICggbWVtb3J5ICkge1xuXHRcdFx0XHRcdGxpc3QgPSBbXTtcblxuXHRcdFx0XHQvLyBPdGhlcndpc2UsIHRoaXMgb2JqZWN0IGlzIHNwZW50XG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0bGlzdCA9IFwiXCI7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9LFxuXG5cdFx0Ly8gQWN0dWFsIENhbGxiYWNrcyBvYmplY3Rcblx0XHRzZWxmID0ge1xuXG5cdFx0XHQvLyBBZGQgYSBjYWxsYmFjayBvciBhIGNvbGxlY3Rpb24gb2YgY2FsbGJhY2tzIHRvIHRoZSBsaXN0XG5cdFx0XHRhZGQ6IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRpZiAoIGxpc3QgKSB7XG5cblx0XHRcdFx0XHQvLyBJZiB3ZSBoYXZlIG1lbW9yeSBmcm9tIGEgcGFzdCBydW4sIHdlIHNob3VsZCBmaXJlIGFmdGVyIGFkZGluZ1xuXHRcdFx0XHRcdGlmICggbWVtb3J5ICYmICFmaXJpbmcgKSB7XG5cdFx0XHRcdFx0XHRmaXJpbmdJbmRleCA9IGxpc3QubGVuZ3RoIC0gMTtcblx0XHRcdFx0XHRcdHF1ZXVlLnB1c2goIG1lbW9yeSApO1xuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdCggZnVuY3Rpb24gYWRkKCBhcmdzICkge1xuXHRcdFx0XHRcdFx0alF1ZXJ5LmVhY2goIGFyZ3MsIGZ1bmN0aW9uKCBfLCBhcmcgKSB7XG5cdFx0XHRcdFx0XHRcdGlmICggaXNGdW5jdGlvbiggYXJnICkgKSB7XG5cdFx0XHRcdFx0XHRcdFx0aWYgKCAhb3B0aW9ucy51bmlxdWUgfHwgIXNlbGYuaGFzKCBhcmcgKSApIHtcblx0XHRcdFx0XHRcdFx0XHRcdGxpc3QucHVzaCggYXJnICk7XG5cdFx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHR9IGVsc2UgaWYgKCBhcmcgJiYgYXJnLmxlbmd0aCAmJiB0b1R5cGUoIGFyZyApICE9PSBcInN0cmluZ1wiICkge1xuXG5cdFx0XHRcdFx0XHRcdFx0Ly8gSW5zcGVjdCByZWN1cnNpdmVseVxuXHRcdFx0XHRcdFx0XHRcdGFkZCggYXJnICk7XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdH0gKTtcblx0XHRcdFx0XHR9ICkoIGFyZ3VtZW50cyApO1xuXG5cdFx0XHRcdFx0aWYgKCBtZW1vcnkgJiYgIWZpcmluZyApIHtcblx0XHRcdFx0XHRcdGZpcmUoKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdFx0cmV0dXJuIHRoaXM7XG5cdFx0XHR9LFxuXG5cdFx0XHQvLyBSZW1vdmUgYSBjYWxsYmFjayBmcm9tIHRoZSBsaXN0XG5cdFx0XHRyZW1vdmU6IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRqUXVlcnkuZWFjaCggYXJndW1lbnRzLCBmdW5jdGlvbiggXywgYXJnICkge1xuXHRcdFx0XHRcdHZhciBpbmRleDtcblx0XHRcdFx0XHR3aGlsZSAoICggaW5kZXggPSBqUXVlcnkuaW5BcnJheSggYXJnLCBsaXN0LCBpbmRleCApICkgPiAtMSApIHtcblx0XHRcdFx0XHRcdGxpc3Quc3BsaWNlKCBpbmRleCwgMSApO1xuXG5cdFx0XHRcdFx0XHQvLyBIYW5kbGUgZmlyaW5nIGluZGV4ZXNcblx0XHRcdFx0XHRcdGlmICggaW5kZXggPD0gZmlyaW5nSW5kZXggKSB7XG5cdFx0XHRcdFx0XHRcdGZpcmluZ0luZGV4LS07XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9ICk7XG5cdFx0XHRcdHJldHVybiB0aGlzO1xuXHRcdFx0fSxcblxuXHRcdFx0Ly8gQ2hlY2sgaWYgYSBnaXZlbiBjYWxsYmFjayBpcyBpbiB0aGUgbGlzdC5cblx0XHRcdC8vIElmIG5vIGFyZ3VtZW50IGlzIGdpdmVuLCByZXR1cm4gd2hldGhlciBvciBub3QgbGlzdCBoYXMgY2FsbGJhY2tzIGF0dGFjaGVkLlxuXHRcdFx0aGFzOiBmdW5jdGlvbiggZm4gKSB7XG5cdFx0XHRcdHJldHVybiBmbiA/XG5cdFx0XHRcdFx0alF1ZXJ5LmluQXJyYXkoIGZuLCBsaXN0ICkgPiAtMSA6XG5cdFx0XHRcdFx0bGlzdC5sZW5ndGggPiAwO1xuXHRcdFx0fSxcblxuXHRcdFx0Ly8gUmVtb3ZlIGFsbCBjYWxsYmFja3MgZnJvbSB0aGUgbGlzdFxuXHRcdFx0ZW1wdHk6IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRpZiAoIGxpc3QgKSB7XG5cdFx0XHRcdFx0bGlzdCA9IFtdO1xuXHRcdFx0XHR9XG5cdFx0XHRcdHJldHVybiB0aGlzO1xuXHRcdFx0fSxcblxuXHRcdFx0Ly8gRGlzYWJsZSAuZmlyZSBhbmQgLmFkZFxuXHRcdFx0Ly8gQWJvcnQgYW55IGN1cnJlbnQvcGVuZGluZyBleGVjdXRpb25zXG5cdFx0XHQvLyBDbGVhciBhbGwgY2FsbGJhY2tzIGFuZCB2YWx1ZXNcblx0XHRcdGRpc2FibGU6IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRsb2NrZWQgPSBxdWV1ZSA9IFtdO1xuXHRcdFx0XHRsaXN0ID0gbWVtb3J5ID0gXCJcIjtcblx0XHRcdFx0cmV0dXJuIHRoaXM7XG5cdFx0XHR9LFxuXHRcdFx0ZGlzYWJsZWQ6IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRyZXR1cm4gIWxpc3Q7XG5cdFx0XHR9LFxuXG5cdFx0XHQvLyBEaXNhYmxlIC5maXJlXG5cdFx0XHQvLyBBbHNvIGRpc2FibGUgLmFkZCB1bmxlc3Mgd2UgaGF2ZSBtZW1vcnkgKHNpbmNlIGl0IHdvdWxkIGhhdmUgbm8gZWZmZWN0KVxuXHRcdFx0Ly8gQWJvcnQgYW55IHBlbmRpbmcgZXhlY3V0aW9uc1xuXHRcdFx0bG9jazogZnVuY3Rpb24oKSB7XG5cdFx0XHRcdGxvY2tlZCA9IHF1ZXVlID0gW107XG5cdFx0XHRcdGlmICggIW1lbW9yeSAmJiAhZmlyaW5nICkge1xuXHRcdFx0XHRcdGxpc3QgPSBtZW1vcnkgPSBcIlwiO1xuXHRcdFx0XHR9XG5cdFx0XHRcdHJldHVybiB0aGlzO1xuXHRcdFx0fSxcblx0XHRcdGxvY2tlZDogZnVuY3Rpb24oKSB7XG5cdFx0XHRcdHJldHVybiAhIWxvY2tlZDtcblx0XHRcdH0sXG5cblx0XHRcdC8vIENhbGwgYWxsIGNhbGxiYWNrcyB3aXRoIHRoZSBnaXZlbiBjb250ZXh0IGFuZCBhcmd1bWVudHNcblx0XHRcdGZpcmVXaXRoOiBmdW5jdGlvbiggY29udGV4dCwgYXJncyApIHtcblx0XHRcdFx0aWYgKCAhbG9ja2VkICkge1xuXHRcdFx0XHRcdGFyZ3MgPSBhcmdzIHx8IFtdO1xuXHRcdFx0XHRcdGFyZ3MgPSBbIGNvbnRleHQsIGFyZ3Muc2xpY2UgPyBhcmdzLnNsaWNlKCkgOiBhcmdzIF07XG5cdFx0XHRcdFx0cXVldWUucHVzaCggYXJncyApO1xuXHRcdFx0XHRcdGlmICggIWZpcmluZyApIHtcblx0XHRcdFx0XHRcdGZpcmUoKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdFx0cmV0dXJuIHRoaXM7XG5cdFx0XHR9LFxuXG5cdFx0XHQvLyBDYWxsIGFsbCB0aGUgY2FsbGJhY2tzIHdpdGggdGhlIGdpdmVuIGFyZ3VtZW50c1xuXHRcdFx0ZmlyZTogZnVuY3Rpb24oKSB7XG5cdFx0XHRcdHNlbGYuZmlyZVdpdGgoIHRoaXMsIGFyZ3VtZW50cyApO1xuXHRcdFx0XHRyZXR1cm4gdGhpcztcblx0XHRcdH0sXG5cblx0XHRcdC8vIFRvIGtub3cgaWYgdGhlIGNhbGxiYWNrcyBoYXZlIGFscmVhZHkgYmVlbiBjYWxsZWQgYXQgbGVhc3Qgb25jZVxuXHRcdFx0ZmlyZWQ6IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRyZXR1cm4gISFmaXJlZDtcblx0XHRcdH1cblx0XHR9O1xuXG5cdHJldHVybiBzZWxmO1xufTtcblxuXG5mdW5jdGlvbiBJZGVudGl0eSggdiApIHtcblx0cmV0dXJuIHY7XG59XG5mdW5jdGlvbiBUaHJvd2VyKCBleCApIHtcblx0dGhyb3cgZXg7XG59XG5cbmZ1bmN0aW9uIGFkb3B0VmFsdWUoIHZhbHVlLCByZXNvbHZlLCByZWplY3QsIG5vVmFsdWUgKSB7XG5cdHZhciBtZXRob2Q7XG5cblx0dHJ5IHtcblxuXHRcdC8vIENoZWNrIGZvciBwcm9taXNlIGFzcGVjdCBmaXJzdCB0byBwcml2aWxlZ2Ugc3luY2hyb25vdXMgYmVoYXZpb3Jcblx0XHRpZiAoIHZhbHVlICYmIGlzRnVuY3Rpb24oICggbWV0aG9kID0gdmFsdWUucHJvbWlzZSApICkgKSB7XG5cdFx0XHRtZXRob2QuY2FsbCggdmFsdWUgKS5kb25lKCByZXNvbHZlICkuZmFpbCggcmVqZWN0ICk7XG5cblx0XHQvLyBPdGhlciB0aGVuYWJsZXNcblx0XHR9IGVsc2UgaWYgKCB2YWx1ZSAmJiBpc0Z1bmN0aW9uKCAoIG1ldGhvZCA9IHZhbHVlLnRoZW4gKSApICkge1xuXHRcdFx0bWV0aG9kLmNhbGwoIHZhbHVlLCByZXNvbHZlLCByZWplY3QgKTtcblxuXHRcdC8vIE90aGVyIG5vbi10aGVuYWJsZXNcblx0XHR9IGVsc2Uge1xuXG5cdFx0XHQvLyBDb250cm9sIGByZXNvbHZlYCBhcmd1bWVudHMgYnkgbGV0dGluZyBBcnJheSNzbGljZSBjYXN0IGJvb2xlYW4gYG5vVmFsdWVgIHRvIGludGVnZXI6XG5cdFx0XHQvLyAqIGZhbHNlOiBbIHZhbHVlIF0uc2xpY2UoIDAgKSA9PiByZXNvbHZlKCB2YWx1ZSApXG5cdFx0XHQvLyAqIHRydWU6IFsgdmFsdWUgXS5zbGljZSggMSApID0+IHJlc29sdmUoKVxuXHRcdFx0cmVzb2x2ZS5hcHBseSggdW5kZWZpbmVkLCBbIHZhbHVlIF0uc2xpY2UoIG5vVmFsdWUgKSApO1xuXHRcdH1cblxuXHQvLyBGb3IgUHJvbWlzZXMvQSssIGNvbnZlcnQgZXhjZXB0aW9ucyBpbnRvIHJlamVjdGlvbnNcblx0Ly8gU2luY2UgalF1ZXJ5LndoZW4gZG9lc24ndCB1bndyYXAgdGhlbmFibGVzLCB3ZSBjYW4gc2tpcCB0aGUgZXh0cmEgY2hlY2tzIGFwcGVhcmluZyBpblxuXHQvLyBEZWZlcnJlZCN0aGVuIHRvIGNvbmRpdGlvbmFsbHkgc3VwcHJlc3MgcmVqZWN0aW9uLlxuXHR9IGNhdGNoICggdmFsdWUgKSB7XG5cblx0XHQvLyBTdXBwb3J0OiBBbmRyb2lkIDQuMCBvbmx5XG5cdFx0Ly8gU3RyaWN0IG1vZGUgZnVuY3Rpb25zIGludm9rZWQgd2l0aG91dCAuY2FsbC8uYXBwbHkgZ2V0IGdsb2JhbC1vYmplY3QgY29udGV4dFxuXHRcdHJlamVjdC5hcHBseSggdW5kZWZpbmVkLCBbIHZhbHVlIF0gKTtcblx0fVxufVxuXG5qUXVlcnkuZXh0ZW5kKCB7XG5cblx0RGVmZXJyZWQ6IGZ1bmN0aW9uKCBmdW5jICkge1xuXHRcdHZhciB0dXBsZXMgPSBbXG5cblx0XHRcdFx0Ly8gYWN0aW9uLCBhZGQgbGlzdGVuZXIsIGNhbGxiYWNrcyxcblx0XHRcdFx0Ly8gLi4uIC50aGVuIGhhbmRsZXJzLCBhcmd1bWVudCBpbmRleCwgW2ZpbmFsIHN0YXRlXVxuXHRcdFx0XHRbIFwibm90aWZ5XCIsIFwicHJvZ3Jlc3NcIiwgalF1ZXJ5LkNhbGxiYWNrcyggXCJtZW1vcnlcIiApLFxuXHRcdFx0XHRcdGpRdWVyeS5DYWxsYmFja3MoIFwibWVtb3J5XCIgKSwgMiBdLFxuXHRcdFx0XHRbIFwicmVzb2x2ZVwiLCBcImRvbmVcIiwgalF1ZXJ5LkNhbGxiYWNrcyggXCJvbmNlIG1lbW9yeVwiICksXG5cdFx0XHRcdFx0alF1ZXJ5LkNhbGxiYWNrcyggXCJvbmNlIG1lbW9yeVwiICksIDAsIFwicmVzb2x2ZWRcIiBdLFxuXHRcdFx0XHRbIFwicmVqZWN0XCIsIFwiZmFpbFwiLCBqUXVlcnkuQ2FsbGJhY2tzKCBcIm9uY2UgbWVtb3J5XCIgKSxcblx0XHRcdFx0XHRqUXVlcnkuQ2FsbGJhY2tzKCBcIm9uY2UgbWVtb3J5XCIgKSwgMSwgXCJyZWplY3RlZFwiIF1cblx0XHRcdF0sXG5cdFx0XHRzdGF0ZSA9IFwicGVuZGluZ1wiLFxuXHRcdFx0cHJvbWlzZSA9IHtcblx0XHRcdFx0c3RhdGU6IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRcdHJldHVybiBzdGF0ZTtcblx0XHRcdFx0fSxcblx0XHRcdFx0YWx3YXlzOiBmdW5jdGlvbigpIHtcblx0XHRcdFx0XHRkZWZlcnJlZC5kb25lKCBhcmd1bWVudHMgKS5mYWlsKCBhcmd1bWVudHMgKTtcblx0XHRcdFx0XHRyZXR1cm4gdGhpcztcblx0XHRcdFx0fSxcblx0XHRcdFx0XCJjYXRjaFwiOiBmdW5jdGlvbiggZm4gKSB7XG5cdFx0XHRcdFx0cmV0dXJuIHByb21pc2UudGhlbiggbnVsbCwgZm4gKTtcblx0XHRcdFx0fSxcblxuXHRcdFx0XHQvLyBLZWVwIHBpcGUgZm9yIGJhY2stY29tcGF0XG5cdFx0XHRcdHBpcGU6IGZ1bmN0aW9uKCAvKiBmbkRvbmUsIGZuRmFpbCwgZm5Qcm9ncmVzcyAqLyApIHtcblx0XHRcdFx0XHR2YXIgZm5zID0gYXJndW1lbnRzO1xuXG5cdFx0XHRcdFx0cmV0dXJuIGpRdWVyeS5EZWZlcnJlZCggZnVuY3Rpb24oIG5ld0RlZmVyICkge1xuXHRcdFx0XHRcdFx0alF1ZXJ5LmVhY2goIHR1cGxlcywgZnVuY3Rpb24oIF9pLCB0dXBsZSApIHtcblxuXHRcdFx0XHRcdFx0XHQvLyBNYXAgdHVwbGVzIChwcm9ncmVzcywgZG9uZSwgZmFpbCkgdG8gYXJndW1lbnRzIChkb25lLCBmYWlsLCBwcm9ncmVzcylcblx0XHRcdFx0XHRcdFx0dmFyIGZuID0gaXNGdW5jdGlvbiggZm5zWyB0dXBsZVsgNCBdIF0gKSAmJiBmbnNbIHR1cGxlWyA0IF0gXTtcblxuXHRcdFx0XHRcdFx0XHQvLyBkZWZlcnJlZC5wcm9ncmVzcyhmdW5jdGlvbigpIHsgYmluZCB0byBuZXdEZWZlciBvciBuZXdEZWZlci5ub3RpZnkgfSlcblx0XHRcdFx0XHRcdFx0Ly8gZGVmZXJyZWQuZG9uZShmdW5jdGlvbigpIHsgYmluZCB0byBuZXdEZWZlciBvciBuZXdEZWZlci5yZXNvbHZlIH0pXG5cdFx0XHRcdFx0XHRcdC8vIGRlZmVycmVkLmZhaWwoZnVuY3Rpb24oKSB7IGJpbmQgdG8gbmV3RGVmZXIgb3IgbmV3RGVmZXIucmVqZWN0IH0pXG5cdFx0XHRcdFx0XHRcdGRlZmVycmVkWyB0dXBsZVsgMSBdIF0oIGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRcdFx0XHRcdHZhciByZXR1cm5lZCA9IGZuICYmIGZuLmFwcGx5KCB0aGlzLCBhcmd1bWVudHMgKTtcblx0XHRcdFx0XHRcdFx0XHRpZiAoIHJldHVybmVkICYmIGlzRnVuY3Rpb24oIHJldHVybmVkLnByb21pc2UgKSApIHtcblx0XHRcdFx0XHRcdFx0XHRcdHJldHVybmVkLnByb21pc2UoKVxuXHRcdFx0XHRcdFx0XHRcdFx0XHQucHJvZ3Jlc3MoIG5ld0RlZmVyLm5vdGlmeSApXG5cdFx0XHRcdFx0XHRcdFx0XHRcdC5kb25lKCBuZXdEZWZlci5yZXNvbHZlIClcblx0XHRcdFx0XHRcdFx0XHRcdFx0LmZhaWwoIG5ld0RlZmVyLnJlamVjdCApO1xuXHRcdFx0XHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRuZXdEZWZlclsgdHVwbGVbIDAgXSArIFwiV2l0aFwiIF0oXG5cdFx0XHRcdFx0XHRcdFx0XHRcdHRoaXMsXG5cdFx0XHRcdFx0XHRcdFx0XHRcdGZuID8gWyByZXR1cm5lZCBdIDogYXJndW1lbnRzXG5cdFx0XHRcdFx0XHRcdFx0XHQpO1xuXHRcdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0fSApO1xuXHRcdFx0XHRcdFx0fSApO1xuXHRcdFx0XHRcdFx0Zm5zID0gbnVsbDtcblx0XHRcdFx0XHR9ICkucHJvbWlzZSgpO1xuXHRcdFx0XHR9LFxuXHRcdFx0XHR0aGVuOiBmdW5jdGlvbiggb25GdWxmaWxsZWQsIG9uUmVqZWN0ZWQsIG9uUHJvZ3Jlc3MgKSB7XG5cdFx0XHRcdFx0dmFyIG1heERlcHRoID0gMDtcblx0XHRcdFx0XHRmdW5jdGlvbiByZXNvbHZlKCBkZXB0aCwgZGVmZXJyZWQsIGhhbmRsZXIsIHNwZWNpYWwgKSB7XG5cdFx0XHRcdFx0XHRyZXR1cm4gZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0XHRcdHZhciB0aGF0ID0gdGhpcyxcblx0XHRcdFx0XHRcdFx0XHRhcmdzID0gYXJndW1lbnRzLFxuXHRcdFx0XHRcdFx0XHRcdG1pZ2h0VGhyb3cgPSBmdW5jdGlvbigpIHtcblx0XHRcdFx0XHRcdFx0XHRcdHZhciByZXR1cm5lZCwgdGhlbjtcblxuXHRcdFx0XHRcdFx0XHRcdFx0Ly8gU3VwcG9ydDogUHJvbWlzZXMvQSsgc2VjdGlvbiAyLjMuMy4zLjNcblx0XHRcdFx0XHRcdFx0XHRcdC8vIGh0dHBzOi8vcHJvbWlzZXNhcGx1cy5jb20vI3BvaW50LTU5XG5cdFx0XHRcdFx0XHRcdFx0XHQvLyBJZ25vcmUgZG91YmxlLXJlc29sdXRpb24gYXR0ZW1wdHNcblx0XHRcdFx0XHRcdFx0XHRcdGlmICggZGVwdGggPCBtYXhEZXB0aCApIHtcblx0XHRcdFx0XHRcdFx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0XHRcdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0XHRcdFx0XHRyZXR1cm5lZCA9IGhhbmRsZXIuYXBwbHkoIHRoYXQsIGFyZ3MgKTtcblxuXHRcdFx0XHRcdFx0XHRcdFx0Ly8gU3VwcG9ydDogUHJvbWlzZXMvQSsgc2VjdGlvbiAyLjMuMVxuXHRcdFx0XHRcdFx0XHRcdFx0Ly8gaHR0cHM6Ly9wcm9taXNlc2FwbHVzLmNvbS8jcG9pbnQtNDhcblx0XHRcdFx0XHRcdFx0XHRcdGlmICggcmV0dXJuZWQgPT09IGRlZmVycmVkLnByb21pc2UoKSApIHtcblx0XHRcdFx0XHRcdFx0XHRcdFx0dGhyb3cgbmV3IFR5cGVFcnJvciggXCJUaGVuYWJsZSBzZWxmLXJlc29sdXRpb25cIiApO1xuXHRcdFx0XHRcdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0XHRcdFx0XHQvLyBTdXBwb3J0OiBQcm9taXNlcy9BKyBzZWN0aW9ucyAyLjMuMy4xLCAzLjVcblx0XHRcdFx0XHRcdFx0XHRcdC8vIGh0dHBzOi8vcHJvbWlzZXNhcGx1cy5jb20vI3BvaW50LTU0XG5cdFx0XHRcdFx0XHRcdFx0XHQvLyBodHRwczovL3Byb21pc2VzYXBsdXMuY29tLyNwb2ludC03NVxuXHRcdFx0XHRcdFx0XHRcdFx0Ly8gUmV0cmlldmUgYHRoZW5gIG9ubHkgb25jZVxuXHRcdFx0XHRcdFx0XHRcdFx0dGhlbiA9IHJldHVybmVkICYmXG5cblx0XHRcdFx0XHRcdFx0XHRcdFx0Ly8gU3VwcG9ydDogUHJvbWlzZXMvQSsgc2VjdGlvbiAyLjMuNFxuXHRcdFx0XHRcdFx0XHRcdFx0XHQvLyBodHRwczovL3Byb21pc2VzYXBsdXMuY29tLyNwb2ludC02NFxuXHRcdFx0XHRcdFx0XHRcdFx0XHQvLyBPbmx5IGNoZWNrIG9iamVjdHMgYW5kIGZ1bmN0aW9ucyBmb3IgdGhlbmFiaWxpdHlcblx0XHRcdFx0XHRcdFx0XHRcdFx0KCB0eXBlb2YgcmV0dXJuZWQgPT09IFwib2JqZWN0XCIgfHxcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHR0eXBlb2YgcmV0dXJuZWQgPT09IFwiZnVuY3Rpb25cIiApICYmXG5cdFx0XHRcdFx0XHRcdFx0XHRcdHJldHVybmVkLnRoZW47XG5cblx0XHRcdFx0XHRcdFx0XHRcdC8vIEhhbmRsZSBhIHJldHVybmVkIHRoZW5hYmxlXG5cdFx0XHRcdFx0XHRcdFx0XHRpZiAoIGlzRnVuY3Rpb24oIHRoZW4gKSApIHtcblxuXHRcdFx0XHRcdFx0XHRcdFx0XHQvLyBTcGVjaWFsIHByb2Nlc3NvcnMgKG5vdGlmeSkganVzdCB3YWl0IGZvciByZXNvbHV0aW9uXG5cdFx0XHRcdFx0XHRcdFx0XHRcdGlmICggc3BlY2lhbCApIHtcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHR0aGVuLmNhbGwoXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRyZXR1cm5lZCxcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdHJlc29sdmUoIG1heERlcHRoLCBkZWZlcnJlZCwgSWRlbnRpdHksIHNwZWNpYWwgKSxcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdHJlc29sdmUoIG1heERlcHRoLCBkZWZlcnJlZCwgVGhyb3dlciwgc3BlY2lhbCApXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0KTtcblxuXHRcdFx0XHRcdFx0XHRcdFx0XHQvLyBOb3JtYWwgcHJvY2Vzc29ycyAocmVzb2x2ZSkgYWxzbyBob29rIGludG8gcHJvZ3Jlc3Ncblx0XHRcdFx0XHRcdFx0XHRcdFx0fSBlbHNlIHtcblxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdC8vIC4uLmFuZCBkaXNyZWdhcmQgb2xkZXIgcmVzb2x1dGlvbiB2YWx1ZXNcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRtYXhEZXB0aCsrO1xuXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0dGhlbi5jYWxsKFxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0cmV0dXJuZWQsXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRyZXNvbHZlKCBtYXhEZXB0aCwgZGVmZXJyZWQsIElkZW50aXR5LCBzcGVjaWFsICksXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRyZXNvbHZlKCBtYXhEZXB0aCwgZGVmZXJyZWQsIFRocm93ZXIsIHNwZWNpYWwgKSxcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdHJlc29sdmUoIG1heERlcHRoLCBkZWZlcnJlZCwgSWRlbnRpdHksXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdGRlZmVycmVkLm5vdGlmeVdpdGggKVxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdCk7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdFx0XHRcdFx0Ly8gSGFuZGxlIGFsbCBvdGhlciByZXR1cm5lZCB2YWx1ZXNcblx0XHRcdFx0XHRcdFx0XHRcdH0gZWxzZSB7XG5cblx0XHRcdFx0XHRcdFx0XHRcdFx0Ly8gT25seSBzdWJzdGl0dXRlIGhhbmRsZXJzIHBhc3Mgb24gY29udGV4dFxuXHRcdFx0XHRcdFx0XHRcdFx0XHQvLyBhbmQgbXVsdGlwbGUgdmFsdWVzIChub24tc3BlYyBiZWhhdmlvcilcblx0XHRcdFx0XHRcdFx0XHRcdFx0aWYgKCBoYW5kbGVyICE9PSBJZGVudGl0eSApIHtcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHR0aGF0ID0gdW5kZWZpbmVkO1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdGFyZ3MgPSBbIHJldHVybmVkIF07XG5cdFx0XHRcdFx0XHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdFx0XHRcdFx0XHQvLyBQcm9jZXNzIHRoZSB2YWx1ZShzKVxuXHRcdFx0XHRcdFx0XHRcdFx0XHQvLyBEZWZhdWx0IHByb2Nlc3MgaXMgcmVzb2x2ZVxuXHRcdFx0XHRcdFx0XHRcdFx0XHQoIHNwZWNpYWwgfHwgZGVmZXJyZWQucmVzb2x2ZVdpdGggKSggdGhhdCwgYXJncyApO1xuXHRcdFx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHRcdH0sXG5cblx0XHRcdFx0XHRcdFx0XHQvLyBPbmx5IG5vcm1hbCBwcm9jZXNzb3JzIChyZXNvbHZlKSBjYXRjaCBhbmQgcmVqZWN0IGV4Y2VwdGlvbnNcblx0XHRcdFx0XHRcdFx0XHRwcm9jZXNzID0gc3BlY2lhbCA/XG5cdFx0XHRcdFx0XHRcdFx0XHRtaWdodFRocm93IDpcblx0XHRcdFx0XHRcdFx0XHRcdGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRcdFx0XHRcdFx0XHR0cnkge1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdG1pZ2h0VGhyb3coKTtcblx0XHRcdFx0XHRcdFx0XHRcdFx0fSBjYXRjaCAoIGUgKSB7XG5cblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRpZiAoIGpRdWVyeS5EZWZlcnJlZC5leGNlcHRpb25Ib29rICkge1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0alF1ZXJ5LkRlZmVycmVkLmV4Y2VwdGlvbkhvb2soIGUsXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdHByb2Nlc3Muc3RhY2tUcmFjZSApO1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdC8vIFN1cHBvcnQ6IFByb21pc2VzL0ErIHNlY3Rpb24gMi4zLjMuMy40LjFcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHQvLyBodHRwczovL3Byb21pc2VzYXBsdXMuY29tLyNwb2ludC02MVxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdC8vIElnbm9yZSBwb3N0LXJlc29sdXRpb24gZXhjZXB0aW9uc1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdGlmICggZGVwdGggKyAxID49IG1heERlcHRoICkge1xuXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHQvLyBPbmx5IHN1YnN0aXR1dGUgaGFuZGxlcnMgcGFzcyBvbiBjb250ZXh0XG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHQvLyBhbmQgbXVsdGlwbGUgdmFsdWVzIChub24tc3BlYyBiZWhhdmlvcilcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdGlmICggaGFuZGxlciAhPT0gVGhyb3dlciApIHtcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0dGhhdCA9IHVuZGVmaW5lZDtcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0YXJncyA9IFsgZSBdO1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRkZWZlcnJlZC5yZWplY3RXaXRoKCB0aGF0LCBhcmdzICk7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdFx0XHR9O1xuXG5cdFx0XHRcdFx0XHRcdC8vIFN1cHBvcnQ6IFByb21pc2VzL0ErIHNlY3Rpb24gMi4zLjMuMy4xXG5cdFx0XHRcdFx0XHRcdC8vIGh0dHBzOi8vcHJvbWlzZXNhcGx1cy5jb20vI3BvaW50LTU3XG5cdFx0XHRcdFx0XHRcdC8vIFJlLXJlc29sdmUgcHJvbWlzZXMgaW1tZWRpYXRlbHkgdG8gZG9kZ2UgZmFsc2UgcmVqZWN0aW9uIGZyb21cblx0XHRcdFx0XHRcdFx0Ly8gc3Vic2VxdWVudCBlcnJvcnNcblx0XHRcdFx0XHRcdFx0aWYgKCBkZXB0aCApIHtcblx0XHRcdFx0XHRcdFx0XHRwcm9jZXNzKCk7XG5cdFx0XHRcdFx0XHRcdH0gZWxzZSB7XG5cblx0XHRcdFx0XHRcdFx0XHQvLyBDYWxsIGFuIG9wdGlvbmFsIGhvb2sgdG8gcmVjb3JkIHRoZSBzdGFjaywgaW4gY2FzZSBvZiBleGNlcHRpb25cblx0XHRcdFx0XHRcdFx0XHQvLyBzaW5jZSBpdCdzIG90aGVyd2lzZSBsb3N0IHdoZW4gZXhlY3V0aW9uIGdvZXMgYXN5bmNcblx0XHRcdFx0XHRcdFx0XHRpZiAoIGpRdWVyeS5EZWZlcnJlZC5nZXRTdGFja0hvb2sgKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRwcm9jZXNzLnN0YWNrVHJhY2UgPSBqUXVlcnkuRGVmZXJyZWQuZ2V0U3RhY2tIb29rKCk7XG5cdFx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHRcdHdpbmRvdy5zZXRUaW1lb3V0KCBwcm9jZXNzICk7XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdH07XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0cmV0dXJuIGpRdWVyeS5EZWZlcnJlZCggZnVuY3Rpb24oIG5ld0RlZmVyICkge1xuXG5cdFx0XHRcdFx0XHQvLyBwcm9ncmVzc19oYW5kbGVycy5hZGQoIC4uLiApXG5cdFx0XHRcdFx0XHR0dXBsZXNbIDAgXVsgMyBdLmFkZChcblx0XHRcdFx0XHRcdFx0cmVzb2x2ZShcblx0XHRcdFx0XHRcdFx0XHQwLFxuXHRcdFx0XHRcdFx0XHRcdG5ld0RlZmVyLFxuXHRcdFx0XHRcdFx0XHRcdGlzRnVuY3Rpb24oIG9uUHJvZ3Jlc3MgKSA/XG5cdFx0XHRcdFx0XHRcdFx0XHRvblByb2dyZXNzIDpcblx0XHRcdFx0XHRcdFx0XHRcdElkZW50aXR5LFxuXHRcdFx0XHRcdFx0XHRcdG5ld0RlZmVyLm5vdGlmeVdpdGhcblx0XHRcdFx0XHRcdFx0KVxuXHRcdFx0XHRcdFx0KTtcblxuXHRcdFx0XHRcdFx0Ly8gZnVsZmlsbGVkX2hhbmRsZXJzLmFkZCggLi4uIClcblx0XHRcdFx0XHRcdHR1cGxlc1sgMSBdWyAzIF0uYWRkKFxuXHRcdFx0XHRcdFx0XHRyZXNvbHZlKFxuXHRcdFx0XHRcdFx0XHRcdDAsXG5cdFx0XHRcdFx0XHRcdFx0bmV3RGVmZXIsXG5cdFx0XHRcdFx0XHRcdFx0aXNGdW5jdGlvbiggb25GdWxmaWxsZWQgKSA/XG5cdFx0XHRcdFx0XHRcdFx0XHRvbkZ1bGZpbGxlZCA6XG5cdFx0XHRcdFx0XHRcdFx0XHRJZGVudGl0eVxuXHRcdFx0XHRcdFx0XHQpXG5cdFx0XHRcdFx0XHQpO1xuXG5cdFx0XHRcdFx0XHQvLyByZWplY3RlZF9oYW5kbGVycy5hZGQoIC4uLiApXG5cdFx0XHRcdFx0XHR0dXBsZXNbIDIgXVsgMyBdLmFkZChcblx0XHRcdFx0XHRcdFx0cmVzb2x2ZShcblx0XHRcdFx0XHRcdFx0XHQwLFxuXHRcdFx0XHRcdFx0XHRcdG5ld0RlZmVyLFxuXHRcdFx0XHRcdFx0XHRcdGlzRnVuY3Rpb24oIG9uUmVqZWN0ZWQgKSA/XG5cdFx0XHRcdFx0XHRcdFx0XHRvblJlamVjdGVkIDpcblx0XHRcdFx0XHRcdFx0XHRcdFRocm93ZXJcblx0XHRcdFx0XHRcdFx0KVxuXHRcdFx0XHRcdFx0KTtcblx0XHRcdFx0XHR9ICkucHJvbWlzZSgpO1xuXHRcdFx0XHR9LFxuXG5cdFx0XHRcdC8vIEdldCBhIHByb21pc2UgZm9yIHRoaXMgZGVmZXJyZWRcblx0XHRcdFx0Ly8gSWYgb2JqIGlzIHByb3ZpZGVkLCB0aGUgcHJvbWlzZSBhc3BlY3QgaXMgYWRkZWQgdG8gdGhlIG9iamVjdFxuXHRcdFx0XHRwcm9taXNlOiBmdW5jdGlvbiggb2JqICkge1xuXHRcdFx0XHRcdHJldHVybiBvYmogIT0gbnVsbCA/IGpRdWVyeS5leHRlbmQoIG9iaiwgcHJvbWlzZSApIDogcHJvbWlzZTtcblx0XHRcdFx0fVxuXHRcdFx0fSxcblx0XHRcdGRlZmVycmVkID0ge307XG5cblx0XHQvLyBBZGQgbGlzdC1zcGVjaWZpYyBtZXRob2RzXG5cdFx0alF1ZXJ5LmVhY2goIHR1cGxlcywgZnVuY3Rpb24oIGksIHR1cGxlICkge1xuXHRcdFx0dmFyIGxpc3QgPSB0dXBsZVsgMiBdLFxuXHRcdFx0XHRzdGF0ZVN0cmluZyA9IHR1cGxlWyA1IF07XG5cblx0XHRcdC8vIHByb21pc2UucHJvZ3Jlc3MgPSBsaXN0LmFkZFxuXHRcdFx0Ly8gcHJvbWlzZS5kb25lID0gbGlzdC5hZGRcblx0XHRcdC8vIHByb21pc2UuZmFpbCA9IGxpc3QuYWRkXG5cdFx0XHRwcm9taXNlWyB0dXBsZVsgMSBdIF0gPSBsaXN0LmFkZDtcblxuXHRcdFx0Ly8gSGFuZGxlIHN0YXRlXG5cdFx0XHRpZiAoIHN0YXRlU3RyaW5nICkge1xuXHRcdFx0XHRsaXN0LmFkZChcblx0XHRcdFx0XHRmdW5jdGlvbigpIHtcblxuXHRcdFx0XHRcdFx0Ly8gc3RhdGUgPSBcInJlc29sdmVkXCIgKGkuZS4sIGZ1bGZpbGxlZClcblx0XHRcdFx0XHRcdC8vIHN0YXRlID0gXCJyZWplY3RlZFwiXG5cdFx0XHRcdFx0XHRzdGF0ZSA9IHN0YXRlU3RyaW5nO1xuXHRcdFx0XHRcdH0sXG5cblx0XHRcdFx0XHQvLyByZWplY3RlZF9jYWxsYmFja3MuZGlzYWJsZVxuXHRcdFx0XHRcdC8vIGZ1bGZpbGxlZF9jYWxsYmFja3MuZGlzYWJsZVxuXHRcdFx0XHRcdHR1cGxlc1sgMyAtIGkgXVsgMiBdLmRpc2FibGUsXG5cblx0XHRcdFx0XHQvLyByZWplY3RlZF9oYW5kbGVycy5kaXNhYmxlXG5cdFx0XHRcdFx0Ly8gZnVsZmlsbGVkX2hhbmRsZXJzLmRpc2FibGVcblx0XHRcdFx0XHR0dXBsZXNbIDMgLSBpIF1bIDMgXS5kaXNhYmxlLFxuXG5cdFx0XHRcdFx0Ly8gcHJvZ3Jlc3NfY2FsbGJhY2tzLmxvY2tcblx0XHRcdFx0XHR0dXBsZXNbIDAgXVsgMiBdLmxvY2ssXG5cblx0XHRcdFx0XHQvLyBwcm9ncmVzc19oYW5kbGVycy5sb2NrXG5cdFx0XHRcdFx0dHVwbGVzWyAwIF1bIDMgXS5sb2NrXG5cdFx0XHRcdCk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIHByb2dyZXNzX2hhbmRsZXJzLmZpcmVcblx0XHRcdC8vIGZ1bGZpbGxlZF9oYW5kbGVycy5maXJlXG5cdFx0XHQvLyByZWplY3RlZF9oYW5kbGVycy5maXJlXG5cdFx0XHRsaXN0LmFkZCggdHVwbGVbIDMgXS5maXJlICk7XG5cblx0XHRcdC8vIGRlZmVycmVkLm5vdGlmeSA9IGZ1bmN0aW9uKCkgeyBkZWZlcnJlZC5ub3RpZnlXaXRoKC4uLikgfVxuXHRcdFx0Ly8gZGVmZXJyZWQucmVzb2x2ZSA9IGZ1bmN0aW9uKCkgeyBkZWZlcnJlZC5yZXNvbHZlV2l0aCguLi4pIH1cblx0XHRcdC8vIGRlZmVycmVkLnJlamVjdCA9IGZ1bmN0aW9uKCkgeyBkZWZlcnJlZC5yZWplY3RXaXRoKC4uLikgfVxuXHRcdFx0ZGVmZXJyZWRbIHR1cGxlWyAwIF0gXSA9IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRkZWZlcnJlZFsgdHVwbGVbIDAgXSArIFwiV2l0aFwiIF0oIHRoaXMgPT09IGRlZmVycmVkID8gdW5kZWZpbmVkIDogdGhpcywgYXJndW1lbnRzICk7XG5cdFx0XHRcdHJldHVybiB0aGlzO1xuXHRcdFx0fTtcblxuXHRcdFx0Ly8gZGVmZXJyZWQubm90aWZ5V2l0aCA9IGxpc3QuZmlyZVdpdGhcblx0XHRcdC8vIGRlZmVycmVkLnJlc29sdmVXaXRoID0gbGlzdC5maXJlV2l0aFxuXHRcdFx0Ly8gZGVmZXJyZWQucmVqZWN0V2l0aCA9IGxpc3QuZmlyZVdpdGhcblx0XHRcdGRlZmVycmVkWyB0dXBsZVsgMCBdICsgXCJXaXRoXCIgXSA9IGxpc3QuZmlyZVdpdGg7XG5cdFx0fSApO1xuXG5cdFx0Ly8gTWFrZSB0aGUgZGVmZXJyZWQgYSBwcm9taXNlXG5cdFx0cHJvbWlzZS5wcm9taXNlKCBkZWZlcnJlZCApO1xuXG5cdFx0Ly8gQ2FsbCBnaXZlbiBmdW5jIGlmIGFueVxuXHRcdGlmICggZnVuYyApIHtcblx0XHRcdGZ1bmMuY2FsbCggZGVmZXJyZWQsIGRlZmVycmVkICk7XG5cdFx0fVxuXG5cdFx0Ly8gQWxsIGRvbmUhXG5cdFx0cmV0dXJuIGRlZmVycmVkO1xuXHR9LFxuXG5cdC8vIERlZmVycmVkIGhlbHBlclxuXHR3aGVuOiBmdW5jdGlvbiggc2luZ2xlVmFsdWUgKSB7XG5cdFx0dmFyXG5cblx0XHRcdC8vIGNvdW50IG9mIHVuY29tcGxldGVkIHN1Ym9yZGluYXRlc1xuXHRcdFx0cmVtYWluaW5nID0gYXJndW1lbnRzLmxlbmd0aCxcblxuXHRcdFx0Ly8gY291bnQgb2YgdW5wcm9jZXNzZWQgYXJndW1lbnRzXG5cdFx0XHRpID0gcmVtYWluaW5nLFxuXG5cdFx0XHQvLyBzdWJvcmRpbmF0ZSBmdWxmaWxsbWVudCBkYXRhXG5cdFx0XHRyZXNvbHZlQ29udGV4dHMgPSBBcnJheSggaSApLFxuXHRcdFx0cmVzb2x2ZVZhbHVlcyA9IHNsaWNlLmNhbGwoIGFyZ3VtZW50cyApLFxuXG5cdFx0XHQvLyB0aGUgbWFzdGVyIERlZmVycmVkXG5cdFx0XHRtYXN0ZXIgPSBqUXVlcnkuRGVmZXJyZWQoKSxcblxuXHRcdFx0Ly8gc3Vib3JkaW5hdGUgY2FsbGJhY2sgZmFjdG9yeVxuXHRcdFx0dXBkYXRlRnVuYyA9IGZ1bmN0aW9uKCBpICkge1xuXHRcdFx0XHRyZXR1cm4gZnVuY3Rpb24oIHZhbHVlICkge1xuXHRcdFx0XHRcdHJlc29sdmVDb250ZXh0c1sgaSBdID0gdGhpcztcblx0XHRcdFx0XHRyZXNvbHZlVmFsdWVzWyBpIF0gPSBhcmd1bWVudHMubGVuZ3RoID4gMSA/IHNsaWNlLmNhbGwoIGFyZ3VtZW50cyApIDogdmFsdWU7XG5cdFx0XHRcdFx0aWYgKCAhKCAtLXJlbWFpbmluZyApICkge1xuXHRcdFx0XHRcdFx0bWFzdGVyLnJlc29sdmVXaXRoKCByZXNvbHZlQ29udGV4dHMsIHJlc29sdmVWYWx1ZXMgKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH07XG5cdFx0XHR9O1xuXG5cdFx0Ly8gU2luZ2xlLSBhbmQgZW1wdHkgYXJndW1lbnRzIGFyZSBhZG9wdGVkIGxpa2UgUHJvbWlzZS5yZXNvbHZlXG5cdFx0aWYgKCByZW1haW5pbmcgPD0gMSApIHtcblx0XHRcdGFkb3B0VmFsdWUoIHNpbmdsZVZhbHVlLCBtYXN0ZXIuZG9uZSggdXBkYXRlRnVuYyggaSApICkucmVzb2x2ZSwgbWFzdGVyLnJlamVjdCxcblx0XHRcdFx0IXJlbWFpbmluZyApO1xuXG5cdFx0XHQvLyBVc2UgLnRoZW4oKSB0byB1bndyYXAgc2Vjb25kYXJ5IHRoZW5hYmxlcyAoY2YuIGdoLTMwMDApXG5cdFx0XHRpZiAoIG1hc3Rlci5zdGF0ZSgpID09PSBcInBlbmRpbmdcIiB8fFxuXHRcdFx0XHRpc0Z1bmN0aW9uKCByZXNvbHZlVmFsdWVzWyBpIF0gJiYgcmVzb2x2ZVZhbHVlc1sgaSBdLnRoZW4gKSApIHtcblxuXHRcdFx0XHRyZXR1cm4gbWFzdGVyLnRoZW4oKTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHQvLyBNdWx0aXBsZSBhcmd1bWVudHMgYXJlIGFnZ3JlZ2F0ZWQgbGlrZSBQcm9taXNlLmFsbCBhcnJheSBlbGVtZW50c1xuXHRcdHdoaWxlICggaS0tICkge1xuXHRcdFx0YWRvcHRWYWx1ZSggcmVzb2x2ZVZhbHVlc1sgaSBdLCB1cGRhdGVGdW5jKCBpICksIG1hc3Rlci5yZWplY3QgKTtcblx0XHR9XG5cblx0XHRyZXR1cm4gbWFzdGVyLnByb21pc2UoKTtcblx0fVxufSApO1xuXG5cbi8vIFRoZXNlIHVzdWFsbHkgaW5kaWNhdGUgYSBwcm9ncmFtbWVyIG1pc3Rha2UgZHVyaW5nIGRldmVsb3BtZW50LFxuLy8gd2FybiBhYm91dCB0aGVtIEFTQVAgcmF0aGVyIHRoYW4gc3dhbGxvd2luZyB0aGVtIGJ5IGRlZmF1bHQuXG52YXIgcmVycm9yTmFtZXMgPSAvXihFdmFsfEludGVybmFsfFJhbmdlfFJlZmVyZW5jZXxTeW50YXh8VHlwZXxVUkkpRXJyb3IkLztcblxualF1ZXJ5LkRlZmVycmVkLmV4Y2VwdGlvbkhvb2sgPSBmdW5jdGlvbiggZXJyb3IsIHN0YWNrICkge1xuXG5cdC8vIFN1cHBvcnQ6IElFIDggLSA5IG9ubHlcblx0Ly8gQ29uc29sZSBleGlzdHMgd2hlbiBkZXYgdG9vbHMgYXJlIG9wZW4sIHdoaWNoIGNhbiBoYXBwZW4gYXQgYW55IHRpbWVcblx0aWYgKCB3aW5kb3cuY29uc29sZSAmJiB3aW5kb3cuY29uc29sZS53YXJuICYmIGVycm9yICYmIHJlcnJvck5hbWVzLnRlc3QoIGVycm9yLm5hbWUgKSApIHtcblx0XHR3aW5kb3cuY29uc29sZS53YXJuKCBcImpRdWVyeS5EZWZlcnJlZCBleGNlcHRpb246IFwiICsgZXJyb3IubWVzc2FnZSwgZXJyb3Iuc3RhY2ssIHN0YWNrICk7XG5cdH1cbn07XG5cblxuXG5cbmpRdWVyeS5yZWFkeUV4Y2VwdGlvbiA9IGZ1bmN0aW9uKCBlcnJvciApIHtcblx0d2luZG93LnNldFRpbWVvdXQoIGZ1bmN0aW9uKCkge1xuXHRcdHRocm93IGVycm9yO1xuXHR9ICk7XG59O1xuXG5cblxuXG4vLyBUaGUgZGVmZXJyZWQgdXNlZCBvbiBET00gcmVhZHlcbnZhciByZWFkeUxpc3QgPSBqUXVlcnkuRGVmZXJyZWQoKTtcblxualF1ZXJ5LmZuLnJlYWR5ID0gZnVuY3Rpb24oIGZuICkge1xuXG5cdHJlYWR5TGlzdFxuXHRcdC50aGVuKCBmbiApXG5cblx0XHQvLyBXcmFwIGpRdWVyeS5yZWFkeUV4Y2VwdGlvbiBpbiBhIGZ1bmN0aW9uIHNvIHRoYXQgdGhlIGxvb2t1cFxuXHRcdC8vIGhhcHBlbnMgYXQgdGhlIHRpbWUgb2YgZXJyb3IgaGFuZGxpbmcgaW5zdGVhZCBvZiBjYWxsYmFja1xuXHRcdC8vIHJlZ2lzdHJhdGlvbi5cblx0XHQuY2F0Y2goIGZ1bmN0aW9uKCBlcnJvciApIHtcblx0XHRcdGpRdWVyeS5yZWFkeUV4Y2VwdGlvbiggZXJyb3IgKTtcblx0XHR9ICk7XG5cblx0cmV0dXJuIHRoaXM7XG59O1xuXG5qUXVlcnkuZXh0ZW5kKCB7XG5cblx0Ly8gSXMgdGhlIERPTSByZWFkeSB0byBiZSB1c2VkPyBTZXQgdG8gdHJ1ZSBvbmNlIGl0IG9jY3Vycy5cblx0aXNSZWFkeTogZmFsc2UsXG5cblx0Ly8gQSBjb3VudGVyIHRvIHRyYWNrIGhvdyBtYW55IGl0ZW1zIHRvIHdhaXQgZm9yIGJlZm9yZVxuXHQvLyB0aGUgcmVhZHkgZXZlbnQgZmlyZXMuIFNlZSAjNjc4MVxuXHRyZWFkeVdhaXQ6IDEsXG5cblx0Ly8gSGFuZGxlIHdoZW4gdGhlIERPTSBpcyByZWFkeVxuXHRyZWFkeTogZnVuY3Rpb24oIHdhaXQgKSB7XG5cblx0XHQvLyBBYm9ydCBpZiB0aGVyZSBhcmUgcGVuZGluZyBob2xkcyBvciB3ZSdyZSBhbHJlYWR5IHJlYWR5XG5cdFx0aWYgKCB3YWl0ID09PSB0cnVlID8gLS1qUXVlcnkucmVhZHlXYWl0IDogalF1ZXJ5LmlzUmVhZHkgKSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0Ly8gUmVtZW1iZXIgdGhhdCB0aGUgRE9NIGlzIHJlYWR5XG5cdFx0alF1ZXJ5LmlzUmVhZHkgPSB0cnVlO1xuXG5cdFx0Ly8gSWYgYSBub3JtYWwgRE9NIFJlYWR5IGV2ZW50IGZpcmVkLCBkZWNyZW1lbnQsIGFuZCB3YWl0IGlmIG5lZWQgYmVcblx0XHRpZiAoIHdhaXQgIT09IHRydWUgJiYgLS1qUXVlcnkucmVhZHlXYWl0ID4gMCApIHtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHQvLyBJZiB0aGVyZSBhcmUgZnVuY3Rpb25zIGJvdW5kLCB0byBleGVjdXRlXG5cdFx0cmVhZHlMaXN0LnJlc29sdmVXaXRoKCBkb2N1bWVudCwgWyBqUXVlcnkgXSApO1xuXHR9XG59ICk7XG5cbmpRdWVyeS5yZWFkeS50aGVuID0gcmVhZHlMaXN0LnRoZW47XG5cbi8vIFRoZSByZWFkeSBldmVudCBoYW5kbGVyIGFuZCBzZWxmIGNsZWFudXAgbWV0aG9kXG5mdW5jdGlvbiBjb21wbGV0ZWQoKSB7XG5cdGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoIFwiRE9NQ29udGVudExvYWRlZFwiLCBjb21wbGV0ZWQgKTtcblx0d2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoIFwibG9hZFwiLCBjb21wbGV0ZWQgKTtcblx0alF1ZXJ5LnJlYWR5KCk7XG59XG5cbi8vIENhdGNoIGNhc2VzIHdoZXJlICQoZG9jdW1lbnQpLnJlYWR5KCkgaXMgY2FsbGVkXG4vLyBhZnRlciB0aGUgYnJvd3NlciBldmVudCBoYXMgYWxyZWFkeSBvY2N1cnJlZC5cbi8vIFN1cHBvcnQ6IElFIDw9OSAtIDEwIG9ubHlcbi8vIE9sZGVyIElFIHNvbWV0aW1lcyBzaWduYWxzIFwiaW50ZXJhY3RpdmVcIiB0b28gc29vblxuaWYgKCBkb2N1bWVudC5yZWFkeVN0YXRlID09PSBcImNvbXBsZXRlXCIgfHxcblx0KCBkb2N1bWVudC5yZWFkeVN0YXRlICE9PSBcImxvYWRpbmdcIiAmJiAhZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmRvU2Nyb2xsICkgKSB7XG5cblx0Ly8gSGFuZGxlIGl0IGFzeW5jaHJvbm91c2x5IHRvIGFsbG93IHNjcmlwdHMgdGhlIG9wcG9ydHVuaXR5IHRvIGRlbGF5IHJlYWR5XG5cdHdpbmRvdy5zZXRUaW1lb3V0KCBqUXVlcnkucmVhZHkgKTtcblxufSBlbHNlIHtcblxuXHQvLyBVc2UgdGhlIGhhbmR5IGV2ZW50IGNhbGxiYWNrXG5cdGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoIFwiRE9NQ29udGVudExvYWRlZFwiLCBjb21wbGV0ZWQgKTtcblxuXHQvLyBBIGZhbGxiYWNrIHRvIHdpbmRvdy5vbmxvYWQsIHRoYXQgd2lsbCBhbHdheXMgd29ya1xuXHR3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lciggXCJsb2FkXCIsIGNvbXBsZXRlZCApO1xufVxuXG5cblxuXG4vLyBNdWx0aWZ1bmN0aW9uYWwgbWV0aG9kIHRvIGdldCBhbmQgc2V0IHZhbHVlcyBvZiBhIGNvbGxlY3Rpb25cbi8vIFRoZSB2YWx1ZS9zIGNhbiBvcHRpb25hbGx5IGJlIGV4ZWN1dGVkIGlmIGl0J3MgYSBmdW5jdGlvblxudmFyIGFjY2VzcyA9IGZ1bmN0aW9uKCBlbGVtcywgZm4sIGtleSwgdmFsdWUsIGNoYWluYWJsZSwgZW1wdHlHZXQsIHJhdyApIHtcblx0dmFyIGkgPSAwLFxuXHRcdGxlbiA9IGVsZW1zLmxlbmd0aCxcblx0XHRidWxrID0ga2V5ID09IG51bGw7XG5cblx0Ly8gU2V0cyBtYW55IHZhbHVlc1xuXHRpZiAoIHRvVHlwZSgga2V5ICkgPT09IFwib2JqZWN0XCIgKSB7XG5cdFx0Y2hhaW5hYmxlID0gdHJ1ZTtcblx0XHRmb3IgKCBpIGluIGtleSApIHtcblx0XHRcdGFjY2VzcyggZWxlbXMsIGZuLCBpLCBrZXlbIGkgXSwgdHJ1ZSwgZW1wdHlHZXQsIHJhdyApO1xuXHRcdH1cblxuXHQvLyBTZXRzIG9uZSB2YWx1ZVxuXHR9IGVsc2UgaWYgKCB2YWx1ZSAhPT0gdW5kZWZpbmVkICkge1xuXHRcdGNoYWluYWJsZSA9IHRydWU7XG5cblx0XHRpZiAoICFpc0Z1bmN0aW9uKCB2YWx1ZSApICkge1xuXHRcdFx0cmF3ID0gdHJ1ZTtcblx0XHR9XG5cblx0XHRpZiAoIGJ1bGsgKSB7XG5cblx0XHRcdC8vIEJ1bGsgb3BlcmF0aW9ucyBydW4gYWdhaW5zdCB0aGUgZW50aXJlIHNldFxuXHRcdFx0aWYgKCByYXcgKSB7XG5cdFx0XHRcdGZuLmNhbGwoIGVsZW1zLCB2YWx1ZSApO1xuXHRcdFx0XHRmbiA9IG51bGw7XG5cblx0XHRcdC8vIC4uLmV4Y2VwdCB3aGVuIGV4ZWN1dGluZyBmdW5jdGlvbiB2YWx1ZXNcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdGJ1bGsgPSBmbjtcblx0XHRcdFx0Zm4gPSBmdW5jdGlvbiggZWxlbSwgX2tleSwgdmFsdWUgKSB7XG5cdFx0XHRcdFx0cmV0dXJuIGJ1bGsuY2FsbCggalF1ZXJ5KCBlbGVtICksIHZhbHVlICk7XG5cdFx0XHRcdH07XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0aWYgKCBmbiApIHtcblx0XHRcdGZvciAoIDsgaSA8IGxlbjsgaSsrICkge1xuXHRcdFx0XHRmbihcblx0XHRcdFx0XHRlbGVtc1sgaSBdLCBrZXksIHJhdyA/XG5cdFx0XHRcdFx0dmFsdWUgOlxuXHRcdFx0XHRcdHZhbHVlLmNhbGwoIGVsZW1zWyBpIF0sIGksIGZuKCBlbGVtc1sgaSBdLCBrZXkgKSApXG5cdFx0XHRcdCk7XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0aWYgKCBjaGFpbmFibGUgKSB7XG5cdFx0cmV0dXJuIGVsZW1zO1xuXHR9XG5cblx0Ly8gR2V0c1xuXHRpZiAoIGJ1bGsgKSB7XG5cdFx0cmV0dXJuIGZuLmNhbGwoIGVsZW1zICk7XG5cdH1cblxuXHRyZXR1cm4gbGVuID8gZm4oIGVsZW1zWyAwIF0sIGtleSApIDogZW1wdHlHZXQ7XG59O1xuXG5cbi8vIE1hdGNoZXMgZGFzaGVkIHN0cmluZyBmb3IgY2FtZWxpemluZ1xudmFyIHJtc1ByZWZpeCA9IC9eLW1zLS8sXG5cdHJkYXNoQWxwaGEgPSAvLShbYS16XSkvZztcblxuLy8gVXNlZCBieSBjYW1lbENhc2UgYXMgY2FsbGJhY2sgdG8gcmVwbGFjZSgpXG5mdW5jdGlvbiBmY2FtZWxDYXNlKCBfYWxsLCBsZXR0ZXIgKSB7XG5cdHJldHVybiBsZXR0ZXIudG9VcHBlckNhc2UoKTtcbn1cblxuLy8gQ29udmVydCBkYXNoZWQgdG8gY2FtZWxDYXNlOyB1c2VkIGJ5IHRoZSBjc3MgYW5kIGRhdGEgbW9kdWxlc1xuLy8gU3VwcG9ydDogSUUgPD05IC0gMTEsIEVkZ2UgMTIgLSAxNVxuLy8gTWljcm9zb2Z0IGZvcmdvdCB0byBodW1wIHRoZWlyIHZlbmRvciBwcmVmaXggKCM5NTcyKVxuZnVuY3Rpb24gY2FtZWxDYXNlKCBzdHJpbmcgKSB7XG5cdHJldHVybiBzdHJpbmcucmVwbGFjZSggcm1zUHJlZml4LCBcIm1zLVwiICkucmVwbGFjZSggcmRhc2hBbHBoYSwgZmNhbWVsQ2FzZSApO1xufVxudmFyIGFjY2VwdERhdGEgPSBmdW5jdGlvbiggb3duZXIgKSB7XG5cblx0Ly8gQWNjZXB0cyBvbmx5OlxuXHQvLyAgLSBOb2RlXG5cdC8vICAgIC0gTm9kZS5FTEVNRU5UX05PREVcblx0Ly8gICAgLSBOb2RlLkRPQ1VNRU5UX05PREVcblx0Ly8gIC0gT2JqZWN0XG5cdC8vICAgIC0gQW55XG5cdHJldHVybiBvd25lci5ub2RlVHlwZSA9PT0gMSB8fCBvd25lci5ub2RlVHlwZSA9PT0gOSB8fCAhKCArb3duZXIubm9kZVR5cGUgKTtcbn07XG5cblxuXG5cbmZ1bmN0aW9uIERhdGEoKSB7XG5cdHRoaXMuZXhwYW5kbyA9IGpRdWVyeS5leHBhbmRvICsgRGF0YS51aWQrKztcbn1cblxuRGF0YS51aWQgPSAxO1xuXG5EYXRhLnByb3RvdHlwZSA9IHtcblxuXHRjYWNoZTogZnVuY3Rpb24oIG93bmVyICkge1xuXG5cdFx0Ly8gQ2hlY2sgaWYgdGhlIG93bmVyIG9iamVjdCBhbHJlYWR5IGhhcyBhIGNhY2hlXG5cdFx0dmFyIHZhbHVlID0gb3duZXJbIHRoaXMuZXhwYW5kbyBdO1xuXG5cdFx0Ly8gSWYgbm90LCBjcmVhdGUgb25lXG5cdFx0aWYgKCAhdmFsdWUgKSB7XG5cdFx0XHR2YWx1ZSA9IHt9O1xuXG5cdFx0XHQvLyBXZSBjYW4gYWNjZXB0IGRhdGEgZm9yIG5vbi1lbGVtZW50IG5vZGVzIGluIG1vZGVybiBicm93c2Vycyxcblx0XHRcdC8vIGJ1dCB3ZSBzaG91bGQgbm90LCBzZWUgIzgzMzUuXG5cdFx0XHQvLyBBbHdheXMgcmV0dXJuIGFuIGVtcHR5IG9iamVjdC5cblx0XHRcdGlmICggYWNjZXB0RGF0YSggb3duZXIgKSApIHtcblxuXHRcdFx0XHQvLyBJZiBpdCBpcyBhIG5vZGUgdW5saWtlbHkgdG8gYmUgc3RyaW5naWZ5LWVkIG9yIGxvb3BlZCBvdmVyXG5cdFx0XHRcdC8vIHVzZSBwbGFpbiBhc3NpZ25tZW50XG5cdFx0XHRcdGlmICggb3duZXIubm9kZVR5cGUgKSB7XG5cdFx0XHRcdFx0b3duZXJbIHRoaXMuZXhwYW5kbyBdID0gdmFsdWU7XG5cblx0XHRcdFx0Ly8gT3RoZXJ3aXNlIHNlY3VyZSBpdCBpbiBhIG5vbi1lbnVtZXJhYmxlIHByb3BlcnR5XG5cdFx0XHRcdC8vIGNvbmZpZ3VyYWJsZSBtdXN0IGJlIHRydWUgdG8gYWxsb3cgdGhlIHByb3BlcnR5IHRvIGJlXG5cdFx0XHRcdC8vIGRlbGV0ZWQgd2hlbiBkYXRhIGlzIHJlbW92ZWRcblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoIG93bmVyLCB0aGlzLmV4cGFuZG8sIHtcblx0XHRcdFx0XHRcdHZhbHVlOiB2YWx1ZSxcblx0XHRcdFx0XHRcdGNvbmZpZ3VyYWJsZTogdHJ1ZVxuXHRcdFx0XHRcdH0gKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblxuXHRcdHJldHVybiB2YWx1ZTtcblx0fSxcblx0c2V0OiBmdW5jdGlvbiggb3duZXIsIGRhdGEsIHZhbHVlICkge1xuXHRcdHZhciBwcm9wLFxuXHRcdFx0Y2FjaGUgPSB0aGlzLmNhY2hlKCBvd25lciApO1xuXG5cdFx0Ly8gSGFuZGxlOiBbIG93bmVyLCBrZXksIHZhbHVlIF0gYXJnc1xuXHRcdC8vIEFsd2F5cyB1c2UgY2FtZWxDYXNlIGtleSAoZ2gtMjI1Nylcblx0XHRpZiAoIHR5cGVvZiBkYXRhID09PSBcInN0cmluZ1wiICkge1xuXHRcdFx0Y2FjaGVbIGNhbWVsQ2FzZSggZGF0YSApIF0gPSB2YWx1ZTtcblxuXHRcdC8vIEhhbmRsZTogWyBvd25lciwgeyBwcm9wZXJ0aWVzIH0gXSBhcmdzXG5cdFx0fSBlbHNlIHtcblxuXHRcdFx0Ly8gQ29weSB0aGUgcHJvcGVydGllcyBvbmUtYnktb25lIHRvIHRoZSBjYWNoZSBvYmplY3Rcblx0XHRcdGZvciAoIHByb3AgaW4gZGF0YSApIHtcblx0XHRcdFx0Y2FjaGVbIGNhbWVsQ2FzZSggcHJvcCApIF0gPSBkYXRhWyBwcm9wIF07XG5cdFx0XHR9XG5cdFx0fVxuXHRcdHJldHVybiBjYWNoZTtcblx0fSxcblx0Z2V0OiBmdW5jdGlvbiggb3duZXIsIGtleSApIHtcblx0XHRyZXR1cm4ga2V5ID09PSB1bmRlZmluZWQgP1xuXHRcdFx0dGhpcy5jYWNoZSggb3duZXIgKSA6XG5cblx0XHRcdC8vIEFsd2F5cyB1c2UgY2FtZWxDYXNlIGtleSAoZ2gtMjI1Nylcblx0XHRcdG93bmVyWyB0aGlzLmV4cGFuZG8gXSAmJiBvd25lclsgdGhpcy5leHBhbmRvIF1bIGNhbWVsQ2FzZSgga2V5ICkgXTtcblx0fSxcblx0YWNjZXNzOiBmdW5jdGlvbiggb3duZXIsIGtleSwgdmFsdWUgKSB7XG5cblx0XHQvLyBJbiBjYXNlcyB3aGVyZSBlaXRoZXI6XG5cdFx0Ly9cblx0XHQvLyAgIDEuIE5vIGtleSB3YXMgc3BlY2lmaWVkXG5cdFx0Ly8gICAyLiBBIHN0cmluZyBrZXkgd2FzIHNwZWNpZmllZCwgYnV0IG5vIHZhbHVlIHByb3ZpZGVkXG5cdFx0Ly9cblx0XHQvLyBUYWtlIHRoZSBcInJlYWRcIiBwYXRoIGFuZCBhbGxvdyB0aGUgZ2V0IG1ldGhvZCB0byBkZXRlcm1pbmVcblx0XHQvLyB3aGljaCB2YWx1ZSB0byByZXR1cm4sIHJlc3BlY3RpdmVseSBlaXRoZXI6XG5cdFx0Ly9cblx0XHQvLyAgIDEuIFRoZSBlbnRpcmUgY2FjaGUgb2JqZWN0XG5cdFx0Ly8gICAyLiBUaGUgZGF0YSBzdG9yZWQgYXQgdGhlIGtleVxuXHRcdC8vXG5cdFx0aWYgKCBrZXkgPT09IHVuZGVmaW5lZCB8fFxuXHRcdFx0XHQoICgga2V5ICYmIHR5cGVvZiBrZXkgPT09IFwic3RyaW5nXCIgKSAmJiB2YWx1ZSA9PT0gdW5kZWZpbmVkICkgKSB7XG5cblx0XHRcdHJldHVybiB0aGlzLmdldCggb3duZXIsIGtleSApO1xuXHRcdH1cblxuXHRcdC8vIFdoZW4gdGhlIGtleSBpcyBub3QgYSBzdHJpbmcsIG9yIGJvdGggYSBrZXkgYW5kIHZhbHVlXG5cdFx0Ly8gYXJlIHNwZWNpZmllZCwgc2V0IG9yIGV4dGVuZCAoZXhpc3Rpbmcgb2JqZWN0cykgd2l0aCBlaXRoZXI6XG5cdFx0Ly9cblx0XHQvLyAgIDEuIEFuIG9iamVjdCBvZiBwcm9wZXJ0aWVzXG5cdFx0Ly8gICAyLiBBIGtleSBhbmQgdmFsdWVcblx0XHQvL1xuXHRcdHRoaXMuc2V0KCBvd25lciwga2V5LCB2YWx1ZSApO1xuXG5cdFx0Ly8gU2luY2UgdGhlIFwic2V0XCIgcGF0aCBjYW4gaGF2ZSB0d28gcG9zc2libGUgZW50cnkgcG9pbnRzXG5cdFx0Ly8gcmV0dXJuIHRoZSBleHBlY3RlZCBkYXRhIGJhc2VkIG9uIHdoaWNoIHBhdGggd2FzIHRha2VuWypdXG5cdFx0cmV0dXJuIHZhbHVlICE9PSB1bmRlZmluZWQgPyB2YWx1ZSA6IGtleTtcblx0fSxcblx0cmVtb3ZlOiBmdW5jdGlvbiggb3duZXIsIGtleSApIHtcblx0XHR2YXIgaSxcblx0XHRcdGNhY2hlID0gb3duZXJbIHRoaXMuZXhwYW5kbyBdO1xuXG5cdFx0aWYgKCBjYWNoZSA9PT0gdW5kZWZpbmVkICkge1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdGlmICgga2V5ICE9PSB1bmRlZmluZWQgKSB7XG5cblx0XHRcdC8vIFN1cHBvcnQgYXJyYXkgb3Igc3BhY2Ugc2VwYXJhdGVkIHN0cmluZyBvZiBrZXlzXG5cdFx0XHRpZiAoIEFycmF5LmlzQXJyYXkoIGtleSApICkge1xuXG5cdFx0XHRcdC8vIElmIGtleSBpcyBhbiBhcnJheSBvZiBrZXlzLi4uXG5cdFx0XHRcdC8vIFdlIGFsd2F5cyBzZXQgY2FtZWxDYXNlIGtleXMsIHNvIHJlbW92ZSB0aGF0LlxuXHRcdFx0XHRrZXkgPSBrZXkubWFwKCBjYW1lbENhc2UgKTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdGtleSA9IGNhbWVsQ2FzZSgga2V5ICk7XG5cblx0XHRcdFx0Ly8gSWYgYSBrZXkgd2l0aCB0aGUgc3BhY2VzIGV4aXN0cywgdXNlIGl0LlxuXHRcdFx0XHQvLyBPdGhlcndpc2UsIGNyZWF0ZSBhbiBhcnJheSBieSBtYXRjaGluZyBub24td2hpdGVzcGFjZVxuXHRcdFx0XHRrZXkgPSBrZXkgaW4gY2FjaGUgP1xuXHRcdFx0XHRcdFsga2V5IF0gOlxuXHRcdFx0XHRcdCgga2V5Lm1hdGNoKCBybm90aHRtbHdoaXRlICkgfHwgW10gKTtcblx0XHRcdH1cblxuXHRcdFx0aSA9IGtleS5sZW5ndGg7XG5cblx0XHRcdHdoaWxlICggaS0tICkge1xuXHRcdFx0XHRkZWxldGUgY2FjaGVbIGtleVsgaSBdIF07XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0Ly8gUmVtb3ZlIHRoZSBleHBhbmRvIGlmIHRoZXJlJ3Mgbm8gbW9yZSBkYXRhXG5cdFx0aWYgKCBrZXkgPT09IHVuZGVmaW5lZCB8fCBqUXVlcnkuaXNFbXB0eU9iamVjdCggY2FjaGUgKSApIHtcblxuXHRcdFx0Ly8gU3VwcG9ydDogQ2hyb21lIDw9MzUgLSA0NVxuXHRcdFx0Ly8gV2Via2l0ICYgQmxpbmsgcGVyZm9ybWFuY2Ugc3VmZmVycyB3aGVuIGRlbGV0aW5nIHByb3BlcnRpZXNcblx0XHRcdC8vIGZyb20gRE9NIG5vZGVzLCBzbyBzZXQgdG8gdW5kZWZpbmVkIGluc3RlYWRcblx0XHRcdC8vIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC9jaHJvbWl1bS9pc3N1ZXMvZGV0YWlsP2lkPTM3ODYwNyAoYnVnIHJlc3RyaWN0ZWQpXG5cdFx0XHRpZiAoIG93bmVyLm5vZGVUeXBlICkge1xuXHRcdFx0XHRvd25lclsgdGhpcy5leHBhbmRvIF0gPSB1bmRlZmluZWQ7XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRkZWxldGUgb3duZXJbIHRoaXMuZXhwYW5kbyBdO1xuXHRcdFx0fVxuXHRcdH1cblx0fSxcblx0aGFzRGF0YTogZnVuY3Rpb24oIG93bmVyICkge1xuXHRcdHZhciBjYWNoZSA9IG93bmVyWyB0aGlzLmV4cGFuZG8gXTtcblx0XHRyZXR1cm4gY2FjaGUgIT09IHVuZGVmaW5lZCAmJiAhalF1ZXJ5LmlzRW1wdHlPYmplY3QoIGNhY2hlICk7XG5cdH1cbn07XG52YXIgZGF0YVByaXYgPSBuZXcgRGF0YSgpO1xuXG52YXIgZGF0YVVzZXIgPSBuZXcgRGF0YSgpO1xuXG5cblxuLy9cdEltcGxlbWVudGF0aW9uIFN1bW1hcnlcbi8vXG4vL1x0MS4gRW5mb3JjZSBBUEkgc3VyZmFjZSBhbmQgc2VtYW50aWMgY29tcGF0aWJpbGl0eSB3aXRoIDEuOS54IGJyYW5jaFxuLy9cdDIuIEltcHJvdmUgdGhlIG1vZHVsZSdzIG1haW50YWluYWJpbGl0eSBieSByZWR1Y2luZyB0aGUgc3RvcmFnZVxuLy9cdFx0cGF0aHMgdG8gYSBzaW5nbGUgbWVjaGFuaXNtLlxuLy9cdDMuIFVzZSB0aGUgc2FtZSBzaW5nbGUgbWVjaGFuaXNtIHRvIHN1cHBvcnQgXCJwcml2YXRlXCIgYW5kIFwidXNlclwiIGRhdGEuXG4vL1x0NC4gX05ldmVyXyBleHBvc2UgXCJwcml2YXRlXCIgZGF0YSB0byB1c2VyIGNvZGUgKFRPRE86IERyb3AgX2RhdGEsIF9yZW1vdmVEYXRhKVxuLy9cdDUuIEF2b2lkIGV4cG9zaW5nIGltcGxlbWVudGF0aW9uIGRldGFpbHMgb24gdXNlciBvYmplY3RzIChlZy4gZXhwYW5kbyBwcm9wZXJ0aWVzKVxuLy9cdDYuIFByb3ZpZGUgYSBjbGVhciBwYXRoIGZvciBpbXBsZW1lbnRhdGlvbiB1cGdyYWRlIHRvIFdlYWtNYXAgaW4gMjAxNFxuXG52YXIgcmJyYWNlID0gL14oPzpcXHtbXFx3XFxXXSpcXH18XFxbW1xcd1xcV10qXFxdKSQvLFxuXHRybXVsdGlEYXNoID0gL1tBLVpdL2c7XG5cbmZ1bmN0aW9uIGdldERhdGEoIGRhdGEgKSB7XG5cdGlmICggZGF0YSA9PT0gXCJ0cnVlXCIgKSB7XG5cdFx0cmV0dXJuIHRydWU7XG5cdH1cblxuXHRpZiAoIGRhdGEgPT09IFwiZmFsc2VcIiApIHtcblx0XHRyZXR1cm4gZmFsc2U7XG5cdH1cblxuXHRpZiAoIGRhdGEgPT09IFwibnVsbFwiICkge1xuXHRcdHJldHVybiBudWxsO1xuXHR9XG5cblx0Ly8gT25seSBjb252ZXJ0IHRvIGEgbnVtYmVyIGlmIGl0IGRvZXNuJ3QgY2hhbmdlIHRoZSBzdHJpbmdcblx0aWYgKCBkYXRhID09PSArZGF0YSArIFwiXCIgKSB7XG5cdFx0cmV0dXJuICtkYXRhO1xuXHR9XG5cblx0aWYgKCByYnJhY2UudGVzdCggZGF0YSApICkge1xuXHRcdHJldHVybiBKU09OLnBhcnNlKCBkYXRhICk7XG5cdH1cblxuXHRyZXR1cm4gZGF0YTtcbn1cblxuZnVuY3Rpb24gZGF0YUF0dHIoIGVsZW0sIGtleSwgZGF0YSApIHtcblx0dmFyIG5hbWU7XG5cblx0Ly8gSWYgbm90aGluZyB3YXMgZm91bmQgaW50ZXJuYWxseSwgdHJ5IHRvIGZldGNoIGFueVxuXHQvLyBkYXRhIGZyb20gdGhlIEhUTUw1IGRhdGEtKiBhdHRyaWJ1dGVcblx0aWYgKCBkYXRhID09PSB1bmRlZmluZWQgJiYgZWxlbS5ub2RlVHlwZSA9PT0gMSApIHtcblx0XHRuYW1lID0gXCJkYXRhLVwiICsga2V5LnJlcGxhY2UoIHJtdWx0aURhc2gsIFwiLSQmXCIgKS50b0xvd2VyQ2FzZSgpO1xuXHRcdGRhdGEgPSBlbGVtLmdldEF0dHJpYnV0ZSggbmFtZSApO1xuXG5cdFx0aWYgKCB0eXBlb2YgZGF0YSA9PT0gXCJzdHJpbmdcIiApIHtcblx0XHRcdHRyeSB7XG5cdFx0XHRcdGRhdGEgPSBnZXREYXRhKCBkYXRhICk7XG5cdFx0XHR9IGNhdGNoICggZSApIHt9XG5cblx0XHRcdC8vIE1ha2Ugc3VyZSB3ZSBzZXQgdGhlIGRhdGEgc28gaXQgaXNuJ3QgY2hhbmdlZCBsYXRlclxuXHRcdFx0ZGF0YVVzZXIuc2V0KCBlbGVtLCBrZXksIGRhdGEgKTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0ZGF0YSA9IHVuZGVmaW5lZDtcblx0XHR9XG5cdH1cblx0cmV0dXJuIGRhdGE7XG59XG5cbmpRdWVyeS5leHRlbmQoIHtcblx0aGFzRGF0YTogZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0cmV0dXJuIGRhdGFVc2VyLmhhc0RhdGEoIGVsZW0gKSB8fCBkYXRhUHJpdi5oYXNEYXRhKCBlbGVtICk7XG5cdH0sXG5cblx0ZGF0YTogZnVuY3Rpb24oIGVsZW0sIG5hbWUsIGRhdGEgKSB7XG5cdFx0cmV0dXJuIGRhdGFVc2VyLmFjY2VzcyggZWxlbSwgbmFtZSwgZGF0YSApO1xuXHR9LFxuXG5cdHJlbW92ZURhdGE6IGZ1bmN0aW9uKCBlbGVtLCBuYW1lICkge1xuXHRcdGRhdGFVc2VyLnJlbW92ZSggZWxlbSwgbmFtZSApO1xuXHR9LFxuXG5cdC8vIFRPRE86IE5vdyB0aGF0IGFsbCBjYWxscyB0byBfZGF0YSBhbmQgX3JlbW92ZURhdGEgaGF2ZSBiZWVuIHJlcGxhY2VkXG5cdC8vIHdpdGggZGlyZWN0IGNhbGxzIHRvIGRhdGFQcml2IG1ldGhvZHMsIHRoZXNlIGNhbiBiZSBkZXByZWNhdGVkLlxuXHRfZGF0YTogZnVuY3Rpb24oIGVsZW0sIG5hbWUsIGRhdGEgKSB7XG5cdFx0cmV0dXJuIGRhdGFQcml2LmFjY2VzcyggZWxlbSwgbmFtZSwgZGF0YSApO1xuXHR9LFxuXG5cdF9yZW1vdmVEYXRhOiBmdW5jdGlvbiggZWxlbSwgbmFtZSApIHtcblx0XHRkYXRhUHJpdi5yZW1vdmUoIGVsZW0sIG5hbWUgKTtcblx0fVxufSApO1xuXG5qUXVlcnkuZm4uZXh0ZW5kKCB7XG5cdGRhdGE6IGZ1bmN0aW9uKCBrZXksIHZhbHVlICkge1xuXHRcdHZhciBpLCBuYW1lLCBkYXRhLFxuXHRcdFx0ZWxlbSA9IHRoaXNbIDAgXSxcblx0XHRcdGF0dHJzID0gZWxlbSAmJiBlbGVtLmF0dHJpYnV0ZXM7XG5cblx0XHQvLyBHZXRzIGFsbCB2YWx1ZXNcblx0XHRpZiAoIGtleSA9PT0gdW5kZWZpbmVkICkge1xuXHRcdFx0aWYgKCB0aGlzLmxlbmd0aCApIHtcblx0XHRcdFx0ZGF0YSA9IGRhdGFVc2VyLmdldCggZWxlbSApO1xuXG5cdFx0XHRcdGlmICggZWxlbS5ub2RlVHlwZSA9PT0gMSAmJiAhZGF0YVByaXYuZ2V0KCBlbGVtLCBcImhhc0RhdGFBdHRyc1wiICkgKSB7XG5cdFx0XHRcdFx0aSA9IGF0dHJzLmxlbmd0aDtcblx0XHRcdFx0XHR3aGlsZSAoIGktLSApIHtcblxuXHRcdFx0XHRcdFx0Ly8gU3VwcG9ydDogSUUgMTEgb25seVxuXHRcdFx0XHRcdFx0Ly8gVGhlIGF0dHJzIGVsZW1lbnRzIGNhbiBiZSBudWxsICgjMTQ4OTQpXG5cdFx0XHRcdFx0XHRpZiAoIGF0dHJzWyBpIF0gKSB7XG5cdFx0XHRcdFx0XHRcdG5hbWUgPSBhdHRyc1sgaSBdLm5hbWU7XG5cdFx0XHRcdFx0XHRcdGlmICggbmFtZS5pbmRleE9mKCBcImRhdGEtXCIgKSA9PT0gMCApIHtcblx0XHRcdFx0XHRcdFx0XHRuYW1lID0gY2FtZWxDYXNlKCBuYW1lLnNsaWNlKCA1ICkgKTtcblx0XHRcdFx0XHRcdFx0XHRkYXRhQXR0ciggZWxlbSwgbmFtZSwgZGF0YVsgbmFtZSBdICk7XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0ZGF0YVByaXYuc2V0KCBlbGVtLCBcImhhc0RhdGFBdHRyc1wiLCB0cnVlICk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblxuXHRcdFx0cmV0dXJuIGRhdGE7XG5cdFx0fVxuXG5cdFx0Ly8gU2V0cyBtdWx0aXBsZSB2YWx1ZXNcblx0XHRpZiAoIHR5cGVvZiBrZXkgPT09IFwib2JqZWN0XCIgKSB7XG5cdFx0XHRyZXR1cm4gdGhpcy5lYWNoKCBmdW5jdGlvbigpIHtcblx0XHRcdFx0ZGF0YVVzZXIuc2V0KCB0aGlzLCBrZXkgKTtcblx0XHRcdH0gKTtcblx0XHR9XG5cblx0XHRyZXR1cm4gYWNjZXNzKCB0aGlzLCBmdW5jdGlvbiggdmFsdWUgKSB7XG5cdFx0XHR2YXIgZGF0YTtcblxuXHRcdFx0Ly8gVGhlIGNhbGxpbmcgalF1ZXJ5IG9iamVjdCAoZWxlbWVudCBtYXRjaGVzKSBpcyBub3QgZW1wdHlcblx0XHRcdC8vIChhbmQgdGhlcmVmb3JlIGhhcyBhbiBlbGVtZW50IGFwcGVhcnMgYXQgdGhpc1sgMCBdKSBhbmQgdGhlXG5cdFx0XHQvLyBgdmFsdWVgIHBhcmFtZXRlciB3YXMgbm90IHVuZGVmaW5lZC4gQW4gZW1wdHkgalF1ZXJ5IG9iamVjdFxuXHRcdFx0Ly8gd2lsbCByZXN1bHQgaW4gYHVuZGVmaW5lZGAgZm9yIGVsZW0gPSB0aGlzWyAwIF0gd2hpY2ggd2lsbFxuXHRcdFx0Ly8gdGhyb3cgYW4gZXhjZXB0aW9uIGlmIGFuIGF0dGVtcHQgdG8gcmVhZCBhIGRhdGEgY2FjaGUgaXMgbWFkZS5cblx0XHRcdGlmICggZWxlbSAmJiB2YWx1ZSA9PT0gdW5kZWZpbmVkICkge1xuXG5cdFx0XHRcdC8vIEF0dGVtcHQgdG8gZ2V0IGRhdGEgZnJvbSB0aGUgY2FjaGVcblx0XHRcdFx0Ly8gVGhlIGtleSB3aWxsIGFsd2F5cyBiZSBjYW1lbENhc2VkIGluIERhdGFcblx0XHRcdFx0ZGF0YSA9IGRhdGFVc2VyLmdldCggZWxlbSwga2V5ICk7XG5cdFx0XHRcdGlmICggZGF0YSAhPT0gdW5kZWZpbmVkICkge1xuXHRcdFx0XHRcdHJldHVybiBkYXRhO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gQXR0ZW1wdCB0byBcImRpc2NvdmVyXCIgdGhlIGRhdGEgaW5cblx0XHRcdFx0Ly8gSFRNTDUgY3VzdG9tIGRhdGEtKiBhdHRyc1xuXHRcdFx0XHRkYXRhID0gZGF0YUF0dHIoIGVsZW0sIGtleSApO1xuXHRcdFx0XHRpZiAoIGRhdGEgIT09IHVuZGVmaW5lZCApIHtcblx0XHRcdFx0XHRyZXR1cm4gZGF0YTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIFdlIHRyaWVkIHJlYWxseSBoYXJkLCBidXQgdGhlIGRhdGEgZG9lc24ndCBleGlzdC5cblx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBTZXQgdGhlIGRhdGEuLi5cblx0XHRcdHRoaXMuZWFjaCggZnVuY3Rpb24oKSB7XG5cblx0XHRcdFx0Ly8gV2UgYWx3YXlzIHN0b3JlIHRoZSBjYW1lbENhc2VkIGtleVxuXHRcdFx0XHRkYXRhVXNlci5zZXQoIHRoaXMsIGtleSwgdmFsdWUgKTtcblx0XHRcdH0gKTtcblx0XHR9LCBudWxsLCB2YWx1ZSwgYXJndW1lbnRzLmxlbmd0aCA+IDEsIG51bGwsIHRydWUgKTtcblx0fSxcblxuXHRyZW1vdmVEYXRhOiBmdW5jdGlvbigga2V5ICkge1xuXHRcdHJldHVybiB0aGlzLmVhY2goIGZ1bmN0aW9uKCkge1xuXHRcdFx0ZGF0YVVzZXIucmVtb3ZlKCB0aGlzLCBrZXkgKTtcblx0XHR9ICk7XG5cdH1cbn0gKTtcblxuXG5qUXVlcnkuZXh0ZW5kKCB7XG5cdHF1ZXVlOiBmdW5jdGlvbiggZWxlbSwgdHlwZSwgZGF0YSApIHtcblx0XHR2YXIgcXVldWU7XG5cblx0XHRpZiAoIGVsZW0gKSB7XG5cdFx0XHR0eXBlID0gKCB0eXBlIHx8IFwiZnhcIiApICsgXCJxdWV1ZVwiO1xuXHRcdFx0cXVldWUgPSBkYXRhUHJpdi5nZXQoIGVsZW0sIHR5cGUgKTtcblxuXHRcdFx0Ly8gU3BlZWQgdXAgZGVxdWV1ZSBieSBnZXR0aW5nIG91dCBxdWlja2x5IGlmIHRoaXMgaXMganVzdCBhIGxvb2t1cFxuXHRcdFx0aWYgKCBkYXRhICkge1xuXHRcdFx0XHRpZiAoICFxdWV1ZSB8fCBBcnJheS5pc0FycmF5KCBkYXRhICkgKSB7XG5cdFx0XHRcdFx0cXVldWUgPSBkYXRhUHJpdi5hY2Nlc3MoIGVsZW0sIHR5cGUsIGpRdWVyeS5tYWtlQXJyYXkoIGRhdGEgKSApO1xuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdHF1ZXVlLnB1c2goIGRhdGEgKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIHF1ZXVlIHx8IFtdO1xuXHRcdH1cblx0fSxcblxuXHRkZXF1ZXVlOiBmdW5jdGlvbiggZWxlbSwgdHlwZSApIHtcblx0XHR0eXBlID0gdHlwZSB8fCBcImZ4XCI7XG5cblx0XHR2YXIgcXVldWUgPSBqUXVlcnkucXVldWUoIGVsZW0sIHR5cGUgKSxcblx0XHRcdHN0YXJ0TGVuZ3RoID0gcXVldWUubGVuZ3RoLFxuXHRcdFx0Zm4gPSBxdWV1ZS5zaGlmdCgpLFxuXHRcdFx0aG9va3MgPSBqUXVlcnkuX3F1ZXVlSG9va3MoIGVsZW0sIHR5cGUgKSxcblx0XHRcdG5leHQgPSBmdW5jdGlvbigpIHtcblx0XHRcdFx0alF1ZXJ5LmRlcXVldWUoIGVsZW0sIHR5cGUgKTtcblx0XHRcdH07XG5cblx0XHQvLyBJZiB0aGUgZnggcXVldWUgaXMgZGVxdWV1ZWQsIGFsd2F5cyByZW1vdmUgdGhlIHByb2dyZXNzIHNlbnRpbmVsXG5cdFx0aWYgKCBmbiA9PT0gXCJpbnByb2dyZXNzXCIgKSB7XG5cdFx0XHRmbiA9IHF1ZXVlLnNoaWZ0KCk7XG5cdFx0XHRzdGFydExlbmd0aC0tO1xuXHRcdH1cblxuXHRcdGlmICggZm4gKSB7XG5cblx0XHRcdC8vIEFkZCBhIHByb2dyZXNzIHNlbnRpbmVsIHRvIHByZXZlbnQgdGhlIGZ4IHF1ZXVlIGZyb20gYmVpbmdcblx0XHRcdC8vIGF1dG9tYXRpY2FsbHkgZGVxdWV1ZWRcblx0XHRcdGlmICggdHlwZSA9PT0gXCJmeFwiICkge1xuXHRcdFx0XHRxdWV1ZS51bnNoaWZ0KCBcImlucHJvZ3Jlc3NcIiApO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBDbGVhciB1cCB0aGUgbGFzdCBxdWV1ZSBzdG9wIGZ1bmN0aW9uXG5cdFx0XHRkZWxldGUgaG9va3Muc3RvcDtcblx0XHRcdGZuLmNhbGwoIGVsZW0sIG5leHQsIGhvb2tzICk7XG5cdFx0fVxuXG5cdFx0aWYgKCAhc3RhcnRMZW5ndGggJiYgaG9va3MgKSB7XG5cdFx0XHRob29rcy5lbXB0eS5maXJlKCk7XG5cdFx0fVxuXHR9LFxuXG5cdC8vIE5vdCBwdWJsaWMgLSBnZW5lcmF0ZSBhIHF1ZXVlSG9va3Mgb2JqZWN0LCBvciByZXR1cm4gdGhlIGN1cnJlbnQgb25lXG5cdF9xdWV1ZUhvb2tzOiBmdW5jdGlvbiggZWxlbSwgdHlwZSApIHtcblx0XHR2YXIga2V5ID0gdHlwZSArIFwicXVldWVIb29rc1wiO1xuXHRcdHJldHVybiBkYXRhUHJpdi5nZXQoIGVsZW0sIGtleSApIHx8IGRhdGFQcml2LmFjY2VzcyggZWxlbSwga2V5LCB7XG5cdFx0XHRlbXB0eTogalF1ZXJ5LkNhbGxiYWNrcyggXCJvbmNlIG1lbW9yeVwiICkuYWRkKCBmdW5jdGlvbigpIHtcblx0XHRcdFx0ZGF0YVByaXYucmVtb3ZlKCBlbGVtLCBbIHR5cGUgKyBcInF1ZXVlXCIsIGtleSBdICk7XG5cdFx0XHR9IClcblx0XHR9ICk7XG5cdH1cbn0gKTtcblxualF1ZXJ5LmZuLmV4dGVuZCgge1xuXHRxdWV1ZTogZnVuY3Rpb24oIHR5cGUsIGRhdGEgKSB7XG5cdFx0dmFyIHNldHRlciA9IDI7XG5cblx0XHRpZiAoIHR5cGVvZiB0eXBlICE9PSBcInN0cmluZ1wiICkge1xuXHRcdFx0ZGF0YSA9IHR5cGU7XG5cdFx0XHR0eXBlID0gXCJmeFwiO1xuXHRcdFx0c2V0dGVyLS07XG5cdFx0fVxuXG5cdFx0aWYgKCBhcmd1bWVudHMubGVuZ3RoIDwgc2V0dGVyICkge1xuXHRcdFx0cmV0dXJuIGpRdWVyeS5xdWV1ZSggdGhpc1sgMCBdLCB0eXBlICk7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIGRhdGEgPT09IHVuZGVmaW5lZCA/XG5cdFx0XHR0aGlzIDpcblx0XHRcdHRoaXMuZWFjaCggZnVuY3Rpb24oKSB7XG5cdFx0XHRcdHZhciBxdWV1ZSA9IGpRdWVyeS5xdWV1ZSggdGhpcywgdHlwZSwgZGF0YSApO1xuXG5cdFx0XHRcdC8vIEVuc3VyZSBhIGhvb2tzIGZvciB0aGlzIHF1ZXVlXG5cdFx0XHRcdGpRdWVyeS5fcXVldWVIb29rcyggdGhpcywgdHlwZSApO1xuXG5cdFx0XHRcdGlmICggdHlwZSA9PT0gXCJmeFwiICYmIHF1ZXVlWyAwIF0gIT09IFwiaW5wcm9ncmVzc1wiICkge1xuXHRcdFx0XHRcdGpRdWVyeS5kZXF1ZXVlKCB0aGlzLCB0eXBlICk7XG5cdFx0XHRcdH1cblx0XHRcdH0gKTtcblx0fSxcblx0ZGVxdWV1ZTogZnVuY3Rpb24oIHR5cGUgKSB7XG5cdFx0cmV0dXJuIHRoaXMuZWFjaCggZnVuY3Rpb24oKSB7XG5cdFx0XHRqUXVlcnkuZGVxdWV1ZSggdGhpcywgdHlwZSApO1xuXHRcdH0gKTtcblx0fSxcblx0Y2xlYXJRdWV1ZTogZnVuY3Rpb24oIHR5cGUgKSB7XG5cdFx0cmV0dXJuIHRoaXMucXVldWUoIHR5cGUgfHwgXCJmeFwiLCBbXSApO1xuXHR9LFxuXG5cdC8vIEdldCBhIHByb21pc2UgcmVzb2x2ZWQgd2hlbiBxdWV1ZXMgb2YgYSBjZXJ0YWluIHR5cGVcblx0Ly8gYXJlIGVtcHRpZWQgKGZ4IGlzIHRoZSB0eXBlIGJ5IGRlZmF1bHQpXG5cdHByb21pc2U6IGZ1bmN0aW9uKCB0eXBlLCBvYmogKSB7XG5cdFx0dmFyIHRtcCxcblx0XHRcdGNvdW50ID0gMSxcblx0XHRcdGRlZmVyID0galF1ZXJ5LkRlZmVycmVkKCksXG5cdFx0XHRlbGVtZW50cyA9IHRoaXMsXG5cdFx0XHRpID0gdGhpcy5sZW5ndGgsXG5cdFx0XHRyZXNvbHZlID0gZnVuY3Rpb24oKSB7XG5cdFx0XHRcdGlmICggISggLS1jb3VudCApICkge1xuXHRcdFx0XHRcdGRlZmVyLnJlc29sdmVXaXRoKCBlbGVtZW50cywgWyBlbGVtZW50cyBdICk7XG5cdFx0XHRcdH1cblx0XHRcdH07XG5cblx0XHRpZiAoIHR5cGVvZiB0eXBlICE9PSBcInN0cmluZ1wiICkge1xuXHRcdFx0b2JqID0gdHlwZTtcblx0XHRcdHR5cGUgPSB1bmRlZmluZWQ7XG5cdFx0fVxuXHRcdHR5cGUgPSB0eXBlIHx8IFwiZnhcIjtcblxuXHRcdHdoaWxlICggaS0tICkge1xuXHRcdFx0dG1wID0gZGF0YVByaXYuZ2V0KCBlbGVtZW50c1sgaSBdLCB0eXBlICsgXCJxdWV1ZUhvb2tzXCIgKTtcblx0XHRcdGlmICggdG1wICYmIHRtcC5lbXB0eSApIHtcblx0XHRcdFx0Y291bnQrKztcblx0XHRcdFx0dG1wLmVtcHR5LmFkZCggcmVzb2x2ZSApO1xuXHRcdFx0fVxuXHRcdH1cblx0XHRyZXNvbHZlKCk7XG5cdFx0cmV0dXJuIGRlZmVyLnByb21pc2UoIG9iaiApO1xuXHR9XG59ICk7XG52YXIgcG51bSA9ICggL1srLV0/KD86XFxkKlxcLnwpXFxkKyg/OltlRV1bKy1dP1xcZCt8KS8gKS5zb3VyY2U7XG5cbnZhciByY3NzTnVtID0gbmV3IFJlZ0V4cCggXCJeKD86KFsrLV0pPXwpKFwiICsgcG51bSArIFwiKShbYS16JV0qKSRcIiwgXCJpXCIgKTtcblxuXG52YXIgY3NzRXhwYW5kID0gWyBcIlRvcFwiLCBcIlJpZ2h0XCIsIFwiQm90dG9tXCIsIFwiTGVmdFwiIF07XG5cbnZhciBkb2N1bWVudEVsZW1lbnQgPSBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQ7XG5cblxuXG5cdHZhciBpc0F0dGFjaGVkID0gZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRyZXR1cm4galF1ZXJ5LmNvbnRhaW5zKCBlbGVtLm93bmVyRG9jdW1lbnQsIGVsZW0gKTtcblx0XHR9LFxuXHRcdGNvbXBvc2VkID0geyBjb21wb3NlZDogdHJ1ZSB9O1xuXG5cdC8vIFN1cHBvcnQ6IElFIDkgLSAxMSssIEVkZ2UgMTIgLSAxOCssIGlPUyAxMC4wIC0gMTAuMiBvbmx5XG5cdC8vIENoZWNrIGF0dGFjaG1lbnQgYWNyb3NzIHNoYWRvdyBET00gYm91bmRhcmllcyB3aGVuIHBvc3NpYmxlIChnaC0zNTA0KVxuXHQvLyBTdXBwb3J0OiBpT1MgMTAuMC0xMC4yIG9ubHlcblx0Ly8gRWFybHkgaU9TIDEwIHZlcnNpb25zIHN1cHBvcnQgYGF0dGFjaFNoYWRvd2AgYnV0IG5vdCBgZ2V0Um9vdE5vZGVgLFxuXHQvLyBsZWFkaW5nIHRvIGVycm9ycy4gV2UgbmVlZCB0byBjaGVjayBmb3IgYGdldFJvb3ROb2RlYC5cblx0aWYgKCBkb2N1bWVudEVsZW1lbnQuZ2V0Um9vdE5vZGUgKSB7XG5cdFx0aXNBdHRhY2hlZCA9IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0cmV0dXJuIGpRdWVyeS5jb250YWlucyggZWxlbS5vd25lckRvY3VtZW50LCBlbGVtICkgfHxcblx0XHRcdFx0ZWxlbS5nZXRSb290Tm9kZSggY29tcG9zZWQgKSA9PT0gZWxlbS5vd25lckRvY3VtZW50O1xuXHRcdH07XG5cdH1cbnZhciBpc0hpZGRlbldpdGhpblRyZWUgPSBmdW5jdGlvbiggZWxlbSwgZWwgKSB7XG5cblx0XHQvLyBpc0hpZGRlbldpdGhpblRyZWUgbWlnaHQgYmUgY2FsbGVkIGZyb20galF1ZXJ5I2ZpbHRlciBmdW5jdGlvbjtcblx0XHQvLyBpbiB0aGF0IGNhc2UsIGVsZW1lbnQgd2lsbCBiZSBzZWNvbmQgYXJndW1lbnRcblx0XHRlbGVtID0gZWwgfHwgZWxlbTtcblxuXHRcdC8vIElubGluZSBzdHlsZSB0cnVtcHMgYWxsXG5cdFx0cmV0dXJuIGVsZW0uc3R5bGUuZGlzcGxheSA9PT0gXCJub25lXCIgfHxcblx0XHRcdGVsZW0uc3R5bGUuZGlzcGxheSA9PT0gXCJcIiAmJlxuXG5cdFx0XHQvLyBPdGhlcndpc2UsIGNoZWNrIGNvbXB1dGVkIHN0eWxlXG5cdFx0XHQvLyBTdXBwb3J0OiBGaXJlZm94IDw9NDMgLSA0NVxuXHRcdFx0Ly8gRGlzY29ubmVjdGVkIGVsZW1lbnRzIGNhbiBoYXZlIGNvbXB1dGVkIGRpc3BsYXk6IG5vbmUsIHNvIGZpcnN0IGNvbmZpcm0gdGhhdCBlbGVtIGlzXG5cdFx0XHQvLyBpbiB0aGUgZG9jdW1lbnQuXG5cdFx0XHRpc0F0dGFjaGVkKCBlbGVtICkgJiZcblxuXHRcdFx0alF1ZXJ5LmNzcyggZWxlbSwgXCJkaXNwbGF5XCIgKSA9PT0gXCJub25lXCI7XG5cdH07XG5cblxuXG5mdW5jdGlvbiBhZGp1c3RDU1MoIGVsZW0sIHByb3AsIHZhbHVlUGFydHMsIHR3ZWVuICkge1xuXHR2YXIgYWRqdXN0ZWQsIHNjYWxlLFxuXHRcdG1heEl0ZXJhdGlvbnMgPSAyMCxcblx0XHRjdXJyZW50VmFsdWUgPSB0d2VlbiA/XG5cdFx0XHRmdW5jdGlvbigpIHtcblx0XHRcdFx0cmV0dXJuIHR3ZWVuLmN1cigpO1xuXHRcdFx0fSA6XG5cdFx0XHRmdW5jdGlvbigpIHtcblx0XHRcdFx0cmV0dXJuIGpRdWVyeS5jc3MoIGVsZW0sIHByb3AsIFwiXCIgKTtcblx0XHRcdH0sXG5cdFx0aW5pdGlhbCA9IGN1cnJlbnRWYWx1ZSgpLFxuXHRcdHVuaXQgPSB2YWx1ZVBhcnRzICYmIHZhbHVlUGFydHNbIDMgXSB8fCAoIGpRdWVyeS5jc3NOdW1iZXJbIHByb3AgXSA/IFwiXCIgOiBcInB4XCIgKSxcblxuXHRcdC8vIFN0YXJ0aW5nIHZhbHVlIGNvbXB1dGF0aW9uIGlzIHJlcXVpcmVkIGZvciBwb3RlbnRpYWwgdW5pdCBtaXNtYXRjaGVzXG5cdFx0aW5pdGlhbEluVW5pdCA9IGVsZW0ubm9kZVR5cGUgJiZcblx0XHRcdCggalF1ZXJ5LmNzc051bWJlclsgcHJvcCBdIHx8IHVuaXQgIT09IFwicHhcIiAmJiAraW5pdGlhbCApICYmXG5cdFx0XHRyY3NzTnVtLmV4ZWMoIGpRdWVyeS5jc3MoIGVsZW0sIHByb3AgKSApO1xuXG5cdGlmICggaW5pdGlhbEluVW5pdCAmJiBpbml0aWFsSW5Vbml0WyAzIF0gIT09IHVuaXQgKSB7XG5cblx0XHQvLyBTdXBwb3J0OiBGaXJlZm94IDw9NTRcblx0XHQvLyBIYWx2ZSB0aGUgaXRlcmF0aW9uIHRhcmdldCB2YWx1ZSB0byBwcmV2ZW50IGludGVyZmVyZW5jZSBmcm9tIENTUyB1cHBlciBib3VuZHMgKGdoLTIxNDQpXG5cdFx0aW5pdGlhbCA9IGluaXRpYWwgLyAyO1xuXG5cdFx0Ly8gVHJ1c3QgdW5pdHMgcmVwb3J0ZWQgYnkgalF1ZXJ5LmNzc1xuXHRcdHVuaXQgPSB1bml0IHx8IGluaXRpYWxJblVuaXRbIDMgXTtcblxuXHRcdC8vIEl0ZXJhdGl2ZWx5IGFwcHJveGltYXRlIGZyb20gYSBub256ZXJvIHN0YXJ0aW5nIHBvaW50XG5cdFx0aW5pdGlhbEluVW5pdCA9ICtpbml0aWFsIHx8IDE7XG5cblx0XHR3aGlsZSAoIG1heEl0ZXJhdGlvbnMtLSApIHtcblxuXHRcdFx0Ly8gRXZhbHVhdGUgYW5kIHVwZGF0ZSBvdXIgYmVzdCBndWVzcyAoZG91YmxpbmcgZ3Vlc3NlcyB0aGF0IHplcm8gb3V0KS5cblx0XHRcdC8vIEZpbmlzaCBpZiB0aGUgc2NhbGUgZXF1YWxzIG9yIGNyb3NzZXMgMSAobWFraW5nIHRoZSBvbGQqbmV3IHByb2R1Y3Qgbm9uLXBvc2l0aXZlKS5cblx0XHRcdGpRdWVyeS5zdHlsZSggZWxlbSwgcHJvcCwgaW5pdGlhbEluVW5pdCArIHVuaXQgKTtcblx0XHRcdGlmICggKCAxIC0gc2NhbGUgKSAqICggMSAtICggc2NhbGUgPSBjdXJyZW50VmFsdWUoKSAvIGluaXRpYWwgfHwgMC41ICkgKSA8PSAwICkge1xuXHRcdFx0XHRtYXhJdGVyYXRpb25zID0gMDtcblx0XHRcdH1cblx0XHRcdGluaXRpYWxJblVuaXQgPSBpbml0aWFsSW5Vbml0IC8gc2NhbGU7XG5cblx0XHR9XG5cblx0XHRpbml0aWFsSW5Vbml0ID0gaW5pdGlhbEluVW5pdCAqIDI7XG5cdFx0alF1ZXJ5LnN0eWxlKCBlbGVtLCBwcm9wLCBpbml0aWFsSW5Vbml0ICsgdW5pdCApO1xuXG5cdFx0Ly8gTWFrZSBzdXJlIHdlIHVwZGF0ZSB0aGUgdHdlZW4gcHJvcGVydGllcyBsYXRlciBvblxuXHRcdHZhbHVlUGFydHMgPSB2YWx1ZVBhcnRzIHx8IFtdO1xuXHR9XG5cblx0aWYgKCB2YWx1ZVBhcnRzICkge1xuXHRcdGluaXRpYWxJblVuaXQgPSAraW5pdGlhbEluVW5pdCB8fCAraW5pdGlhbCB8fCAwO1xuXG5cdFx0Ly8gQXBwbHkgcmVsYXRpdmUgb2Zmc2V0ICgrPS8tPSkgaWYgc3BlY2lmaWVkXG5cdFx0YWRqdXN0ZWQgPSB2YWx1ZVBhcnRzWyAxIF0gP1xuXHRcdFx0aW5pdGlhbEluVW5pdCArICggdmFsdWVQYXJ0c1sgMSBdICsgMSApICogdmFsdWVQYXJ0c1sgMiBdIDpcblx0XHRcdCt2YWx1ZVBhcnRzWyAyIF07XG5cdFx0aWYgKCB0d2VlbiApIHtcblx0XHRcdHR3ZWVuLnVuaXQgPSB1bml0O1xuXHRcdFx0dHdlZW4uc3RhcnQgPSBpbml0aWFsSW5Vbml0O1xuXHRcdFx0dHdlZW4uZW5kID0gYWRqdXN0ZWQ7XG5cdFx0fVxuXHR9XG5cdHJldHVybiBhZGp1c3RlZDtcbn1cblxuXG52YXIgZGVmYXVsdERpc3BsYXlNYXAgPSB7fTtcblxuZnVuY3Rpb24gZ2V0RGVmYXVsdERpc3BsYXkoIGVsZW0gKSB7XG5cdHZhciB0ZW1wLFxuXHRcdGRvYyA9IGVsZW0ub3duZXJEb2N1bWVudCxcblx0XHRub2RlTmFtZSA9IGVsZW0ubm9kZU5hbWUsXG5cdFx0ZGlzcGxheSA9IGRlZmF1bHREaXNwbGF5TWFwWyBub2RlTmFtZSBdO1xuXG5cdGlmICggZGlzcGxheSApIHtcblx0XHRyZXR1cm4gZGlzcGxheTtcblx0fVxuXG5cdHRlbXAgPSBkb2MuYm9keS5hcHBlbmRDaGlsZCggZG9jLmNyZWF0ZUVsZW1lbnQoIG5vZGVOYW1lICkgKTtcblx0ZGlzcGxheSA9IGpRdWVyeS5jc3MoIHRlbXAsIFwiZGlzcGxheVwiICk7XG5cblx0dGVtcC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKCB0ZW1wICk7XG5cblx0aWYgKCBkaXNwbGF5ID09PSBcIm5vbmVcIiApIHtcblx0XHRkaXNwbGF5ID0gXCJibG9ja1wiO1xuXHR9XG5cdGRlZmF1bHREaXNwbGF5TWFwWyBub2RlTmFtZSBdID0gZGlzcGxheTtcblxuXHRyZXR1cm4gZGlzcGxheTtcbn1cblxuZnVuY3Rpb24gc2hvd0hpZGUoIGVsZW1lbnRzLCBzaG93ICkge1xuXHR2YXIgZGlzcGxheSwgZWxlbSxcblx0XHR2YWx1ZXMgPSBbXSxcblx0XHRpbmRleCA9IDAsXG5cdFx0bGVuZ3RoID0gZWxlbWVudHMubGVuZ3RoO1xuXG5cdC8vIERldGVybWluZSBuZXcgZGlzcGxheSB2YWx1ZSBmb3IgZWxlbWVudHMgdGhhdCBuZWVkIHRvIGNoYW5nZVxuXHRmb3IgKCA7IGluZGV4IDwgbGVuZ3RoOyBpbmRleCsrICkge1xuXHRcdGVsZW0gPSBlbGVtZW50c1sgaW5kZXggXTtcblx0XHRpZiAoICFlbGVtLnN0eWxlICkge1xuXHRcdFx0Y29udGludWU7XG5cdFx0fVxuXG5cdFx0ZGlzcGxheSA9IGVsZW0uc3R5bGUuZGlzcGxheTtcblx0XHRpZiAoIHNob3cgKSB7XG5cblx0XHRcdC8vIFNpbmNlIHdlIGZvcmNlIHZpc2liaWxpdHkgdXBvbiBjYXNjYWRlLWhpZGRlbiBlbGVtZW50cywgYW4gaW1tZWRpYXRlIChhbmQgc2xvdylcblx0XHRcdC8vIGNoZWNrIGlzIHJlcXVpcmVkIGluIHRoaXMgZmlyc3QgbG9vcCB1bmxlc3Mgd2UgaGF2ZSBhIG5vbmVtcHR5IGRpc3BsYXkgdmFsdWUgKGVpdGhlclxuXHRcdFx0Ly8gaW5saW5lIG9yIGFib3V0LXRvLWJlLXJlc3RvcmVkKVxuXHRcdFx0aWYgKCBkaXNwbGF5ID09PSBcIm5vbmVcIiApIHtcblx0XHRcdFx0dmFsdWVzWyBpbmRleCBdID0gZGF0YVByaXYuZ2V0KCBlbGVtLCBcImRpc3BsYXlcIiApIHx8IG51bGw7XG5cdFx0XHRcdGlmICggIXZhbHVlc1sgaW5kZXggXSApIHtcblx0XHRcdFx0XHRlbGVtLnN0eWxlLmRpc3BsYXkgPSBcIlwiO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0XHRpZiAoIGVsZW0uc3R5bGUuZGlzcGxheSA9PT0gXCJcIiAmJiBpc0hpZGRlbldpdGhpblRyZWUoIGVsZW0gKSApIHtcblx0XHRcdFx0dmFsdWVzWyBpbmRleCBdID0gZ2V0RGVmYXVsdERpc3BsYXkoIGVsZW0gKTtcblx0XHRcdH1cblx0XHR9IGVsc2Uge1xuXHRcdFx0aWYgKCBkaXNwbGF5ICE9PSBcIm5vbmVcIiApIHtcblx0XHRcdFx0dmFsdWVzWyBpbmRleCBdID0gXCJub25lXCI7XG5cblx0XHRcdFx0Ly8gUmVtZW1iZXIgd2hhdCB3ZSdyZSBvdmVyd3JpdGluZ1xuXHRcdFx0XHRkYXRhUHJpdi5zZXQoIGVsZW0sIFwiZGlzcGxheVwiLCBkaXNwbGF5ICk7XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0Ly8gU2V0IHRoZSBkaXNwbGF5IG9mIHRoZSBlbGVtZW50cyBpbiBhIHNlY29uZCBsb29wIHRvIGF2b2lkIGNvbnN0YW50IHJlZmxvd1xuXHRmb3IgKCBpbmRleCA9IDA7IGluZGV4IDwgbGVuZ3RoOyBpbmRleCsrICkge1xuXHRcdGlmICggdmFsdWVzWyBpbmRleCBdICE9IG51bGwgKSB7XG5cdFx0XHRlbGVtZW50c1sgaW5kZXggXS5zdHlsZS5kaXNwbGF5ID0gdmFsdWVzWyBpbmRleCBdO1xuXHRcdH1cblx0fVxuXG5cdHJldHVybiBlbGVtZW50cztcbn1cblxualF1ZXJ5LmZuLmV4dGVuZCgge1xuXHRzaG93OiBmdW5jdGlvbigpIHtcblx0XHRyZXR1cm4gc2hvd0hpZGUoIHRoaXMsIHRydWUgKTtcblx0fSxcblx0aGlkZTogZnVuY3Rpb24oKSB7XG5cdFx0cmV0dXJuIHNob3dIaWRlKCB0aGlzICk7XG5cdH0sXG5cdHRvZ2dsZTogZnVuY3Rpb24oIHN0YXRlICkge1xuXHRcdGlmICggdHlwZW9mIHN0YXRlID09PSBcImJvb2xlYW5cIiApIHtcblx0XHRcdHJldHVybiBzdGF0ZSA/IHRoaXMuc2hvdygpIDogdGhpcy5oaWRlKCk7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHRoaXMuZWFjaCggZnVuY3Rpb24oKSB7XG5cdFx0XHRpZiAoIGlzSGlkZGVuV2l0aGluVHJlZSggdGhpcyApICkge1xuXHRcdFx0XHRqUXVlcnkoIHRoaXMgKS5zaG93KCk7XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRqUXVlcnkoIHRoaXMgKS5oaWRlKCk7XG5cdFx0XHR9XG5cdFx0fSApO1xuXHR9XG59ICk7XG52YXIgcmNoZWNrYWJsZVR5cGUgPSAoIC9eKD86Y2hlY2tib3h8cmFkaW8pJC9pICk7XG5cbnZhciBydGFnTmFtZSA9ICggLzwoW2Etel1bXlxcL1xcMD5cXHgyMFxcdFxcclxcblxcZl0qKS9pICk7XG5cbnZhciByc2NyaXB0VHlwZSA9ICggL14kfF5tb2R1bGUkfFxcLyg/OmphdmF8ZWNtYSlzY3JpcHQvaSApO1xuXG5cblxuKCBmdW5jdGlvbigpIHtcblx0dmFyIGZyYWdtZW50ID0gZG9jdW1lbnQuY3JlYXRlRG9jdW1lbnRGcmFnbWVudCgpLFxuXHRcdGRpdiA9IGZyYWdtZW50LmFwcGVuZENoaWxkKCBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCBcImRpdlwiICkgKSxcblx0XHRpbnB1dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoIFwiaW5wdXRcIiApO1xuXG5cdC8vIFN1cHBvcnQ6IEFuZHJvaWQgNC4wIC0gNC4zIG9ubHlcblx0Ly8gQ2hlY2sgc3RhdGUgbG9zdCBpZiB0aGUgbmFtZSBpcyBzZXQgKCMxMTIxNylcblx0Ly8gU3VwcG9ydDogV2luZG93cyBXZWIgQXBwcyAoV1dBKVxuXHQvLyBgbmFtZWAgYW5kIGB0eXBlYCBtdXN0IHVzZSAuc2V0QXR0cmlidXRlIGZvciBXV0EgKCMxNDkwMSlcblx0aW5wdXQuc2V0QXR0cmlidXRlKCBcInR5cGVcIiwgXCJyYWRpb1wiICk7XG5cdGlucHV0LnNldEF0dHJpYnV0ZSggXCJjaGVja2VkXCIsIFwiY2hlY2tlZFwiICk7XG5cdGlucHV0LnNldEF0dHJpYnV0ZSggXCJuYW1lXCIsIFwidFwiICk7XG5cblx0ZGl2LmFwcGVuZENoaWxkKCBpbnB1dCApO1xuXG5cdC8vIFN1cHBvcnQ6IEFuZHJvaWQgPD00LjEgb25seVxuXHQvLyBPbGRlciBXZWJLaXQgZG9lc24ndCBjbG9uZSBjaGVja2VkIHN0YXRlIGNvcnJlY3RseSBpbiBmcmFnbWVudHNcblx0c3VwcG9ydC5jaGVja0Nsb25lID0gZGl2LmNsb25lTm9kZSggdHJ1ZSApLmNsb25lTm9kZSggdHJ1ZSApLmxhc3RDaGlsZC5jaGVja2VkO1xuXG5cdC8vIFN1cHBvcnQ6IElFIDw9MTEgb25seVxuXHQvLyBNYWtlIHN1cmUgdGV4dGFyZWEgKGFuZCBjaGVja2JveCkgZGVmYXVsdFZhbHVlIGlzIHByb3Blcmx5IGNsb25lZFxuXHRkaXYuaW5uZXJIVE1MID0gXCI8dGV4dGFyZWE+eDwvdGV4dGFyZWE+XCI7XG5cdHN1cHBvcnQubm9DbG9uZUNoZWNrZWQgPSAhIWRpdi5jbG9uZU5vZGUoIHRydWUgKS5sYXN0Q2hpbGQuZGVmYXVsdFZhbHVlO1xuXG5cdC8vIFN1cHBvcnQ6IElFIDw9OSBvbmx5XG5cdC8vIElFIDw9OSByZXBsYWNlcyA8b3B0aW9uPiB0YWdzIHdpdGggdGhlaXIgY29udGVudHMgd2hlbiBpbnNlcnRlZCBvdXRzaWRlIG9mXG5cdC8vIHRoZSBzZWxlY3QgZWxlbWVudC5cblx0ZGl2LmlubmVySFRNTCA9IFwiPG9wdGlvbj48L29wdGlvbj5cIjtcblx0c3VwcG9ydC5vcHRpb24gPSAhIWRpdi5sYXN0Q2hpbGQ7XG59ICkoKTtcblxuXG4vLyBXZSBoYXZlIHRvIGNsb3NlIHRoZXNlIHRhZ3MgdG8gc3VwcG9ydCBYSFRNTCAoIzEzMjAwKVxudmFyIHdyYXBNYXAgPSB7XG5cblx0Ly8gWEhUTUwgcGFyc2VycyBkbyBub3QgbWFnaWNhbGx5IGluc2VydCBlbGVtZW50cyBpbiB0aGVcblx0Ly8gc2FtZSB3YXkgdGhhdCB0YWcgc291cCBwYXJzZXJzIGRvLiBTbyB3ZSBjYW5ub3Qgc2hvcnRlblxuXHQvLyB0aGlzIGJ5IG9taXR0aW5nIDx0Ym9keT4gb3Igb3RoZXIgcmVxdWlyZWQgZWxlbWVudHMuXG5cdHRoZWFkOiBbIDEsIFwiPHRhYmxlPlwiLCBcIjwvdGFibGU+XCIgXSxcblx0Y29sOiBbIDIsIFwiPHRhYmxlPjxjb2xncm91cD5cIiwgXCI8L2NvbGdyb3VwPjwvdGFibGU+XCIgXSxcblx0dHI6IFsgMiwgXCI8dGFibGU+PHRib2R5PlwiLCBcIjwvdGJvZHk+PC90YWJsZT5cIiBdLFxuXHR0ZDogWyAzLCBcIjx0YWJsZT48dGJvZHk+PHRyPlwiLCBcIjwvdHI+PC90Ym9keT48L3RhYmxlPlwiIF0sXG5cblx0X2RlZmF1bHQ6IFsgMCwgXCJcIiwgXCJcIiBdXG59O1xuXG53cmFwTWFwLnRib2R5ID0gd3JhcE1hcC50Zm9vdCA9IHdyYXBNYXAuY29sZ3JvdXAgPSB3cmFwTWFwLmNhcHRpb24gPSB3cmFwTWFwLnRoZWFkO1xud3JhcE1hcC50aCA9IHdyYXBNYXAudGQ7XG5cbi8vIFN1cHBvcnQ6IElFIDw9OSBvbmx5XG5pZiAoICFzdXBwb3J0Lm9wdGlvbiApIHtcblx0d3JhcE1hcC5vcHRncm91cCA9IHdyYXBNYXAub3B0aW9uID0gWyAxLCBcIjxzZWxlY3QgbXVsdGlwbGU9J211bHRpcGxlJz5cIiwgXCI8L3NlbGVjdD5cIiBdO1xufVxuXG5cbmZ1bmN0aW9uIGdldEFsbCggY29udGV4dCwgdGFnICkge1xuXG5cdC8vIFN1cHBvcnQ6IElFIDw9OSAtIDExIG9ubHlcblx0Ly8gVXNlIHR5cGVvZiB0byBhdm9pZCB6ZXJvLWFyZ3VtZW50IG1ldGhvZCBpbnZvY2F0aW9uIG9uIGhvc3Qgb2JqZWN0cyAoIzE1MTUxKVxuXHR2YXIgcmV0O1xuXG5cdGlmICggdHlwZW9mIGNvbnRleHQuZ2V0RWxlbWVudHNCeVRhZ05hbWUgIT09IFwidW5kZWZpbmVkXCIgKSB7XG5cdFx0cmV0ID0gY29udGV4dC5nZXRFbGVtZW50c0J5VGFnTmFtZSggdGFnIHx8IFwiKlwiICk7XG5cblx0fSBlbHNlIGlmICggdHlwZW9mIGNvbnRleHQucXVlcnlTZWxlY3RvckFsbCAhPT0gXCJ1bmRlZmluZWRcIiApIHtcblx0XHRyZXQgPSBjb250ZXh0LnF1ZXJ5U2VsZWN0b3JBbGwoIHRhZyB8fCBcIipcIiApO1xuXG5cdH0gZWxzZSB7XG5cdFx0cmV0ID0gW107XG5cdH1cblxuXHRpZiAoIHRhZyA9PT0gdW5kZWZpbmVkIHx8IHRhZyAmJiBub2RlTmFtZSggY29udGV4dCwgdGFnICkgKSB7XG5cdFx0cmV0dXJuIGpRdWVyeS5tZXJnZSggWyBjb250ZXh0IF0sIHJldCApO1xuXHR9XG5cblx0cmV0dXJuIHJldDtcbn1cblxuXG4vLyBNYXJrIHNjcmlwdHMgYXMgaGF2aW5nIGFscmVhZHkgYmVlbiBldmFsdWF0ZWRcbmZ1bmN0aW9uIHNldEdsb2JhbEV2YWwoIGVsZW1zLCByZWZFbGVtZW50cyApIHtcblx0dmFyIGkgPSAwLFxuXHRcdGwgPSBlbGVtcy5sZW5ndGg7XG5cblx0Zm9yICggOyBpIDwgbDsgaSsrICkge1xuXHRcdGRhdGFQcml2LnNldChcblx0XHRcdGVsZW1zWyBpIF0sXG5cdFx0XHRcImdsb2JhbEV2YWxcIixcblx0XHRcdCFyZWZFbGVtZW50cyB8fCBkYXRhUHJpdi5nZXQoIHJlZkVsZW1lbnRzWyBpIF0sIFwiZ2xvYmFsRXZhbFwiIClcblx0XHQpO1xuXHR9XG59XG5cblxudmFyIHJodG1sID0gLzx8JiM/XFx3KzsvO1xuXG5mdW5jdGlvbiBidWlsZEZyYWdtZW50KCBlbGVtcywgY29udGV4dCwgc2NyaXB0cywgc2VsZWN0aW9uLCBpZ25vcmVkICkge1xuXHR2YXIgZWxlbSwgdG1wLCB0YWcsIHdyYXAsIGF0dGFjaGVkLCBqLFxuXHRcdGZyYWdtZW50ID0gY29udGV4dC5jcmVhdGVEb2N1bWVudEZyYWdtZW50KCksXG5cdFx0bm9kZXMgPSBbXSxcblx0XHRpID0gMCxcblx0XHRsID0gZWxlbXMubGVuZ3RoO1xuXG5cdGZvciAoIDsgaSA8IGw7IGkrKyApIHtcblx0XHRlbGVtID0gZWxlbXNbIGkgXTtcblxuXHRcdGlmICggZWxlbSB8fCBlbGVtID09PSAwICkge1xuXG5cdFx0XHQvLyBBZGQgbm9kZXMgZGlyZWN0bHlcblx0XHRcdGlmICggdG9UeXBlKCBlbGVtICkgPT09IFwib2JqZWN0XCIgKSB7XG5cblx0XHRcdFx0Ly8gU3VwcG9ydDogQW5kcm9pZCA8PTQuMCBvbmx5LCBQaGFudG9tSlMgMSBvbmx5XG5cdFx0XHRcdC8vIHB1c2guYXBwbHkoXywgYXJyYXlsaWtlKSB0aHJvd3Mgb24gYW5jaWVudCBXZWJLaXRcblx0XHRcdFx0alF1ZXJ5Lm1lcmdlKCBub2RlcywgZWxlbS5ub2RlVHlwZSA/IFsgZWxlbSBdIDogZWxlbSApO1xuXG5cdFx0XHQvLyBDb252ZXJ0IG5vbi1odG1sIGludG8gYSB0ZXh0IG5vZGVcblx0XHRcdH0gZWxzZSBpZiAoICFyaHRtbC50ZXN0KCBlbGVtICkgKSB7XG5cdFx0XHRcdG5vZGVzLnB1c2goIGNvbnRleHQuY3JlYXRlVGV4dE5vZGUoIGVsZW0gKSApO1xuXG5cdFx0XHQvLyBDb252ZXJ0IGh0bWwgaW50byBET00gbm9kZXNcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdHRtcCA9IHRtcCB8fCBmcmFnbWVudC5hcHBlbmRDaGlsZCggY29udGV4dC5jcmVhdGVFbGVtZW50KCBcImRpdlwiICkgKTtcblxuXHRcdFx0XHQvLyBEZXNlcmlhbGl6ZSBhIHN0YW5kYXJkIHJlcHJlc2VudGF0aW9uXG5cdFx0XHRcdHRhZyA9ICggcnRhZ05hbWUuZXhlYyggZWxlbSApIHx8IFsgXCJcIiwgXCJcIiBdIClbIDEgXS50b0xvd2VyQ2FzZSgpO1xuXHRcdFx0XHR3cmFwID0gd3JhcE1hcFsgdGFnIF0gfHwgd3JhcE1hcC5fZGVmYXVsdDtcblx0XHRcdFx0dG1wLmlubmVySFRNTCA9IHdyYXBbIDEgXSArIGpRdWVyeS5odG1sUHJlZmlsdGVyKCBlbGVtICkgKyB3cmFwWyAyIF07XG5cblx0XHRcdFx0Ly8gRGVzY2VuZCB0aHJvdWdoIHdyYXBwZXJzIHRvIHRoZSByaWdodCBjb250ZW50XG5cdFx0XHRcdGogPSB3cmFwWyAwIF07XG5cdFx0XHRcdHdoaWxlICggai0tICkge1xuXHRcdFx0XHRcdHRtcCA9IHRtcC5sYXN0Q2hpbGQ7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBTdXBwb3J0OiBBbmRyb2lkIDw9NC4wIG9ubHksIFBoYW50b21KUyAxIG9ubHlcblx0XHRcdFx0Ly8gcHVzaC5hcHBseShfLCBhcnJheWxpa2UpIHRocm93cyBvbiBhbmNpZW50IFdlYktpdFxuXHRcdFx0XHRqUXVlcnkubWVyZ2UoIG5vZGVzLCB0bXAuY2hpbGROb2RlcyApO1xuXG5cdFx0XHRcdC8vIFJlbWVtYmVyIHRoZSB0b3AtbGV2ZWwgY29udGFpbmVyXG5cdFx0XHRcdHRtcCA9IGZyYWdtZW50LmZpcnN0Q2hpbGQ7XG5cblx0XHRcdFx0Ly8gRW5zdXJlIHRoZSBjcmVhdGVkIG5vZGVzIGFyZSBvcnBoYW5lZCAoIzEyMzkyKVxuXHRcdFx0XHR0bXAudGV4dENvbnRlbnQgPSBcIlwiO1xuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cdC8vIFJlbW92ZSB3cmFwcGVyIGZyb20gZnJhZ21lbnRcblx0ZnJhZ21lbnQudGV4dENvbnRlbnQgPSBcIlwiO1xuXG5cdGkgPSAwO1xuXHR3aGlsZSAoICggZWxlbSA9IG5vZGVzWyBpKysgXSApICkge1xuXG5cdFx0Ly8gU2tpcCBlbGVtZW50cyBhbHJlYWR5IGluIHRoZSBjb250ZXh0IGNvbGxlY3Rpb24gKHRyYWMtNDA4Nylcblx0XHRpZiAoIHNlbGVjdGlvbiAmJiBqUXVlcnkuaW5BcnJheSggZWxlbSwgc2VsZWN0aW9uICkgPiAtMSApIHtcblx0XHRcdGlmICggaWdub3JlZCApIHtcblx0XHRcdFx0aWdub3JlZC5wdXNoKCBlbGVtICk7XG5cdFx0XHR9XG5cdFx0XHRjb250aW51ZTtcblx0XHR9XG5cblx0XHRhdHRhY2hlZCA9IGlzQXR0YWNoZWQoIGVsZW0gKTtcblxuXHRcdC8vIEFwcGVuZCB0byBmcmFnbWVudFxuXHRcdHRtcCA9IGdldEFsbCggZnJhZ21lbnQuYXBwZW5kQ2hpbGQoIGVsZW0gKSwgXCJzY3JpcHRcIiApO1xuXG5cdFx0Ly8gUHJlc2VydmUgc2NyaXB0IGV2YWx1YXRpb24gaGlzdG9yeVxuXHRcdGlmICggYXR0YWNoZWQgKSB7XG5cdFx0XHRzZXRHbG9iYWxFdmFsKCB0bXAgKTtcblx0XHR9XG5cblx0XHQvLyBDYXB0dXJlIGV4ZWN1dGFibGVzXG5cdFx0aWYgKCBzY3JpcHRzICkge1xuXHRcdFx0aiA9IDA7XG5cdFx0XHR3aGlsZSAoICggZWxlbSA9IHRtcFsgaisrIF0gKSApIHtcblx0XHRcdFx0aWYgKCByc2NyaXB0VHlwZS50ZXN0KCBlbGVtLnR5cGUgfHwgXCJcIiApICkge1xuXHRcdFx0XHRcdHNjcmlwdHMucHVzaCggZWxlbSApO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0cmV0dXJuIGZyYWdtZW50O1xufVxuXG5cbnZhclxuXHRya2V5RXZlbnQgPSAvXmtleS8sXG5cdHJtb3VzZUV2ZW50ID0gL14oPzptb3VzZXxwb2ludGVyfGNvbnRleHRtZW51fGRyYWd8ZHJvcCl8Y2xpY2svLFxuXHRydHlwZW5hbWVzcGFjZSA9IC9eKFteLl0qKSg/OlxcLiguKyl8KS87XG5cbmZ1bmN0aW9uIHJldHVyblRydWUoKSB7XG5cdHJldHVybiB0cnVlO1xufVxuXG5mdW5jdGlvbiByZXR1cm5GYWxzZSgpIHtcblx0cmV0dXJuIGZhbHNlO1xufVxuXG4vLyBTdXBwb3J0OiBJRSA8PTkgLSAxMStcbi8vIGZvY3VzKCkgYW5kIGJsdXIoKSBhcmUgYXN5bmNocm9ub3VzLCBleGNlcHQgd2hlbiB0aGV5IGFyZSBuby1vcC5cbi8vIFNvIGV4cGVjdCBmb2N1cyB0byBiZSBzeW5jaHJvbm91cyB3aGVuIHRoZSBlbGVtZW50IGlzIGFscmVhZHkgYWN0aXZlLFxuLy8gYW5kIGJsdXIgdG8gYmUgc3luY2hyb25vdXMgd2hlbiB0aGUgZWxlbWVudCBpcyBub3QgYWxyZWFkeSBhY3RpdmUuXG4vLyAoZm9jdXMgYW5kIGJsdXIgYXJlIGFsd2F5cyBzeW5jaHJvbm91cyBpbiBvdGhlciBzdXBwb3J0ZWQgYnJvd3NlcnMsXG4vLyB0aGlzIGp1c3QgZGVmaW5lcyB3aGVuIHdlIGNhbiBjb3VudCBvbiBpdCkuXG5mdW5jdGlvbiBleHBlY3RTeW5jKCBlbGVtLCB0eXBlICkge1xuXHRyZXR1cm4gKCBlbGVtID09PSBzYWZlQWN0aXZlRWxlbWVudCgpICkgPT09ICggdHlwZSA9PT0gXCJmb2N1c1wiICk7XG59XG5cbi8vIFN1cHBvcnQ6IElFIDw9OSBvbmx5XG4vLyBBY2Nlc3NpbmcgZG9jdW1lbnQuYWN0aXZlRWxlbWVudCBjYW4gdGhyb3cgdW5leHBlY3RlZGx5XG4vLyBodHRwczovL2J1Z3MuanF1ZXJ5LmNvbS90aWNrZXQvMTMzOTNcbmZ1bmN0aW9uIHNhZmVBY3RpdmVFbGVtZW50KCkge1xuXHR0cnkge1xuXHRcdHJldHVybiBkb2N1bWVudC5hY3RpdmVFbGVtZW50O1xuXHR9IGNhdGNoICggZXJyICkgeyB9XG59XG5cbmZ1bmN0aW9uIG9uKCBlbGVtLCB0eXBlcywgc2VsZWN0b3IsIGRhdGEsIGZuLCBvbmUgKSB7XG5cdHZhciBvcmlnRm4sIHR5cGU7XG5cblx0Ly8gVHlwZXMgY2FuIGJlIGEgbWFwIG9mIHR5cGVzL2hhbmRsZXJzXG5cdGlmICggdHlwZW9mIHR5cGVzID09PSBcIm9iamVjdFwiICkge1xuXG5cdFx0Ly8gKCB0eXBlcy1PYmplY3QsIHNlbGVjdG9yLCBkYXRhIClcblx0XHRpZiAoIHR5cGVvZiBzZWxlY3RvciAhPT0gXCJzdHJpbmdcIiApIHtcblxuXHRcdFx0Ly8gKCB0eXBlcy1PYmplY3QsIGRhdGEgKVxuXHRcdFx0ZGF0YSA9IGRhdGEgfHwgc2VsZWN0b3I7XG5cdFx0XHRzZWxlY3RvciA9IHVuZGVmaW5lZDtcblx0XHR9XG5cdFx0Zm9yICggdHlwZSBpbiB0eXBlcyApIHtcblx0XHRcdG9uKCBlbGVtLCB0eXBlLCBzZWxlY3RvciwgZGF0YSwgdHlwZXNbIHR5cGUgXSwgb25lICk7XG5cdFx0fVxuXHRcdHJldHVybiBlbGVtO1xuXHR9XG5cblx0aWYgKCBkYXRhID09IG51bGwgJiYgZm4gPT0gbnVsbCApIHtcblxuXHRcdC8vICggdHlwZXMsIGZuIClcblx0XHRmbiA9IHNlbGVjdG9yO1xuXHRcdGRhdGEgPSBzZWxlY3RvciA9IHVuZGVmaW5lZDtcblx0fSBlbHNlIGlmICggZm4gPT0gbnVsbCApIHtcblx0XHRpZiAoIHR5cGVvZiBzZWxlY3RvciA9PT0gXCJzdHJpbmdcIiApIHtcblxuXHRcdFx0Ly8gKCB0eXBlcywgc2VsZWN0b3IsIGZuIClcblx0XHRcdGZuID0gZGF0YTtcblx0XHRcdGRhdGEgPSB1bmRlZmluZWQ7XG5cdFx0fSBlbHNlIHtcblxuXHRcdFx0Ly8gKCB0eXBlcywgZGF0YSwgZm4gKVxuXHRcdFx0Zm4gPSBkYXRhO1xuXHRcdFx0ZGF0YSA9IHNlbGVjdG9yO1xuXHRcdFx0c2VsZWN0b3IgPSB1bmRlZmluZWQ7XG5cdFx0fVxuXHR9XG5cdGlmICggZm4gPT09IGZhbHNlICkge1xuXHRcdGZuID0gcmV0dXJuRmFsc2U7XG5cdH0gZWxzZSBpZiAoICFmbiApIHtcblx0XHRyZXR1cm4gZWxlbTtcblx0fVxuXG5cdGlmICggb25lID09PSAxICkge1xuXHRcdG9yaWdGbiA9IGZuO1xuXHRcdGZuID0gZnVuY3Rpb24oIGV2ZW50ICkge1xuXG5cdFx0XHQvLyBDYW4gdXNlIGFuIGVtcHR5IHNldCwgc2luY2UgZXZlbnQgY29udGFpbnMgdGhlIGluZm9cblx0XHRcdGpRdWVyeSgpLm9mZiggZXZlbnQgKTtcblx0XHRcdHJldHVybiBvcmlnRm4uYXBwbHkoIHRoaXMsIGFyZ3VtZW50cyApO1xuXHRcdH07XG5cblx0XHQvLyBVc2Ugc2FtZSBndWlkIHNvIGNhbGxlciBjYW4gcmVtb3ZlIHVzaW5nIG9yaWdGblxuXHRcdGZuLmd1aWQgPSBvcmlnRm4uZ3VpZCB8fCAoIG9yaWdGbi5ndWlkID0galF1ZXJ5Lmd1aWQrKyApO1xuXHR9XG5cdHJldHVybiBlbGVtLmVhY2goIGZ1bmN0aW9uKCkge1xuXHRcdGpRdWVyeS5ldmVudC5hZGQoIHRoaXMsIHR5cGVzLCBmbiwgZGF0YSwgc2VsZWN0b3IgKTtcblx0fSApO1xufVxuXG4vKlxuICogSGVscGVyIGZ1bmN0aW9ucyBmb3IgbWFuYWdpbmcgZXZlbnRzIC0tIG5vdCBwYXJ0IG9mIHRoZSBwdWJsaWMgaW50ZXJmYWNlLlxuICogUHJvcHMgdG8gRGVhbiBFZHdhcmRzJyBhZGRFdmVudCBsaWJyYXJ5IGZvciBtYW55IG9mIHRoZSBpZGVhcy5cbiAqL1xualF1ZXJ5LmV2ZW50ID0ge1xuXG5cdGdsb2JhbDoge30sXG5cblx0YWRkOiBmdW5jdGlvbiggZWxlbSwgdHlwZXMsIGhhbmRsZXIsIGRhdGEsIHNlbGVjdG9yICkge1xuXG5cdFx0dmFyIGhhbmRsZU9iakluLCBldmVudEhhbmRsZSwgdG1wLFxuXHRcdFx0ZXZlbnRzLCB0LCBoYW5kbGVPYmosXG5cdFx0XHRzcGVjaWFsLCBoYW5kbGVycywgdHlwZSwgbmFtZXNwYWNlcywgb3JpZ1R5cGUsXG5cdFx0XHRlbGVtRGF0YSA9IGRhdGFQcml2LmdldCggZWxlbSApO1xuXG5cdFx0Ly8gT25seSBhdHRhY2ggZXZlbnRzIHRvIG9iamVjdHMgdGhhdCBhY2NlcHQgZGF0YVxuXHRcdGlmICggIWFjY2VwdERhdGEoIGVsZW0gKSApIHtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHQvLyBDYWxsZXIgY2FuIHBhc3MgaW4gYW4gb2JqZWN0IG9mIGN1c3RvbSBkYXRhIGluIGxpZXUgb2YgdGhlIGhhbmRsZXJcblx0XHRpZiAoIGhhbmRsZXIuaGFuZGxlciApIHtcblx0XHRcdGhhbmRsZU9iakluID0gaGFuZGxlcjtcblx0XHRcdGhhbmRsZXIgPSBoYW5kbGVPYmpJbi5oYW5kbGVyO1xuXHRcdFx0c2VsZWN0b3IgPSBoYW5kbGVPYmpJbi5zZWxlY3Rvcjtcblx0XHR9XG5cblx0XHQvLyBFbnN1cmUgdGhhdCBpbnZhbGlkIHNlbGVjdG9ycyB0aHJvdyBleGNlcHRpb25zIGF0IGF0dGFjaCB0aW1lXG5cdFx0Ly8gRXZhbHVhdGUgYWdhaW5zdCBkb2N1bWVudEVsZW1lbnQgaW4gY2FzZSBlbGVtIGlzIGEgbm9uLWVsZW1lbnQgbm9kZSAoZS5nLiwgZG9jdW1lbnQpXG5cdFx0aWYgKCBzZWxlY3RvciApIHtcblx0XHRcdGpRdWVyeS5maW5kLm1hdGNoZXNTZWxlY3RvciggZG9jdW1lbnRFbGVtZW50LCBzZWxlY3RvciApO1xuXHRcdH1cblxuXHRcdC8vIE1ha2Ugc3VyZSB0aGF0IHRoZSBoYW5kbGVyIGhhcyBhIHVuaXF1ZSBJRCwgdXNlZCB0byBmaW5kL3JlbW92ZSBpdCBsYXRlclxuXHRcdGlmICggIWhhbmRsZXIuZ3VpZCApIHtcblx0XHRcdGhhbmRsZXIuZ3VpZCA9IGpRdWVyeS5ndWlkKys7XG5cdFx0fVxuXG5cdFx0Ly8gSW5pdCB0aGUgZWxlbWVudCdzIGV2ZW50IHN0cnVjdHVyZSBhbmQgbWFpbiBoYW5kbGVyLCBpZiB0aGlzIGlzIHRoZSBmaXJzdFxuXHRcdGlmICggISggZXZlbnRzID0gZWxlbURhdGEuZXZlbnRzICkgKSB7XG5cdFx0XHRldmVudHMgPSBlbGVtRGF0YS5ldmVudHMgPSBPYmplY3QuY3JlYXRlKCBudWxsICk7XG5cdFx0fVxuXHRcdGlmICggISggZXZlbnRIYW5kbGUgPSBlbGVtRGF0YS5oYW5kbGUgKSApIHtcblx0XHRcdGV2ZW50SGFuZGxlID0gZWxlbURhdGEuaGFuZGxlID0gZnVuY3Rpb24oIGUgKSB7XG5cblx0XHRcdFx0Ly8gRGlzY2FyZCB0aGUgc2Vjb25kIGV2ZW50IG9mIGEgalF1ZXJ5LmV2ZW50LnRyaWdnZXIoKSBhbmRcblx0XHRcdFx0Ly8gd2hlbiBhbiBldmVudCBpcyBjYWxsZWQgYWZ0ZXIgYSBwYWdlIGhhcyB1bmxvYWRlZFxuXHRcdFx0XHRyZXR1cm4gdHlwZW9mIGpRdWVyeSAhPT0gXCJ1bmRlZmluZWRcIiAmJiBqUXVlcnkuZXZlbnQudHJpZ2dlcmVkICE9PSBlLnR5cGUgP1xuXHRcdFx0XHRcdGpRdWVyeS5ldmVudC5kaXNwYXRjaC5hcHBseSggZWxlbSwgYXJndW1lbnRzICkgOiB1bmRlZmluZWQ7XG5cdFx0XHR9O1xuXHRcdH1cblxuXHRcdC8vIEhhbmRsZSBtdWx0aXBsZSBldmVudHMgc2VwYXJhdGVkIGJ5IGEgc3BhY2Vcblx0XHR0eXBlcyA9ICggdHlwZXMgfHwgXCJcIiApLm1hdGNoKCBybm90aHRtbHdoaXRlICkgfHwgWyBcIlwiIF07XG5cdFx0dCA9IHR5cGVzLmxlbmd0aDtcblx0XHR3aGlsZSAoIHQtLSApIHtcblx0XHRcdHRtcCA9IHJ0eXBlbmFtZXNwYWNlLmV4ZWMoIHR5cGVzWyB0IF0gKSB8fCBbXTtcblx0XHRcdHR5cGUgPSBvcmlnVHlwZSA9IHRtcFsgMSBdO1xuXHRcdFx0bmFtZXNwYWNlcyA9ICggdG1wWyAyIF0gfHwgXCJcIiApLnNwbGl0KCBcIi5cIiApLnNvcnQoKTtcblxuXHRcdFx0Ly8gVGhlcmUgKm11c3QqIGJlIGEgdHlwZSwgbm8gYXR0YWNoaW5nIG5hbWVzcGFjZS1vbmx5IGhhbmRsZXJzXG5cdFx0XHRpZiAoICF0eXBlICkge1xuXHRcdFx0XHRjb250aW51ZTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gSWYgZXZlbnQgY2hhbmdlcyBpdHMgdHlwZSwgdXNlIHRoZSBzcGVjaWFsIGV2ZW50IGhhbmRsZXJzIGZvciB0aGUgY2hhbmdlZCB0eXBlXG5cdFx0XHRzcGVjaWFsID0galF1ZXJ5LmV2ZW50LnNwZWNpYWxbIHR5cGUgXSB8fCB7fTtcblxuXHRcdFx0Ly8gSWYgc2VsZWN0b3IgZGVmaW5lZCwgZGV0ZXJtaW5lIHNwZWNpYWwgZXZlbnQgYXBpIHR5cGUsIG90aGVyd2lzZSBnaXZlbiB0eXBlXG5cdFx0XHR0eXBlID0gKCBzZWxlY3RvciA/IHNwZWNpYWwuZGVsZWdhdGVUeXBlIDogc3BlY2lhbC5iaW5kVHlwZSApIHx8IHR5cGU7XG5cblx0XHRcdC8vIFVwZGF0ZSBzcGVjaWFsIGJhc2VkIG9uIG5ld2x5IHJlc2V0IHR5cGVcblx0XHRcdHNwZWNpYWwgPSBqUXVlcnkuZXZlbnQuc3BlY2lhbFsgdHlwZSBdIHx8IHt9O1xuXG5cdFx0XHQvLyBoYW5kbGVPYmogaXMgcGFzc2VkIHRvIGFsbCBldmVudCBoYW5kbGVyc1xuXHRcdFx0aGFuZGxlT2JqID0galF1ZXJ5LmV4dGVuZCgge1xuXHRcdFx0XHR0eXBlOiB0eXBlLFxuXHRcdFx0XHRvcmlnVHlwZTogb3JpZ1R5cGUsXG5cdFx0XHRcdGRhdGE6IGRhdGEsXG5cdFx0XHRcdGhhbmRsZXI6IGhhbmRsZXIsXG5cdFx0XHRcdGd1aWQ6IGhhbmRsZXIuZ3VpZCxcblx0XHRcdFx0c2VsZWN0b3I6IHNlbGVjdG9yLFxuXHRcdFx0XHRuZWVkc0NvbnRleHQ6IHNlbGVjdG9yICYmIGpRdWVyeS5leHByLm1hdGNoLm5lZWRzQ29udGV4dC50ZXN0KCBzZWxlY3RvciApLFxuXHRcdFx0XHRuYW1lc3BhY2U6IG5hbWVzcGFjZXMuam9pbiggXCIuXCIgKVxuXHRcdFx0fSwgaGFuZGxlT2JqSW4gKTtcblxuXHRcdFx0Ly8gSW5pdCB0aGUgZXZlbnQgaGFuZGxlciBxdWV1ZSBpZiB3ZSdyZSB0aGUgZmlyc3Rcblx0XHRcdGlmICggISggaGFuZGxlcnMgPSBldmVudHNbIHR5cGUgXSApICkge1xuXHRcdFx0XHRoYW5kbGVycyA9IGV2ZW50c1sgdHlwZSBdID0gW107XG5cdFx0XHRcdGhhbmRsZXJzLmRlbGVnYXRlQ291bnQgPSAwO1xuXG5cdFx0XHRcdC8vIE9ubHkgdXNlIGFkZEV2ZW50TGlzdGVuZXIgaWYgdGhlIHNwZWNpYWwgZXZlbnRzIGhhbmRsZXIgcmV0dXJucyBmYWxzZVxuXHRcdFx0XHRpZiAoICFzcGVjaWFsLnNldHVwIHx8XG5cdFx0XHRcdFx0c3BlY2lhbC5zZXR1cC5jYWxsKCBlbGVtLCBkYXRhLCBuYW1lc3BhY2VzLCBldmVudEhhbmRsZSApID09PSBmYWxzZSApIHtcblxuXHRcdFx0XHRcdGlmICggZWxlbS5hZGRFdmVudExpc3RlbmVyICkge1xuXHRcdFx0XHRcdFx0ZWxlbS5hZGRFdmVudExpc3RlbmVyKCB0eXBlLCBldmVudEhhbmRsZSApO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXG5cdFx0XHRpZiAoIHNwZWNpYWwuYWRkICkge1xuXHRcdFx0XHRzcGVjaWFsLmFkZC5jYWxsKCBlbGVtLCBoYW5kbGVPYmogKTtcblxuXHRcdFx0XHRpZiAoICFoYW5kbGVPYmouaGFuZGxlci5ndWlkICkge1xuXHRcdFx0XHRcdGhhbmRsZU9iai5oYW5kbGVyLmd1aWQgPSBoYW5kbGVyLmd1aWQ7XG5cdFx0XHRcdH1cblx0XHRcdH1cblxuXHRcdFx0Ly8gQWRkIHRvIHRoZSBlbGVtZW50J3MgaGFuZGxlciBsaXN0LCBkZWxlZ2F0ZXMgaW4gZnJvbnRcblx0XHRcdGlmICggc2VsZWN0b3IgKSB7XG5cdFx0XHRcdGhhbmRsZXJzLnNwbGljZSggaGFuZGxlcnMuZGVsZWdhdGVDb3VudCsrLCAwLCBoYW5kbGVPYmogKTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdGhhbmRsZXJzLnB1c2goIGhhbmRsZU9iaiApO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBLZWVwIHRyYWNrIG9mIHdoaWNoIGV2ZW50cyBoYXZlIGV2ZXIgYmVlbiB1c2VkLCBmb3IgZXZlbnQgb3B0aW1pemF0aW9uXG5cdFx0XHRqUXVlcnkuZXZlbnQuZ2xvYmFsWyB0eXBlIF0gPSB0cnVlO1xuXHRcdH1cblxuXHR9LFxuXG5cdC8vIERldGFjaCBhbiBldmVudCBvciBzZXQgb2YgZXZlbnRzIGZyb20gYW4gZWxlbWVudFxuXHRyZW1vdmU6IGZ1bmN0aW9uKCBlbGVtLCB0eXBlcywgaGFuZGxlciwgc2VsZWN0b3IsIG1hcHBlZFR5cGVzICkge1xuXG5cdFx0dmFyIGosIG9yaWdDb3VudCwgdG1wLFxuXHRcdFx0ZXZlbnRzLCB0LCBoYW5kbGVPYmosXG5cdFx0XHRzcGVjaWFsLCBoYW5kbGVycywgdHlwZSwgbmFtZXNwYWNlcywgb3JpZ1R5cGUsXG5cdFx0XHRlbGVtRGF0YSA9IGRhdGFQcml2Lmhhc0RhdGEoIGVsZW0gKSAmJiBkYXRhUHJpdi5nZXQoIGVsZW0gKTtcblxuXHRcdGlmICggIWVsZW1EYXRhIHx8ICEoIGV2ZW50cyA9IGVsZW1EYXRhLmV2ZW50cyApICkge1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdC8vIE9uY2UgZm9yIGVhY2ggdHlwZS5uYW1lc3BhY2UgaW4gdHlwZXM7IHR5cGUgbWF5IGJlIG9taXR0ZWRcblx0XHR0eXBlcyA9ICggdHlwZXMgfHwgXCJcIiApLm1hdGNoKCBybm90aHRtbHdoaXRlICkgfHwgWyBcIlwiIF07XG5cdFx0dCA9IHR5cGVzLmxlbmd0aDtcblx0XHR3aGlsZSAoIHQtLSApIHtcblx0XHRcdHRtcCA9IHJ0eXBlbmFtZXNwYWNlLmV4ZWMoIHR5cGVzWyB0IF0gKSB8fCBbXTtcblx0XHRcdHR5cGUgPSBvcmlnVHlwZSA9IHRtcFsgMSBdO1xuXHRcdFx0bmFtZXNwYWNlcyA9ICggdG1wWyAyIF0gfHwgXCJcIiApLnNwbGl0KCBcIi5cIiApLnNvcnQoKTtcblxuXHRcdFx0Ly8gVW5iaW5kIGFsbCBldmVudHMgKG9uIHRoaXMgbmFtZXNwYWNlLCBpZiBwcm92aWRlZCkgZm9yIHRoZSBlbGVtZW50XG5cdFx0XHRpZiAoICF0eXBlICkge1xuXHRcdFx0XHRmb3IgKCB0eXBlIGluIGV2ZW50cyApIHtcblx0XHRcdFx0XHRqUXVlcnkuZXZlbnQucmVtb3ZlKCBlbGVtLCB0eXBlICsgdHlwZXNbIHQgXSwgaGFuZGxlciwgc2VsZWN0b3IsIHRydWUgKTtcblx0XHRcdFx0fVxuXHRcdFx0XHRjb250aW51ZTtcblx0XHRcdH1cblxuXHRcdFx0c3BlY2lhbCA9IGpRdWVyeS5ldmVudC5zcGVjaWFsWyB0eXBlIF0gfHwge307XG5cdFx0XHR0eXBlID0gKCBzZWxlY3RvciA/IHNwZWNpYWwuZGVsZWdhdGVUeXBlIDogc3BlY2lhbC5iaW5kVHlwZSApIHx8IHR5cGU7XG5cdFx0XHRoYW5kbGVycyA9IGV2ZW50c1sgdHlwZSBdIHx8IFtdO1xuXHRcdFx0dG1wID0gdG1wWyAyIF0gJiZcblx0XHRcdFx0bmV3IFJlZ0V4cCggXCIoXnxcXFxcLilcIiArIG5hbWVzcGFjZXMuam9pbiggXCJcXFxcLig/Oi4qXFxcXC58KVwiICkgKyBcIihcXFxcLnwkKVwiICk7XG5cblx0XHRcdC8vIFJlbW92ZSBtYXRjaGluZyBldmVudHNcblx0XHRcdG9yaWdDb3VudCA9IGogPSBoYW5kbGVycy5sZW5ndGg7XG5cdFx0XHR3aGlsZSAoIGotLSApIHtcblx0XHRcdFx0aGFuZGxlT2JqID0gaGFuZGxlcnNbIGogXTtcblxuXHRcdFx0XHRpZiAoICggbWFwcGVkVHlwZXMgfHwgb3JpZ1R5cGUgPT09IGhhbmRsZU9iai5vcmlnVHlwZSApICYmXG5cdFx0XHRcdFx0KCAhaGFuZGxlciB8fCBoYW5kbGVyLmd1aWQgPT09IGhhbmRsZU9iai5ndWlkICkgJiZcblx0XHRcdFx0XHQoICF0bXAgfHwgdG1wLnRlc3QoIGhhbmRsZU9iai5uYW1lc3BhY2UgKSApICYmXG5cdFx0XHRcdFx0KCAhc2VsZWN0b3IgfHwgc2VsZWN0b3IgPT09IGhhbmRsZU9iai5zZWxlY3RvciB8fFxuXHRcdFx0XHRcdFx0c2VsZWN0b3IgPT09IFwiKipcIiAmJiBoYW5kbGVPYmouc2VsZWN0b3IgKSApIHtcblx0XHRcdFx0XHRoYW5kbGVycy5zcGxpY2UoIGosIDEgKTtcblxuXHRcdFx0XHRcdGlmICggaGFuZGxlT2JqLnNlbGVjdG9yICkge1xuXHRcdFx0XHRcdFx0aGFuZGxlcnMuZGVsZWdhdGVDb3VudC0tO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRpZiAoIHNwZWNpYWwucmVtb3ZlICkge1xuXHRcdFx0XHRcdFx0c3BlY2lhbC5yZW1vdmUuY2FsbCggZWxlbSwgaGFuZGxlT2JqICk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHRcdC8vIFJlbW92ZSBnZW5lcmljIGV2ZW50IGhhbmRsZXIgaWYgd2UgcmVtb3ZlZCBzb21ldGhpbmcgYW5kIG5vIG1vcmUgaGFuZGxlcnMgZXhpc3Rcblx0XHRcdC8vIChhdm9pZHMgcG90ZW50aWFsIGZvciBlbmRsZXNzIHJlY3Vyc2lvbiBkdXJpbmcgcmVtb3ZhbCBvZiBzcGVjaWFsIGV2ZW50IGhhbmRsZXJzKVxuXHRcdFx0aWYgKCBvcmlnQ291bnQgJiYgIWhhbmRsZXJzLmxlbmd0aCApIHtcblx0XHRcdFx0aWYgKCAhc3BlY2lhbC50ZWFyZG93biB8fFxuXHRcdFx0XHRcdHNwZWNpYWwudGVhcmRvd24uY2FsbCggZWxlbSwgbmFtZXNwYWNlcywgZWxlbURhdGEuaGFuZGxlICkgPT09IGZhbHNlICkge1xuXG5cdFx0XHRcdFx0alF1ZXJ5LnJlbW92ZUV2ZW50KCBlbGVtLCB0eXBlLCBlbGVtRGF0YS5oYW5kbGUgKTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdGRlbGV0ZSBldmVudHNbIHR5cGUgXTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHQvLyBSZW1vdmUgZGF0YSBhbmQgdGhlIGV4cGFuZG8gaWYgaXQncyBubyBsb25nZXIgdXNlZFxuXHRcdGlmICggalF1ZXJ5LmlzRW1wdHlPYmplY3QoIGV2ZW50cyApICkge1xuXHRcdFx0ZGF0YVByaXYucmVtb3ZlKCBlbGVtLCBcImhhbmRsZSBldmVudHNcIiApO1xuXHRcdH1cblx0fSxcblxuXHRkaXNwYXRjaDogZnVuY3Rpb24oIG5hdGl2ZUV2ZW50ICkge1xuXG5cdFx0dmFyIGksIGosIHJldCwgbWF0Y2hlZCwgaGFuZGxlT2JqLCBoYW5kbGVyUXVldWUsXG5cdFx0XHRhcmdzID0gbmV3IEFycmF5KCBhcmd1bWVudHMubGVuZ3RoICksXG5cblx0XHRcdC8vIE1ha2UgYSB3cml0YWJsZSBqUXVlcnkuRXZlbnQgZnJvbSB0aGUgbmF0aXZlIGV2ZW50IG9iamVjdFxuXHRcdFx0ZXZlbnQgPSBqUXVlcnkuZXZlbnQuZml4KCBuYXRpdmVFdmVudCApLFxuXG5cdFx0XHRoYW5kbGVycyA9IChcblx0XHRcdFx0XHRkYXRhUHJpdi5nZXQoIHRoaXMsIFwiZXZlbnRzXCIgKSB8fCBPYmplY3QuY3JlYXRlKCBudWxsIClcblx0XHRcdFx0KVsgZXZlbnQudHlwZSBdIHx8IFtdLFxuXHRcdFx0c3BlY2lhbCA9IGpRdWVyeS5ldmVudC5zcGVjaWFsWyBldmVudC50eXBlIF0gfHwge307XG5cblx0XHQvLyBVc2UgdGhlIGZpeC1lZCBqUXVlcnkuRXZlbnQgcmF0aGVyIHRoYW4gdGhlIChyZWFkLW9ubHkpIG5hdGl2ZSBldmVudFxuXHRcdGFyZ3NbIDAgXSA9IGV2ZW50O1xuXG5cdFx0Zm9yICggaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKysgKSB7XG5cdFx0XHRhcmdzWyBpIF0gPSBhcmd1bWVudHNbIGkgXTtcblx0XHR9XG5cblx0XHRldmVudC5kZWxlZ2F0ZVRhcmdldCA9IHRoaXM7XG5cblx0XHQvLyBDYWxsIHRoZSBwcmVEaXNwYXRjaCBob29rIGZvciB0aGUgbWFwcGVkIHR5cGUsIGFuZCBsZXQgaXQgYmFpbCBpZiBkZXNpcmVkXG5cdFx0aWYgKCBzcGVjaWFsLnByZURpc3BhdGNoICYmIHNwZWNpYWwucHJlRGlzcGF0Y2guY2FsbCggdGhpcywgZXZlbnQgKSA9PT0gZmFsc2UgKSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0Ly8gRGV0ZXJtaW5lIGhhbmRsZXJzXG5cdFx0aGFuZGxlclF1ZXVlID0galF1ZXJ5LmV2ZW50LmhhbmRsZXJzLmNhbGwoIHRoaXMsIGV2ZW50LCBoYW5kbGVycyApO1xuXG5cdFx0Ly8gUnVuIGRlbGVnYXRlcyBmaXJzdDsgdGhleSBtYXkgd2FudCB0byBzdG9wIHByb3BhZ2F0aW9uIGJlbmVhdGggdXNcblx0XHRpID0gMDtcblx0XHR3aGlsZSAoICggbWF0Y2hlZCA9IGhhbmRsZXJRdWV1ZVsgaSsrIF0gKSAmJiAhZXZlbnQuaXNQcm9wYWdhdGlvblN0b3BwZWQoKSApIHtcblx0XHRcdGV2ZW50LmN1cnJlbnRUYXJnZXQgPSBtYXRjaGVkLmVsZW07XG5cblx0XHRcdGogPSAwO1xuXHRcdFx0d2hpbGUgKCAoIGhhbmRsZU9iaiA9IG1hdGNoZWQuaGFuZGxlcnNbIGorKyBdICkgJiZcblx0XHRcdFx0IWV2ZW50LmlzSW1tZWRpYXRlUHJvcGFnYXRpb25TdG9wcGVkKCkgKSB7XG5cblx0XHRcdFx0Ly8gSWYgdGhlIGV2ZW50IGlzIG5hbWVzcGFjZWQsIHRoZW4gZWFjaCBoYW5kbGVyIGlzIG9ubHkgaW52b2tlZCBpZiBpdCBpc1xuXHRcdFx0XHQvLyBzcGVjaWFsbHkgdW5pdmVyc2FsIG9yIGl0cyBuYW1lc3BhY2VzIGFyZSBhIHN1cGVyc2V0IG9mIHRoZSBldmVudCdzLlxuXHRcdFx0XHRpZiAoICFldmVudC5ybmFtZXNwYWNlIHx8IGhhbmRsZU9iai5uYW1lc3BhY2UgPT09IGZhbHNlIHx8XG5cdFx0XHRcdFx0ZXZlbnQucm5hbWVzcGFjZS50ZXN0KCBoYW5kbGVPYmoubmFtZXNwYWNlICkgKSB7XG5cblx0XHRcdFx0XHRldmVudC5oYW5kbGVPYmogPSBoYW5kbGVPYmo7XG5cdFx0XHRcdFx0ZXZlbnQuZGF0YSA9IGhhbmRsZU9iai5kYXRhO1xuXG5cdFx0XHRcdFx0cmV0ID0gKCAoIGpRdWVyeS5ldmVudC5zcGVjaWFsWyBoYW5kbGVPYmoub3JpZ1R5cGUgXSB8fCB7fSApLmhhbmRsZSB8fFxuXHRcdFx0XHRcdFx0aGFuZGxlT2JqLmhhbmRsZXIgKS5hcHBseSggbWF0Y2hlZC5lbGVtLCBhcmdzICk7XG5cblx0XHRcdFx0XHRpZiAoIHJldCAhPT0gdW5kZWZpbmVkICkge1xuXHRcdFx0XHRcdFx0aWYgKCAoIGV2ZW50LnJlc3VsdCA9IHJldCApID09PSBmYWxzZSApIHtcblx0XHRcdFx0XHRcdFx0ZXZlbnQucHJldmVudERlZmF1bHQoKTtcblx0XHRcdFx0XHRcdFx0ZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0Ly8gQ2FsbCB0aGUgcG9zdERpc3BhdGNoIGhvb2sgZm9yIHRoZSBtYXBwZWQgdHlwZVxuXHRcdGlmICggc3BlY2lhbC5wb3N0RGlzcGF0Y2ggKSB7XG5cdFx0XHRzcGVjaWFsLnBvc3REaXNwYXRjaC5jYWxsKCB0aGlzLCBldmVudCApO1xuXHRcdH1cblxuXHRcdHJldHVybiBldmVudC5yZXN1bHQ7XG5cdH0sXG5cblx0aGFuZGxlcnM6IGZ1bmN0aW9uKCBldmVudCwgaGFuZGxlcnMgKSB7XG5cdFx0dmFyIGksIGhhbmRsZU9iaiwgc2VsLCBtYXRjaGVkSGFuZGxlcnMsIG1hdGNoZWRTZWxlY3RvcnMsXG5cdFx0XHRoYW5kbGVyUXVldWUgPSBbXSxcblx0XHRcdGRlbGVnYXRlQ291bnQgPSBoYW5kbGVycy5kZWxlZ2F0ZUNvdW50LFxuXHRcdFx0Y3VyID0gZXZlbnQudGFyZ2V0O1xuXG5cdFx0Ly8gRmluZCBkZWxlZ2F0ZSBoYW5kbGVyc1xuXHRcdGlmICggZGVsZWdhdGVDb3VudCAmJlxuXG5cdFx0XHQvLyBTdXBwb3J0OiBJRSA8PTlcblx0XHRcdC8vIEJsYWNrLWhvbGUgU1ZHIDx1c2U+IGluc3RhbmNlIHRyZWVzICh0cmFjLTEzMTgwKVxuXHRcdFx0Y3VyLm5vZGVUeXBlICYmXG5cblx0XHRcdC8vIFN1cHBvcnQ6IEZpcmVmb3ggPD00MlxuXHRcdFx0Ly8gU3VwcHJlc3Mgc3BlYy12aW9sYXRpbmcgY2xpY2tzIGluZGljYXRpbmcgYSBub24tcHJpbWFyeSBwb2ludGVyIGJ1dHRvbiAodHJhYy0zODYxKVxuXHRcdFx0Ly8gaHR0cHM6Ly93d3cudzMub3JnL1RSL0RPTS1MZXZlbC0zLUV2ZW50cy8jZXZlbnQtdHlwZS1jbGlja1xuXHRcdFx0Ly8gU3VwcG9ydDogSUUgMTEgb25seVxuXHRcdFx0Ly8gLi4uYnV0IG5vdCBhcnJvdyBrZXkgXCJjbGlja3NcIiBvZiByYWRpbyBpbnB1dHMsIHdoaWNoIGNhbiBoYXZlIGBidXR0b25gIC0xIChnaC0yMzQzKVxuXHRcdFx0ISggZXZlbnQudHlwZSA9PT0gXCJjbGlja1wiICYmIGV2ZW50LmJ1dHRvbiA+PSAxICkgKSB7XG5cblx0XHRcdGZvciAoIDsgY3VyICE9PSB0aGlzOyBjdXIgPSBjdXIucGFyZW50Tm9kZSB8fCB0aGlzICkge1xuXG5cdFx0XHRcdC8vIERvbid0IGNoZWNrIG5vbi1lbGVtZW50cyAoIzEzMjA4KVxuXHRcdFx0XHQvLyBEb24ndCBwcm9jZXNzIGNsaWNrcyBvbiBkaXNhYmxlZCBlbGVtZW50cyAoIzY5MTEsICM4MTY1LCAjMTEzODIsICMxMTc2NClcblx0XHRcdFx0aWYgKCBjdXIubm9kZVR5cGUgPT09IDEgJiYgISggZXZlbnQudHlwZSA9PT0gXCJjbGlja1wiICYmIGN1ci5kaXNhYmxlZCA9PT0gdHJ1ZSApICkge1xuXHRcdFx0XHRcdG1hdGNoZWRIYW5kbGVycyA9IFtdO1xuXHRcdFx0XHRcdG1hdGNoZWRTZWxlY3RvcnMgPSB7fTtcblx0XHRcdFx0XHRmb3IgKCBpID0gMDsgaSA8IGRlbGVnYXRlQ291bnQ7IGkrKyApIHtcblx0XHRcdFx0XHRcdGhhbmRsZU9iaiA9IGhhbmRsZXJzWyBpIF07XG5cblx0XHRcdFx0XHRcdC8vIERvbid0IGNvbmZsaWN0IHdpdGggT2JqZWN0LnByb3RvdHlwZSBwcm9wZXJ0aWVzICgjMTMyMDMpXG5cdFx0XHRcdFx0XHRzZWwgPSBoYW5kbGVPYmouc2VsZWN0b3IgKyBcIiBcIjtcblxuXHRcdFx0XHRcdFx0aWYgKCBtYXRjaGVkU2VsZWN0b3JzWyBzZWwgXSA9PT0gdW5kZWZpbmVkICkge1xuXHRcdFx0XHRcdFx0XHRtYXRjaGVkU2VsZWN0b3JzWyBzZWwgXSA9IGhhbmRsZU9iai5uZWVkc0NvbnRleHQgP1xuXHRcdFx0XHRcdFx0XHRcdGpRdWVyeSggc2VsLCB0aGlzICkuaW5kZXgoIGN1ciApID4gLTEgOlxuXHRcdFx0XHRcdFx0XHRcdGpRdWVyeS5maW5kKCBzZWwsIHRoaXMsIG51bGwsIFsgY3VyIF0gKS5sZW5ndGg7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRpZiAoIG1hdGNoZWRTZWxlY3RvcnNbIHNlbCBdICkge1xuXHRcdFx0XHRcdFx0XHRtYXRjaGVkSGFuZGxlcnMucHVzaCggaGFuZGxlT2JqICk7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdGlmICggbWF0Y2hlZEhhbmRsZXJzLmxlbmd0aCApIHtcblx0XHRcdFx0XHRcdGhhbmRsZXJRdWV1ZS5wdXNoKCB7IGVsZW06IGN1ciwgaGFuZGxlcnM6IG1hdGNoZWRIYW5kbGVycyB9ICk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0Ly8gQWRkIHRoZSByZW1haW5pbmcgKGRpcmVjdGx5LWJvdW5kKSBoYW5kbGVyc1xuXHRcdGN1ciA9IHRoaXM7XG5cdFx0aWYgKCBkZWxlZ2F0ZUNvdW50IDwgaGFuZGxlcnMubGVuZ3RoICkge1xuXHRcdFx0aGFuZGxlclF1ZXVlLnB1c2goIHsgZWxlbTogY3VyLCBoYW5kbGVyczogaGFuZGxlcnMuc2xpY2UoIGRlbGVnYXRlQ291bnQgKSB9ICk7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIGhhbmRsZXJRdWV1ZTtcblx0fSxcblxuXHRhZGRQcm9wOiBmdW5jdGlvbiggbmFtZSwgaG9vayApIHtcblx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoIGpRdWVyeS5FdmVudC5wcm90b3R5cGUsIG5hbWUsIHtcblx0XHRcdGVudW1lcmFibGU6IHRydWUsXG5cdFx0XHRjb25maWd1cmFibGU6IHRydWUsXG5cblx0XHRcdGdldDogaXNGdW5jdGlvbiggaG9vayApID9cblx0XHRcdFx0ZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0aWYgKCB0aGlzLm9yaWdpbmFsRXZlbnQgKSB7XG5cdFx0XHRcdFx0XHRcdHJldHVybiBob29rKCB0aGlzLm9yaWdpbmFsRXZlbnQgKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH0gOlxuXHRcdFx0XHRmdW5jdGlvbigpIHtcblx0XHRcdFx0XHRpZiAoIHRoaXMub3JpZ2luYWxFdmVudCApIHtcblx0XHRcdFx0XHRcdFx0cmV0dXJuIHRoaXMub3JpZ2luYWxFdmVudFsgbmFtZSBdO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fSxcblxuXHRcdFx0c2V0OiBmdW5jdGlvbiggdmFsdWUgKSB7XG5cdFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eSggdGhpcywgbmFtZSwge1xuXHRcdFx0XHRcdGVudW1lcmFibGU6IHRydWUsXG5cdFx0XHRcdFx0Y29uZmlndXJhYmxlOiB0cnVlLFxuXHRcdFx0XHRcdHdyaXRhYmxlOiB0cnVlLFxuXHRcdFx0XHRcdHZhbHVlOiB2YWx1ZVxuXHRcdFx0XHR9ICk7XG5cdFx0XHR9XG5cdFx0fSApO1xuXHR9LFxuXG5cdGZpeDogZnVuY3Rpb24oIG9yaWdpbmFsRXZlbnQgKSB7XG5cdFx0cmV0dXJuIG9yaWdpbmFsRXZlbnRbIGpRdWVyeS5leHBhbmRvIF0gP1xuXHRcdFx0b3JpZ2luYWxFdmVudCA6XG5cdFx0XHRuZXcgalF1ZXJ5LkV2ZW50KCBvcmlnaW5hbEV2ZW50ICk7XG5cdH0sXG5cblx0c3BlY2lhbDoge1xuXHRcdGxvYWQ6IHtcblxuXHRcdFx0Ly8gUHJldmVudCB0cmlnZ2VyZWQgaW1hZ2UubG9hZCBldmVudHMgZnJvbSBidWJibGluZyB0byB3aW5kb3cubG9hZFxuXHRcdFx0bm9CdWJibGU6IHRydWVcblx0XHR9LFxuXHRcdGNsaWNrOiB7XG5cblx0XHRcdC8vIFV0aWxpemUgbmF0aXZlIGV2ZW50IHRvIGVuc3VyZSBjb3JyZWN0IHN0YXRlIGZvciBjaGVja2FibGUgaW5wdXRzXG5cdFx0XHRzZXR1cDogZnVuY3Rpb24oIGRhdGEgKSB7XG5cblx0XHRcdFx0Ly8gRm9yIG11dHVhbCBjb21wcmVzc2liaWxpdHkgd2l0aCBfZGVmYXVsdCwgcmVwbGFjZSBgdGhpc2AgYWNjZXNzIHdpdGggYSBsb2NhbCB2YXIuXG5cdFx0XHRcdC8vIGB8fCBkYXRhYCBpcyBkZWFkIGNvZGUgbWVhbnQgb25seSB0byBwcmVzZXJ2ZSB0aGUgdmFyaWFibGUgdGhyb3VnaCBtaW5pZmljYXRpb24uXG5cdFx0XHRcdHZhciBlbCA9IHRoaXMgfHwgZGF0YTtcblxuXHRcdFx0XHQvLyBDbGFpbSB0aGUgZmlyc3QgaGFuZGxlclxuXHRcdFx0XHRpZiAoIHJjaGVja2FibGVUeXBlLnRlc3QoIGVsLnR5cGUgKSAmJlxuXHRcdFx0XHRcdGVsLmNsaWNrICYmIG5vZGVOYW1lKCBlbCwgXCJpbnB1dFwiICkgKSB7XG5cblx0XHRcdFx0XHQvLyBkYXRhUHJpdi5zZXQoIGVsLCBcImNsaWNrXCIsIC4uLiApXG5cdFx0XHRcdFx0bGV2ZXJhZ2VOYXRpdmUoIGVsLCBcImNsaWNrXCIsIHJldHVyblRydWUgKTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIFJldHVybiBmYWxzZSB0byBhbGxvdyBub3JtYWwgcHJvY2Vzc2luZyBpbiB0aGUgY2FsbGVyXG5cdFx0XHRcdHJldHVybiBmYWxzZTtcblx0XHRcdH0sXG5cdFx0XHR0cmlnZ2VyOiBmdW5jdGlvbiggZGF0YSApIHtcblxuXHRcdFx0XHQvLyBGb3IgbXV0dWFsIGNvbXByZXNzaWJpbGl0eSB3aXRoIF9kZWZhdWx0LCByZXBsYWNlIGB0aGlzYCBhY2Nlc3Mgd2l0aCBhIGxvY2FsIHZhci5cblx0XHRcdFx0Ly8gYHx8IGRhdGFgIGlzIGRlYWQgY29kZSBtZWFudCBvbmx5IHRvIHByZXNlcnZlIHRoZSB2YXJpYWJsZSB0aHJvdWdoIG1pbmlmaWNhdGlvbi5cblx0XHRcdFx0dmFyIGVsID0gdGhpcyB8fCBkYXRhO1xuXG5cdFx0XHRcdC8vIEZvcmNlIHNldHVwIGJlZm9yZSB0cmlnZ2VyaW5nIGEgY2xpY2tcblx0XHRcdFx0aWYgKCByY2hlY2thYmxlVHlwZS50ZXN0KCBlbC50eXBlICkgJiZcblx0XHRcdFx0XHRlbC5jbGljayAmJiBub2RlTmFtZSggZWwsIFwiaW5wdXRcIiApICkge1xuXG5cdFx0XHRcdFx0bGV2ZXJhZ2VOYXRpdmUoIGVsLCBcImNsaWNrXCIgKTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIFJldHVybiBub24tZmFsc2UgdG8gYWxsb3cgbm9ybWFsIGV2ZW50LXBhdGggcHJvcGFnYXRpb25cblx0XHRcdFx0cmV0dXJuIHRydWU7XG5cdFx0XHR9LFxuXG5cdFx0XHQvLyBGb3IgY3Jvc3MtYnJvd3NlciBjb25zaXN0ZW5jeSwgc3VwcHJlc3MgbmF0aXZlIC5jbGljaygpIG9uIGxpbmtzXG5cdFx0XHQvLyBBbHNvIHByZXZlbnQgaXQgaWYgd2UncmUgY3VycmVudGx5IGluc2lkZSBhIGxldmVyYWdlZCBuYXRpdmUtZXZlbnQgc3RhY2tcblx0XHRcdF9kZWZhdWx0OiBmdW5jdGlvbiggZXZlbnQgKSB7XG5cdFx0XHRcdHZhciB0YXJnZXQgPSBldmVudC50YXJnZXQ7XG5cdFx0XHRcdHJldHVybiByY2hlY2thYmxlVHlwZS50ZXN0KCB0YXJnZXQudHlwZSApICYmXG5cdFx0XHRcdFx0dGFyZ2V0LmNsaWNrICYmIG5vZGVOYW1lKCB0YXJnZXQsIFwiaW5wdXRcIiApICYmXG5cdFx0XHRcdFx0ZGF0YVByaXYuZ2V0KCB0YXJnZXQsIFwiY2xpY2tcIiApIHx8XG5cdFx0XHRcdFx0bm9kZU5hbWUoIHRhcmdldCwgXCJhXCIgKTtcblx0XHRcdH1cblx0XHR9LFxuXG5cdFx0YmVmb3JldW5sb2FkOiB7XG5cdFx0XHRwb3N0RGlzcGF0Y2g6IGZ1bmN0aW9uKCBldmVudCApIHtcblxuXHRcdFx0XHQvLyBTdXBwb3J0OiBGaXJlZm94IDIwK1xuXHRcdFx0XHQvLyBGaXJlZm94IGRvZXNuJ3QgYWxlcnQgaWYgdGhlIHJldHVyblZhbHVlIGZpZWxkIGlzIG5vdCBzZXQuXG5cdFx0XHRcdGlmICggZXZlbnQucmVzdWx0ICE9PSB1bmRlZmluZWQgJiYgZXZlbnQub3JpZ2luYWxFdmVudCApIHtcblx0XHRcdFx0XHRldmVudC5vcmlnaW5hbEV2ZW50LnJldHVyblZhbHVlID0gZXZlbnQucmVzdWx0O1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG59O1xuXG4vLyBFbnN1cmUgdGhlIHByZXNlbmNlIG9mIGFuIGV2ZW50IGxpc3RlbmVyIHRoYXQgaGFuZGxlcyBtYW51YWxseS10cmlnZ2VyZWRcbi8vIHN5bnRoZXRpYyBldmVudHMgYnkgaW50ZXJydXB0aW5nIHByb2dyZXNzIHVudGlsIHJlaW52b2tlZCBpbiByZXNwb25zZSB0b1xuLy8gKm5hdGl2ZSogZXZlbnRzIHRoYXQgaXQgZmlyZXMgZGlyZWN0bHksIGVuc3VyaW5nIHRoYXQgc3RhdGUgY2hhbmdlcyBoYXZlXG4vLyBhbHJlYWR5IG9jY3VycmVkIGJlZm9yZSBvdGhlciBsaXN0ZW5lcnMgYXJlIGludm9rZWQuXG5mdW5jdGlvbiBsZXZlcmFnZU5hdGl2ZSggZWwsIHR5cGUsIGV4cGVjdFN5bmMgKSB7XG5cblx0Ly8gTWlzc2luZyBleHBlY3RTeW5jIGluZGljYXRlcyBhIHRyaWdnZXIgY2FsbCwgd2hpY2ggbXVzdCBmb3JjZSBzZXR1cCB0aHJvdWdoIGpRdWVyeS5ldmVudC5hZGRcblx0aWYgKCAhZXhwZWN0U3luYyApIHtcblx0XHRpZiAoIGRhdGFQcml2LmdldCggZWwsIHR5cGUgKSA9PT0gdW5kZWZpbmVkICkge1xuXHRcdFx0alF1ZXJ5LmV2ZW50LmFkZCggZWwsIHR5cGUsIHJldHVyblRydWUgKTtcblx0XHR9XG5cdFx0cmV0dXJuO1xuXHR9XG5cblx0Ly8gUmVnaXN0ZXIgdGhlIGNvbnRyb2xsZXIgYXMgYSBzcGVjaWFsIHVuaXZlcnNhbCBoYW5kbGVyIGZvciBhbGwgZXZlbnQgbmFtZXNwYWNlc1xuXHRkYXRhUHJpdi5zZXQoIGVsLCB0eXBlLCBmYWxzZSApO1xuXHRqUXVlcnkuZXZlbnQuYWRkKCBlbCwgdHlwZSwge1xuXHRcdG5hbWVzcGFjZTogZmFsc2UsXG5cdFx0aGFuZGxlcjogZnVuY3Rpb24oIGV2ZW50ICkge1xuXHRcdFx0dmFyIG5vdEFzeW5jLCByZXN1bHQsXG5cdFx0XHRcdHNhdmVkID0gZGF0YVByaXYuZ2V0KCB0aGlzLCB0eXBlICk7XG5cblx0XHRcdGlmICggKCBldmVudC5pc1RyaWdnZXIgJiAxICkgJiYgdGhpc1sgdHlwZSBdICkge1xuXG5cdFx0XHRcdC8vIEludGVycnVwdCBwcm9jZXNzaW5nIG9mIHRoZSBvdXRlciBzeW50aGV0aWMgLnRyaWdnZXIoKWVkIGV2ZW50XG5cdFx0XHRcdC8vIFNhdmVkIGRhdGEgc2hvdWxkIGJlIGZhbHNlIGluIHN1Y2ggY2FzZXMsIGJ1dCBtaWdodCBiZSBhIGxlZnRvdmVyIGNhcHR1cmUgb2JqZWN0XG5cdFx0XHRcdC8vIGZyb20gYW4gYXN5bmMgbmF0aXZlIGhhbmRsZXIgKGdoLTQzNTApXG5cdFx0XHRcdGlmICggIXNhdmVkLmxlbmd0aCApIHtcblxuXHRcdFx0XHRcdC8vIFN0b3JlIGFyZ3VtZW50cyBmb3IgdXNlIHdoZW4gaGFuZGxpbmcgdGhlIGlubmVyIG5hdGl2ZSBldmVudFxuXHRcdFx0XHRcdC8vIFRoZXJlIHdpbGwgYWx3YXlzIGJlIGF0IGxlYXN0IG9uZSBhcmd1bWVudCAoYW4gZXZlbnQgb2JqZWN0KSwgc28gdGhpcyBhcnJheVxuXHRcdFx0XHRcdC8vIHdpbGwgbm90IGJlIGNvbmZ1c2VkIHdpdGggYSBsZWZ0b3ZlciBjYXB0dXJlIG9iamVjdC5cblx0XHRcdFx0XHRzYXZlZCA9IHNsaWNlLmNhbGwoIGFyZ3VtZW50cyApO1xuXHRcdFx0XHRcdGRhdGFQcml2LnNldCggdGhpcywgdHlwZSwgc2F2ZWQgKTtcblxuXHRcdFx0XHRcdC8vIFRyaWdnZXIgdGhlIG5hdGl2ZSBldmVudCBhbmQgY2FwdHVyZSBpdHMgcmVzdWx0XG5cdFx0XHRcdFx0Ly8gU3VwcG9ydDogSUUgPD05IC0gMTErXG5cdFx0XHRcdFx0Ly8gZm9jdXMoKSBhbmQgYmx1cigpIGFyZSBhc3luY2hyb25vdXNcblx0XHRcdFx0XHRub3RBc3luYyA9IGV4cGVjdFN5bmMoIHRoaXMsIHR5cGUgKTtcblx0XHRcdFx0XHR0aGlzWyB0eXBlIF0oKTtcblx0XHRcdFx0XHRyZXN1bHQgPSBkYXRhUHJpdi5nZXQoIHRoaXMsIHR5cGUgKTtcblx0XHRcdFx0XHRpZiAoIHNhdmVkICE9PSByZXN1bHQgfHwgbm90QXN5bmMgKSB7XG5cdFx0XHRcdFx0XHRkYXRhUHJpdi5zZXQoIHRoaXMsIHR5cGUsIGZhbHNlICk7XG5cdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdHJlc3VsdCA9IHt9O1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRpZiAoIHNhdmVkICE9PSByZXN1bHQgKSB7XG5cblx0XHRcdFx0XHRcdC8vIENhbmNlbCB0aGUgb3V0ZXIgc3ludGhldGljIGV2ZW50XG5cdFx0XHRcdFx0XHRldmVudC5zdG9wSW1tZWRpYXRlUHJvcGFnYXRpb24oKTtcblx0XHRcdFx0XHRcdGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG5cdFx0XHRcdFx0XHRyZXR1cm4gcmVzdWx0LnZhbHVlO1xuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBJZiB0aGlzIGlzIGFuIGlubmVyIHN5bnRoZXRpYyBldmVudCBmb3IgYW4gZXZlbnQgd2l0aCBhIGJ1YmJsaW5nIHN1cnJvZ2F0ZVxuXHRcdFx0XHQvLyAoZm9jdXMgb3IgYmx1ciksIGFzc3VtZSB0aGF0IHRoZSBzdXJyb2dhdGUgYWxyZWFkeSBwcm9wYWdhdGVkIGZyb20gdHJpZ2dlcmluZyB0aGVcblx0XHRcdFx0Ly8gbmF0aXZlIGV2ZW50IGFuZCBwcmV2ZW50IHRoYXQgZnJvbSBoYXBwZW5pbmcgYWdhaW4gaGVyZS5cblx0XHRcdFx0Ly8gVGhpcyB0ZWNobmljYWxseSBnZXRzIHRoZSBvcmRlcmluZyB3cm9uZyB3LnIudC4gdG8gYC50cmlnZ2VyKClgIChpbiB3aGljaCB0aGVcblx0XHRcdFx0Ly8gYnViYmxpbmcgc3Vycm9nYXRlIHByb3BhZ2F0ZXMgKmFmdGVyKiB0aGUgbm9uLWJ1YmJsaW5nIGJhc2UpLCBidXQgdGhhdCBzZWVtc1xuXHRcdFx0XHQvLyBsZXNzIGJhZCB0aGFuIGR1cGxpY2F0aW9uLlxuXHRcdFx0XHR9IGVsc2UgaWYgKCAoIGpRdWVyeS5ldmVudC5zcGVjaWFsWyB0eXBlIF0gfHwge30gKS5kZWxlZ2F0ZVR5cGUgKSB7XG5cdFx0XHRcdFx0ZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XG5cdFx0XHRcdH1cblxuXHRcdFx0Ly8gSWYgdGhpcyBpcyBhIG5hdGl2ZSBldmVudCB0cmlnZ2VyZWQgYWJvdmUsIGV2ZXJ5dGhpbmcgaXMgbm93IGluIG9yZGVyXG5cdFx0XHQvLyBGaXJlIGFuIGlubmVyIHN5bnRoZXRpYyBldmVudCB3aXRoIHRoZSBvcmlnaW5hbCBhcmd1bWVudHNcblx0XHRcdH0gZWxzZSBpZiAoIHNhdmVkLmxlbmd0aCApIHtcblxuXHRcdFx0XHQvLyAuLi5hbmQgY2FwdHVyZSB0aGUgcmVzdWx0XG5cdFx0XHRcdGRhdGFQcml2LnNldCggdGhpcywgdHlwZSwge1xuXHRcdFx0XHRcdHZhbHVlOiBqUXVlcnkuZXZlbnQudHJpZ2dlcihcblxuXHRcdFx0XHRcdFx0Ly8gU3VwcG9ydDogSUUgPD05IC0gMTErXG5cdFx0XHRcdFx0XHQvLyBFeHRlbmQgd2l0aCB0aGUgcHJvdG90eXBlIHRvIHJlc2V0IHRoZSBhYm92ZSBzdG9wSW1tZWRpYXRlUHJvcGFnYXRpb24oKVxuXHRcdFx0XHRcdFx0alF1ZXJ5LmV4dGVuZCggc2F2ZWRbIDAgXSwgalF1ZXJ5LkV2ZW50LnByb3RvdHlwZSApLFxuXHRcdFx0XHRcdFx0c2F2ZWQuc2xpY2UoIDEgKSxcblx0XHRcdFx0XHRcdHRoaXNcblx0XHRcdFx0XHQpXG5cdFx0XHRcdH0gKTtcblxuXHRcdFx0XHQvLyBBYm9ydCBoYW5kbGluZyBvZiB0aGUgbmF0aXZlIGV2ZW50XG5cdFx0XHRcdGV2ZW50LnN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbigpO1xuXHRcdFx0fVxuXHRcdH1cblx0fSApO1xufVxuXG5qUXVlcnkucmVtb3ZlRXZlbnQgPSBmdW5jdGlvbiggZWxlbSwgdHlwZSwgaGFuZGxlICkge1xuXG5cdC8vIFRoaXMgXCJpZlwiIGlzIG5lZWRlZCBmb3IgcGxhaW4gb2JqZWN0c1xuXHRpZiAoIGVsZW0ucmVtb3ZlRXZlbnRMaXN0ZW5lciApIHtcblx0XHRlbGVtLnJlbW92ZUV2ZW50TGlzdGVuZXIoIHR5cGUsIGhhbmRsZSApO1xuXHR9XG59O1xuXG5qUXVlcnkuRXZlbnQgPSBmdW5jdGlvbiggc3JjLCBwcm9wcyApIHtcblxuXHQvLyBBbGxvdyBpbnN0YW50aWF0aW9uIHdpdGhvdXQgdGhlICduZXcnIGtleXdvcmRcblx0aWYgKCAhKCB0aGlzIGluc3RhbmNlb2YgalF1ZXJ5LkV2ZW50ICkgKSB7XG5cdFx0cmV0dXJuIG5ldyBqUXVlcnkuRXZlbnQoIHNyYywgcHJvcHMgKTtcblx0fVxuXG5cdC8vIEV2ZW50IG9iamVjdFxuXHRpZiAoIHNyYyAmJiBzcmMudHlwZSApIHtcblx0XHR0aGlzLm9yaWdpbmFsRXZlbnQgPSBzcmM7XG5cdFx0dGhpcy50eXBlID0gc3JjLnR5cGU7XG5cblx0XHQvLyBFdmVudHMgYnViYmxpbmcgdXAgdGhlIGRvY3VtZW50IG1heSBoYXZlIGJlZW4gbWFya2VkIGFzIHByZXZlbnRlZFxuXHRcdC8vIGJ5IGEgaGFuZGxlciBsb3dlciBkb3duIHRoZSB0cmVlOyByZWZsZWN0IHRoZSBjb3JyZWN0IHZhbHVlLlxuXHRcdHRoaXMuaXNEZWZhdWx0UHJldmVudGVkID0gc3JjLmRlZmF1bHRQcmV2ZW50ZWQgfHxcblx0XHRcdFx0c3JjLmRlZmF1bHRQcmV2ZW50ZWQgPT09IHVuZGVmaW5lZCAmJlxuXG5cdFx0XHRcdC8vIFN1cHBvcnQ6IEFuZHJvaWQgPD0yLjMgb25seVxuXHRcdFx0XHRzcmMucmV0dXJuVmFsdWUgPT09IGZhbHNlID9cblx0XHRcdHJldHVyblRydWUgOlxuXHRcdFx0cmV0dXJuRmFsc2U7XG5cblx0XHQvLyBDcmVhdGUgdGFyZ2V0IHByb3BlcnRpZXNcblx0XHQvLyBTdXBwb3J0OiBTYWZhcmkgPD02IC0gNyBvbmx5XG5cdFx0Ly8gVGFyZ2V0IHNob3VsZCBub3QgYmUgYSB0ZXh0IG5vZGUgKCM1MDQsICMxMzE0Mylcblx0XHR0aGlzLnRhcmdldCA9ICggc3JjLnRhcmdldCAmJiBzcmMudGFyZ2V0Lm5vZGVUeXBlID09PSAzICkgP1xuXHRcdFx0c3JjLnRhcmdldC5wYXJlbnROb2RlIDpcblx0XHRcdHNyYy50YXJnZXQ7XG5cblx0XHR0aGlzLmN1cnJlbnRUYXJnZXQgPSBzcmMuY3VycmVudFRhcmdldDtcblx0XHR0aGlzLnJlbGF0ZWRUYXJnZXQgPSBzcmMucmVsYXRlZFRhcmdldDtcblxuXHQvLyBFdmVudCB0eXBlXG5cdH0gZWxzZSB7XG5cdFx0dGhpcy50eXBlID0gc3JjO1xuXHR9XG5cblx0Ly8gUHV0IGV4cGxpY2l0bHkgcHJvdmlkZWQgcHJvcGVydGllcyBvbnRvIHRoZSBldmVudCBvYmplY3Rcblx0aWYgKCBwcm9wcyApIHtcblx0XHRqUXVlcnkuZXh0ZW5kKCB0aGlzLCBwcm9wcyApO1xuXHR9XG5cblx0Ly8gQ3JlYXRlIGEgdGltZXN0YW1wIGlmIGluY29taW5nIGV2ZW50IGRvZXNuJ3QgaGF2ZSBvbmVcblx0dGhpcy50aW1lU3RhbXAgPSBzcmMgJiYgc3JjLnRpbWVTdGFtcCB8fCBEYXRlLm5vdygpO1xuXG5cdC8vIE1hcmsgaXQgYXMgZml4ZWRcblx0dGhpc1sgalF1ZXJ5LmV4cGFuZG8gXSA9IHRydWU7XG59O1xuXG4vLyBqUXVlcnkuRXZlbnQgaXMgYmFzZWQgb24gRE9NMyBFdmVudHMgYXMgc3BlY2lmaWVkIGJ5IHRoZSBFQ01BU2NyaXB0IExhbmd1YWdlIEJpbmRpbmdcbi8vIGh0dHBzOi8vd3d3LnczLm9yZy9UUi8yMDAzL1dELURPTS1MZXZlbC0zLUV2ZW50cy0yMDAzMDMzMS9lY21hLXNjcmlwdC1iaW5kaW5nLmh0bWxcbmpRdWVyeS5FdmVudC5wcm90b3R5cGUgPSB7XG5cdGNvbnN0cnVjdG9yOiBqUXVlcnkuRXZlbnQsXG5cdGlzRGVmYXVsdFByZXZlbnRlZDogcmV0dXJuRmFsc2UsXG5cdGlzUHJvcGFnYXRpb25TdG9wcGVkOiByZXR1cm5GYWxzZSxcblx0aXNJbW1lZGlhdGVQcm9wYWdhdGlvblN0b3BwZWQ6IHJldHVybkZhbHNlLFxuXHRpc1NpbXVsYXRlZDogZmFsc2UsXG5cblx0cHJldmVudERlZmF1bHQ6IGZ1bmN0aW9uKCkge1xuXHRcdHZhciBlID0gdGhpcy5vcmlnaW5hbEV2ZW50O1xuXG5cdFx0dGhpcy5pc0RlZmF1bHRQcmV2ZW50ZWQgPSByZXR1cm5UcnVlO1xuXG5cdFx0aWYgKCBlICYmICF0aGlzLmlzU2ltdWxhdGVkICkge1xuXHRcdFx0ZS5wcmV2ZW50RGVmYXVsdCgpO1xuXHRcdH1cblx0fSxcblx0c3RvcFByb3BhZ2F0aW9uOiBmdW5jdGlvbigpIHtcblx0XHR2YXIgZSA9IHRoaXMub3JpZ2luYWxFdmVudDtcblxuXHRcdHRoaXMuaXNQcm9wYWdhdGlvblN0b3BwZWQgPSByZXR1cm5UcnVlO1xuXG5cdFx0aWYgKCBlICYmICF0aGlzLmlzU2ltdWxhdGVkICkge1xuXHRcdFx0ZS5zdG9wUHJvcGFnYXRpb24oKTtcblx0XHR9XG5cdH0sXG5cdHN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbjogZnVuY3Rpb24oKSB7XG5cdFx0dmFyIGUgPSB0aGlzLm9yaWdpbmFsRXZlbnQ7XG5cblx0XHR0aGlzLmlzSW1tZWRpYXRlUHJvcGFnYXRpb25TdG9wcGVkID0gcmV0dXJuVHJ1ZTtcblxuXHRcdGlmICggZSAmJiAhdGhpcy5pc1NpbXVsYXRlZCApIHtcblx0XHRcdGUuc3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uKCk7XG5cdFx0fVxuXG5cdFx0dGhpcy5zdG9wUHJvcGFnYXRpb24oKTtcblx0fVxufTtcblxuLy8gSW5jbHVkZXMgYWxsIGNvbW1vbiBldmVudCBwcm9wcyBpbmNsdWRpbmcgS2V5RXZlbnQgYW5kIE1vdXNlRXZlbnQgc3BlY2lmaWMgcHJvcHNcbmpRdWVyeS5lYWNoKCB7XG5cdGFsdEtleTogdHJ1ZSxcblx0YnViYmxlczogdHJ1ZSxcblx0Y2FuY2VsYWJsZTogdHJ1ZSxcblx0Y2hhbmdlZFRvdWNoZXM6IHRydWUsXG5cdGN0cmxLZXk6IHRydWUsXG5cdGRldGFpbDogdHJ1ZSxcblx0ZXZlbnRQaGFzZTogdHJ1ZSxcblx0bWV0YUtleTogdHJ1ZSxcblx0cGFnZVg6IHRydWUsXG5cdHBhZ2VZOiB0cnVlLFxuXHRzaGlmdEtleTogdHJ1ZSxcblx0dmlldzogdHJ1ZSxcblx0XCJjaGFyXCI6IHRydWUsXG5cdGNvZGU6IHRydWUsXG5cdGNoYXJDb2RlOiB0cnVlLFxuXHRrZXk6IHRydWUsXG5cdGtleUNvZGU6IHRydWUsXG5cdGJ1dHRvbjogdHJ1ZSxcblx0YnV0dG9uczogdHJ1ZSxcblx0Y2xpZW50WDogdHJ1ZSxcblx0Y2xpZW50WTogdHJ1ZSxcblx0b2Zmc2V0WDogdHJ1ZSxcblx0b2Zmc2V0WTogdHJ1ZSxcblx0cG9pbnRlcklkOiB0cnVlLFxuXHRwb2ludGVyVHlwZTogdHJ1ZSxcblx0c2NyZWVuWDogdHJ1ZSxcblx0c2NyZWVuWTogdHJ1ZSxcblx0dGFyZ2V0VG91Y2hlczogdHJ1ZSxcblx0dG9FbGVtZW50OiB0cnVlLFxuXHR0b3VjaGVzOiB0cnVlLFxuXG5cdHdoaWNoOiBmdW5jdGlvbiggZXZlbnQgKSB7XG5cdFx0dmFyIGJ1dHRvbiA9IGV2ZW50LmJ1dHRvbjtcblxuXHRcdC8vIEFkZCB3aGljaCBmb3Iga2V5IGV2ZW50c1xuXHRcdGlmICggZXZlbnQud2hpY2ggPT0gbnVsbCAmJiBya2V5RXZlbnQudGVzdCggZXZlbnQudHlwZSApICkge1xuXHRcdFx0cmV0dXJuIGV2ZW50LmNoYXJDb2RlICE9IG51bGwgPyBldmVudC5jaGFyQ29kZSA6IGV2ZW50LmtleUNvZGU7XG5cdFx0fVxuXG5cdFx0Ly8gQWRkIHdoaWNoIGZvciBjbGljazogMSA9PT0gbGVmdDsgMiA9PT0gbWlkZGxlOyAzID09PSByaWdodFxuXHRcdGlmICggIWV2ZW50LndoaWNoICYmIGJ1dHRvbiAhPT0gdW5kZWZpbmVkICYmIHJtb3VzZUV2ZW50LnRlc3QoIGV2ZW50LnR5cGUgKSApIHtcblx0XHRcdGlmICggYnV0dG9uICYgMSApIHtcblx0XHRcdFx0cmV0dXJuIDE7XG5cdFx0XHR9XG5cblx0XHRcdGlmICggYnV0dG9uICYgMiApIHtcblx0XHRcdFx0cmV0dXJuIDM7XG5cdFx0XHR9XG5cblx0XHRcdGlmICggYnV0dG9uICYgNCApIHtcblx0XHRcdFx0cmV0dXJuIDI7XG5cdFx0XHR9XG5cblx0XHRcdHJldHVybiAwO1xuXHRcdH1cblxuXHRcdHJldHVybiBldmVudC53aGljaDtcblx0fVxufSwgalF1ZXJ5LmV2ZW50LmFkZFByb3AgKTtcblxualF1ZXJ5LmVhY2goIHsgZm9jdXM6IFwiZm9jdXNpblwiLCBibHVyOiBcImZvY3Vzb3V0XCIgfSwgZnVuY3Rpb24oIHR5cGUsIGRlbGVnYXRlVHlwZSApIHtcblx0alF1ZXJ5LmV2ZW50LnNwZWNpYWxbIHR5cGUgXSA9IHtcblxuXHRcdC8vIFV0aWxpemUgbmF0aXZlIGV2ZW50IGlmIHBvc3NpYmxlIHNvIGJsdXIvZm9jdXMgc2VxdWVuY2UgaXMgY29ycmVjdFxuXHRcdHNldHVwOiBmdW5jdGlvbigpIHtcblxuXHRcdFx0Ly8gQ2xhaW0gdGhlIGZpcnN0IGhhbmRsZXJcblx0XHRcdC8vIGRhdGFQcml2LnNldCggdGhpcywgXCJmb2N1c1wiLCAuLi4gKVxuXHRcdFx0Ly8gZGF0YVByaXYuc2V0KCB0aGlzLCBcImJsdXJcIiwgLi4uIClcblx0XHRcdGxldmVyYWdlTmF0aXZlKCB0aGlzLCB0eXBlLCBleHBlY3RTeW5jICk7XG5cblx0XHRcdC8vIFJldHVybiBmYWxzZSB0byBhbGxvdyBub3JtYWwgcHJvY2Vzc2luZyBpbiB0aGUgY2FsbGVyXG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fSxcblx0XHR0cmlnZ2VyOiBmdW5jdGlvbigpIHtcblxuXHRcdFx0Ly8gRm9yY2Ugc2V0dXAgYmVmb3JlIHRyaWdnZXJcblx0XHRcdGxldmVyYWdlTmF0aXZlKCB0aGlzLCB0eXBlICk7XG5cblx0XHRcdC8vIFJldHVybiBub24tZmFsc2UgdG8gYWxsb3cgbm9ybWFsIGV2ZW50LXBhdGggcHJvcGFnYXRpb25cblx0XHRcdHJldHVybiB0cnVlO1xuXHRcdH0sXG5cblx0XHRkZWxlZ2F0ZVR5cGU6IGRlbGVnYXRlVHlwZVxuXHR9O1xufSApO1xuXG4vLyBDcmVhdGUgbW91c2VlbnRlci9sZWF2ZSBldmVudHMgdXNpbmcgbW91c2VvdmVyL291dCBhbmQgZXZlbnQtdGltZSBjaGVja3Ncbi8vIHNvIHRoYXQgZXZlbnQgZGVsZWdhdGlvbiB3b3JrcyBpbiBqUXVlcnkuXG4vLyBEbyB0aGUgc2FtZSBmb3IgcG9pbnRlcmVudGVyL3BvaW50ZXJsZWF2ZSBhbmQgcG9pbnRlcm92ZXIvcG9pbnRlcm91dFxuLy9cbi8vIFN1cHBvcnQ6IFNhZmFyaSA3IG9ubHlcbi8vIFNhZmFyaSBzZW5kcyBtb3VzZWVudGVyIHRvbyBvZnRlbjsgc2VlOlxuLy8gaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL2Nocm9taXVtL2lzc3Vlcy9kZXRhaWw/aWQ9NDcwMjU4XG4vLyBmb3IgdGhlIGRlc2NyaXB0aW9uIG9mIHRoZSBidWcgKGl0IGV4aXN0ZWQgaW4gb2xkZXIgQ2hyb21lIHZlcnNpb25zIGFzIHdlbGwpLlxualF1ZXJ5LmVhY2goIHtcblx0bW91c2VlbnRlcjogXCJtb3VzZW92ZXJcIixcblx0bW91c2VsZWF2ZTogXCJtb3VzZW91dFwiLFxuXHRwb2ludGVyZW50ZXI6IFwicG9pbnRlcm92ZXJcIixcblx0cG9pbnRlcmxlYXZlOiBcInBvaW50ZXJvdXRcIlxufSwgZnVuY3Rpb24oIG9yaWcsIGZpeCApIHtcblx0alF1ZXJ5LmV2ZW50LnNwZWNpYWxbIG9yaWcgXSA9IHtcblx0XHRkZWxlZ2F0ZVR5cGU6IGZpeCxcblx0XHRiaW5kVHlwZTogZml4LFxuXG5cdFx0aGFuZGxlOiBmdW5jdGlvbiggZXZlbnQgKSB7XG5cdFx0XHR2YXIgcmV0LFxuXHRcdFx0XHR0YXJnZXQgPSB0aGlzLFxuXHRcdFx0XHRyZWxhdGVkID0gZXZlbnQucmVsYXRlZFRhcmdldCxcblx0XHRcdFx0aGFuZGxlT2JqID0gZXZlbnQuaGFuZGxlT2JqO1xuXG5cdFx0XHQvLyBGb3IgbW91c2VlbnRlci9sZWF2ZSBjYWxsIHRoZSBoYW5kbGVyIGlmIHJlbGF0ZWQgaXMgb3V0c2lkZSB0aGUgdGFyZ2V0LlxuXHRcdFx0Ly8gTkI6IE5vIHJlbGF0ZWRUYXJnZXQgaWYgdGhlIG1vdXNlIGxlZnQvZW50ZXJlZCB0aGUgYnJvd3NlciB3aW5kb3dcblx0XHRcdGlmICggIXJlbGF0ZWQgfHwgKCByZWxhdGVkICE9PSB0YXJnZXQgJiYgIWpRdWVyeS5jb250YWlucyggdGFyZ2V0LCByZWxhdGVkICkgKSApIHtcblx0XHRcdFx0ZXZlbnQudHlwZSA9IGhhbmRsZU9iai5vcmlnVHlwZTtcblx0XHRcdFx0cmV0ID0gaGFuZGxlT2JqLmhhbmRsZXIuYXBwbHkoIHRoaXMsIGFyZ3VtZW50cyApO1xuXHRcdFx0XHRldmVudC50eXBlID0gZml4O1xuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIHJldDtcblx0XHR9XG5cdH07XG59ICk7XG5cbmpRdWVyeS5mbi5leHRlbmQoIHtcblxuXHRvbjogZnVuY3Rpb24oIHR5cGVzLCBzZWxlY3RvciwgZGF0YSwgZm4gKSB7XG5cdFx0cmV0dXJuIG9uKCB0aGlzLCB0eXBlcywgc2VsZWN0b3IsIGRhdGEsIGZuICk7XG5cdH0sXG5cdG9uZTogZnVuY3Rpb24oIHR5cGVzLCBzZWxlY3RvciwgZGF0YSwgZm4gKSB7XG5cdFx0cmV0dXJuIG9uKCB0aGlzLCB0eXBlcywgc2VsZWN0b3IsIGRhdGEsIGZuLCAxICk7XG5cdH0sXG5cdG9mZjogZnVuY3Rpb24oIHR5cGVzLCBzZWxlY3RvciwgZm4gKSB7XG5cdFx0dmFyIGhhbmRsZU9iaiwgdHlwZTtcblx0XHRpZiAoIHR5cGVzICYmIHR5cGVzLnByZXZlbnREZWZhdWx0ICYmIHR5cGVzLmhhbmRsZU9iaiApIHtcblxuXHRcdFx0Ly8gKCBldmVudCApICBkaXNwYXRjaGVkIGpRdWVyeS5FdmVudFxuXHRcdFx0aGFuZGxlT2JqID0gdHlwZXMuaGFuZGxlT2JqO1xuXHRcdFx0alF1ZXJ5KCB0eXBlcy5kZWxlZ2F0ZVRhcmdldCApLm9mZihcblx0XHRcdFx0aGFuZGxlT2JqLm5hbWVzcGFjZSA/XG5cdFx0XHRcdFx0aGFuZGxlT2JqLm9yaWdUeXBlICsgXCIuXCIgKyBoYW5kbGVPYmoubmFtZXNwYWNlIDpcblx0XHRcdFx0XHRoYW5kbGVPYmoub3JpZ1R5cGUsXG5cdFx0XHRcdGhhbmRsZU9iai5zZWxlY3Rvcixcblx0XHRcdFx0aGFuZGxlT2JqLmhhbmRsZXJcblx0XHRcdCk7XG5cdFx0XHRyZXR1cm4gdGhpcztcblx0XHR9XG5cdFx0aWYgKCB0eXBlb2YgdHlwZXMgPT09IFwib2JqZWN0XCIgKSB7XG5cblx0XHRcdC8vICggdHlwZXMtb2JqZWN0IFssIHNlbGVjdG9yXSApXG5cdFx0XHRmb3IgKCB0eXBlIGluIHR5cGVzICkge1xuXHRcdFx0XHR0aGlzLm9mZiggdHlwZSwgc2VsZWN0b3IsIHR5cGVzWyB0eXBlIF0gKTtcblx0XHRcdH1cblx0XHRcdHJldHVybiB0aGlzO1xuXHRcdH1cblx0XHRpZiAoIHNlbGVjdG9yID09PSBmYWxzZSB8fCB0eXBlb2Ygc2VsZWN0b3IgPT09IFwiZnVuY3Rpb25cIiApIHtcblxuXHRcdFx0Ly8gKCB0eXBlcyBbLCBmbl0gKVxuXHRcdFx0Zm4gPSBzZWxlY3Rvcjtcblx0XHRcdHNlbGVjdG9yID0gdW5kZWZpbmVkO1xuXHRcdH1cblx0XHRpZiAoIGZuID09PSBmYWxzZSApIHtcblx0XHRcdGZuID0gcmV0dXJuRmFsc2U7XG5cdFx0fVxuXHRcdHJldHVybiB0aGlzLmVhY2goIGZ1bmN0aW9uKCkge1xuXHRcdFx0alF1ZXJ5LmV2ZW50LnJlbW92ZSggdGhpcywgdHlwZXMsIGZuLCBzZWxlY3RvciApO1xuXHRcdH0gKTtcblx0fVxufSApO1xuXG5cbnZhclxuXG5cdC8vIFN1cHBvcnQ6IElFIDw9MTAgLSAxMSwgRWRnZSAxMiAtIDEzIG9ubHlcblx0Ly8gSW4gSUUvRWRnZSB1c2luZyByZWdleCBncm91cHMgaGVyZSBjYXVzZXMgc2V2ZXJlIHNsb3dkb3ducy5cblx0Ly8gU2VlIGh0dHBzOi8vY29ubmVjdC5taWNyb3NvZnQuY29tL0lFL2ZlZWRiYWNrL2RldGFpbHMvMTczNjUxMi9cblx0cm5vSW5uZXJodG1sID0gLzxzY3JpcHR8PHN0eWxlfDxsaW5rL2ksXG5cblx0Ly8gY2hlY2tlZD1cImNoZWNrZWRcIiBvciBjaGVja2VkXG5cdHJjaGVja2VkID0gL2NoZWNrZWRcXHMqKD86W149XXw9XFxzKi5jaGVja2VkLikvaSxcblx0cmNsZWFuU2NyaXB0ID0gL15cXHMqPCEoPzpcXFtDREFUQVxcW3wtLSl8KD86XFxdXFxdfC0tKT5cXHMqJC9nO1xuXG4vLyBQcmVmZXIgYSB0Ym9keSBvdmVyIGl0cyBwYXJlbnQgdGFibGUgZm9yIGNvbnRhaW5pbmcgbmV3IHJvd3NcbmZ1bmN0aW9uIG1hbmlwdWxhdGlvblRhcmdldCggZWxlbSwgY29udGVudCApIHtcblx0aWYgKCBub2RlTmFtZSggZWxlbSwgXCJ0YWJsZVwiICkgJiZcblx0XHRub2RlTmFtZSggY29udGVudC5ub2RlVHlwZSAhPT0gMTEgPyBjb250ZW50IDogY29udGVudC5maXJzdENoaWxkLCBcInRyXCIgKSApIHtcblxuXHRcdHJldHVybiBqUXVlcnkoIGVsZW0gKS5jaGlsZHJlbiggXCJ0Ym9keVwiIClbIDAgXSB8fCBlbGVtO1xuXHR9XG5cblx0cmV0dXJuIGVsZW07XG59XG5cbi8vIFJlcGxhY2UvcmVzdG9yZSB0aGUgdHlwZSBhdHRyaWJ1dGUgb2Ygc2NyaXB0IGVsZW1lbnRzIGZvciBzYWZlIERPTSBtYW5pcHVsYXRpb25cbmZ1bmN0aW9uIGRpc2FibGVTY3JpcHQoIGVsZW0gKSB7XG5cdGVsZW0udHlwZSA9ICggZWxlbS5nZXRBdHRyaWJ1dGUoIFwidHlwZVwiICkgIT09IG51bGwgKSArIFwiL1wiICsgZWxlbS50eXBlO1xuXHRyZXR1cm4gZWxlbTtcbn1cbmZ1bmN0aW9uIHJlc3RvcmVTY3JpcHQoIGVsZW0gKSB7XG5cdGlmICggKCBlbGVtLnR5cGUgfHwgXCJcIiApLnNsaWNlKCAwLCA1ICkgPT09IFwidHJ1ZS9cIiApIHtcblx0XHRlbGVtLnR5cGUgPSBlbGVtLnR5cGUuc2xpY2UoIDUgKTtcblx0fSBlbHNlIHtcblx0XHRlbGVtLnJlbW92ZUF0dHJpYnV0ZSggXCJ0eXBlXCIgKTtcblx0fVxuXG5cdHJldHVybiBlbGVtO1xufVxuXG5mdW5jdGlvbiBjbG9uZUNvcHlFdmVudCggc3JjLCBkZXN0ICkge1xuXHR2YXIgaSwgbCwgdHlwZSwgcGRhdGFPbGQsIHVkYXRhT2xkLCB1ZGF0YUN1ciwgZXZlbnRzO1xuXG5cdGlmICggZGVzdC5ub2RlVHlwZSAhPT0gMSApIHtcblx0XHRyZXR1cm47XG5cdH1cblxuXHQvLyAxLiBDb3B5IHByaXZhdGUgZGF0YTogZXZlbnRzLCBoYW5kbGVycywgZXRjLlxuXHRpZiAoIGRhdGFQcml2Lmhhc0RhdGEoIHNyYyApICkge1xuXHRcdHBkYXRhT2xkID0gZGF0YVByaXYuZ2V0KCBzcmMgKTtcblx0XHRldmVudHMgPSBwZGF0YU9sZC5ldmVudHM7XG5cblx0XHRpZiAoIGV2ZW50cyApIHtcblx0XHRcdGRhdGFQcml2LnJlbW92ZSggZGVzdCwgXCJoYW5kbGUgZXZlbnRzXCIgKTtcblxuXHRcdFx0Zm9yICggdHlwZSBpbiBldmVudHMgKSB7XG5cdFx0XHRcdGZvciAoIGkgPSAwLCBsID0gZXZlbnRzWyB0eXBlIF0ubGVuZ3RoOyBpIDwgbDsgaSsrICkge1xuXHRcdFx0XHRcdGpRdWVyeS5ldmVudC5hZGQoIGRlc3QsIHR5cGUsIGV2ZW50c1sgdHlwZSBdWyBpIF0gKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cdC8vIDIuIENvcHkgdXNlciBkYXRhXG5cdGlmICggZGF0YVVzZXIuaGFzRGF0YSggc3JjICkgKSB7XG5cdFx0dWRhdGFPbGQgPSBkYXRhVXNlci5hY2Nlc3MoIHNyYyApO1xuXHRcdHVkYXRhQ3VyID0galF1ZXJ5LmV4dGVuZCgge30sIHVkYXRhT2xkICk7XG5cblx0XHRkYXRhVXNlci5zZXQoIGRlc3QsIHVkYXRhQ3VyICk7XG5cdH1cbn1cblxuLy8gRml4IElFIGJ1Z3MsIHNlZSBzdXBwb3J0IHRlc3RzXG5mdW5jdGlvbiBmaXhJbnB1dCggc3JjLCBkZXN0ICkge1xuXHR2YXIgbm9kZU5hbWUgPSBkZXN0Lm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7XG5cblx0Ly8gRmFpbHMgdG8gcGVyc2lzdCB0aGUgY2hlY2tlZCBzdGF0ZSBvZiBhIGNsb25lZCBjaGVja2JveCBvciByYWRpbyBidXR0b24uXG5cdGlmICggbm9kZU5hbWUgPT09IFwiaW5wdXRcIiAmJiByY2hlY2thYmxlVHlwZS50ZXN0KCBzcmMudHlwZSApICkge1xuXHRcdGRlc3QuY2hlY2tlZCA9IHNyYy5jaGVja2VkO1xuXG5cdC8vIEZhaWxzIHRvIHJldHVybiB0aGUgc2VsZWN0ZWQgb3B0aW9uIHRvIHRoZSBkZWZhdWx0IHNlbGVjdGVkIHN0YXRlIHdoZW4gY2xvbmluZyBvcHRpb25zXG5cdH0gZWxzZSBpZiAoIG5vZGVOYW1lID09PSBcImlucHV0XCIgfHwgbm9kZU5hbWUgPT09IFwidGV4dGFyZWFcIiApIHtcblx0XHRkZXN0LmRlZmF1bHRWYWx1ZSA9IHNyYy5kZWZhdWx0VmFsdWU7XG5cdH1cbn1cblxuZnVuY3Rpb24gZG9tTWFuaXAoIGNvbGxlY3Rpb24sIGFyZ3MsIGNhbGxiYWNrLCBpZ25vcmVkICkge1xuXG5cdC8vIEZsYXR0ZW4gYW55IG5lc3RlZCBhcnJheXNcblx0YXJncyA9IGZsYXQoIGFyZ3MgKTtcblxuXHR2YXIgZnJhZ21lbnQsIGZpcnN0LCBzY3JpcHRzLCBoYXNTY3JpcHRzLCBub2RlLCBkb2MsXG5cdFx0aSA9IDAsXG5cdFx0bCA9IGNvbGxlY3Rpb24ubGVuZ3RoLFxuXHRcdGlOb0Nsb25lID0gbCAtIDEsXG5cdFx0dmFsdWUgPSBhcmdzWyAwIF0sXG5cdFx0dmFsdWVJc0Z1bmN0aW9uID0gaXNGdW5jdGlvbiggdmFsdWUgKTtcblxuXHQvLyBXZSBjYW4ndCBjbG9uZU5vZGUgZnJhZ21lbnRzIHRoYXQgY29udGFpbiBjaGVja2VkLCBpbiBXZWJLaXRcblx0aWYgKCB2YWx1ZUlzRnVuY3Rpb24gfHxcblx0XHRcdCggbCA+IDEgJiYgdHlwZW9mIHZhbHVlID09PSBcInN0cmluZ1wiICYmXG5cdFx0XHRcdCFzdXBwb3J0LmNoZWNrQ2xvbmUgJiYgcmNoZWNrZWQudGVzdCggdmFsdWUgKSApICkge1xuXHRcdHJldHVybiBjb2xsZWN0aW9uLmVhY2goIGZ1bmN0aW9uKCBpbmRleCApIHtcblx0XHRcdHZhciBzZWxmID0gY29sbGVjdGlvbi5lcSggaW5kZXggKTtcblx0XHRcdGlmICggdmFsdWVJc0Z1bmN0aW9uICkge1xuXHRcdFx0XHRhcmdzWyAwIF0gPSB2YWx1ZS5jYWxsKCB0aGlzLCBpbmRleCwgc2VsZi5odG1sKCkgKTtcblx0XHRcdH1cblx0XHRcdGRvbU1hbmlwKCBzZWxmLCBhcmdzLCBjYWxsYmFjaywgaWdub3JlZCApO1xuXHRcdH0gKTtcblx0fVxuXG5cdGlmICggbCApIHtcblx0XHRmcmFnbWVudCA9IGJ1aWxkRnJhZ21lbnQoIGFyZ3MsIGNvbGxlY3Rpb25bIDAgXS5vd25lckRvY3VtZW50LCBmYWxzZSwgY29sbGVjdGlvbiwgaWdub3JlZCApO1xuXHRcdGZpcnN0ID0gZnJhZ21lbnQuZmlyc3RDaGlsZDtcblxuXHRcdGlmICggZnJhZ21lbnQuY2hpbGROb2Rlcy5sZW5ndGggPT09IDEgKSB7XG5cdFx0XHRmcmFnbWVudCA9IGZpcnN0O1xuXHRcdH1cblxuXHRcdC8vIFJlcXVpcmUgZWl0aGVyIG5ldyBjb250ZW50IG9yIGFuIGludGVyZXN0IGluIGlnbm9yZWQgZWxlbWVudHMgdG8gaW52b2tlIHRoZSBjYWxsYmFja1xuXHRcdGlmICggZmlyc3QgfHwgaWdub3JlZCApIHtcblx0XHRcdHNjcmlwdHMgPSBqUXVlcnkubWFwKCBnZXRBbGwoIGZyYWdtZW50LCBcInNjcmlwdFwiICksIGRpc2FibGVTY3JpcHQgKTtcblx0XHRcdGhhc1NjcmlwdHMgPSBzY3JpcHRzLmxlbmd0aDtcblxuXHRcdFx0Ly8gVXNlIHRoZSBvcmlnaW5hbCBmcmFnbWVudCBmb3IgdGhlIGxhc3QgaXRlbVxuXHRcdFx0Ly8gaW5zdGVhZCBvZiB0aGUgZmlyc3QgYmVjYXVzZSBpdCBjYW4gZW5kIHVwXG5cdFx0XHQvLyBiZWluZyBlbXB0aWVkIGluY29ycmVjdGx5IGluIGNlcnRhaW4gc2l0dWF0aW9ucyAoIzgwNzApLlxuXHRcdFx0Zm9yICggOyBpIDwgbDsgaSsrICkge1xuXHRcdFx0XHRub2RlID0gZnJhZ21lbnQ7XG5cblx0XHRcdFx0aWYgKCBpICE9PSBpTm9DbG9uZSApIHtcblx0XHRcdFx0XHRub2RlID0galF1ZXJ5LmNsb25lKCBub2RlLCB0cnVlLCB0cnVlICk7XG5cblx0XHRcdFx0XHQvLyBLZWVwIHJlZmVyZW5jZXMgdG8gY2xvbmVkIHNjcmlwdHMgZm9yIGxhdGVyIHJlc3RvcmF0aW9uXG5cdFx0XHRcdFx0aWYgKCBoYXNTY3JpcHRzICkge1xuXG5cdFx0XHRcdFx0XHQvLyBTdXBwb3J0OiBBbmRyb2lkIDw9NC4wIG9ubHksIFBoYW50b21KUyAxIG9ubHlcblx0XHRcdFx0XHRcdC8vIHB1c2guYXBwbHkoXywgYXJyYXlsaWtlKSB0aHJvd3Mgb24gYW5jaWVudCBXZWJLaXRcblx0XHRcdFx0XHRcdGpRdWVyeS5tZXJnZSggc2NyaXB0cywgZ2V0QWxsKCBub2RlLCBcInNjcmlwdFwiICkgKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRjYWxsYmFjay5jYWxsKCBjb2xsZWN0aW9uWyBpIF0sIG5vZGUsIGkgKTtcblx0XHRcdH1cblxuXHRcdFx0aWYgKCBoYXNTY3JpcHRzICkge1xuXHRcdFx0XHRkb2MgPSBzY3JpcHRzWyBzY3JpcHRzLmxlbmd0aCAtIDEgXS5vd25lckRvY3VtZW50O1xuXG5cdFx0XHRcdC8vIFJlZW5hYmxlIHNjcmlwdHNcblx0XHRcdFx0alF1ZXJ5Lm1hcCggc2NyaXB0cywgcmVzdG9yZVNjcmlwdCApO1xuXG5cdFx0XHRcdC8vIEV2YWx1YXRlIGV4ZWN1dGFibGUgc2NyaXB0cyBvbiBmaXJzdCBkb2N1bWVudCBpbnNlcnRpb25cblx0XHRcdFx0Zm9yICggaSA9IDA7IGkgPCBoYXNTY3JpcHRzOyBpKysgKSB7XG5cdFx0XHRcdFx0bm9kZSA9IHNjcmlwdHNbIGkgXTtcblx0XHRcdFx0XHRpZiAoIHJzY3JpcHRUeXBlLnRlc3QoIG5vZGUudHlwZSB8fCBcIlwiICkgJiZcblx0XHRcdFx0XHRcdCFkYXRhUHJpdi5hY2Nlc3MoIG5vZGUsIFwiZ2xvYmFsRXZhbFwiICkgJiZcblx0XHRcdFx0XHRcdGpRdWVyeS5jb250YWlucyggZG9jLCBub2RlICkgKSB7XG5cblx0XHRcdFx0XHRcdGlmICggbm9kZS5zcmMgJiYgKCBub2RlLnR5cGUgfHwgXCJcIiApLnRvTG93ZXJDYXNlKCkgICE9PSBcIm1vZHVsZVwiICkge1xuXG5cdFx0XHRcdFx0XHRcdC8vIE9wdGlvbmFsIEFKQVggZGVwZW5kZW5jeSwgYnV0IHdvbid0IHJ1biBzY3JpcHRzIGlmIG5vdCBwcmVzZW50XG5cdFx0XHRcdFx0XHRcdGlmICggalF1ZXJ5Ll9ldmFsVXJsICYmICFub2RlLm5vTW9kdWxlICkge1xuXHRcdFx0XHRcdFx0XHRcdGpRdWVyeS5fZXZhbFVybCggbm9kZS5zcmMsIHtcblx0XHRcdFx0XHRcdFx0XHRcdG5vbmNlOiBub2RlLm5vbmNlIHx8IG5vZGUuZ2V0QXR0cmlidXRlKCBcIm5vbmNlXCIgKVxuXHRcdFx0XHRcdFx0XHRcdH0sIGRvYyApO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0XHRET01FdmFsKCBub2RlLnRleHRDb250ZW50LnJlcGxhY2UoIHJjbGVhblNjcmlwdCwgXCJcIiApLCBub2RlLCBkb2MgKTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHRyZXR1cm4gY29sbGVjdGlvbjtcbn1cblxuZnVuY3Rpb24gcmVtb3ZlKCBlbGVtLCBzZWxlY3Rvciwga2VlcERhdGEgKSB7XG5cdHZhciBub2RlLFxuXHRcdG5vZGVzID0gc2VsZWN0b3IgPyBqUXVlcnkuZmlsdGVyKCBzZWxlY3RvciwgZWxlbSApIDogZWxlbSxcblx0XHRpID0gMDtcblxuXHRmb3IgKCA7ICggbm9kZSA9IG5vZGVzWyBpIF0gKSAhPSBudWxsOyBpKysgKSB7XG5cdFx0aWYgKCAha2VlcERhdGEgJiYgbm9kZS5ub2RlVHlwZSA9PT0gMSApIHtcblx0XHRcdGpRdWVyeS5jbGVhbkRhdGEoIGdldEFsbCggbm9kZSApICk7XG5cdFx0fVxuXG5cdFx0aWYgKCBub2RlLnBhcmVudE5vZGUgKSB7XG5cdFx0XHRpZiAoIGtlZXBEYXRhICYmIGlzQXR0YWNoZWQoIG5vZGUgKSApIHtcblx0XHRcdFx0c2V0R2xvYmFsRXZhbCggZ2V0QWxsKCBub2RlLCBcInNjcmlwdFwiICkgKTtcblx0XHRcdH1cblx0XHRcdG5vZGUucGFyZW50Tm9kZS5yZW1vdmVDaGlsZCggbm9kZSApO1xuXHRcdH1cblx0fVxuXG5cdHJldHVybiBlbGVtO1xufVxuXG5qUXVlcnkuZXh0ZW5kKCB7XG5cdGh0bWxQcmVmaWx0ZXI6IGZ1bmN0aW9uKCBodG1sICkge1xuXHRcdHJldHVybiBodG1sO1xuXHR9LFxuXG5cdGNsb25lOiBmdW5jdGlvbiggZWxlbSwgZGF0YUFuZEV2ZW50cywgZGVlcERhdGFBbmRFdmVudHMgKSB7XG5cdFx0dmFyIGksIGwsIHNyY0VsZW1lbnRzLCBkZXN0RWxlbWVudHMsXG5cdFx0XHRjbG9uZSA9IGVsZW0uY2xvbmVOb2RlKCB0cnVlICksXG5cdFx0XHRpblBhZ2UgPSBpc0F0dGFjaGVkKCBlbGVtICk7XG5cblx0XHQvLyBGaXggSUUgY2xvbmluZyBpc3N1ZXNcblx0XHRpZiAoICFzdXBwb3J0Lm5vQ2xvbmVDaGVja2VkICYmICggZWxlbS5ub2RlVHlwZSA9PT0gMSB8fCBlbGVtLm5vZGVUeXBlID09PSAxMSApICYmXG5cdFx0XHRcdCFqUXVlcnkuaXNYTUxEb2MoIGVsZW0gKSApIHtcblxuXHRcdFx0Ly8gV2UgZXNjaGV3IFNpenpsZSBoZXJlIGZvciBwZXJmb3JtYW5jZSByZWFzb25zOiBodHRwczovL2pzcGVyZi5jb20vZ2V0YWxsLXZzLXNpenpsZS8yXG5cdFx0XHRkZXN0RWxlbWVudHMgPSBnZXRBbGwoIGNsb25lICk7XG5cdFx0XHRzcmNFbGVtZW50cyA9IGdldEFsbCggZWxlbSApO1xuXG5cdFx0XHRmb3IgKCBpID0gMCwgbCA9IHNyY0VsZW1lbnRzLmxlbmd0aDsgaSA8IGw7IGkrKyApIHtcblx0XHRcdFx0Zml4SW5wdXQoIHNyY0VsZW1lbnRzWyBpIF0sIGRlc3RFbGVtZW50c1sgaSBdICk7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0Ly8gQ29weSB0aGUgZXZlbnRzIGZyb20gdGhlIG9yaWdpbmFsIHRvIHRoZSBjbG9uZVxuXHRcdGlmICggZGF0YUFuZEV2ZW50cyApIHtcblx0XHRcdGlmICggZGVlcERhdGFBbmRFdmVudHMgKSB7XG5cdFx0XHRcdHNyY0VsZW1lbnRzID0gc3JjRWxlbWVudHMgfHwgZ2V0QWxsKCBlbGVtICk7XG5cdFx0XHRcdGRlc3RFbGVtZW50cyA9IGRlc3RFbGVtZW50cyB8fCBnZXRBbGwoIGNsb25lICk7XG5cblx0XHRcdFx0Zm9yICggaSA9IDAsIGwgPSBzcmNFbGVtZW50cy5sZW5ndGg7IGkgPCBsOyBpKysgKSB7XG5cdFx0XHRcdFx0Y2xvbmVDb3B5RXZlbnQoIHNyY0VsZW1lbnRzWyBpIF0sIGRlc3RFbGVtZW50c1sgaSBdICk7XG5cdFx0XHRcdH1cblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdGNsb25lQ29weUV2ZW50KCBlbGVtLCBjbG9uZSApO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdC8vIFByZXNlcnZlIHNjcmlwdCBldmFsdWF0aW9uIGhpc3Rvcnlcblx0XHRkZXN0RWxlbWVudHMgPSBnZXRBbGwoIGNsb25lLCBcInNjcmlwdFwiICk7XG5cdFx0aWYgKCBkZXN0RWxlbWVudHMubGVuZ3RoID4gMCApIHtcblx0XHRcdHNldEdsb2JhbEV2YWwoIGRlc3RFbGVtZW50cywgIWluUGFnZSAmJiBnZXRBbGwoIGVsZW0sIFwic2NyaXB0XCIgKSApO1xuXHRcdH1cblxuXHRcdC8vIFJldHVybiB0aGUgY2xvbmVkIHNldFxuXHRcdHJldHVybiBjbG9uZTtcblx0fSxcblxuXHRjbGVhbkRhdGE6IGZ1bmN0aW9uKCBlbGVtcyApIHtcblx0XHR2YXIgZGF0YSwgZWxlbSwgdHlwZSxcblx0XHRcdHNwZWNpYWwgPSBqUXVlcnkuZXZlbnQuc3BlY2lhbCxcblx0XHRcdGkgPSAwO1xuXG5cdFx0Zm9yICggOyAoIGVsZW0gPSBlbGVtc1sgaSBdICkgIT09IHVuZGVmaW5lZDsgaSsrICkge1xuXHRcdFx0aWYgKCBhY2NlcHREYXRhKCBlbGVtICkgKSB7XG5cdFx0XHRcdGlmICggKCBkYXRhID0gZWxlbVsgZGF0YVByaXYuZXhwYW5kbyBdICkgKSB7XG5cdFx0XHRcdFx0aWYgKCBkYXRhLmV2ZW50cyApIHtcblx0XHRcdFx0XHRcdGZvciAoIHR5cGUgaW4gZGF0YS5ldmVudHMgKSB7XG5cdFx0XHRcdFx0XHRcdGlmICggc3BlY2lhbFsgdHlwZSBdICkge1xuXHRcdFx0XHRcdFx0XHRcdGpRdWVyeS5ldmVudC5yZW1vdmUoIGVsZW0sIHR5cGUgKTtcblxuXHRcdFx0XHRcdFx0XHQvLyBUaGlzIGlzIGEgc2hvcnRjdXQgdG8gYXZvaWQgalF1ZXJ5LmV2ZW50LnJlbW92ZSdzIG92ZXJoZWFkXG5cdFx0XHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRcdFx0alF1ZXJ5LnJlbW92ZUV2ZW50KCBlbGVtLCB0eXBlLCBkYXRhLmhhbmRsZSApO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0Ly8gU3VwcG9ydDogQ2hyb21lIDw9MzUgLSA0NStcblx0XHRcdFx0XHQvLyBBc3NpZ24gdW5kZWZpbmVkIGluc3RlYWQgb2YgdXNpbmcgZGVsZXRlLCBzZWUgRGF0YSNyZW1vdmVcblx0XHRcdFx0XHRlbGVtWyBkYXRhUHJpdi5leHBhbmRvIF0gPSB1bmRlZmluZWQ7XG5cdFx0XHRcdH1cblx0XHRcdFx0aWYgKCBlbGVtWyBkYXRhVXNlci5leHBhbmRvIF0gKSB7XG5cblx0XHRcdFx0XHQvLyBTdXBwb3J0OiBDaHJvbWUgPD0zNSAtIDQ1K1xuXHRcdFx0XHRcdC8vIEFzc2lnbiB1bmRlZmluZWQgaW5zdGVhZCBvZiB1c2luZyBkZWxldGUsIHNlZSBEYXRhI3JlbW92ZVxuXHRcdFx0XHRcdGVsZW1bIGRhdGFVc2VyLmV4cGFuZG8gXSA9IHVuZGVmaW5lZDtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0fVxufSApO1xuXG5qUXVlcnkuZm4uZXh0ZW5kKCB7XG5cdGRldGFjaDogZnVuY3Rpb24oIHNlbGVjdG9yICkge1xuXHRcdHJldHVybiByZW1vdmUoIHRoaXMsIHNlbGVjdG9yLCB0cnVlICk7XG5cdH0sXG5cblx0cmVtb3ZlOiBmdW5jdGlvbiggc2VsZWN0b3IgKSB7XG5cdFx0cmV0dXJuIHJlbW92ZSggdGhpcywgc2VsZWN0b3IgKTtcblx0fSxcblxuXHR0ZXh0OiBmdW5jdGlvbiggdmFsdWUgKSB7XG5cdFx0cmV0dXJuIGFjY2VzcyggdGhpcywgZnVuY3Rpb24oIHZhbHVlICkge1xuXHRcdFx0cmV0dXJuIHZhbHVlID09PSB1bmRlZmluZWQgP1xuXHRcdFx0XHRqUXVlcnkudGV4dCggdGhpcyApIDpcblx0XHRcdFx0dGhpcy5lbXB0eSgpLmVhY2goIGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRcdGlmICggdGhpcy5ub2RlVHlwZSA9PT0gMSB8fCB0aGlzLm5vZGVUeXBlID09PSAxMSB8fCB0aGlzLm5vZGVUeXBlID09PSA5ICkge1xuXHRcdFx0XHRcdFx0dGhpcy50ZXh0Q29udGVudCA9IHZhbHVlO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fSApO1xuXHRcdH0sIG51bGwsIHZhbHVlLCBhcmd1bWVudHMubGVuZ3RoICk7XG5cdH0sXG5cblx0YXBwZW5kOiBmdW5jdGlvbigpIHtcblx0XHRyZXR1cm4gZG9tTWFuaXAoIHRoaXMsIGFyZ3VtZW50cywgZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRpZiAoIHRoaXMubm9kZVR5cGUgPT09IDEgfHwgdGhpcy5ub2RlVHlwZSA9PT0gMTEgfHwgdGhpcy5ub2RlVHlwZSA9PT0gOSApIHtcblx0XHRcdFx0dmFyIHRhcmdldCA9IG1hbmlwdWxhdGlvblRhcmdldCggdGhpcywgZWxlbSApO1xuXHRcdFx0XHR0YXJnZXQuYXBwZW5kQ2hpbGQoIGVsZW0gKTtcblx0XHRcdH1cblx0XHR9ICk7XG5cdH0sXG5cblx0cHJlcGVuZDogZnVuY3Rpb24oKSB7XG5cdFx0cmV0dXJuIGRvbU1hbmlwKCB0aGlzLCBhcmd1bWVudHMsIGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0aWYgKCB0aGlzLm5vZGVUeXBlID09PSAxIHx8IHRoaXMubm9kZVR5cGUgPT09IDExIHx8IHRoaXMubm9kZVR5cGUgPT09IDkgKSB7XG5cdFx0XHRcdHZhciB0YXJnZXQgPSBtYW5pcHVsYXRpb25UYXJnZXQoIHRoaXMsIGVsZW0gKTtcblx0XHRcdFx0dGFyZ2V0Lmluc2VydEJlZm9yZSggZWxlbSwgdGFyZ2V0LmZpcnN0Q2hpbGQgKTtcblx0XHRcdH1cblx0XHR9ICk7XG5cdH0sXG5cblx0YmVmb3JlOiBmdW5jdGlvbigpIHtcblx0XHRyZXR1cm4gZG9tTWFuaXAoIHRoaXMsIGFyZ3VtZW50cywgZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRpZiAoIHRoaXMucGFyZW50Tm9kZSApIHtcblx0XHRcdFx0dGhpcy5wYXJlbnROb2RlLmluc2VydEJlZm9yZSggZWxlbSwgdGhpcyApO1xuXHRcdFx0fVxuXHRcdH0gKTtcblx0fSxcblxuXHRhZnRlcjogZnVuY3Rpb24oKSB7XG5cdFx0cmV0dXJuIGRvbU1hbmlwKCB0aGlzLCBhcmd1bWVudHMsIGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0aWYgKCB0aGlzLnBhcmVudE5vZGUgKSB7XG5cdFx0XHRcdHRoaXMucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoIGVsZW0sIHRoaXMubmV4dFNpYmxpbmcgKTtcblx0XHRcdH1cblx0XHR9ICk7XG5cdH0sXG5cblx0ZW1wdHk6IGZ1bmN0aW9uKCkge1xuXHRcdHZhciBlbGVtLFxuXHRcdFx0aSA9IDA7XG5cblx0XHRmb3IgKCA7ICggZWxlbSA9IHRoaXNbIGkgXSApICE9IG51bGw7IGkrKyApIHtcblx0XHRcdGlmICggZWxlbS5ub2RlVHlwZSA9PT0gMSApIHtcblxuXHRcdFx0XHQvLyBQcmV2ZW50IG1lbW9yeSBsZWFrc1xuXHRcdFx0XHRqUXVlcnkuY2xlYW5EYXRhKCBnZXRBbGwoIGVsZW0sIGZhbHNlICkgKTtcblxuXHRcdFx0XHQvLyBSZW1vdmUgYW55IHJlbWFpbmluZyBub2Rlc1xuXHRcdFx0XHRlbGVtLnRleHRDb250ZW50ID0gXCJcIjtcblx0XHRcdH1cblx0XHR9XG5cblx0XHRyZXR1cm4gdGhpcztcblx0fSxcblxuXHRjbG9uZTogZnVuY3Rpb24oIGRhdGFBbmRFdmVudHMsIGRlZXBEYXRhQW5kRXZlbnRzICkge1xuXHRcdGRhdGFBbmRFdmVudHMgPSBkYXRhQW5kRXZlbnRzID09IG51bGwgPyBmYWxzZSA6IGRhdGFBbmRFdmVudHM7XG5cdFx0ZGVlcERhdGFBbmRFdmVudHMgPSBkZWVwRGF0YUFuZEV2ZW50cyA9PSBudWxsID8gZGF0YUFuZEV2ZW50cyA6IGRlZXBEYXRhQW5kRXZlbnRzO1xuXG5cdFx0cmV0dXJuIHRoaXMubWFwKCBmdW5jdGlvbigpIHtcblx0XHRcdHJldHVybiBqUXVlcnkuY2xvbmUoIHRoaXMsIGRhdGFBbmRFdmVudHMsIGRlZXBEYXRhQW5kRXZlbnRzICk7XG5cdFx0fSApO1xuXHR9LFxuXG5cdGh0bWw6IGZ1bmN0aW9uKCB2YWx1ZSApIHtcblx0XHRyZXR1cm4gYWNjZXNzKCB0aGlzLCBmdW5jdGlvbiggdmFsdWUgKSB7XG5cdFx0XHR2YXIgZWxlbSA9IHRoaXNbIDAgXSB8fCB7fSxcblx0XHRcdFx0aSA9IDAsXG5cdFx0XHRcdGwgPSB0aGlzLmxlbmd0aDtcblxuXHRcdFx0aWYgKCB2YWx1ZSA9PT0gdW5kZWZpbmVkICYmIGVsZW0ubm9kZVR5cGUgPT09IDEgKSB7XG5cdFx0XHRcdHJldHVybiBlbGVtLmlubmVySFRNTDtcblx0XHRcdH1cblxuXHRcdFx0Ly8gU2VlIGlmIHdlIGNhbiB0YWtlIGEgc2hvcnRjdXQgYW5kIGp1c3QgdXNlIGlubmVySFRNTFxuXHRcdFx0aWYgKCB0eXBlb2YgdmFsdWUgPT09IFwic3RyaW5nXCIgJiYgIXJub0lubmVyaHRtbC50ZXN0KCB2YWx1ZSApICYmXG5cdFx0XHRcdCF3cmFwTWFwWyAoIHJ0YWdOYW1lLmV4ZWMoIHZhbHVlICkgfHwgWyBcIlwiLCBcIlwiIF0gKVsgMSBdLnRvTG93ZXJDYXNlKCkgXSApIHtcblxuXHRcdFx0XHR2YWx1ZSA9IGpRdWVyeS5odG1sUHJlZmlsdGVyKCB2YWx1ZSApO1xuXG5cdFx0XHRcdHRyeSB7XG5cdFx0XHRcdFx0Zm9yICggOyBpIDwgbDsgaSsrICkge1xuXHRcdFx0XHRcdFx0ZWxlbSA9IHRoaXNbIGkgXSB8fCB7fTtcblxuXHRcdFx0XHRcdFx0Ly8gUmVtb3ZlIGVsZW1lbnQgbm9kZXMgYW5kIHByZXZlbnQgbWVtb3J5IGxlYWtzXG5cdFx0XHRcdFx0XHRpZiAoIGVsZW0ubm9kZVR5cGUgPT09IDEgKSB7XG5cdFx0XHRcdFx0XHRcdGpRdWVyeS5jbGVhbkRhdGEoIGdldEFsbCggZWxlbSwgZmFsc2UgKSApO1xuXHRcdFx0XHRcdFx0XHRlbGVtLmlubmVySFRNTCA9IHZhbHVlO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdGVsZW0gPSAwO1xuXG5cdFx0XHRcdC8vIElmIHVzaW5nIGlubmVySFRNTCB0aHJvd3MgYW4gZXhjZXB0aW9uLCB1c2UgdGhlIGZhbGxiYWNrIG1ldGhvZFxuXHRcdFx0XHR9IGNhdGNoICggZSApIHt9XG5cdFx0XHR9XG5cblx0XHRcdGlmICggZWxlbSApIHtcblx0XHRcdFx0dGhpcy5lbXB0eSgpLmFwcGVuZCggdmFsdWUgKTtcblx0XHRcdH1cblx0XHR9LCBudWxsLCB2YWx1ZSwgYXJndW1lbnRzLmxlbmd0aCApO1xuXHR9LFxuXG5cdHJlcGxhY2VXaXRoOiBmdW5jdGlvbigpIHtcblx0XHR2YXIgaWdub3JlZCA9IFtdO1xuXG5cdFx0Ly8gTWFrZSB0aGUgY2hhbmdlcywgcmVwbGFjaW5nIGVhY2ggbm9uLWlnbm9yZWQgY29udGV4dCBlbGVtZW50IHdpdGggdGhlIG5ldyBjb250ZW50XG5cdFx0cmV0dXJuIGRvbU1hbmlwKCB0aGlzLCBhcmd1bWVudHMsIGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0dmFyIHBhcmVudCA9IHRoaXMucGFyZW50Tm9kZTtcblxuXHRcdFx0aWYgKCBqUXVlcnkuaW5BcnJheSggdGhpcywgaWdub3JlZCApIDwgMCApIHtcblx0XHRcdFx0alF1ZXJ5LmNsZWFuRGF0YSggZ2V0QWxsKCB0aGlzICkgKTtcblx0XHRcdFx0aWYgKCBwYXJlbnQgKSB7XG5cdFx0XHRcdFx0cGFyZW50LnJlcGxhY2VDaGlsZCggZWxlbSwgdGhpcyApO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHQvLyBGb3JjZSBjYWxsYmFjayBpbnZvY2F0aW9uXG5cdFx0fSwgaWdub3JlZCApO1xuXHR9XG59ICk7XG5cbmpRdWVyeS5lYWNoKCB7XG5cdGFwcGVuZFRvOiBcImFwcGVuZFwiLFxuXHRwcmVwZW5kVG86IFwicHJlcGVuZFwiLFxuXHRpbnNlcnRCZWZvcmU6IFwiYmVmb3JlXCIsXG5cdGluc2VydEFmdGVyOiBcImFmdGVyXCIsXG5cdHJlcGxhY2VBbGw6IFwicmVwbGFjZVdpdGhcIlxufSwgZnVuY3Rpb24oIG5hbWUsIG9yaWdpbmFsICkge1xuXHRqUXVlcnkuZm5bIG5hbWUgXSA9IGZ1bmN0aW9uKCBzZWxlY3RvciApIHtcblx0XHR2YXIgZWxlbXMsXG5cdFx0XHRyZXQgPSBbXSxcblx0XHRcdGluc2VydCA9IGpRdWVyeSggc2VsZWN0b3IgKSxcblx0XHRcdGxhc3QgPSBpbnNlcnQubGVuZ3RoIC0gMSxcblx0XHRcdGkgPSAwO1xuXG5cdFx0Zm9yICggOyBpIDw9IGxhc3Q7IGkrKyApIHtcblx0XHRcdGVsZW1zID0gaSA9PT0gbGFzdCA/IHRoaXMgOiB0aGlzLmNsb25lKCB0cnVlICk7XG5cdFx0XHRqUXVlcnkoIGluc2VydFsgaSBdIClbIG9yaWdpbmFsIF0oIGVsZW1zICk7XG5cblx0XHRcdC8vIFN1cHBvcnQ6IEFuZHJvaWQgPD00LjAgb25seSwgUGhhbnRvbUpTIDEgb25seVxuXHRcdFx0Ly8gLmdldCgpIGJlY2F1c2UgcHVzaC5hcHBseShfLCBhcnJheWxpa2UpIHRocm93cyBvbiBhbmNpZW50IFdlYktpdFxuXHRcdFx0cHVzaC5hcHBseSggcmV0LCBlbGVtcy5nZXQoKSApO1xuXHRcdH1cblxuXHRcdHJldHVybiB0aGlzLnB1c2hTdGFjayggcmV0ICk7XG5cdH07XG59ICk7XG52YXIgcm51bW5vbnB4ID0gbmV3IFJlZ0V4cCggXCJeKFwiICsgcG51bSArIFwiKSg/IXB4KVthLXolXSskXCIsIFwiaVwiICk7XG5cbnZhciBnZXRTdHlsZXMgPSBmdW5jdGlvbiggZWxlbSApIHtcblxuXHRcdC8vIFN1cHBvcnQ6IElFIDw9MTEgb25seSwgRmlyZWZveCA8PTMwICgjMTUwOTgsICMxNDE1MClcblx0XHQvLyBJRSB0aHJvd3Mgb24gZWxlbWVudHMgY3JlYXRlZCBpbiBwb3B1cHNcblx0XHQvLyBGRiBtZWFud2hpbGUgdGhyb3dzIG9uIGZyYW1lIGVsZW1lbnRzIHRocm91Z2ggXCJkZWZhdWx0Vmlldy5nZXRDb21wdXRlZFN0eWxlXCJcblx0XHR2YXIgdmlldyA9IGVsZW0ub3duZXJEb2N1bWVudC5kZWZhdWx0VmlldztcblxuXHRcdGlmICggIXZpZXcgfHwgIXZpZXcub3BlbmVyICkge1xuXHRcdFx0dmlldyA9IHdpbmRvdztcblx0XHR9XG5cblx0XHRyZXR1cm4gdmlldy5nZXRDb21wdXRlZFN0eWxlKCBlbGVtICk7XG5cdH07XG5cbnZhciBzd2FwID0gZnVuY3Rpb24oIGVsZW0sIG9wdGlvbnMsIGNhbGxiYWNrICkge1xuXHR2YXIgcmV0LCBuYW1lLFxuXHRcdG9sZCA9IHt9O1xuXG5cdC8vIFJlbWVtYmVyIHRoZSBvbGQgdmFsdWVzLCBhbmQgaW5zZXJ0IHRoZSBuZXcgb25lc1xuXHRmb3IgKCBuYW1lIGluIG9wdGlvbnMgKSB7XG5cdFx0b2xkWyBuYW1lIF0gPSBlbGVtLnN0eWxlWyBuYW1lIF07XG5cdFx0ZWxlbS5zdHlsZVsgbmFtZSBdID0gb3B0aW9uc1sgbmFtZSBdO1xuXHR9XG5cblx0cmV0ID0gY2FsbGJhY2suY2FsbCggZWxlbSApO1xuXG5cdC8vIFJldmVydCB0aGUgb2xkIHZhbHVlc1xuXHRmb3IgKCBuYW1lIGluIG9wdGlvbnMgKSB7XG5cdFx0ZWxlbS5zdHlsZVsgbmFtZSBdID0gb2xkWyBuYW1lIF07XG5cdH1cblxuXHRyZXR1cm4gcmV0O1xufTtcblxuXG52YXIgcmJveFN0eWxlID0gbmV3IFJlZ0V4cCggY3NzRXhwYW5kLmpvaW4oIFwifFwiICksIFwiaVwiICk7XG5cblxuXG4oIGZ1bmN0aW9uKCkge1xuXG5cdC8vIEV4ZWN1dGluZyBib3RoIHBpeGVsUG9zaXRpb24gJiBib3hTaXppbmdSZWxpYWJsZSB0ZXN0cyByZXF1aXJlIG9ubHkgb25lIGxheW91dFxuXHQvLyBzbyB0aGV5J3JlIGV4ZWN1dGVkIGF0IHRoZSBzYW1lIHRpbWUgdG8gc2F2ZSB0aGUgc2Vjb25kIGNvbXB1dGF0aW9uLlxuXHRmdW5jdGlvbiBjb21wdXRlU3R5bGVUZXN0cygpIHtcblxuXHRcdC8vIFRoaXMgaXMgYSBzaW5nbGV0b24sIHdlIG5lZWQgdG8gZXhlY3V0ZSBpdCBvbmx5IG9uY2Vcblx0XHRpZiAoICFkaXYgKSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0Y29udGFpbmVyLnN0eWxlLmNzc1RleHQgPSBcInBvc2l0aW9uOmFic29sdXRlO2xlZnQ6LTExMTExcHg7d2lkdGg6NjBweDtcIiArXG5cdFx0XHRcIm1hcmdpbi10b3A6MXB4O3BhZGRpbmc6MDtib3JkZXI6MFwiO1xuXHRcdGRpdi5zdHlsZS5jc3NUZXh0ID1cblx0XHRcdFwicG9zaXRpb246cmVsYXRpdmU7ZGlzcGxheTpibG9jaztib3gtc2l6aW5nOmJvcmRlci1ib3g7b3ZlcmZsb3c6c2Nyb2xsO1wiICtcblx0XHRcdFwibWFyZ2luOmF1dG87Ym9yZGVyOjFweDtwYWRkaW5nOjFweDtcIiArXG5cdFx0XHRcIndpZHRoOjYwJTt0b3A6MSVcIjtcblx0XHRkb2N1bWVudEVsZW1lbnQuYXBwZW5kQ2hpbGQoIGNvbnRhaW5lciApLmFwcGVuZENoaWxkKCBkaXYgKTtcblxuXHRcdHZhciBkaXZTdHlsZSA9IHdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKCBkaXYgKTtcblx0XHRwaXhlbFBvc2l0aW9uVmFsID0gZGl2U3R5bGUudG9wICE9PSBcIjElXCI7XG5cblx0XHQvLyBTdXBwb3J0OiBBbmRyb2lkIDQuMCAtIDQuMyBvbmx5LCBGaXJlZm94IDw9MyAtIDQ0XG5cdFx0cmVsaWFibGVNYXJnaW5MZWZ0VmFsID0gcm91bmRQaXhlbE1lYXN1cmVzKCBkaXZTdHlsZS5tYXJnaW5MZWZ0ICkgPT09IDEyO1xuXG5cdFx0Ly8gU3VwcG9ydDogQW5kcm9pZCA0LjAgLSA0LjMgb25seSwgU2FmYXJpIDw9OS4xIC0gMTAuMSwgaU9TIDw9Ny4wIC0gOS4zXG5cdFx0Ly8gU29tZSBzdHlsZXMgY29tZSBiYWNrIHdpdGggcGVyY2VudGFnZSB2YWx1ZXMsIGV2ZW4gdGhvdWdoIHRoZXkgc2hvdWxkbid0XG5cdFx0ZGl2LnN0eWxlLnJpZ2h0ID0gXCI2MCVcIjtcblx0XHRwaXhlbEJveFN0eWxlc1ZhbCA9IHJvdW5kUGl4ZWxNZWFzdXJlcyggZGl2U3R5bGUucmlnaHQgKSA9PT0gMzY7XG5cblx0XHQvLyBTdXBwb3J0OiBJRSA5IC0gMTEgb25seVxuXHRcdC8vIERldGVjdCBtaXNyZXBvcnRpbmcgb2YgY29udGVudCBkaW1lbnNpb25zIGZvciBib3gtc2l6aW5nOmJvcmRlci1ib3ggZWxlbWVudHNcblx0XHRib3hTaXppbmdSZWxpYWJsZVZhbCA9IHJvdW5kUGl4ZWxNZWFzdXJlcyggZGl2U3R5bGUud2lkdGggKSA9PT0gMzY7XG5cblx0XHQvLyBTdXBwb3J0OiBJRSA5IG9ubHlcblx0XHQvLyBEZXRlY3Qgb3ZlcmZsb3c6c2Nyb2xsIHNjcmV3aW5lc3MgKGdoLTM2OTkpXG5cdFx0Ly8gU3VwcG9ydDogQ2hyb21lIDw9NjRcblx0XHQvLyBEb24ndCBnZXQgdHJpY2tlZCB3aGVuIHpvb20gYWZmZWN0cyBvZmZzZXRXaWR0aCAoZ2gtNDAyOSlcblx0XHRkaXYuc3R5bGUucG9zaXRpb24gPSBcImFic29sdXRlXCI7XG5cdFx0c2Nyb2xsYm94U2l6ZVZhbCA9IHJvdW5kUGl4ZWxNZWFzdXJlcyggZGl2Lm9mZnNldFdpZHRoIC8gMyApID09PSAxMjtcblxuXHRcdGRvY3VtZW50RWxlbWVudC5yZW1vdmVDaGlsZCggY29udGFpbmVyICk7XG5cblx0XHQvLyBOdWxsaWZ5IHRoZSBkaXYgc28gaXQgd291bGRuJ3QgYmUgc3RvcmVkIGluIHRoZSBtZW1vcnkgYW5kXG5cdFx0Ly8gaXQgd2lsbCBhbHNvIGJlIGEgc2lnbiB0aGF0IGNoZWNrcyBhbHJlYWR5IHBlcmZvcm1lZFxuXHRcdGRpdiA9IG51bGw7XG5cdH1cblxuXHRmdW5jdGlvbiByb3VuZFBpeGVsTWVhc3VyZXMoIG1lYXN1cmUgKSB7XG5cdFx0cmV0dXJuIE1hdGgucm91bmQoIHBhcnNlRmxvYXQoIG1lYXN1cmUgKSApO1xuXHR9XG5cblx0dmFyIHBpeGVsUG9zaXRpb25WYWwsIGJveFNpemluZ1JlbGlhYmxlVmFsLCBzY3JvbGxib3hTaXplVmFsLCBwaXhlbEJveFN0eWxlc1ZhbCxcblx0XHRyZWxpYWJsZVRyRGltZW5zaW9uc1ZhbCwgcmVsaWFibGVNYXJnaW5MZWZ0VmFsLFxuXHRcdGNvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoIFwiZGl2XCIgKSxcblx0XHRkaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCBcImRpdlwiICk7XG5cblx0Ly8gRmluaXNoIGVhcmx5IGluIGxpbWl0ZWQgKG5vbi1icm93c2VyKSBlbnZpcm9ubWVudHNcblx0aWYgKCAhZGl2LnN0eWxlICkge1xuXHRcdHJldHVybjtcblx0fVxuXG5cdC8vIFN1cHBvcnQ6IElFIDw9OSAtIDExIG9ubHlcblx0Ly8gU3R5bGUgb2YgY2xvbmVkIGVsZW1lbnQgYWZmZWN0cyBzb3VyY2UgZWxlbWVudCBjbG9uZWQgKCM4OTA4KVxuXHRkaXYuc3R5bGUuYmFja2dyb3VuZENsaXAgPSBcImNvbnRlbnQtYm94XCI7XG5cdGRpdi5jbG9uZU5vZGUoIHRydWUgKS5zdHlsZS5iYWNrZ3JvdW5kQ2xpcCA9IFwiXCI7XG5cdHN1cHBvcnQuY2xlYXJDbG9uZVN0eWxlID0gZGl2LnN0eWxlLmJhY2tncm91bmRDbGlwID09PSBcImNvbnRlbnQtYm94XCI7XG5cblx0alF1ZXJ5LmV4dGVuZCggc3VwcG9ydCwge1xuXHRcdGJveFNpemluZ1JlbGlhYmxlOiBmdW5jdGlvbigpIHtcblx0XHRcdGNvbXB1dGVTdHlsZVRlc3RzKCk7XG5cdFx0XHRyZXR1cm4gYm94U2l6aW5nUmVsaWFibGVWYWw7XG5cdFx0fSxcblx0XHRwaXhlbEJveFN0eWxlczogZnVuY3Rpb24oKSB7XG5cdFx0XHRjb21wdXRlU3R5bGVUZXN0cygpO1xuXHRcdFx0cmV0dXJuIHBpeGVsQm94U3R5bGVzVmFsO1xuXHRcdH0sXG5cdFx0cGl4ZWxQb3NpdGlvbjogZnVuY3Rpb24oKSB7XG5cdFx0XHRjb21wdXRlU3R5bGVUZXN0cygpO1xuXHRcdFx0cmV0dXJuIHBpeGVsUG9zaXRpb25WYWw7XG5cdFx0fSxcblx0XHRyZWxpYWJsZU1hcmdpbkxlZnQ6IGZ1bmN0aW9uKCkge1xuXHRcdFx0Y29tcHV0ZVN0eWxlVGVzdHMoKTtcblx0XHRcdHJldHVybiByZWxpYWJsZU1hcmdpbkxlZnRWYWw7XG5cdFx0fSxcblx0XHRzY3JvbGxib3hTaXplOiBmdW5jdGlvbigpIHtcblx0XHRcdGNvbXB1dGVTdHlsZVRlc3RzKCk7XG5cdFx0XHRyZXR1cm4gc2Nyb2xsYm94U2l6ZVZhbDtcblx0XHR9LFxuXG5cdFx0Ly8gU3VwcG9ydDogSUUgOSAtIDExKywgRWRnZSAxNSAtIDE4K1xuXHRcdC8vIElFL0VkZ2UgbWlzcmVwb3J0IGBnZXRDb21wdXRlZFN0eWxlYCBvZiB0YWJsZSByb3dzIHdpdGggd2lkdGgvaGVpZ2h0XG5cdFx0Ly8gc2V0IGluIENTUyB3aGlsZSBgb2Zmc2V0KmAgcHJvcGVydGllcyByZXBvcnQgY29ycmVjdCB2YWx1ZXMuXG5cdFx0Ly8gQmVoYXZpb3IgaW4gSUUgOSBpcyBtb3JlIHN1YnRsZSB0aGFuIGluIG5ld2VyIHZlcnNpb25zICYgaXQgcGFzc2VzXG5cdFx0Ly8gc29tZSB2ZXJzaW9ucyBvZiB0aGlzIHRlc3Q7IG1ha2Ugc3VyZSBub3QgdG8gbWFrZSBpdCBwYXNzIHRoZXJlIVxuXHRcdHJlbGlhYmxlVHJEaW1lbnNpb25zOiBmdW5jdGlvbigpIHtcblx0XHRcdHZhciB0YWJsZSwgdHIsIHRyQ2hpbGQsIHRyU3R5bGU7XG5cdFx0XHRpZiAoIHJlbGlhYmxlVHJEaW1lbnNpb25zVmFsID09IG51bGwgKSB7XG5cdFx0XHRcdHRhYmxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCggXCJ0YWJsZVwiICk7XG5cdFx0XHRcdHRyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCggXCJ0clwiICk7XG5cdFx0XHRcdHRyQ2hpbGQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCBcImRpdlwiICk7XG5cblx0XHRcdFx0dGFibGUuc3R5bGUuY3NzVGV4dCA9IFwicG9zaXRpb246YWJzb2x1dGU7bGVmdDotMTExMTFweFwiO1xuXHRcdFx0XHR0ci5zdHlsZS5oZWlnaHQgPSBcIjFweFwiO1xuXHRcdFx0XHR0ckNoaWxkLnN0eWxlLmhlaWdodCA9IFwiOXB4XCI7XG5cblx0XHRcdFx0ZG9jdW1lbnRFbGVtZW50XG5cdFx0XHRcdFx0LmFwcGVuZENoaWxkKCB0YWJsZSApXG5cdFx0XHRcdFx0LmFwcGVuZENoaWxkKCB0ciApXG5cdFx0XHRcdFx0LmFwcGVuZENoaWxkKCB0ckNoaWxkICk7XG5cblx0XHRcdFx0dHJTdHlsZSA9IHdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKCB0ciApO1xuXHRcdFx0XHRyZWxpYWJsZVRyRGltZW5zaW9uc1ZhbCA9IHBhcnNlSW50KCB0clN0eWxlLmhlaWdodCApID4gMztcblxuXHRcdFx0XHRkb2N1bWVudEVsZW1lbnQucmVtb3ZlQ2hpbGQoIHRhYmxlICk7XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gcmVsaWFibGVUckRpbWVuc2lvbnNWYWw7XG5cdFx0fVxuXHR9ICk7XG59ICkoKTtcblxuXG5mdW5jdGlvbiBjdXJDU1MoIGVsZW0sIG5hbWUsIGNvbXB1dGVkICkge1xuXHR2YXIgd2lkdGgsIG1pbldpZHRoLCBtYXhXaWR0aCwgcmV0LFxuXG5cdFx0Ly8gU3VwcG9ydDogRmlyZWZveCA1MStcblx0XHQvLyBSZXRyaWV2aW5nIHN0eWxlIGJlZm9yZSBjb21wdXRlZCBzb21laG93XG5cdFx0Ly8gZml4ZXMgYW4gaXNzdWUgd2l0aCBnZXR0aW5nIHdyb25nIHZhbHVlc1xuXHRcdC8vIG9uIGRldGFjaGVkIGVsZW1lbnRzXG5cdFx0c3R5bGUgPSBlbGVtLnN0eWxlO1xuXG5cdGNvbXB1dGVkID0gY29tcHV0ZWQgfHwgZ2V0U3R5bGVzKCBlbGVtICk7XG5cblx0Ly8gZ2V0UHJvcGVydHlWYWx1ZSBpcyBuZWVkZWQgZm9yOlxuXHQvLyAgIC5jc3MoJ2ZpbHRlcicpIChJRSA5IG9ubHksICMxMjUzNylcblx0Ly8gICAuY3NzKCctLWN1c3RvbVByb3BlcnR5KSAoIzMxNDQpXG5cdGlmICggY29tcHV0ZWQgKSB7XG5cdFx0cmV0ID0gY29tcHV0ZWQuZ2V0UHJvcGVydHlWYWx1ZSggbmFtZSApIHx8IGNvbXB1dGVkWyBuYW1lIF07XG5cblx0XHRpZiAoIHJldCA9PT0gXCJcIiAmJiAhaXNBdHRhY2hlZCggZWxlbSApICkge1xuXHRcdFx0cmV0ID0galF1ZXJ5LnN0eWxlKCBlbGVtLCBuYW1lICk7XG5cdFx0fVxuXG5cdFx0Ly8gQSB0cmlidXRlIHRvIHRoZSBcImF3ZXNvbWUgaGFjayBieSBEZWFuIEVkd2FyZHNcIlxuXHRcdC8vIEFuZHJvaWQgQnJvd3NlciByZXR1cm5zIHBlcmNlbnRhZ2UgZm9yIHNvbWUgdmFsdWVzLFxuXHRcdC8vIGJ1dCB3aWR0aCBzZWVtcyB0byBiZSByZWxpYWJseSBwaXhlbHMuXG5cdFx0Ly8gVGhpcyBpcyBhZ2FpbnN0IHRoZSBDU1NPTSBkcmFmdCBzcGVjOlxuXHRcdC8vIGh0dHBzOi8vZHJhZnRzLmNzc3dnLm9yZy9jc3NvbS8jcmVzb2x2ZWQtdmFsdWVzXG5cdFx0aWYgKCAhc3VwcG9ydC5waXhlbEJveFN0eWxlcygpICYmIHJudW1ub25weC50ZXN0KCByZXQgKSAmJiByYm94U3R5bGUudGVzdCggbmFtZSApICkge1xuXG5cdFx0XHQvLyBSZW1lbWJlciB0aGUgb3JpZ2luYWwgdmFsdWVzXG5cdFx0XHR3aWR0aCA9IHN0eWxlLndpZHRoO1xuXHRcdFx0bWluV2lkdGggPSBzdHlsZS5taW5XaWR0aDtcblx0XHRcdG1heFdpZHRoID0gc3R5bGUubWF4V2lkdGg7XG5cblx0XHRcdC8vIFB1dCBpbiB0aGUgbmV3IHZhbHVlcyB0byBnZXQgYSBjb21wdXRlZCB2YWx1ZSBvdXRcblx0XHRcdHN0eWxlLm1pbldpZHRoID0gc3R5bGUubWF4V2lkdGggPSBzdHlsZS53aWR0aCA9IHJldDtcblx0XHRcdHJldCA9IGNvbXB1dGVkLndpZHRoO1xuXG5cdFx0XHQvLyBSZXZlcnQgdGhlIGNoYW5nZWQgdmFsdWVzXG5cdFx0XHRzdHlsZS53aWR0aCA9IHdpZHRoO1xuXHRcdFx0c3R5bGUubWluV2lkdGggPSBtaW5XaWR0aDtcblx0XHRcdHN0eWxlLm1heFdpZHRoID0gbWF4V2lkdGg7XG5cdFx0fVxuXHR9XG5cblx0cmV0dXJuIHJldCAhPT0gdW5kZWZpbmVkID9cblxuXHRcdC8vIFN1cHBvcnQ6IElFIDw9OSAtIDExIG9ubHlcblx0XHQvLyBJRSByZXR1cm5zIHpJbmRleCB2YWx1ZSBhcyBhbiBpbnRlZ2VyLlxuXHRcdHJldCArIFwiXCIgOlxuXHRcdHJldDtcbn1cblxuXG5mdW5jdGlvbiBhZGRHZXRIb29rSWYoIGNvbmRpdGlvbkZuLCBob29rRm4gKSB7XG5cblx0Ly8gRGVmaW5lIHRoZSBob29rLCB3ZSdsbCBjaGVjayBvbiB0aGUgZmlyc3QgcnVuIGlmIGl0J3MgcmVhbGx5IG5lZWRlZC5cblx0cmV0dXJuIHtcblx0XHRnZXQ6IGZ1bmN0aW9uKCkge1xuXHRcdFx0aWYgKCBjb25kaXRpb25GbigpICkge1xuXG5cdFx0XHRcdC8vIEhvb2sgbm90IG5lZWRlZCAob3IgaXQncyBub3QgcG9zc2libGUgdG8gdXNlIGl0IGR1ZVxuXHRcdFx0XHQvLyB0byBtaXNzaW5nIGRlcGVuZGVuY3kpLCByZW1vdmUgaXQuXG5cdFx0XHRcdGRlbGV0ZSB0aGlzLmdldDtcblx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBIb29rIG5lZWRlZDsgcmVkZWZpbmUgaXQgc28gdGhhdCB0aGUgc3VwcG9ydCB0ZXN0IGlzIG5vdCBleGVjdXRlZCBhZ2Fpbi5cblx0XHRcdHJldHVybiAoIHRoaXMuZ2V0ID0gaG9va0ZuICkuYXBwbHkoIHRoaXMsIGFyZ3VtZW50cyApO1xuXHRcdH1cblx0fTtcbn1cblxuXG52YXIgY3NzUHJlZml4ZXMgPSBbIFwiV2Via2l0XCIsIFwiTW96XCIsIFwibXNcIiBdLFxuXHRlbXB0eVN0eWxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCggXCJkaXZcIiApLnN0eWxlLFxuXHR2ZW5kb3JQcm9wcyA9IHt9O1xuXG4vLyBSZXR1cm4gYSB2ZW5kb3ItcHJlZml4ZWQgcHJvcGVydHkgb3IgdW5kZWZpbmVkXG5mdW5jdGlvbiB2ZW5kb3JQcm9wTmFtZSggbmFtZSApIHtcblxuXHQvLyBDaGVjayBmb3IgdmVuZG9yIHByZWZpeGVkIG5hbWVzXG5cdHZhciBjYXBOYW1lID0gbmFtZVsgMCBdLnRvVXBwZXJDYXNlKCkgKyBuYW1lLnNsaWNlKCAxICksXG5cdFx0aSA9IGNzc1ByZWZpeGVzLmxlbmd0aDtcblxuXHR3aGlsZSAoIGktLSApIHtcblx0XHRuYW1lID0gY3NzUHJlZml4ZXNbIGkgXSArIGNhcE5hbWU7XG5cdFx0aWYgKCBuYW1lIGluIGVtcHR5U3R5bGUgKSB7XG5cdFx0XHRyZXR1cm4gbmFtZTtcblx0XHR9XG5cdH1cbn1cblxuLy8gUmV0dXJuIGEgcG90ZW50aWFsbHktbWFwcGVkIGpRdWVyeS5jc3NQcm9wcyBvciB2ZW5kb3IgcHJlZml4ZWQgcHJvcGVydHlcbmZ1bmN0aW9uIGZpbmFsUHJvcE5hbWUoIG5hbWUgKSB7XG5cdHZhciBmaW5hbCA9IGpRdWVyeS5jc3NQcm9wc1sgbmFtZSBdIHx8IHZlbmRvclByb3BzWyBuYW1lIF07XG5cblx0aWYgKCBmaW5hbCApIHtcblx0XHRyZXR1cm4gZmluYWw7XG5cdH1cblx0aWYgKCBuYW1lIGluIGVtcHR5U3R5bGUgKSB7XG5cdFx0cmV0dXJuIG5hbWU7XG5cdH1cblx0cmV0dXJuIHZlbmRvclByb3BzWyBuYW1lIF0gPSB2ZW5kb3JQcm9wTmFtZSggbmFtZSApIHx8IG5hbWU7XG59XG5cblxudmFyXG5cblx0Ly8gU3dhcHBhYmxlIGlmIGRpc3BsYXkgaXMgbm9uZSBvciBzdGFydHMgd2l0aCB0YWJsZVxuXHQvLyBleGNlcHQgXCJ0YWJsZVwiLCBcInRhYmxlLWNlbGxcIiwgb3IgXCJ0YWJsZS1jYXB0aW9uXCJcblx0Ly8gU2VlIGhlcmUgZm9yIGRpc3BsYXkgdmFsdWVzOiBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL0NTUy9kaXNwbGF5XG5cdHJkaXNwbGF5c3dhcCA9IC9eKG5vbmV8dGFibGUoPyEtY1tlYV0pLispLyxcblx0cmN1c3RvbVByb3AgPSAvXi0tLyxcblx0Y3NzU2hvdyA9IHsgcG9zaXRpb246IFwiYWJzb2x1dGVcIiwgdmlzaWJpbGl0eTogXCJoaWRkZW5cIiwgZGlzcGxheTogXCJibG9ja1wiIH0sXG5cdGNzc05vcm1hbFRyYW5zZm9ybSA9IHtcblx0XHRsZXR0ZXJTcGFjaW5nOiBcIjBcIixcblx0XHRmb250V2VpZ2h0OiBcIjQwMFwiXG5cdH07XG5cbmZ1bmN0aW9uIHNldFBvc2l0aXZlTnVtYmVyKCBfZWxlbSwgdmFsdWUsIHN1YnRyYWN0ICkge1xuXG5cdC8vIEFueSByZWxhdGl2ZSAoKy8tKSB2YWx1ZXMgaGF2ZSBhbHJlYWR5IGJlZW5cblx0Ly8gbm9ybWFsaXplZCBhdCB0aGlzIHBvaW50XG5cdHZhciBtYXRjaGVzID0gcmNzc051bS5leGVjKCB2YWx1ZSApO1xuXHRyZXR1cm4gbWF0Y2hlcyA/XG5cblx0XHQvLyBHdWFyZCBhZ2FpbnN0IHVuZGVmaW5lZCBcInN1YnRyYWN0XCIsIGUuZy4sIHdoZW4gdXNlZCBhcyBpbiBjc3NIb29rc1xuXHRcdE1hdGgubWF4KCAwLCBtYXRjaGVzWyAyIF0gLSAoIHN1YnRyYWN0IHx8IDAgKSApICsgKCBtYXRjaGVzWyAzIF0gfHwgXCJweFwiICkgOlxuXHRcdHZhbHVlO1xufVxuXG5mdW5jdGlvbiBib3hNb2RlbEFkanVzdG1lbnQoIGVsZW0sIGRpbWVuc2lvbiwgYm94LCBpc0JvcmRlckJveCwgc3R5bGVzLCBjb21wdXRlZFZhbCApIHtcblx0dmFyIGkgPSBkaW1lbnNpb24gPT09IFwid2lkdGhcIiA/IDEgOiAwLFxuXHRcdGV4dHJhID0gMCxcblx0XHRkZWx0YSA9IDA7XG5cblx0Ly8gQWRqdXN0bWVudCBtYXkgbm90IGJlIG5lY2Vzc2FyeVxuXHRpZiAoIGJveCA9PT0gKCBpc0JvcmRlckJveCA/IFwiYm9yZGVyXCIgOiBcImNvbnRlbnRcIiApICkge1xuXHRcdHJldHVybiAwO1xuXHR9XG5cblx0Zm9yICggOyBpIDwgNDsgaSArPSAyICkge1xuXG5cdFx0Ly8gQm90aCBib3ggbW9kZWxzIGV4Y2x1ZGUgbWFyZ2luXG5cdFx0aWYgKCBib3ggPT09IFwibWFyZ2luXCIgKSB7XG5cdFx0XHRkZWx0YSArPSBqUXVlcnkuY3NzKCBlbGVtLCBib3ggKyBjc3NFeHBhbmRbIGkgXSwgdHJ1ZSwgc3R5bGVzICk7XG5cdFx0fVxuXG5cdFx0Ly8gSWYgd2UgZ2V0IGhlcmUgd2l0aCBhIGNvbnRlbnQtYm94LCB3ZSdyZSBzZWVraW5nIFwicGFkZGluZ1wiIG9yIFwiYm9yZGVyXCIgb3IgXCJtYXJnaW5cIlxuXHRcdGlmICggIWlzQm9yZGVyQm94ICkge1xuXG5cdFx0XHQvLyBBZGQgcGFkZGluZ1xuXHRcdFx0ZGVsdGEgKz0galF1ZXJ5LmNzcyggZWxlbSwgXCJwYWRkaW5nXCIgKyBjc3NFeHBhbmRbIGkgXSwgdHJ1ZSwgc3R5bGVzICk7XG5cblx0XHRcdC8vIEZvciBcImJvcmRlclwiIG9yIFwibWFyZ2luXCIsIGFkZCBib3JkZXJcblx0XHRcdGlmICggYm94ICE9PSBcInBhZGRpbmdcIiApIHtcblx0XHRcdFx0ZGVsdGEgKz0galF1ZXJ5LmNzcyggZWxlbSwgXCJib3JkZXJcIiArIGNzc0V4cGFuZFsgaSBdICsgXCJXaWR0aFwiLCB0cnVlLCBzdHlsZXMgKTtcblxuXHRcdFx0Ly8gQnV0IHN0aWxsIGtlZXAgdHJhY2sgb2YgaXQgb3RoZXJ3aXNlXG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRleHRyYSArPSBqUXVlcnkuY3NzKCBlbGVtLCBcImJvcmRlclwiICsgY3NzRXhwYW5kWyBpIF0gKyBcIldpZHRoXCIsIHRydWUsIHN0eWxlcyApO1xuXHRcdFx0fVxuXG5cdFx0Ly8gSWYgd2UgZ2V0IGhlcmUgd2l0aCBhIGJvcmRlci1ib3ggKGNvbnRlbnQgKyBwYWRkaW5nICsgYm9yZGVyKSwgd2UncmUgc2Vla2luZyBcImNvbnRlbnRcIiBvclxuXHRcdC8vIFwicGFkZGluZ1wiIG9yIFwibWFyZ2luXCJcblx0XHR9IGVsc2Uge1xuXG5cdFx0XHQvLyBGb3IgXCJjb250ZW50XCIsIHN1YnRyYWN0IHBhZGRpbmdcblx0XHRcdGlmICggYm94ID09PSBcImNvbnRlbnRcIiApIHtcblx0XHRcdFx0ZGVsdGEgLT0galF1ZXJ5LmNzcyggZWxlbSwgXCJwYWRkaW5nXCIgKyBjc3NFeHBhbmRbIGkgXSwgdHJ1ZSwgc3R5bGVzICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIEZvciBcImNvbnRlbnRcIiBvciBcInBhZGRpbmdcIiwgc3VidHJhY3QgYm9yZGVyXG5cdFx0XHRpZiAoIGJveCAhPT0gXCJtYXJnaW5cIiApIHtcblx0XHRcdFx0ZGVsdGEgLT0galF1ZXJ5LmNzcyggZWxlbSwgXCJib3JkZXJcIiArIGNzc0V4cGFuZFsgaSBdICsgXCJXaWR0aFwiLCB0cnVlLCBzdHlsZXMgKTtcblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHQvLyBBY2NvdW50IGZvciBwb3NpdGl2ZSBjb250ZW50LWJveCBzY3JvbGwgZ3V0dGVyIHdoZW4gcmVxdWVzdGVkIGJ5IHByb3ZpZGluZyBjb21wdXRlZFZhbFxuXHRpZiAoICFpc0JvcmRlckJveCAmJiBjb21wdXRlZFZhbCA+PSAwICkge1xuXG5cdFx0Ly8gb2Zmc2V0V2lkdGgvb2Zmc2V0SGVpZ2h0IGlzIGEgcm91bmRlZCBzdW0gb2YgY29udGVudCwgcGFkZGluZywgc2Nyb2xsIGd1dHRlciwgYW5kIGJvcmRlclxuXHRcdC8vIEFzc3VtaW5nIGludGVnZXIgc2Nyb2xsIGd1dHRlciwgc3VidHJhY3QgdGhlIHJlc3QgYW5kIHJvdW5kIGRvd25cblx0XHRkZWx0YSArPSBNYXRoLm1heCggMCwgTWF0aC5jZWlsKFxuXHRcdFx0ZWxlbVsgXCJvZmZzZXRcIiArIGRpbWVuc2lvblsgMCBdLnRvVXBwZXJDYXNlKCkgKyBkaW1lbnNpb24uc2xpY2UoIDEgKSBdIC1cblx0XHRcdGNvbXB1dGVkVmFsIC1cblx0XHRcdGRlbHRhIC1cblx0XHRcdGV4dHJhIC1cblx0XHRcdDAuNVxuXG5cdFx0Ly8gSWYgb2Zmc2V0V2lkdGgvb2Zmc2V0SGVpZ2h0IGlzIHVua25vd24sIHRoZW4gd2UgY2FuJ3QgZGV0ZXJtaW5lIGNvbnRlbnQtYm94IHNjcm9sbCBndXR0ZXJcblx0XHQvLyBVc2UgYW4gZXhwbGljaXQgemVybyB0byBhdm9pZCBOYU4gKGdoLTM5NjQpXG5cdFx0KSApIHx8IDA7XG5cdH1cblxuXHRyZXR1cm4gZGVsdGE7XG59XG5cbmZ1bmN0aW9uIGdldFdpZHRoT3JIZWlnaHQoIGVsZW0sIGRpbWVuc2lvbiwgZXh0cmEgKSB7XG5cblx0Ly8gU3RhcnQgd2l0aCBjb21wdXRlZCBzdHlsZVxuXHR2YXIgc3R5bGVzID0gZ2V0U3R5bGVzKCBlbGVtICksXG5cblx0XHQvLyBUbyBhdm9pZCBmb3JjaW5nIGEgcmVmbG93LCBvbmx5IGZldGNoIGJveFNpemluZyBpZiB3ZSBuZWVkIGl0IChnaC00MzIyKS5cblx0XHQvLyBGYWtlIGNvbnRlbnQtYm94IHVudGlsIHdlIGtub3cgaXQncyBuZWVkZWQgdG8ga25vdyB0aGUgdHJ1ZSB2YWx1ZS5cblx0XHRib3hTaXppbmdOZWVkZWQgPSAhc3VwcG9ydC5ib3hTaXppbmdSZWxpYWJsZSgpIHx8IGV4dHJhLFxuXHRcdGlzQm9yZGVyQm94ID0gYm94U2l6aW5nTmVlZGVkICYmXG5cdFx0XHRqUXVlcnkuY3NzKCBlbGVtLCBcImJveFNpemluZ1wiLCBmYWxzZSwgc3R5bGVzICkgPT09IFwiYm9yZGVyLWJveFwiLFxuXHRcdHZhbHVlSXNCb3JkZXJCb3ggPSBpc0JvcmRlckJveCxcblxuXHRcdHZhbCA9IGN1ckNTUyggZWxlbSwgZGltZW5zaW9uLCBzdHlsZXMgKSxcblx0XHRvZmZzZXRQcm9wID0gXCJvZmZzZXRcIiArIGRpbWVuc2lvblsgMCBdLnRvVXBwZXJDYXNlKCkgKyBkaW1lbnNpb24uc2xpY2UoIDEgKTtcblxuXHQvLyBTdXBwb3J0OiBGaXJlZm94IDw9NTRcblx0Ly8gUmV0dXJuIGEgY29uZm91bmRpbmcgbm9uLXBpeGVsIHZhbHVlIG9yIGZlaWduIGlnbm9yYW5jZSwgYXMgYXBwcm9wcmlhdGUuXG5cdGlmICggcm51bW5vbnB4LnRlc3QoIHZhbCApICkge1xuXHRcdGlmICggIWV4dHJhICkge1xuXHRcdFx0cmV0dXJuIHZhbDtcblx0XHR9XG5cdFx0dmFsID0gXCJhdXRvXCI7XG5cdH1cblxuXG5cdC8vIFN1cHBvcnQ6IElFIDkgLSAxMSBvbmx5XG5cdC8vIFVzZSBvZmZzZXRXaWR0aC9vZmZzZXRIZWlnaHQgZm9yIHdoZW4gYm94IHNpemluZyBpcyB1bnJlbGlhYmxlLlxuXHQvLyBJbiB0aG9zZSBjYXNlcywgdGhlIGNvbXB1dGVkIHZhbHVlIGNhbiBiZSB0cnVzdGVkIHRvIGJlIGJvcmRlci1ib3guXG5cdGlmICggKCAhc3VwcG9ydC5ib3hTaXppbmdSZWxpYWJsZSgpICYmIGlzQm9yZGVyQm94IHx8XG5cblx0XHQvLyBTdXBwb3J0OiBJRSAxMCAtIDExKywgRWRnZSAxNSAtIDE4K1xuXHRcdC8vIElFL0VkZ2UgbWlzcmVwb3J0IGBnZXRDb21wdXRlZFN0eWxlYCBvZiB0YWJsZSByb3dzIHdpdGggd2lkdGgvaGVpZ2h0XG5cdFx0Ly8gc2V0IGluIENTUyB3aGlsZSBgb2Zmc2V0KmAgcHJvcGVydGllcyByZXBvcnQgY29ycmVjdCB2YWx1ZXMuXG5cdFx0Ly8gSW50ZXJlc3RpbmdseSwgaW4gc29tZSBjYXNlcyBJRSA5IGRvZXNuJ3Qgc3VmZmVyIGZyb20gdGhpcyBpc3N1ZS5cblx0XHQhc3VwcG9ydC5yZWxpYWJsZVRyRGltZW5zaW9ucygpICYmIG5vZGVOYW1lKCBlbGVtLCBcInRyXCIgKSB8fFxuXG5cdFx0Ly8gRmFsbCBiYWNrIHRvIG9mZnNldFdpZHRoL29mZnNldEhlaWdodCB3aGVuIHZhbHVlIGlzIFwiYXV0b1wiXG5cdFx0Ly8gVGhpcyBoYXBwZW5zIGZvciBpbmxpbmUgZWxlbWVudHMgd2l0aCBubyBleHBsaWNpdCBzZXR0aW5nIChnaC0zNTcxKVxuXHRcdHZhbCA9PT0gXCJhdXRvXCIgfHxcblxuXHRcdC8vIFN1cHBvcnQ6IEFuZHJvaWQgPD00LjEgLSA0LjMgb25seVxuXHRcdC8vIEFsc28gdXNlIG9mZnNldFdpZHRoL29mZnNldEhlaWdodCBmb3IgbWlzcmVwb3J0ZWQgaW5saW5lIGRpbWVuc2lvbnMgKGdoLTM2MDIpXG5cdFx0IXBhcnNlRmxvYXQoIHZhbCApICYmIGpRdWVyeS5jc3MoIGVsZW0sIFwiZGlzcGxheVwiLCBmYWxzZSwgc3R5bGVzICkgPT09IFwiaW5saW5lXCIgKSAmJlxuXG5cdFx0Ly8gTWFrZSBzdXJlIHRoZSBlbGVtZW50IGlzIHZpc2libGUgJiBjb25uZWN0ZWRcblx0XHRlbGVtLmdldENsaWVudFJlY3RzKCkubGVuZ3RoICkge1xuXG5cdFx0aXNCb3JkZXJCb3ggPSBqUXVlcnkuY3NzKCBlbGVtLCBcImJveFNpemluZ1wiLCBmYWxzZSwgc3R5bGVzICkgPT09IFwiYm9yZGVyLWJveFwiO1xuXG5cdFx0Ly8gV2hlcmUgYXZhaWxhYmxlLCBvZmZzZXRXaWR0aC9vZmZzZXRIZWlnaHQgYXBwcm94aW1hdGUgYm9yZGVyIGJveCBkaW1lbnNpb25zLlxuXHRcdC8vIFdoZXJlIG5vdCBhdmFpbGFibGUgKGUuZy4sIFNWRyksIGFzc3VtZSB1bnJlbGlhYmxlIGJveC1zaXppbmcgYW5kIGludGVycHJldCB0aGVcblx0XHQvLyByZXRyaWV2ZWQgdmFsdWUgYXMgYSBjb250ZW50IGJveCBkaW1lbnNpb24uXG5cdFx0dmFsdWVJc0JvcmRlckJveCA9IG9mZnNldFByb3AgaW4gZWxlbTtcblx0XHRpZiAoIHZhbHVlSXNCb3JkZXJCb3ggKSB7XG5cdFx0XHR2YWwgPSBlbGVtWyBvZmZzZXRQcm9wIF07XG5cdFx0fVxuXHR9XG5cblx0Ly8gTm9ybWFsaXplIFwiXCIgYW5kIGF1dG9cblx0dmFsID0gcGFyc2VGbG9hdCggdmFsICkgfHwgMDtcblxuXHQvLyBBZGp1c3QgZm9yIHRoZSBlbGVtZW50J3MgYm94IG1vZGVsXG5cdHJldHVybiAoIHZhbCArXG5cdFx0Ym94TW9kZWxBZGp1c3RtZW50KFxuXHRcdFx0ZWxlbSxcblx0XHRcdGRpbWVuc2lvbixcblx0XHRcdGV4dHJhIHx8ICggaXNCb3JkZXJCb3ggPyBcImJvcmRlclwiIDogXCJjb250ZW50XCIgKSxcblx0XHRcdHZhbHVlSXNCb3JkZXJCb3gsXG5cdFx0XHRzdHlsZXMsXG5cblx0XHRcdC8vIFByb3ZpZGUgdGhlIGN1cnJlbnQgY29tcHV0ZWQgc2l6ZSB0byByZXF1ZXN0IHNjcm9sbCBndXR0ZXIgY2FsY3VsYXRpb24gKGdoLTM1ODkpXG5cdFx0XHR2YWxcblx0XHQpXG5cdCkgKyBcInB4XCI7XG59XG5cbmpRdWVyeS5leHRlbmQoIHtcblxuXHQvLyBBZGQgaW4gc3R5bGUgcHJvcGVydHkgaG9va3MgZm9yIG92ZXJyaWRpbmcgdGhlIGRlZmF1bHRcblx0Ly8gYmVoYXZpb3Igb2YgZ2V0dGluZyBhbmQgc2V0dGluZyBhIHN0eWxlIHByb3BlcnR5XG5cdGNzc0hvb2tzOiB7XG5cdFx0b3BhY2l0eToge1xuXHRcdFx0Z2V0OiBmdW5jdGlvbiggZWxlbSwgY29tcHV0ZWQgKSB7XG5cdFx0XHRcdGlmICggY29tcHV0ZWQgKSB7XG5cblx0XHRcdFx0XHQvLyBXZSBzaG91bGQgYWx3YXlzIGdldCBhIG51bWJlciBiYWNrIGZyb20gb3BhY2l0eVxuXHRcdFx0XHRcdHZhciByZXQgPSBjdXJDU1MoIGVsZW0sIFwib3BhY2l0eVwiICk7XG5cdFx0XHRcdFx0cmV0dXJuIHJldCA9PT0gXCJcIiA/IFwiMVwiIDogcmV0O1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9LFxuXG5cdC8vIERvbid0IGF1dG9tYXRpY2FsbHkgYWRkIFwicHhcIiB0byB0aGVzZSBwb3NzaWJseS11bml0bGVzcyBwcm9wZXJ0aWVzXG5cdGNzc051bWJlcjoge1xuXHRcdFwiYW5pbWF0aW9uSXRlcmF0aW9uQ291bnRcIjogdHJ1ZSxcblx0XHRcImNvbHVtbkNvdW50XCI6IHRydWUsXG5cdFx0XCJmaWxsT3BhY2l0eVwiOiB0cnVlLFxuXHRcdFwiZmxleEdyb3dcIjogdHJ1ZSxcblx0XHRcImZsZXhTaHJpbmtcIjogdHJ1ZSxcblx0XHRcImZvbnRXZWlnaHRcIjogdHJ1ZSxcblx0XHRcImdyaWRBcmVhXCI6IHRydWUsXG5cdFx0XCJncmlkQ29sdW1uXCI6IHRydWUsXG5cdFx0XCJncmlkQ29sdW1uRW5kXCI6IHRydWUsXG5cdFx0XCJncmlkQ29sdW1uU3RhcnRcIjogdHJ1ZSxcblx0XHRcImdyaWRSb3dcIjogdHJ1ZSxcblx0XHRcImdyaWRSb3dFbmRcIjogdHJ1ZSxcblx0XHRcImdyaWRSb3dTdGFydFwiOiB0cnVlLFxuXHRcdFwibGluZUhlaWdodFwiOiB0cnVlLFxuXHRcdFwib3BhY2l0eVwiOiB0cnVlLFxuXHRcdFwib3JkZXJcIjogdHJ1ZSxcblx0XHRcIm9ycGhhbnNcIjogdHJ1ZSxcblx0XHRcIndpZG93c1wiOiB0cnVlLFxuXHRcdFwiekluZGV4XCI6IHRydWUsXG5cdFx0XCJ6b29tXCI6IHRydWVcblx0fSxcblxuXHQvLyBBZGQgaW4gcHJvcGVydGllcyB3aG9zZSBuYW1lcyB5b3Ugd2lzaCB0byBmaXggYmVmb3JlXG5cdC8vIHNldHRpbmcgb3IgZ2V0dGluZyB0aGUgdmFsdWVcblx0Y3NzUHJvcHM6IHt9LFxuXG5cdC8vIEdldCBhbmQgc2V0IHRoZSBzdHlsZSBwcm9wZXJ0eSBvbiBhIERPTSBOb2RlXG5cdHN0eWxlOiBmdW5jdGlvbiggZWxlbSwgbmFtZSwgdmFsdWUsIGV4dHJhICkge1xuXG5cdFx0Ly8gRG9uJ3Qgc2V0IHN0eWxlcyBvbiB0ZXh0IGFuZCBjb21tZW50IG5vZGVzXG5cdFx0aWYgKCAhZWxlbSB8fCBlbGVtLm5vZGVUeXBlID09PSAzIHx8IGVsZW0ubm9kZVR5cGUgPT09IDggfHwgIWVsZW0uc3R5bGUgKSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0Ly8gTWFrZSBzdXJlIHRoYXQgd2UncmUgd29ya2luZyB3aXRoIHRoZSByaWdodCBuYW1lXG5cdFx0dmFyIHJldCwgdHlwZSwgaG9va3MsXG5cdFx0XHRvcmlnTmFtZSA9IGNhbWVsQ2FzZSggbmFtZSApLFxuXHRcdFx0aXNDdXN0b21Qcm9wID0gcmN1c3RvbVByb3AudGVzdCggbmFtZSApLFxuXHRcdFx0c3R5bGUgPSBlbGVtLnN0eWxlO1xuXG5cdFx0Ly8gTWFrZSBzdXJlIHRoYXQgd2UncmUgd29ya2luZyB3aXRoIHRoZSByaWdodCBuYW1lLiBXZSBkb24ndFxuXHRcdC8vIHdhbnQgdG8gcXVlcnkgdGhlIHZhbHVlIGlmIGl0IGlzIGEgQ1NTIGN1c3RvbSBwcm9wZXJ0eVxuXHRcdC8vIHNpbmNlIHRoZXkgYXJlIHVzZXItZGVmaW5lZC5cblx0XHRpZiAoICFpc0N1c3RvbVByb3AgKSB7XG5cdFx0XHRuYW1lID0gZmluYWxQcm9wTmFtZSggb3JpZ05hbWUgKTtcblx0XHR9XG5cblx0XHQvLyBHZXRzIGhvb2sgZm9yIHRoZSBwcmVmaXhlZCB2ZXJzaW9uLCB0aGVuIHVucHJlZml4ZWQgdmVyc2lvblxuXHRcdGhvb2tzID0galF1ZXJ5LmNzc0hvb2tzWyBuYW1lIF0gfHwgalF1ZXJ5LmNzc0hvb2tzWyBvcmlnTmFtZSBdO1xuXG5cdFx0Ly8gQ2hlY2sgaWYgd2UncmUgc2V0dGluZyBhIHZhbHVlXG5cdFx0aWYgKCB2YWx1ZSAhPT0gdW5kZWZpbmVkICkge1xuXHRcdFx0dHlwZSA9IHR5cGVvZiB2YWx1ZTtcblxuXHRcdFx0Ly8gQ29udmVydCBcIis9XCIgb3IgXCItPVwiIHRvIHJlbGF0aXZlIG51bWJlcnMgKCM3MzQ1KVxuXHRcdFx0aWYgKCB0eXBlID09PSBcInN0cmluZ1wiICYmICggcmV0ID0gcmNzc051bS5leGVjKCB2YWx1ZSApICkgJiYgcmV0WyAxIF0gKSB7XG5cdFx0XHRcdHZhbHVlID0gYWRqdXN0Q1NTKCBlbGVtLCBuYW1lLCByZXQgKTtcblxuXHRcdFx0XHQvLyBGaXhlcyBidWcgIzkyMzdcblx0XHRcdFx0dHlwZSA9IFwibnVtYmVyXCI7XG5cdFx0XHR9XG5cblx0XHRcdC8vIE1ha2Ugc3VyZSB0aGF0IG51bGwgYW5kIE5hTiB2YWx1ZXMgYXJlbid0IHNldCAoIzcxMTYpXG5cdFx0XHRpZiAoIHZhbHVlID09IG51bGwgfHwgdmFsdWUgIT09IHZhbHVlICkge1xuXHRcdFx0XHRyZXR1cm47XG5cdFx0XHR9XG5cblx0XHRcdC8vIElmIGEgbnVtYmVyIHdhcyBwYXNzZWQgaW4sIGFkZCB0aGUgdW5pdCAoZXhjZXB0IGZvciBjZXJ0YWluIENTUyBwcm9wZXJ0aWVzKVxuXHRcdFx0Ly8gVGhlIGlzQ3VzdG9tUHJvcCBjaGVjayBjYW4gYmUgcmVtb3ZlZCBpbiBqUXVlcnkgNC4wIHdoZW4gd2Ugb25seSBhdXRvLWFwcGVuZFxuXHRcdFx0Ly8gXCJweFwiIHRvIGEgZmV3IGhhcmRjb2RlZCB2YWx1ZXMuXG5cdFx0XHRpZiAoIHR5cGUgPT09IFwibnVtYmVyXCIgJiYgIWlzQ3VzdG9tUHJvcCApIHtcblx0XHRcdFx0dmFsdWUgKz0gcmV0ICYmIHJldFsgMyBdIHx8ICggalF1ZXJ5LmNzc051bWJlclsgb3JpZ05hbWUgXSA/IFwiXCIgOiBcInB4XCIgKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gYmFja2dyb3VuZC0qIHByb3BzIGFmZmVjdCBvcmlnaW5hbCBjbG9uZSdzIHZhbHVlc1xuXHRcdFx0aWYgKCAhc3VwcG9ydC5jbGVhckNsb25lU3R5bGUgJiYgdmFsdWUgPT09IFwiXCIgJiYgbmFtZS5pbmRleE9mKCBcImJhY2tncm91bmRcIiApID09PSAwICkge1xuXHRcdFx0XHRzdHlsZVsgbmFtZSBdID0gXCJpbmhlcml0XCI7XG5cdFx0XHR9XG5cblx0XHRcdC8vIElmIGEgaG9vayB3YXMgcHJvdmlkZWQsIHVzZSB0aGF0IHZhbHVlLCBvdGhlcndpc2UganVzdCBzZXQgdGhlIHNwZWNpZmllZCB2YWx1ZVxuXHRcdFx0aWYgKCAhaG9va3MgfHwgISggXCJzZXRcIiBpbiBob29rcyApIHx8XG5cdFx0XHRcdCggdmFsdWUgPSBob29rcy5zZXQoIGVsZW0sIHZhbHVlLCBleHRyYSApICkgIT09IHVuZGVmaW5lZCApIHtcblxuXHRcdFx0XHRpZiAoIGlzQ3VzdG9tUHJvcCApIHtcblx0XHRcdFx0XHRzdHlsZS5zZXRQcm9wZXJ0eSggbmFtZSwgdmFsdWUgKTtcblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRzdHlsZVsgbmFtZSBdID0gdmFsdWU7XG5cdFx0XHRcdH1cblx0XHRcdH1cblxuXHRcdH0gZWxzZSB7XG5cblx0XHRcdC8vIElmIGEgaG9vayB3YXMgcHJvdmlkZWQgZ2V0IHRoZSBub24tY29tcHV0ZWQgdmFsdWUgZnJvbSB0aGVyZVxuXHRcdFx0aWYgKCBob29rcyAmJiBcImdldFwiIGluIGhvb2tzICYmXG5cdFx0XHRcdCggcmV0ID0gaG9va3MuZ2V0KCBlbGVtLCBmYWxzZSwgZXh0cmEgKSApICE9PSB1bmRlZmluZWQgKSB7XG5cblx0XHRcdFx0cmV0dXJuIHJldDtcblx0XHRcdH1cblxuXHRcdFx0Ly8gT3RoZXJ3aXNlIGp1c3QgZ2V0IHRoZSB2YWx1ZSBmcm9tIHRoZSBzdHlsZSBvYmplY3Rcblx0XHRcdHJldHVybiBzdHlsZVsgbmFtZSBdO1xuXHRcdH1cblx0fSxcblxuXHRjc3M6IGZ1bmN0aW9uKCBlbGVtLCBuYW1lLCBleHRyYSwgc3R5bGVzICkge1xuXHRcdHZhciB2YWwsIG51bSwgaG9va3MsXG5cdFx0XHRvcmlnTmFtZSA9IGNhbWVsQ2FzZSggbmFtZSApLFxuXHRcdFx0aXNDdXN0b21Qcm9wID0gcmN1c3RvbVByb3AudGVzdCggbmFtZSApO1xuXG5cdFx0Ly8gTWFrZSBzdXJlIHRoYXQgd2UncmUgd29ya2luZyB3aXRoIHRoZSByaWdodCBuYW1lLiBXZSBkb24ndFxuXHRcdC8vIHdhbnQgdG8gbW9kaWZ5IHRoZSB2YWx1ZSBpZiBpdCBpcyBhIENTUyBjdXN0b20gcHJvcGVydHlcblx0XHQvLyBzaW5jZSB0aGV5IGFyZSB1c2VyLWRlZmluZWQuXG5cdFx0aWYgKCAhaXNDdXN0b21Qcm9wICkge1xuXHRcdFx0bmFtZSA9IGZpbmFsUHJvcE5hbWUoIG9yaWdOYW1lICk7XG5cdFx0fVxuXG5cdFx0Ly8gVHJ5IHByZWZpeGVkIG5hbWUgZm9sbG93ZWQgYnkgdGhlIHVucHJlZml4ZWQgbmFtZVxuXHRcdGhvb2tzID0galF1ZXJ5LmNzc0hvb2tzWyBuYW1lIF0gfHwgalF1ZXJ5LmNzc0hvb2tzWyBvcmlnTmFtZSBdO1xuXG5cdFx0Ly8gSWYgYSBob29rIHdhcyBwcm92aWRlZCBnZXQgdGhlIGNvbXB1dGVkIHZhbHVlIGZyb20gdGhlcmVcblx0XHRpZiAoIGhvb2tzICYmIFwiZ2V0XCIgaW4gaG9va3MgKSB7XG5cdFx0XHR2YWwgPSBob29rcy5nZXQoIGVsZW0sIHRydWUsIGV4dHJhICk7XG5cdFx0fVxuXG5cdFx0Ly8gT3RoZXJ3aXNlLCBpZiBhIHdheSB0byBnZXQgdGhlIGNvbXB1dGVkIHZhbHVlIGV4aXN0cywgdXNlIHRoYXRcblx0XHRpZiAoIHZhbCA9PT0gdW5kZWZpbmVkICkge1xuXHRcdFx0dmFsID0gY3VyQ1NTKCBlbGVtLCBuYW1lLCBzdHlsZXMgKTtcblx0XHR9XG5cblx0XHQvLyBDb252ZXJ0IFwibm9ybWFsXCIgdG8gY29tcHV0ZWQgdmFsdWVcblx0XHRpZiAoIHZhbCA9PT0gXCJub3JtYWxcIiAmJiBuYW1lIGluIGNzc05vcm1hbFRyYW5zZm9ybSApIHtcblx0XHRcdHZhbCA9IGNzc05vcm1hbFRyYW5zZm9ybVsgbmFtZSBdO1xuXHRcdH1cblxuXHRcdC8vIE1ha2UgbnVtZXJpYyBpZiBmb3JjZWQgb3IgYSBxdWFsaWZpZXIgd2FzIHByb3ZpZGVkIGFuZCB2YWwgbG9va3MgbnVtZXJpY1xuXHRcdGlmICggZXh0cmEgPT09IFwiXCIgfHwgZXh0cmEgKSB7XG5cdFx0XHRudW0gPSBwYXJzZUZsb2F0KCB2YWwgKTtcblx0XHRcdHJldHVybiBleHRyYSA9PT0gdHJ1ZSB8fCBpc0Zpbml0ZSggbnVtICkgPyBudW0gfHwgMCA6IHZhbDtcblx0XHR9XG5cblx0XHRyZXR1cm4gdmFsO1xuXHR9XG59ICk7XG5cbmpRdWVyeS5lYWNoKCBbIFwiaGVpZ2h0XCIsIFwid2lkdGhcIiBdLCBmdW5jdGlvbiggX2ksIGRpbWVuc2lvbiApIHtcblx0alF1ZXJ5LmNzc0hvb2tzWyBkaW1lbnNpb24gXSA9IHtcblx0XHRnZXQ6IGZ1bmN0aW9uKCBlbGVtLCBjb21wdXRlZCwgZXh0cmEgKSB7XG5cdFx0XHRpZiAoIGNvbXB1dGVkICkge1xuXG5cdFx0XHRcdC8vIENlcnRhaW4gZWxlbWVudHMgY2FuIGhhdmUgZGltZW5zaW9uIGluZm8gaWYgd2UgaW52aXNpYmx5IHNob3cgdGhlbVxuXHRcdFx0XHQvLyBidXQgaXQgbXVzdCBoYXZlIGEgY3VycmVudCBkaXNwbGF5IHN0eWxlIHRoYXQgd291bGQgYmVuZWZpdFxuXHRcdFx0XHRyZXR1cm4gcmRpc3BsYXlzd2FwLnRlc3QoIGpRdWVyeS5jc3MoIGVsZW0sIFwiZGlzcGxheVwiICkgKSAmJlxuXG5cdFx0XHRcdFx0Ly8gU3VwcG9ydDogU2FmYXJpIDgrXG5cdFx0XHRcdFx0Ly8gVGFibGUgY29sdW1ucyBpbiBTYWZhcmkgaGF2ZSBub24temVybyBvZmZzZXRXaWR0aCAmIHplcm9cblx0XHRcdFx0XHQvLyBnZXRCb3VuZGluZ0NsaWVudFJlY3QoKS53aWR0aCB1bmxlc3MgZGlzcGxheSBpcyBjaGFuZ2VkLlxuXHRcdFx0XHRcdC8vIFN1cHBvcnQ6IElFIDw9MTEgb25seVxuXHRcdFx0XHRcdC8vIFJ1bm5pbmcgZ2V0Qm91bmRpbmdDbGllbnRSZWN0IG9uIGEgZGlzY29ubmVjdGVkIG5vZGVcblx0XHRcdFx0XHQvLyBpbiBJRSB0aHJvd3MgYW4gZXJyb3IuXG5cdFx0XHRcdFx0KCAhZWxlbS5nZXRDbGllbnRSZWN0cygpLmxlbmd0aCB8fCAhZWxlbS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS53aWR0aCApID9cblx0XHRcdFx0XHRcdHN3YXAoIGVsZW0sIGNzc1Nob3csIGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRcdFx0XHRyZXR1cm4gZ2V0V2lkdGhPckhlaWdodCggZWxlbSwgZGltZW5zaW9uLCBleHRyYSApO1xuXHRcdFx0XHRcdFx0fSApIDpcblx0XHRcdFx0XHRcdGdldFdpZHRoT3JIZWlnaHQoIGVsZW0sIGRpbWVuc2lvbiwgZXh0cmEgKTtcblx0XHRcdH1cblx0XHR9LFxuXG5cdFx0c2V0OiBmdW5jdGlvbiggZWxlbSwgdmFsdWUsIGV4dHJhICkge1xuXHRcdFx0dmFyIG1hdGNoZXMsXG5cdFx0XHRcdHN0eWxlcyA9IGdldFN0eWxlcyggZWxlbSApLFxuXG5cdFx0XHRcdC8vIE9ubHkgcmVhZCBzdHlsZXMucG9zaXRpb24gaWYgdGhlIHRlc3QgaGFzIGEgY2hhbmNlIHRvIGZhaWxcblx0XHRcdFx0Ly8gdG8gYXZvaWQgZm9yY2luZyBhIHJlZmxvdy5cblx0XHRcdFx0c2Nyb2xsYm94U2l6ZUJ1Z2d5ID0gIXN1cHBvcnQuc2Nyb2xsYm94U2l6ZSgpICYmXG5cdFx0XHRcdFx0c3R5bGVzLnBvc2l0aW9uID09PSBcImFic29sdXRlXCIsXG5cblx0XHRcdFx0Ly8gVG8gYXZvaWQgZm9yY2luZyBhIHJlZmxvdywgb25seSBmZXRjaCBib3hTaXppbmcgaWYgd2UgbmVlZCBpdCAoZ2gtMzk5MSlcblx0XHRcdFx0Ym94U2l6aW5nTmVlZGVkID0gc2Nyb2xsYm94U2l6ZUJ1Z2d5IHx8IGV4dHJhLFxuXHRcdFx0XHRpc0JvcmRlckJveCA9IGJveFNpemluZ05lZWRlZCAmJlxuXHRcdFx0XHRcdGpRdWVyeS5jc3MoIGVsZW0sIFwiYm94U2l6aW5nXCIsIGZhbHNlLCBzdHlsZXMgKSA9PT0gXCJib3JkZXItYm94XCIsXG5cdFx0XHRcdHN1YnRyYWN0ID0gZXh0cmEgP1xuXHRcdFx0XHRcdGJveE1vZGVsQWRqdXN0bWVudChcblx0XHRcdFx0XHRcdGVsZW0sXG5cdFx0XHRcdFx0XHRkaW1lbnNpb24sXG5cdFx0XHRcdFx0XHRleHRyYSxcblx0XHRcdFx0XHRcdGlzQm9yZGVyQm94LFxuXHRcdFx0XHRcdFx0c3R5bGVzXG5cdFx0XHRcdFx0KSA6XG5cdFx0XHRcdFx0MDtcblxuXHRcdFx0Ly8gQWNjb3VudCBmb3IgdW5yZWxpYWJsZSBib3JkZXItYm94IGRpbWVuc2lvbnMgYnkgY29tcGFyaW5nIG9mZnNldCogdG8gY29tcHV0ZWQgYW5kXG5cdFx0XHQvLyBmYWtpbmcgYSBjb250ZW50LWJveCB0byBnZXQgYm9yZGVyIGFuZCBwYWRkaW5nIChnaC0zNjk5KVxuXHRcdFx0aWYgKCBpc0JvcmRlckJveCAmJiBzY3JvbGxib3hTaXplQnVnZ3kgKSB7XG5cdFx0XHRcdHN1YnRyYWN0IC09IE1hdGguY2VpbChcblx0XHRcdFx0XHRlbGVtWyBcIm9mZnNldFwiICsgZGltZW5zaW9uWyAwIF0udG9VcHBlckNhc2UoKSArIGRpbWVuc2lvbi5zbGljZSggMSApIF0gLVxuXHRcdFx0XHRcdHBhcnNlRmxvYXQoIHN0eWxlc1sgZGltZW5zaW9uIF0gKSAtXG5cdFx0XHRcdFx0Ym94TW9kZWxBZGp1c3RtZW50KCBlbGVtLCBkaW1lbnNpb24sIFwiYm9yZGVyXCIsIGZhbHNlLCBzdHlsZXMgKSAtXG5cdFx0XHRcdFx0MC41XG5cdFx0XHRcdCk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIENvbnZlcnQgdG8gcGl4ZWxzIGlmIHZhbHVlIGFkanVzdG1lbnQgaXMgbmVlZGVkXG5cdFx0XHRpZiAoIHN1YnRyYWN0ICYmICggbWF0Y2hlcyA9IHJjc3NOdW0uZXhlYyggdmFsdWUgKSApICYmXG5cdFx0XHRcdCggbWF0Y2hlc1sgMyBdIHx8IFwicHhcIiApICE9PSBcInB4XCIgKSB7XG5cblx0XHRcdFx0ZWxlbS5zdHlsZVsgZGltZW5zaW9uIF0gPSB2YWx1ZTtcblx0XHRcdFx0dmFsdWUgPSBqUXVlcnkuY3NzKCBlbGVtLCBkaW1lbnNpb24gKTtcblx0XHRcdH1cblxuXHRcdFx0cmV0dXJuIHNldFBvc2l0aXZlTnVtYmVyKCBlbGVtLCB2YWx1ZSwgc3VidHJhY3QgKTtcblx0XHR9XG5cdH07XG59ICk7XG5cbmpRdWVyeS5jc3NIb29rcy5tYXJnaW5MZWZ0ID0gYWRkR2V0SG9va0lmKCBzdXBwb3J0LnJlbGlhYmxlTWFyZ2luTGVmdCxcblx0ZnVuY3Rpb24oIGVsZW0sIGNvbXB1dGVkICkge1xuXHRcdGlmICggY29tcHV0ZWQgKSB7XG5cdFx0XHRyZXR1cm4gKCBwYXJzZUZsb2F0KCBjdXJDU1MoIGVsZW0sIFwibWFyZ2luTGVmdFwiICkgKSB8fFxuXHRcdFx0XHRlbGVtLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLmxlZnQgLVxuXHRcdFx0XHRcdHN3YXAoIGVsZW0sIHsgbWFyZ2luTGVmdDogMCB9LCBmdW5jdGlvbigpIHtcblx0XHRcdFx0XHRcdHJldHVybiBlbGVtLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLmxlZnQ7XG5cdFx0XHRcdFx0fSApXG5cdFx0XHRcdCkgKyBcInB4XCI7XG5cdFx0fVxuXHR9XG4pO1xuXG4vLyBUaGVzZSBob29rcyBhcmUgdXNlZCBieSBhbmltYXRlIHRvIGV4cGFuZCBwcm9wZXJ0aWVzXG5qUXVlcnkuZWFjaCgge1xuXHRtYXJnaW46IFwiXCIsXG5cdHBhZGRpbmc6IFwiXCIsXG5cdGJvcmRlcjogXCJXaWR0aFwiXG59LCBmdW5jdGlvbiggcHJlZml4LCBzdWZmaXggKSB7XG5cdGpRdWVyeS5jc3NIb29rc1sgcHJlZml4ICsgc3VmZml4IF0gPSB7XG5cdFx0ZXhwYW5kOiBmdW5jdGlvbiggdmFsdWUgKSB7XG5cdFx0XHR2YXIgaSA9IDAsXG5cdFx0XHRcdGV4cGFuZGVkID0ge30sXG5cblx0XHRcdFx0Ly8gQXNzdW1lcyBhIHNpbmdsZSBudW1iZXIgaWYgbm90IGEgc3RyaW5nXG5cdFx0XHRcdHBhcnRzID0gdHlwZW9mIHZhbHVlID09PSBcInN0cmluZ1wiID8gdmFsdWUuc3BsaXQoIFwiIFwiICkgOiBbIHZhbHVlIF07XG5cblx0XHRcdGZvciAoIDsgaSA8IDQ7IGkrKyApIHtcblx0XHRcdFx0ZXhwYW5kZWRbIHByZWZpeCArIGNzc0V4cGFuZFsgaSBdICsgc3VmZml4IF0gPVxuXHRcdFx0XHRcdHBhcnRzWyBpIF0gfHwgcGFydHNbIGkgLSAyIF0gfHwgcGFydHNbIDAgXTtcblx0XHRcdH1cblxuXHRcdFx0cmV0dXJuIGV4cGFuZGVkO1xuXHRcdH1cblx0fTtcblxuXHRpZiAoIHByZWZpeCAhPT0gXCJtYXJnaW5cIiApIHtcblx0XHRqUXVlcnkuY3NzSG9va3NbIHByZWZpeCArIHN1ZmZpeCBdLnNldCA9IHNldFBvc2l0aXZlTnVtYmVyO1xuXHR9XG59ICk7XG5cbmpRdWVyeS5mbi5leHRlbmQoIHtcblx0Y3NzOiBmdW5jdGlvbiggbmFtZSwgdmFsdWUgKSB7XG5cdFx0cmV0dXJuIGFjY2VzcyggdGhpcywgZnVuY3Rpb24oIGVsZW0sIG5hbWUsIHZhbHVlICkge1xuXHRcdFx0dmFyIHN0eWxlcywgbGVuLFxuXHRcdFx0XHRtYXAgPSB7fSxcblx0XHRcdFx0aSA9IDA7XG5cblx0XHRcdGlmICggQXJyYXkuaXNBcnJheSggbmFtZSApICkge1xuXHRcdFx0XHRzdHlsZXMgPSBnZXRTdHlsZXMoIGVsZW0gKTtcblx0XHRcdFx0bGVuID0gbmFtZS5sZW5ndGg7XG5cblx0XHRcdFx0Zm9yICggOyBpIDwgbGVuOyBpKysgKSB7XG5cdFx0XHRcdFx0bWFwWyBuYW1lWyBpIF0gXSA9IGpRdWVyeS5jc3MoIGVsZW0sIG5hbWVbIGkgXSwgZmFsc2UsIHN0eWxlcyApO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0cmV0dXJuIG1hcDtcblx0XHRcdH1cblxuXHRcdFx0cmV0dXJuIHZhbHVlICE9PSB1bmRlZmluZWQgP1xuXHRcdFx0XHRqUXVlcnkuc3R5bGUoIGVsZW0sIG5hbWUsIHZhbHVlICkgOlxuXHRcdFx0XHRqUXVlcnkuY3NzKCBlbGVtLCBuYW1lICk7XG5cdFx0fSwgbmFtZSwgdmFsdWUsIGFyZ3VtZW50cy5sZW5ndGggPiAxICk7XG5cdH1cbn0gKTtcblxuXG5mdW5jdGlvbiBUd2VlbiggZWxlbSwgb3B0aW9ucywgcHJvcCwgZW5kLCBlYXNpbmcgKSB7XG5cdHJldHVybiBuZXcgVHdlZW4ucHJvdG90eXBlLmluaXQoIGVsZW0sIG9wdGlvbnMsIHByb3AsIGVuZCwgZWFzaW5nICk7XG59XG5qUXVlcnkuVHdlZW4gPSBUd2VlbjtcblxuVHdlZW4ucHJvdG90eXBlID0ge1xuXHRjb25zdHJ1Y3RvcjogVHdlZW4sXG5cdGluaXQ6IGZ1bmN0aW9uKCBlbGVtLCBvcHRpb25zLCBwcm9wLCBlbmQsIGVhc2luZywgdW5pdCApIHtcblx0XHR0aGlzLmVsZW0gPSBlbGVtO1xuXHRcdHRoaXMucHJvcCA9IHByb3A7XG5cdFx0dGhpcy5lYXNpbmcgPSBlYXNpbmcgfHwgalF1ZXJ5LmVhc2luZy5fZGVmYXVsdDtcblx0XHR0aGlzLm9wdGlvbnMgPSBvcHRpb25zO1xuXHRcdHRoaXMuc3RhcnQgPSB0aGlzLm5vdyA9IHRoaXMuY3VyKCk7XG5cdFx0dGhpcy5lbmQgPSBlbmQ7XG5cdFx0dGhpcy51bml0ID0gdW5pdCB8fCAoIGpRdWVyeS5jc3NOdW1iZXJbIHByb3AgXSA/IFwiXCIgOiBcInB4XCIgKTtcblx0fSxcblx0Y3VyOiBmdW5jdGlvbigpIHtcblx0XHR2YXIgaG9va3MgPSBUd2Vlbi5wcm9wSG9va3NbIHRoaXMucHJvcCBdO1xuXG5cdFx0cmV0dXJuIGhvb2tzICYmIGhvb2tzLmdldCA/XG5cdFx0XHRob29rcy5nZXQoIHRoaXMgKSA6XG5cdFx0XHRUd2Vlbi5wcm9wSG9va3MuX2RlZmF1bHQuZ2V0KCB0aGlzICk7XG5cdH0sXG5cdHJ1bjogZnVuY3Rpb24oIHBlcmNlbnQgKSB7XG5cdFx0dmFyIGVhc2VkLFxuXHRcdFx0aG9va3MgPSBUd2Vlbi5wcm9wSG9va3NbIHRoaXMucHJvcCBdO1xuXG5cdFx0aWYgKCB0aGlzLm9wdGlvbnMuZHVyYXRpb24gKSB7XG5cdFx0XHR0aGlzLnBvcyA9IGVhc2VkID0galF1ZXJ5LmVhc2luZ1sgdGhpcy5lYXNpbmcgXShcblx0XHRcdFx0cGVyY2VudCwgdGhpcy5vcHRpb25zLmR1cmF0aW9uICogcGVyY2VudCwgMCwgMSwgdGhpcy5vcHRpb25zLmR1cmF0aW9uXG5cdFx0XHQpO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHR0aGlzLnBvcyA9IGVhc2VkID0gcGVyY2VudDtcblx0XHR9XG5cdFx0dGhpcy5ub3cgPSAoIHRoaXMuZW5kIC0gdGhpcy5zdGFydCApICogZWFzZWQgKyB0aGlzLnN0YXJ0O1xuXG5cdFx0aWYgKCB0aGlzLm9wdGlvbnMuc3RlcCApIHtcblx0XHRcdHRoaXMub3B0aW9ucy5zdGVwLmNhbGwoIHRoaXMuZWxlbSwgdGhpcy5ub3csIHRoaXMgKTtcblx0XHR9XG5cblx0XHRpZiAoIGhvb2tzICYmIGhvb2tzLnNldCApIHtcblx0XHRcdGhvb2tzLnNldCggdGhpcyApO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRUd2Vlbi5wcm9wSG9va3MuX2RlZmF1bHQuc2V0KCB0aGlzICk7XG5cdFx0fVxuXHRcdHJldHVybiB0aGlzO1xuXHR9XG59O1xuXG5Ud2Vlbi5wcm90b3R5cGUuaW5pdC5wcm90b3R5cGUgPSBUd2Vlbi5wcm90b3R5cGU7XG5cblR3ZWVuLnByb3BIb29rcyA9IHtcblx0X2RlZmF1bHQ6IHtcblx0XHRnZXQ6IGZ1bmN0aW9uKCB0d2VlbiApIHtcblx0XHRcdHZhciByZXN1bHQ7XG5cblx0XHRcdC8vIFVzZSBhIHByb3BlcnR5IG9uIHRoZSBlbGVtZW50IGRpcmVjdGx5IHdoZW4gaXQgaXMgbm90IGEgRE9NIGVsZW1lbnQsXG5cdFx0XHQvLyBvciB3aGVuIHRoZXJlIGlzIG5vIG1hdGNoaW5nIHN0eWxlIHByb3BlcnR5IHRoYXQgZXhpc3RzLlxuXHRcdFx0aWYgKCB0d2Vlbi5lbGVtLm5vZGVUeXBlICE9PSAxIHx8XG5cdFx0XHRcdHR3ZWVuLmVsZW1bIHR3ZWVuLnByb3AgXSAhPSBudWxsICYmIHR3ZWVuLmVsZW0uc3R5bGVbIHR3ZWVuLnByb3AgXSA9PSBudWxsICkge1xuXHRcdFx0XHRyZXR1cm4gdHdlZW4uZWxlbVsgdHdlZW4ucHJvcCBdO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBQYXNzaW5nIGFuIGVtcHR5IHN0cmluZyBhcyBhIDNyZCBwYXJhbWV0ZXIgdG8gLmNzcyB3aWxsIGF1dG9tYXRpY2FsbHlcblx0XHRcdC8vIGF0dGVtcHQgYSBwYXJzZUZsb2F0IGFuZCBmYWxsYmFjayB0byBhIHN0cmluZyBpZiB0aGUgcGFyc2UgZmFpbHMuXG5cdFx0XHQvLyBTaW1wbGUgdmFsdWVzIHN1Y2ggYXMgXCIxMHB4XCIgYXJlIHBhcnNlZCB0byBGbG9hdDtcblx0XHRcdC8vIGNvbXBsZXggdmFsdWVzIHN1Y2ggYXMgXCJyb3RhdGUoMXJhZClcIiBhcmUgcmV0dXJuZWQgYXMtaXMuXG5cdFx0XHRyZXN1bHQgPSBqUXVlcnkuY3NzKCB0d2Vlbi5lbGVtLCB0d2Vlbi5wcm9wLCBcIlwiICk7XG5cblx0XHRcdC8vIEVtcHR5IHN0cmluZ3MsIG51bGwsIHVuZGVmaW5lZCBhbmQgXCJhdXRvXCIgYXJlIGNvbnZlcnRlZCB0byAwLlxuXHRcdFx0cmV0dXJuICFyZXN1bHQgfHwgcmVzdWx0ID09PSBcImF1dG9cIiA/IDAgOiByZXN1bHQ7XG5cdFx0fSxcblx0XHRzZXQ6IGZ1bmN0aW9uKCB0d2VlbiApIHtcblxuXHRcdFx0Ly8gVXNlIHN0ZXAgaG9vayBmb3IgYmFjayBjb21wYXQuXG5cdFx0XHQvLyBVc2UgY3NzSG9vayBpZiBpdHMgdGhlcmUuXG5cdFx0XHQvLyBVc2UgLnN0eWxlIGlmIGF2YWlsYWJsZSBhbmQgdXNlIHBsYWluIHByb3BlcnRpZXMgd2hlcmUgYXZhaWxhYmxlLlxuXHRcdFx0aWYgKCBqUXVlcnkuZnguc3RlcFsgdHdlZW4ucHJvcCBdICkge1xuXHRcdFx0XHRqUXVlcnkuZnguc3RlcFsgdHdlZW4ucHJvcCBdKCB0d2VlbiApO1xuXHRcdFx0fSBlbHNlIGlmICggdHdlZW4uZWxlbS5ub2RlVHlwZSA9PT0gMSAmJiAoXG5cdFx0XHRcdFx0alF1ZXJ5LmNzc0hvb2tzWyB0d2Vlbi5wcm9wIF0gfHxcblx0XHRcdFx0XHR0d2Vlbi5lbGVtLnN0eWxlWyBmaW5hbFByb3BOYW1lKCB0d2Vlbi5wcm9wICkgXSAhPSBudWxsICkgKSB7XG5cdFx0XHRcdGpRdWVyeS5zdHlsZSggdHdlZW4uZWxlbSwgdHdlZW4ucHJvcCwgdHdlZW4ubm93ICsgdHdlZW4udW5pdCApO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0dHdlZW4uZWxlbVsgdHdlZW4ucHJvcCBdID0gdHdlZW4ubm93O1xuXHRcdFx0fVxuXHRcdH1cblx0fVxufTtcblxuLy8gU3VwcG9ydDogSUUgPD05IG9ubHlcbi8vIFBhbmljIGJhc2VkIGFwcHJvYWNoIHRvIHNldHRpbmcgdGhpbmdzIG9uIGRpc2Nvbm5lY3RlZCBub2Rlc1xuVHdlZW4ucHJvcEhvb2tzLnNjcm9sbFRvcCA9IFR3ZWVuLnByb3BIb29rcy5zY3JvbGxMZWZ0ID0ge1xuXHRzZXQ6IGZ1bmN0aW9uKCB0d2VlbiApIHtcblx0XHRpZiAoIHR3ZWVuLmVsZW0ubm9kZVR5cGUgJiYgdHdlZW4uZWxlbS5wYXJlbnROb2RlICkge1xuXHRcdFx0dHdlZW4uZWxlbVsgdHdlZW4ucHJvcCBdID0gdHdlZW4ubm93O1xuXHRcdH1cblx0fVxufTtcblxualF1ZXJ5LmVhc2luZyA9IHtcblx0bGluZWFyOiBmdW5jdGlvbiggcCApIHtcblx0XHRyZXR1cm4gcDtcblx0fSxcblx0c3dpbmc6IGZ1bmN0aW9uKCBwICkge1xuXHRcdHJldHVybiAwLjUgLSBNYXRoLmNvcyggcCAqIE1hdGguUEkgKSAvIDI7XG5cdH0sXG5cdF9kZWZhdWx0OiBcInN3aW5nXCJcbn07XG5cbmpRdWVyeS5meCA9IFR3ZWVuLnByb3RvdHlwZS5pbml0O1xuXG4vLyBCYWNrIGNvbXBhdCA8MS44IGV4dGVuc2lvbiBwb2ludFxualF1ZXJ5LmZ4LnN0ZXAgPSB7fTtcblxuXG5cblxudmFyXG5cdGZ4Tm93LCBpblByb2dyZXNzLFxuXHRyZnh0eXBlcyA9IC9eKD86dG9nZ2xlfHNob3d8aGlkZSkkLyxcblx0cnJ1biA9IC9xdWV1ZUhvb2tzJC87XG5cbmZ1bmN0aW9uIHNjaGVkdWxlKCkge1xuXHRpZiAoIGluUHJvZ3Jlc3MgKSB7XG5cdFx0aWYgKCBkb2N1bWVudC5oaWRkZW4gPT09IGZhbHNlICYmIHdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUgKSB7XG5cdFx0XHR3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lKCBzY2hlZHVsZSApO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHR3aW5kb3cuc2V0VGltZW91dCggc2NoZWR1bGUsIGpRdWVyeS5meC5pbnRlcnZhbCApO1xuXHRcdH1cblxuXHRcdGpRdWVyeS5meC50aWNrKCk7XG5cdH1cbn1cblxuLy8gQW5pbWF0aW9ucyBjcmVhdGVkIHN5bmNocm9ub3VzbHkgd2lsbCBydW4gc3luY2hyb25vdXNseVxuZnVuY3Rpb24gY3JlYXRlRnhOb3coKSB7XG5cdHdpbmRvdy5zZXRUaW1lb3V0KCBmdW5jdGlvbigpIHtcblx0XHRmeE5vdyA9IHVuZGVmaW5lZDtcblx0fSApO1xuXHRyZXR1cm4gKCBmeE5vdyA9IERhdGUubm93KCkgKTtcbn1cblxuLy8gR2VuZXJhdGUgcGFyYW1ldGVycyB0byBjcmVhdGUgYSBzdGFuZGFyZCBhbmltYXRpb25cbmZ1bmN0aW9uIGdlbkZ4KCB0eXBlLCBpbmNsdWRlV2lkdGggKSB7XG5cdHZhciB3aGljaCxcblx0XHRpID0gMCxcblx0XHRhdHRycyA9IHsgaGVpZ2h0OiB0eXBlIH07XG5cblx0Ly8gSWYgd2UgaW5jbHVkZSB3aWR0aCwgc3RlcCB2YWx1ZSBpcyAxIHRvIGRvIGFsbCBjc3NFeHBhbmQgdmFsdWVzLFxuXHQvLyBvdGhlcndpc2Ugc3RlcCB2YWx1ZSBpcyAyIHRvIHNraXAgb3ZlciBMZWZ0IGFuZCBSaWdodFxuXHRpbmNsdWRlV2lkdGggPSBpbmNsdWRlV2lkdGggPyAxIDogMDtcblx0Zm9yICggOyBpIDwgNDsgaSArPSAyIC0gaW5jbHVkZVdpZHRoICkge1xuXHRcdHdoaWNoID0gY3NzRXhwYW5kWyBpIF07XG5cdFx0YXR0cnNbIFwibWFyZ2luXCIgKyB3aGljaCBdID0gYXR0cnNbIFwicGFkZGluZ1wiICsgd2hpY2ggXSA9IHR5cGU7XG5cdH1cblxuXHRpZiAoIGluY2x1ZGVXaWR0aCApIHtcblx0XHRhdHRycy5vcGFjaXR5ID0gYXR0cnMud2lkdGggPSB0eXBlO1xuXHR9XG5cblx0cmV0dXJuIGF0dHJzO1xufVxuXG5mdW5jdGlvbiBjcmVhdGVUd2VlbiggdmFsdWUsIHByb3AsIGFuaW1hdGlvbiApIHtcblx0dmFyIHR3ZWVuLFxuXHRcdGNvbGxlY3Rpb24gPSAoIEFuaW1hdGlvbi50d2VlbmVyc1sgcHJvcCBdIHx8IFtdICkuY29uY2F0KCBBbmltYXRpb24udHdlZW5lcnNbIFwiKlwiIF0gKSxcblx0XHRpbmRleCA9IDAsXG5cdFx0bGVuZ3RoID0gY29sbGVjdGlvbi5sZW5ndGg7XG5cdGZvciAoIDsgaW5kZXggPCBsZW5ndGg7IGluZGV4KysgKSB7XG5cdFx0aWYgKCAoIHR3ZWVuID0gY29sbGVjdGlvblsgaW5kZXggXS5jYWxsKCBhbmltYXRpb24sIHByb3AsIHZhbHVlICkgKSApIHtcblxuXHRcdFx0Ly8gV2UncmUgZG9uZSB3aXRoIHRoaXMgcHJvcGVydHlcblx0XHRcdHJldHVybiB0d2Vlbjtcblx0XHR9XG5cdH1cbn1cblxuZnVuY3Rpb24gZGVmYXVsdFByZWZpbHRlciggZWxlbSwgcHJvcHMsIG9wdHMgKSB7XG5cdHZhciBwcm9wLCB2YWx1ZSwgdG9nZ2xlLCBob29rcywgb2xkZmlyZSwgcHJvcFR3ZWVuLCByZXN0b3JlRGlzcGxheSwgZGlzcGxheSxcblx0XHRpc0JveCA9IFwid2lkdGhcIiBpbiBwcm9wcyB8fCBcImhlaWdodFwiIGluIHByb3BzLFxuXHRcdGFuaW0gPSB0aGlzLFxuXHRcdG9yaWcgPSB7fSxcblx0XHRzdHlsZSA9IGVsZW0uc3R5bGUsXG5cdFx0aGlkZGVuID0gZWxlbS5ub2RlVHlwZSAmJiBpc0hpZGRlbldpdGhpblRyZWUoIGVsZW0gKSxcblx0XHRkYXRhU2hvdyA9IGRhdGFQcml2LmdldCggZWxlbSwgXCJmeHNob3dcIiApO1xuXG5cdC8vIFF1ZXVlLXNraXBwaW5nIGFuaW1hdGlvbnMgaGlqYWNrIHRoZSBmeCBob29rc1xuXHRpZiAoICFvcHRzLnF1ZXVlICkge1xuXHRcdGhvb2tzID0galF1ZXJ5Ll9xdWV1ZUhvb2tzKCBlbGVtLCBcImZ4XCIgKTtcblx0XHRpZiAoIGhvb2tzLnVucXVldWVkID09IG51bGwgKSB7XG5cdFx0XHRob29rcy51bnF1ZXVlZCA9IDA7XG5cdFx0XHRvbGRmaXJlID0gaG9va3MuZW1wdHkuZmlyZTtcblx0XHRcdGhvb2tzLmVtcHR5LmZpcmUgPSBmdW5jdGlvbigpIHtcblx0XHRcdFx0aWYgKCAhaG9va3MudW5xdWV1ZWQgKSB7XG5cdFx0XHRcdFx0b2xkZmlyZSgpO1xuXHRcdFx0XHR9XG5cdFx0XHR9O1xuXHRcdH1cblx0XHRob29rcy51bnF1ZXVlZCsrO1xuXG5cdFx0YW5pbS5hbHdheXMoIGZ1bmN0aW9uKCkge1xuXG5cdFx0XHQvLyBFbnN1cmUgdGhlIGNvbXBsZXRlIGhhbmRsZXIgaXMgY2FsbGVkIGJlZm9yZSB0aGlzIGNvbXBsZXRlc1xuXHRcdFx0YW5pbS5hbHdheXMoIGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRob29rcy51bnF1ZXVlZC0tO1xuXHRcdFx0XHRpZiAoICFqUXVlcnkucXVldWUoIGVsZW0sIFwiZnhcIiApLmxlbmd0aCApIHtcblx0XHRcdFx0XHRob29rcy5lbXB0eS5maXJlKCk7XG5cdFx0XHRcdH1cblx0XHRcdH0gKTtcblx0XHR9ICk7XG5cdH1cblxuXHQvLyBEZXRlY3Qgc2hvdy9oaWRlIGFuaW1hdGlvbnNcblx0Zm9yICggcHJvcCBpbiBwcm9wcyApIHtcblx0XHR2YWx1ZSA9IHByb3BzWyBwcm9wIF07XG5cdFx0aWYgKCByZnh0eXBlcy50ZXN0KCB2YWx1ZSApICkge1xuXHRcdFx0ZGVsZXRlIHByb3BzWyBwcm9wIF07XG5cdFx0XHR0b2dnbGUgPSB0b2dnbGUgfHwgdmFsdWUgPT09IFwidG9nZ2xlXCI7XG5cdFx0XHRpZiAoIHZhbHVlID09PSAoIGhpZGRlbiA/IFwiaGlkZVwiIDogXCJzaG93XCIgKSApIHtcblxuXHRcdFx0XHQvLyBQcmV0ZW5kIHRvIGJlIGhpZGRlbiBpZiB0aGlzIGlzIGEgXCJzaG93XCIgYW5kXG5cdFx0XHRcdC8vIHRoZXJlIGlzIHN0aWxsIGRhdGEgZnJvbSBhIHN0b3BwZWQgc2hvdy9oaWRlXG5cdFx0XHRcdGlmICggdmFsdWUgPT09IFwic2hvd1wiICYmIGRhdGFTaG93ICYmIGRhdGFTaG93WyBwcm9wIF0gIT09IHVuZGVmaW5lZCApIHtcblx0XHRcdFx0XHRoaWRkZW4gPSB0cnVlO1xuXG5cdFx0XHRcdC8vIElnbm9yZSBhbGwgb3RoZXIgbm8tb3Agc2hvdy9oaWRlIGRhdGFcblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRjb250aW51ZTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdFx0b3JpZ1sgcHJvcCBdID0gZGF0YVNob3cgJiYgZGF0YVNob3dbIHByb3AgXSB8fCBqUXVlcnkuc3R5bGUoIGVsZW0sIHByb3AgKTtcblx0XHR9XG5cdH1cblxuXHQvLyBCYWlsIG91dCBpZiB0aGlzIGlzIGEgbm8tb3AgbGlrZSAuaGlkZSgpLmhpZGUoKVxuXHRwcm9wVHdlZW4gPSAhalF1ZXJ5LmlzRW1wdHlPYmplY3QoIHByb3BzICk7XG5cdGlmICggIXByb3BUd2VlbiAmJiBqUXVlcnkuaXNFbXB0eU9iamVjdCggb3JpZyApICkge1xuXHRcdHJldHVybjtcblx0fVxuXG5cdC8vIFJlc3RyaWN0IFwib3ZlcmZsb3dcIiBhbmQgXCJkaXNwbGF5XCIgc3R5bGVzIGR1cmluZyBib3ggYW5pbWF0aW9uc1xuXHRpZiAoIGlzQm94ICYmIGVsZW0ubm9kZVR5cGUgPT09IDEgKSB7XG5cblx0XHQvLyBTdXBwb3J0OiBJRSA8PTkgLSAxMSwgRWRnZSAxMiAtIDE1XG5cdFx0Ly8gUmVjb3JkIGFsbCAzIG92ZXJmbG93IGF0dHJpYnV0ZXMgYmVjYXVzZSBJRSBkb2VzIG5vdCBpbmZlciB0aGUgc2hvcnRoYW5kXG5cdFx0Ly8gZnJvbSBpZGVudGljYWxseS12YWx1ZWQgb3ZlcmZsb3dYIGFuZCBvdmVyZmxvd1kgYW5kIEVkZ2UganVzdCBtaXJyb3JzXG5cdFx0Ly8gdGhlIG92ZXJmbG93WCB2YWx1ZSB0aGVyZS5cblx0XHRvcHRzLm92ZXJmbG93ID0gWyBzdHlsZS5vdmVyZmxvdywgc3R5bGUub3ZlcmZsb3dYLCBzdHlsZS5vdmVyZmxvd1kgXTtcblxuXHRcdC8vIElkZW50aWZ5IGEgZGlzcGxheSB0eXBlLCBwcmVmZXJyaW5nIG9sZCBzaG93L2hpZGUgZGF0YSBvdmVyIHRoZSBDU1MgY2FzY2FkZVxuXHRcdHJlc3RvcmVEaXNwbGF5ID0gZGF0YVNob3cgJiYgZGF0YVNob3cuZGlzcGxheTtcblx0XHRpZiAoIHJlc3RvcmVEaXNwbGF5ID09IG51bGwgKSB7XG5cdFx0XHRyZXN0b3JlRGlzcGxheSA9IGRhdGFQcml2LmdldCggZWxlbSwgXCJkaXNwbGF5XCIgKTtcblx0XHR9XG5cdFx0ZGlzcGxheSA9IGpRdWVyeS5jc3MoIGVsZW0sIFwiZGlzcGxheVwiICk7XG5cdFx0aWYgKCBkaXNwbGF5ID09PSBcIm5vbmVcIiApIHtcblx0XHRcdGlmICggcmVzdG9yZURpc3BsYXkgKSB7XG5cdFx0XHRcdGRpc3BsYXkgPSByZXN0b3JlRGlzcGxheTtcblx0XHRcdH0gZWxzZSB7XG5cblx0XHRcdFx0Ly8gR2V0IG5vbmVtcHR5IHZhbHVlKHMpIGJ5IHRlbXBvcmFyaWx5IGZvcmNpbmcgdmlzaWJpbGl0eVxuXHRcdFx0XHRzaG93SGlkZSggWyBlbGVtIF0sIHRydWUgKTtcblx0XHRcdFx0cmVzdG9yZURpc3BsYXkgPSBlbGVtLnN0eWxlLmRpc3BsYXkgfHwgcmVzdG9yZURpc3BsYXk7XG5cdFx0XHRcdGRpc3BsYXkgPSBqUXVlcnkuY3NzKCBlbGVtLCBcImRpc3BsYXlcIiApO1xuXHRcdFx0XHRzaG93SGlkZSggWyBlbGVtIF0gKTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHQvLyBBbmltYXRlIGlubGluZSBlbGVtZW50cyBhcyBpbmxpbmUtYmxvY2tcblx0XHRpZiAoIGRpc3BsYXkgPT09IFwiaW5saW5lXCIgfHwgZGlzcGxheSA9PT0gXCJpbmxpbmUtYmxvY2tcIiAmJiByZXN0b3JlRGlzcGxheSAhPSBudWxsICkge1xuXHRcdFx0aWYgKCBqUXVlcnkuY3NzKCBlbGVtLCBcImZsb2F0XCIgKSA9PT0gXCJub25lXCIgKSB7XG5cblx0XHRcdFx0Ly8gUmVzdG9yZSB0aGUgb3JpZ2luYWwgZGlzcGxheSB2YWx1ZSBhdCB0aGUgZW5kIG9mIHB1cmUgc2hvdy9oaWRlIGFuaW1hdGlvbnNcblx0XHRcdFx0aWYgKCAhcHJvcFR3ZWVuICkge1xuXHRcdFx0XHRcdGFuaW0uZG9uZSggZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0XHRzdHlsZS5kaXNwbGF5ID0gcmVzdG9yZURpc3BsYXk7XG5cdFx0XHRcdFx0fSApO1xuXHRcdFx0XHRcdGlmICggcmVzdG9yZURpc3BsYXkgPT0gbnVsbCApIHtcblx0XHRcdFx0XHRcdGRpc3BsYXkgPSBzdHlsZS5kaXNwbGF5O1xuXHRcdFx0XHRcdFx0cmVzdG9yZURpc3BsYXkgPSBkaXNwbGF5ID09PSBcIm5vbmVcIiA/IFwiXCIgOiBkaXNwbGF5O1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0XHRzdHlsZS5kaXNwbGF5ID0gXCJpbmxpbmUtYmxvY2tcIjtcblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHRpZiAoIG9wdHMub3ZlcmZsb3cgKSB7XG5cdFx0c3R5bGUub3ZlcmZsb3cgPSBcImhpZGRlblwiO1xuXHRcdGFuaW0uYWx3YXlzKCBmdW5jdGlvbigpIHtcblx0XHRcdHN0eWxlLm92ZXJmbG93ID0gb3B0cy5vdmVyZmxvd1sgMCBdO1xuXHRcdFx0c3R5bGUub3ZlcmZsb3dYID0gb3B0cy5vdmVyZmxvd1sgMSBdO1xuXHRcdFx0c3R5bGUub3ZlcmZsb3dZID0gb3B0cy5vdmVyZmxvd1sgMiBdO1xuXHRcdH0gKTtcblx0fVxuXG5cdC8vIEltcGxlbWVudCBzaG93L2hpZGUgYW5pbWF0aW9uc1xuXHRwcm9wVHdlZW4gPSBmYWxzZTtcblx0Zm9yICggcHJvcCBpbiBvcmlnICkge1xuXG5cdFx0Ly8gR2VuZXJhbCBzaG93L2hpZGUgc2V0dXAgZm9yIHRoaXMgZWxlbWVudCBhbmltYXRpb25cblx0XHRpZiAoICFwcm9wVHdlZW4gKSB7XG5cdFx0XHRpZiAoIGRhdGFTaG93ICkge1xuXHRcdFx0XHRpZiAoIFwiaGlkZGVuXCIgaW4gZGF0YVNob3cgKSB7XG5cdFx0XHRcdFx0aGlkZGVuID0gZGF0YVNob3cuaGlkZGVuO1xuXHRcdFx0XHR9XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRkYXRhU2hvdyA9IGRhdGFQcml2LmFjY2VzcyggZWxlbSwgXCJmeHNob3dcIiwgeyBkaXNwbGF5OiByZXN0b3JlRGlzcGxheSB9ICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIFN0b3JlIGhpZGRlbi92aXNpYmxlIGZvciB0b2dnbGUgc28gYC5zdG9wKCkudG9nZ2xlKClgIFwicmV2ZXJzZXNcIlxuXHRcdFx0aWYgKCB0b2dnbGUgKSB7XG5cdFx0XHRcdGRhdGFTaG93LmhpZGRlbiA9ICFoaWRkZW47XG5cdFx0XHR9XG5cblx0XHRcdC8vIFNob3cgZWxlbWVudHMgYmVmb3JlIGFuaW1hdGluZyB0aGVtXG5cdFx0XHRpZiAoIGhpZGRlbiApIHtcblx0XHRcdFx0c2hvd0hpZGUoIFsgZWxlbSBdLCB0cnVlICk7XG5cdFx0XHR9XG5cblx0XHRcdC8qIGVzbGludC1kaXNhYmxlIG5vLWxvb3AtZnVuYyAqL1xuXG5cdFx0XHRhbmltLmRvbmUoIGZ1bmN0aW9uKCkge1xuXG5cdFx0XHQvKiBlc2xpbnQtZW5hYmxlIG5vLWxvb3AtZnVuYyAqL1xuXG5cdFx0XHRcdC8vIFRoZSBmaW5hbCBzdGVwIG9mIGEgXCJoaWRlXCIgYW5pbWF0aW9uIGlzIGFjdHVhbGx5IGhpZGluZyB0aGUgZWxlbWVudFxuXHRcdFx0XHRpZiAoICFoaWRkZW4gKSB7XG5cdFx0XHRcdFx0c2hvd0hpZGUoIFsgZWxlbSBdICk7XG5cdFx0XHRcdH1cblx0XHRcdFx0ZGF0YVByaXYucmVtb3ZlKCBlbGVtLCBcImZ4c2hvd1wiICk7XG5cdFx0XHRcdGZvciAoIHByb3AgaW4gb3JpZyApIHtcblx0XHRcdFx0XHRqUXVlcnkuc3R5bGUoIGVsZW0sIHByb3AsIG9yaWdbIHByb3AgXSApO1xuXHRcdFx0XHR9XG5cdFx0XHR9ICk7XG5cdFx0fVxuXG5cdFx0Ly8gUGVyLXByb3BlcnR5IHNldHVwXG5cdFx0cHJvcFR3ZWVuID0gY3JlYXRlVHdlZW4oIGhpZGRlbiA/IGRhdGFTaG93WyBwcm9wIF0gOiAwLCBwcm9wLCBhbmltICk7XG5cdFx0aWYgKCAhKCBwcm9wIGluIGRhdGFTaG93ICkgKSB7XG5cdFx0XHRkYXRhU2hvd1sgcHJvcCBdID0gcHJvcFR3ZWVuLnN0YXJ0O1xuXHRcdFx0aWYgKCBoaWRkZW4gKSB7XG5cdFx0XHRcdHByb3BUd2Vlbi5lbmQgPSBwcm9wVHdlZW4uc3RhcnQ7XG5cdFx0XHRcdHByb3BUd2Vlbi5zdGFydCA9IDA7XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG59XG5cbmZ1bmN0aW9uIHByb3BGaWx0ZXIoIHByb3BzLCBzcGVjaWFsRWFzaW5nICkge1xuXHR2YXIgaW5kZXgsIG5hbWUsIGVhc2luZywgdmFsdWUsIGhvb2tzO1xuXG5cdC8vIGNhbWVsQ2FzZSwgc3BlY2lhbEVhc2luZyBhbmQgZXhwYW5kIGNzc0hvb2sgcGFzc1xuXHRmb3IgKCBpbmRleCBpbiBwcm9wcyApIHtcblx0XHRuYW1lID0gY2FtZWxDYXNlKCBpbmRleCApO1xuXHRcdGVhc2luZyA9IHNwZWNpYWxFYXNpbmdbIG5hbWUgXTtcblx0XHR2YWx1ZSA9IHByb3BzWyBpbmRleCBdO1xuXHRcdGlmICggQXJyYXkuaXNBcnJheSggdmFsdWUgKSApIHtcblx0XHRcdGVhc2luZyA9IHZhbHVlWyAxIF07XG5cdFx0XHR2YWx1ZSA9IHByb3BzWyBpbmRleCBdID0gdmFsdWVbIDAgXTtcblx0XHR9XG5cblx0XHRpZiAoIGluZGV4ICE9PSBuYW1lICkge1xuXHRcdFx0cHJvcHNbIG5hbWUgXSA9IHZhbHVlO1xuXHRcdFx0ZGVsZXRlIHByb3BzWyBpbmRleCBdO1xuXHRcdH1cblxuXHRcdGhvb2tzID0galF1ZXJ5LmNzc0hvb2tzWyBuYW1lIF07XG5cdFx0aWYgKCBob29rcyAmJiBcImV4cGFuZFwiIGluIGhvb2tzICkge1xuXHRcdFx0dmFsdWUgPSBob29rcy5leHBhbmQoIHZhbHVlICk7XG5cdFx0XHRkZWxldGUgcHJvcHNbIG5hbWUgXTtcblxuXHRcdFx0Ly8gTm90IHF1aXRlICQuZXh0ZW5kLCB0aGlzIHdvbid0IG92ZXJ3cml0ZSBleGlzdGluZyBrZXlzLlxuXHRcdFx0Ly8gUmV1c2luZyAnaW5kZXgnIGJlY2F1c2Ugd2UgaGF2ZSB0aGUgY29ycmVjdCBcIm5hbWVcIlxuXHRcdFx0Zm9yICggaW5kZXggaW4gdmFsdWUgKSB7XG5cdFx0XHRcdGlmICggISggaW5kZXggaW4gcHJvcHMgKSApIHtcblx0XHRcdFx0XHRwcm9wc1sgaW5kZXggXSA9IHZhbHVlWyBpbmRleCBdO1xuXHRcdFx0XHRcdHNwZWNpYWxFYXNpbmdbIGluZGV4IF0gPSBlYXNpbmc7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9IGVsc2Uge1xuXHRcdFx0c3BlY2lhbEVhc2luZ1sgbmFtZSBdID0gZWFzaW5nO1xuXHRcdH1cblx0fVxufVxuXG5mdW5jdGlvbiBBbmltYXRpb24oIGVsZW0sIHByb3BlcnRpZXMsIG9wdGlvbnMgKSB7XG5cdHZhciByZXN1bHQsXG5cdFx0c3RvcHBlZCxcblx0XHRpbmRleCA9IDAsXG5cdFx0bGVuZ3RoID0gQW5pbWF0aW9uLnByZWZpbHRlcnMubGVuZ3RoLFxuXHRcdGRlZmVycmVkID0galF1ZXJ5LkRlZmVycmVkKCkuYWx3YXlzKCBmdW5jdGlvbigpIHtcblxuXHRcdFx0Ly8gRG9uJ3QgbWF0Y2ggZWxlbSBpbiB0aGUgOmFuaW1hdGVkIHNlbGVjdG9yXG5cdFx0XHRkZWxldGUgdGljay5lbGVtO1xuXHRcdH0gKSxcblx0XHR0aWNrID0gZnVuY3Rpb24oKSB7XG5cdFx0XHRpZiAoIHN0b3BwZWQgKSB7XG5cdFx0XHRcdHJldHVybiBmYWxzZTtcblx0XHRcdH1cblx0XHRcdHZhciBjdXJyZW50VGltZSA9IGZ4Tm93IHx8IGNyZWF0ZUZ4Tm93KCksXG5cdFx0XHRcdHJlbWFpbmluZyA9IE1hdGgubWF4KCAwLCBhbmltYXRpb24uc3RhcnRUaW1lICsgYW5pbWF0aW9uLmR1cmF0aW9uIC0gY3VycmVudFRpbWUgKSxcblxuXHRcdFx0XHQvLyBTdXBwb3J0OiBBbmRyb2lkIDIuMyBvbmx5XG5cdFx0XHRcdC8vIEFyY2hhaWMgY3Jhc2ggYnVnIHdvbid0IGFsbG93IHVzIHRvIHVzZSBgMSAtICggMC41IHx8IDAgKWAgKCMxMjQ5Nylcblx0XHRcdFx0dGVtcCA9IHJlbWFpbmluZyAvIGFuaW1hdGlvbi5kdXJhdGlvbiB8fCAwLFxuXHRcdFx0XHRwZXJjZW50ID0gMSAtIHRlbXAsXG5cdFx0XHRcdGluZGV4ID0gMCxcblx0XHRcdFx0bGVuZ3RoID0gYW5pbWF0aW9uLnR3ZWVucy5sZW5ndGg7XG5cblx0XHRcdGZvciAoIDsgaW5kZXggPCBsZW5ndGg7IGluZGV4KysgKSB7XG5cdFx0XHRcdGFuaW1hdGlvbi50d2VlbnNbIGluZGV4IF0ucnVuKCBwZXJjZW50ICk7XG5cdFx0XHR9XG5cblx0XHRcdGRlZmVycmVkLm5vdGlmeVdpdGgoIGVsZW0sIFsgYW5pbWF0aW9uLCBwZXJjZW50LCByZW1haW5pbmcgXSApO1xuXG5cdFx0XHQvLyBJZiB0aGVyZSdzIG1vcmUgdG8gZG8sIHlpZWxkXG5cdFx0XHRpZiAoIHBlcmNlbnQgPCAxICYmIGxlbmd0aCApIHtcblx0XHRcdFx0cmV0dXJuIHJlbWFpbmluZztcblx0XHRcdH1cblxuXHRcdFx0Ly8gSWYgdGhpcyB3YXMgYW4gZW1wdHkgYW5pbWF0aW9uLCBzeW50aGVzaXplIGEgZmluYWwgcHJvZ3Jlc3Mgbm90aWZpY2F0aW9uXG5cdFx0XHRpZiAoICFsZW5ndGggKSB7XG5cdFx0XHRcdGRlZmVycmVkLm5vdGlmeVdpdGgoIGVsZW0sIFsgYW5pbWF0aW9uLCAxLCAwIF0gKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gUmVzb2x2ZSB0aGUgYW5pbWF0aW9uIGFuZCByZXBvcnQgaXRzIGNvbmNsdXNpb25cblx0XHRcdGRlZmVycmVkLnJlc29sdmVXaXRoKCBlbGVtLCBbIGFuaW1hdGlvbiBdICk7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fSxcblx0XHRhbmltYXRpb24gPSBkZWZlcnJlZC5wcm9taXNlKCB7XG5cdFx0XHRlbGVtOiBlbGVtLFxuXHRcdFx0cHJvcHM6IGpRdWVyeS5leHRlbmQoIHt9LCBwcm9wZXJ0aWVzICksXG5cdFx0XHRvcHRzOiBqUXVlcnkuZXh0ZW5kKCB0cnVlLCB7XG5cdFx0XHRcdHNwZWNpYWxFYXNpbmc6IHt9LFxuXHRcdFx0XHRlYXNpbmc6IGpRdWVyeS5lYXNpbmcuX2RlZmF1bHRcblx0XHRcdH0sIG9wdGlvbnMgKSxcblx0XHRcdG9yaWdpbmFsUHJvcGVydGllczogcHJvcGVydGllcyxcblx0XHRcdG9yaWdpbmFsT3B0aW9uczogb3B0aW9ucyxcblx0XHRcdHN0YXJ0VGltZTogZnhOb3cgfHwgY3JlYXRlRnhOb3coKSxcblx0XHRcdGR1cmF0aW9uOiBvcHRpb25zLmR1cmF0aW9uLFxuXHRcdFx0dHdlZW5zOiBbXSxcblx0XHRcdGNyZWF0ZVR3ZWVuOiBmdW5jdGlvbiggcHJvcCwgZW5kICkge1xuXHRcdFx0XHR2YXIgdHdlZW4gPSBqUXVlcnkuVHdlZW4oIGVsZW0sIGFuaW1hdGlvbi5vcHRzLCBwcm9wLCBlbmQsXG5cdFx0XHRcdFx0XHRhbmltYXRpb24ub3B0cy5zcGVjaWFsRWFzaW5nWyBwcm9wIF0gfHwgYW5pbWF0aW9uLm9wdHMuZWFzaW5nICk7XG5cdFx0XHRcdGFuaW1hdGlvbi50d2VlbnMucHVzaCggdHdlZW4gKTtcblx0XHRcdFx0cmV0dXJuIHR3ZWVuO1xuXHRcdFx0fSxcblx0XHRcdHN0b3A6IGZ1bmN0aW9uKCBnb3RvRW5kICkge1xuXHRcdFx0XHR2YXIgaW5kZXggPSAwLFxuXG5cdFx0XHRcdFx0Ly8gSWYgd2UgYXJlIGdvaW5nIHRvIHRoZSBlbmQsIHdlIHdhbnQgdG8gcnVuIGFsbCB0aGUgdHdlZW5zXG5cdFx0XHRcdFx0Ly8gb3RoZXJ3aXNlIHdlIHNraXAgdGhpcyBwYXJ0XG5cdFx0XHRcdFx0bGVuZ3RoID0gZ290b0VuZCA/IGFuaW1hdGlvbi50d2VlbnMubGVuZ3RoIDogMDtcblx0XHRcdFx0aWYgKCBzdG9wcGVkICkge1xuXHRcdFx0XHRcdHJldHVybiB0aGlzO1xuXHRcdFx0XHR9XG5cdFx0XHRcdHN0b3BwZWQgPSB0cnVlO1xuXHRcdFx0XHRmb3IgKCA7IGluZGV4IDwgbGVuZ3RoOyBpbmRleCsrICkge1xuXHRcdFx0XHRcdGFuaW1hdGlvbi50d2VlbnNbIGluZGV4IF0ucnVuKCAxICk7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBSZXNvbHZlIHdoZW4gd2UgcGxheWVkIHRoZSBsYXN0IGZyYW1lOyBvdGhlcndpc2UsIHJlamVjdFxuXHRcdFx0XHRpZiAoIGdvdG9FbmQgKSB7XG5cdFx0XHRcdFx0ZGVmZXJyZWQubm90aWZ5V2l0aCggZWxlbSwgWyBhbmltYXRpb24sIDEsIDAgXSApO1xuXHRcdFx0XHRcdGRlZmVycmVkLnJlc29sdmVXaXRoKCBlbGVtLCBbIGFuaW1hdGlvbiwgZ290b0VuZCBdICk7XG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0ZGVmZXJyZWQucmVqZWN0V2l0aCggZWxlbSwgWyBhbmltYXRpb24sIGdvdG9FbmQgXSApO1xuXHRcdFx0XHR9XG5cdFx0XHRcdHJldHVybiB0aGlzO1xuXHRcdFx0fVxuXHRcdH0gKSxcblx0XHRwcm9wcyA9IGFuaW1hdGlvbi5wcm9wcztcblxuXHRwcm9wRmlsdGVyKCBwcm9wcywgYW5pbWF0aW9uLm9wdHMuc3BlY2lhbEVhc2luZyApO1xuXG5cdGZvciAoIDsgaW5kZXggPCBsZW5ndGg7IGluZGV4KysgKSB7XG5cdFx0cmVzdWx0ID0gQW5pbWF0aW9uLnByZWZpbHRlcnNbIGluZGV4IF0uY2FsbCggYW5pbWF0aW9uLCBlbGVtLCBwcm9wcywgYW5pbWF0aW9uLm9wdHMgKTtcblx0XHRpZiAoIHJlc3VsdCApIHtcblx0XHRcdGlmICggaXNGdW5jdGlvbiggcmVzdWx0LnN0b3AgKSApIHtcblx0XHRcdFx0alF1ZXJ5Ll9xdWV1ZUhvb2tzKCBhbmltYXRpb24uZWxlbSwgYW5pbWF0aW9uLm9wdHMucXVldWUgKS5zdG9wID1cblx0XHRcdFx0XHRyZXN1bHQuc3RvcC5iaW5kKCByZXN1bHQgKTtcblx0XHRcdH1cblx0XHRcdHJldHVybiByZXN1bHQ7XG5cdFx0fVxuXHR9XG5cblx0alF1ZXJ5Lm1hcCggcHJvcHMsIGNyZWF0ZVR3ZWVuLCBhbmltYXRpb24gKTtcblxuXHRpZiAoIGlzRnVuY3Rpb24oIGFuaW1hdGlvbi5vcHRzLnN0YXJ0ICkgKSB7XG5cdFx0YW5pbWF0aW9uLm9wdHMuc3RhcnQuY2FsbCggZWxlbSwgYW5pbWF0aW9uICk7XG5cdH1cblxuXHQvLyBBdHRhY2ggY2FsbGJhY2tzIGZyb20gb3B0aW9uc1xuXHRhbmltYXRpb25cblx0XHQucHJvZ3Jlc3MoIGFuaW1hdGlvbi5vcHRzLnByb2dyZXNzIClcblx0XHQuZG9uZSggYW5pbWF0aW9uLm9wdHMuZG9uZSwgYW5pbWF0aW9uLm9wdHMuY29tcGxldGUgKVxuXHRcdC5mYWlsKCBhbmltYXRpb24ub3B0cy5mYWlsIClcblx0XHQuYWx3YXlzKCBhbmltYXRpb24ub3B0cy5hbHdheXMgKTtcblxuXHRqUXVlcnkuZngudGltZXIoXG5cdFx0alF1ZXJ5LmV4dGVuZCggdGljaywge1xuXHRcdFx0ZWxlbTogZWxlbSxcblx0XHRcdGFuaW06IGFuaW1hdGlvbixcblx0XHRcdHF1ZXVlOiBhbmltYXRpb24ub3B0cy5xdWV1ZVxuXHRcdH0gKVxuXHQpO1xuXG5cdHJldHVybiBhbmltYXRpb247XG59XG5cbmpRdWVyeS5BbmltYXRpb24gPSBqUXVlcnkuZXh0ZW5kKCBBbmltYXRpb24sIHtcblxuXHR0d2VlbmVyczoge1xuXHRcdFwiKlwiOiBbIGZ1bmN0aW9uKCBwcm9wLCB2YWx1ZSApIHtcblx0XHRcdHZhciB0d2VlbiA9IHRoaXMuY3JlYXRlVHdlZW4oIHByb3AsIHZhbHVlICk7XG5cdFx0XHRhZGp1c3RDU1MoIHR3ZWVuLmVsZW0sIHByb3AsIHJjc3NOdW0uZXhlYyggdmFsdWUgKSwgdHdlZW4gKTtcblx0XHRcdHJldHVybiB0d2Vlbjtcblx0XHR9IF1cblx0fSxcblxuXHR0d2VlbmVyOiBmdW5jdGlvbiggcHJvcHMsIGNhbGxiYWNrICkge1xuXHRcdGlmICggaXNGdW5jdGlvbiggcHJvcHMgKSApIHtcblx0XHRcdGNhbGxiYWNrID0gcHJvcHM7XG5cdFx0XHRwcm9wcyA9IFsgXCIqXCIgXTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0cHJvcHMgPSBwcm9wcy5tYXRjaCggcm5vdGh0bWx3aGl0ZSApO1xuXHRcdH1cblxuXHRcdHZhciBwcm9wLFxuXHRcdFx0aW5kZXggPSAwLFxuXHRcdFx0bGVuZ3RoID0gcHJvcHMubGVuZ3RoO1xuXG5cdFx0Zm9yICggOyBpbmRleCA8IGxlbmd0aDsgaW5kZXgrKyApIHtcblx0XHRcdHByb3AgPSBwcm9wc1sgaW5kZXggXTtcblx0XHRcdEFuaW1hdGlvbi50d2VlbmVyc1sgcHJvcCBdID0gQW5pbWF0aW9uLnR3ZWVuZXJzWyBwcm9wIF0gfHwgW107XG5cdFx0XHRBbmltYXRpb24udHdlZW5lcnNbIHByb3AgXS51bnNoaWZ0KCBjYWxsYmFjayApO1xuXHRcdH1cblx0fSxcblxuXHRwcmVmaWx0ZXJzOiBbIGRlZmF1bHRQcmVmaWx0ZXIgXSxcblxuXHRwcmVmaWx0ZXI6IGZ1bmN0aW9uKCBjYWxsYmFjaywgcHJlcGVuZCApIHtcblx0XHRpZiAoIHByZXBlbmQgKSB7XG5cdFx0XHRBbmltYXRpb24ucHJlZmlsdGVycy51bnNoaWZ0KCBjYWxsYmFjayApO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRBbmltYXRpb24ucHJlZmlsdGVycy5wdXNoKCBjYWxsYmFjayApO1xuXHRcdH1cblx0fVxufSApO1xuXG5qUXVlcnkuc3BlZWQgPSBmdW5jdGlvbiggc3BlZWQsIGVhc2luZywgZm4gKSB7XG5cdHZhciBvcHQgPSBzcGVlZCAmJiB0eXBlb2Ygc3BlZWQgPT09IFwib2JqZWN0XCIgPyBqUXVlcnkuZXh0ZW5kKCB7fSwgc3BlZWQgKSA6IHtcblx0XHRjb21wbGV0ZTogZm4gfHwgIWZuICYmIGVhc2luZyB8fFxuXHRcdFx0aXNGdW5jdGlvbiggc3BlZWQgKSAmJiBzcGVlZCxcblx0XHRkdXJhdGlvbjogc3BlZWQsXG5cdFx0ZWFzaW5nOiBmbiAmJiBlYXNpbmcgfHwgZWFzaW5nICYmICFpc0Z1bmN0aW9uKCBlYXNpbmcgKSAmJiBlYXNpbmdcblx0fTtcblxuXHQvLyBHbyB0byB0aGUgZW5kIHN0YXRlIGlmIGZ4IGFyZSBvZmZcblx0aWYgKCBqUXVlcnkuZngub2ZmICkge1xuXHRcdG9wdC5kdXJhdGlvbiA9IDA7XG5cblx0fSBlbHNlIHtcblx0XHRpZiAoIHR5cGVvZiBvcHQuZHVyYXRpb24gIT09IFwibnVtYmVyXCIgKSB7XG5cdFx0XHRpZiAoIG9wdC5kdXJhdGlvbiBpbiBqUXVlcnkuZnguc3BlZWRzICkge1xuXHRcdFx0XHRvcHQuZHVyYXRpb24gPSBqUXVlcnkuZnguc3BlZWRzWyBvcHQuZHVyYXRpb24gXTtcblxuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0b3B0LmR1cmF0aW9uID0galF1ZXJ5LmZ4LnNwZWVkcy5fZGVmYXVsdDtcblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHQvLyBOb3JtYWxpemUgb3B0LnF1ZXVlIC0gdHJ1ZS91bmRlZmluZWQvbnVsbCAtPiBcImZ4XCJcblx0aWYgKCBvcHQucXVldWUgPT0gbnVsbCB8fCBvcHQucXVldWUgPT09IHRydWUgKSB7XG5cdFx0b3B0LnF1ZXVlID0gXCJmeFwiO1xuXHR9XG5cblx0Ly8gUXVldWVpbmdcblx0b3B0Lm9sZCA9IG9wdC5jb21wbGV0ZTtcblxuXHRvcHQuY29tcGxldGUgPSBmdW5jdGlvbigpIHtcblx0XHRpZiAoIGlzRnVuY3Rpb24oIG9wdC5vbGQgKSApIHtcblx0XHRcdG9wdC5vbGQuY2FsbCggdGhpcyApO1xuXHRcdH1cblxuXHRcdGlmICggb3B0LnF1ZXVlICkge1xuXHRcdFx0alF1ZXJ5LmRlcXVldWUoIHRoaXMsIG9wdC5xdWV1ZSApO1xuXHRcdH1cblx0fTtcblxuXHRyZXR1cm4gb3B0O1xufTtcblxualF1ZXJ5LmZuLmV4dGVuZCgge1xuXHRmYWRlVG86IGZ1bmN0aW9uKCBzcGVlZCwgdG8sIGVhc2luZywgY2FsbGJhY2sgKSB7XG5cblx0XHQvLyBTaG93IGFueSBoaWRkZW4gZWxlbWVudHMgYWZ0ZXIgc2V0dGluZyBvcGFjaXR5IHRvIDBcblx0XHRyZXR1cm4gdGhpcy5maWx0ZXIoIGlzSGlkZGVuV2l0aGluVHJlZSApLmNzcyggXCJvcGFjaXR5XCIsIDAgKS5zaG93KClcblxuXHRcdFx0Ly8gQW5pbWF0ZSB0byB0aGUgdmFsdWUgc3BlY2lmaWVkXG5cdFx0XHQuZW5kKCkuYW5pbWF0ZSggeyBvcGFjaXR5OiB0byB9LCBzcGVlZCwgZWFzaW5nLCBjYWxsYmFjayApO1xuXHR9LFxuXHRhbmltYXRlOiBmdW5jdGlvbiggcHJvcCwgc3BlZWQsIGVhc2luZywgY2FsbGJhY2sgKSB7XG5cdFx0dmFyIGVtcHR5ID0galF1ZXJ5LmlzRW1wdHlPYmplY3QoIHByb3AgKSxcblx0XHRcdG9wdGFsbCA9IGpRdWVyeS5zcGVlZCggc3BlZWQsIGVhc2luZywgY2FsbGJhY2sgKSxcblx0XHRcdGRvQW5pbWF0aW9uID0gZnVuY3Rpb24oKSB7XG5cblx0XHRcdFx0Ly8gT3BlcmF0ZSBvbiBhIGNvcHkgb2YgcHJvcCBzbyBwZXItcHJvcGVydHkgZWFzaW5nIHdvbid0IGJlIGxvc3Rcblx0XHRcdFx0dmFyIGFuaW0gPSBBbmltYXRpb24oIHRoaXMsIGpRdWVyeS5leHRlbmQoIHt9LCBwcm9wICksIG9wdGFsbCApO1xuXG5cdFx0XHRcdC8vIEVtcHR5IGFuaW1hdGlvbnMsIG9yIGZpbmlzaGluZyByZXNvbHZlcyBpbW1lZGlhdGVseVxuXHRcdFx0XHRpZiAoIGVtcHR5IHx8IGRhdGFQcml2LmdldCggdGhpcywgXCJmaW5pc2hcIiApICkge1xuXHRcdFx0XHRcdGFuaW0uc3RvcCggdHJ1ZSApO1xuXHRcdFx0XHR9XG5cdFx0XHR9O1xuXHRcdFx0ZG9BbmltYXRpb24uZmluaXNoID0gZG9BbmltYXRpb247XG5cblx0XHRyZXR1cm4gZW1wdHkgfHwgb3B0YWxsLnF1ZXVlID09PSBmYWxzZSA/XG5cdFx0XHR0aGlzLmVhY2goIGRvQW5pbWF0aW9uICkgOlxuXHRcdFx0dGhpcy5xdWV1ZSggb3B0YWxsLnF1ZXVlLCBkb0FuaW1hdGlvbiApO1xuXHR9LFxuXHRzdG9wOiBmdW5jdGlvbiggdHlwZSwgY2xlYXJRdWV1ZSwgZ290b0VuZCApIHtcblx0XHR2YXIgc3RvcFF1ZXVlID0gZnVuY3Rpb24oIGhvb2tzICkge1xuXHRcdFx0dmFyIHN0b3AgPSBob29rcy5zdG9wO1xuXHRcdFx0ZGVsZXRlIGhvb2tzLnN0b3A7XG5cdFx0XHRzdG9wKCBnb3RvRW5kICk7XG5cdFx0fTtcblxuXHRcdGlmICggdHlwZW9mIHR5cGUgIT09IFwic3RyaW5nXCIgKSB7XG5cdFx0XHRnb3RvRW5kID0gY2xlYXJRdWV1ZTtcblx0XHRcdGNsZWFyUXVldWUgPSB0eXBlO1xuXHRcdFx0dHlwZSA9IHVuZGVmaW5lZDtcblx0XHR9XG5cdFx0aWYgKCBjbGVhclF1ZXVlICkge1xuXHRcdFx0dGhpcy5xdWV1ZSggdHlwZSB8fCBcImZ4XCIsIFtdICk7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHRoaXMuZWFjaCggZnVuY3Rpb24oKSB7XG5cdFx0XHR2YXIgZGVxdWV1ZSA9IHRydWUsXG5cdFx0XHRcdGluZGV4ID0gdHlwZSAhPSBudWxsICYmIHR5cGUgKyBcInF1ZXVlSG9va3NcIixcblx0XHRcdFx0dGltZXJzID0galF1ZXJ5LnRpbWVycyxcblx0XHRcdFx0ZGF0YSA9IGRhdGFQcml2LmdldCggdGhpcyApO1xuXG5cdFx0XHRpZiAoIGluZGV4ICkge1xuXHRcdFx0XHRpZiAoIGRhdGFbIGluZGV4IF0gJiYgZGF0YVsgaW5kZXggXS5zdG9wICkge1xuXHRcdFx0XHRcdHN0b3BRdWV1ZSggZGF0YVsgaW5kZXggXSApO1xuXHRcdFx0XHR9XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRmb3IgKCBpbmRleCBpbiBkYXRhICkge1xuXHRcdFx0XHRcdGlmICggZGF0YVsgaW5kZXggXSAmJiBkYXRhWyBpbmRleCBdLnN0b3AgJiYgcnJ1bi50ZXN0KCBpbmRleCApICkge1xuXHRcdFx0XHRcdFx0c3RvcFF1ZXVlKCBkYXRhWyBpbmRleCBdICk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHRcdGZvciAoIGluZGV4ID0gdGltZXJzLmxlbmd0aDsgaW5kZXgtLTsgKSB7XG5cdFx0XHRcdGlmICggdGltZXJzWyBpbmRleCBdLmVsZW0gPT09IHRoaXMgJiZcblx0XHRcdFx0XHQoIHR5cGUgPT0gbnVsbCB8fCB0aW1lcnNbIGluZGV4IF0ucXVldWUgPT09IHR5cGUgKSApIHtcblxuXHRcdFx0XHRcdHRpbWVyc1sgaW5kZXggXS5hbmltLnN0b3AoIGdvdG9FbmQgKTtcblx0XHRcdFx0XHRkZXF1ZXVlID0gZmFsc2U7XG5cdFx0XHRcdFx0dGltZXJzLnNwbGljZSggaW5kZXgsIDEgKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXG5cdFx0XHQvLyBTdGFydCB0aGUgbmV4dCBpbiB0aGUgcXVldWUgaWYgdGhlIGxhc3Qgc3RlcCB3YXNuJ3QgZm9yY2VkLlxuXHRcdFx0Ly8gVGltZXJzIGN1cnJlbnRseSB3aWxsIGNhbGwgdGhlaXIgY29tcGxldGUgY2FsbGJhY2tzLCB3aGljaFxuXHRcdFx0Ly8gd2lsbCBkZXF1ZXVlIGJ1dCBvbmx5IGlmIHRoZXkgd2VyZSBnb3RvRW5kLlxuXHRcdFx0aWYgKCBkZXF1ZXVlIHx8ICFnb3RvRW5kICkge1xuXHRcdFx0XHRqUXVlcnkuZGVxdWV1ZSggdGhpcywgdHlwZSApO1xuXHRcdFx0fVxuXHRcdH0gKTtcblx0fSxcblx0ZmluaXNoOiBmdW5jdGlvbiggdHlwZSApIHtcblx0XHRpZiAoIHR5cGUgIT09IGZhbHNlICkge1xuXHRcdFx0dHlwZSA9IHR5cGUgfHwgXCJmeFwiO1xuXHRcdH1cblx0XHRyZXR1cm4gdGhpcy5lYWNoKCBmdW5jdGlvbigpIHtcblx0XHRcdHZhciBpbmRleCxcblx0XHRcdFx0ZGF0YSA9IGRhdGFQcml2LmdldCggdGhpcyApLFxuXHRcdFx0XHRxdWV1ZSA9IGRhdGFbIHR5cGUgKyBcInF1ZXVlXCIgXSxcblx0XHRcdFx0aG9va3MgPSBkYXRhWyB0eXBlICsgXCJxdWV1ZUhvb2tzXCIgXSxcblx0XHRcdFx0dGltZXJzID0galF1ZXJ5LnRpbWVycyxcblx0XHRcdFx0bGVuZ3RoID0gcXVldWUgPyBxdWV1ZS5sZW5ndGggOiAwO1xuXG5cdFx0XHQvLyBFbmFibGUgZmluaXNoaW5nIGZsYWcgb24gcHJpdmF0ZSBkYXRhXG5cdFx0XHRkYXRhLmZpbmlzaCA9IHRydWU7XG5cblx0XHRcdC8vIEVtcHR5IHRoZSBxdWV1ZSBmaXJzdFxuXHRcdFx0alF1ZXJ5LnF1ZXVlKCB0aGlzLCB0eXBlLCBbXSApO1xuXG5cdFx0XHRpZiAoIGhvb2tzICYmIGhvb2tzLnN0b3AgKSB7XG5cdFx0XHRcdGhvb2tzLnN0b3AuY2FsbCggdGhpcywgdHJ1ZSApO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBMb29rIGZvciBhbnkgYWN0aXZlIGFuaW1hdGlvbnMsIGFuZCBmaW5pc2ggdGhlbVxuXHRcdFx0Zm9yICggaW5kZXggPSB0aW1lcnMubGVuZ3RoOyBpbmRleC0tOyApIHtcblx0XHRcdFx0aWYgKCB0aW1lcnNbIGluZGV4IF0uZWxlbSA9PT0gdGhpcyAmJiB0aW1lcnNbIGluZGV4IF0ucXVldWUgPT09IHR5cGUgKSB7XG5cdFx0XHRcdFx0dGltZXJzWyBpbmRleCBdLmFuaW0uc3RvcCggdHJ1ZSApO1xuXHRcdFx0XHRcdHRpbWVycy5zcGxpY2UoIGluZGV4LCAxICk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblxuXHRcdFx0Ly8gTG9vayBmb3IgYW55IGFuaW1hdGlvbnMgaW4gdGhlIG9sZCBxdWV1ZSBhbmQgZmluaXNoIHRoZW1cblx0XHRcdGZvciAoIGluZGV4ID0gMDsgaW5kZXggPCBsZW5ndGg7IGluZGV4KysgKSB7XG5cdFx0XHRcdGlmICggcXVldWVbIGluZGV4IF0gJiYgcXVldWVbIGluZGV4IF0uZmluaXNoICkge1xuXHRcdFx0XHRcdHF1ZXVlWyBpbmRleCBdLmZpbmlzaC5jYWxsKCB0aGlzICk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblxuXHRcdFx0Ly8gVHVybiBvZmYgZmluaXNoaW5nIGZsYWdcblx0XHRcdGRlbGV0ZSBkYXRhLmZpbmlzaDtcblx0XHR9ICk7XG5cdH1cbn0gKTtcblxualF1ZXJ5LmVhY2goIFsgXCJ0b2dnbGVcIiwgXCJzaG93XCIsIFwiaGlkZVwiIF0sIGZ1bmN0aW9uKCBfaSwgbmFtZSApIHtcblx0dmFyIGNzc0ZuID0galF1ZXJ5LmZuWyBuYW1lIF07XG5cdGpRdWVyeS5mblsgbmFtZSBdID0gZnVuY3Rpb24oIHNwZWVkLCBlYXNpbmcsIGNhbGxiYWNrICkge1xuXHRcdHJldHVybiBzcGVlZCA9PSBudWxsIHx8IHR5cGVvZiBzcGVlZCA9PT0gXCJib29sZWFuXCIgP1xuXHRcdFx0Y3NzRm4uYXBwbHkoIHRoaXMsIGFyZ3VtZW50cyApIDpcblx0XHRcdHRoaXMuYW5pbWF0ZSggZ2VuRngoIG5hbWUsIHRydWUgKSwgc3BlZWQsIGVhc2luZywgY2FsbGJhY2sgKTtcblx0fTtcbn0gKTtcblxuLy8gR2VuZXJhdGUgc2hvcnRjdXRzIGZvciBjdXN0b20gYW5pbWF0aW9uc1xualF1ZXJ5LmVhY2goIHtcblx0c2xpZGVEb3duOiBnZW5GeCggXCJzaG93XCIgKSxcblx0c2xpZGVVcDogZ2VuRngoIFwiaGlkZVwiICksXG5cdHNsaWRlVG9nZ2xlOiBnZW5GeCggXCJ0b2dnbGVcIiApLFxuXHRmYWRlSW46IHsgb3BhY2l0eTogXCJzaG93XCIgfSxcblx0ZmFkZU91dDogeyBvcGFjaXR5OiBcImhpZGVcIiB9LFxuXHRmYWRlVG9nZ2xlOiB7IG9wYWNpdHk6IFwidG9nZ2xlXCIgfVxufSwgZnVuY3Rpb24oIG5hbWUsIHByb3BzICkge1xuXHRqUXVlcnkuZm5bIG5hbWUgXSA9IGZ1bmN0aW9uKCBzcGVlZCwgZWFzaW5nLCBjYWxsYmFjayApIHtcblx0XHRyZXR1cm4gdGhpcy5hbmltYXRlKCBwcm9wcywgc3BlZWQsIGVhc2luZywgY2FsbGJhY2sgKTtcblx0fTtcbn0gKTtcblxualF1ZXJ5LnRpbWVycyA9IFtdO1xualF1ZXJ5LmZ4LnRpY2sgPSBmdW5jdGlvbigpIHtcblx0dmFyIHRpbWVyLFxuXHRcdGkgPSAwLFxuXHRcdHRpbWVycyA9IGpRdWVyeS50aW1lcnM7XG5cblx0ZnhOb3cgPSBEYXRlLm5vdygpO1xuXG5cdGZvciAoIDsgaSA8IHRpbWVycy5sZW5ndGg7IGkrKyApIHtcblx0XHR0aW1lciA9IHRpbWVyc1sgaSBdO1xuXG5cdFx0Ly8gUnVuIHRoZSB0aW1lciBhbmQgc2FmZWx5IHJlbW92ZSBpdCB3aGVuIGRvbmUgKGFsbG93aW5nIGZvciBleHRlcm5hbCByZW1vdmFsKVxuXHRcdGlmICggIXRpbWVyKCkgJiYgdGltZXJzWyBpIF0gPT09IHRpbWVyICkge1xuXHRcdFx0dGltZXJzLnNwbGljZSggaS0tLCAxICk7XG5cdFx0fVxuXHR9XG5cblx0aWYgKCAhdGltZXJzLmxlbmd0aCApIHtcblx0XHRqUXVlcnkuZnguc3RvcCgpO1xuXHR9XG5cdGZ4Tm93ID0gdW5kZWZpbmVkO1xufTtcblxualF1ZXJ5LmZ4LnRpbWVyID0gZnVuY3Rpb24oIHRpbWVyICkge1xuXHRqUXVlcnkudGltZXJzLnB1c2goIHRpbWVyICk7XG5cdGpRdWVyeS5meC5zdGFydCgpO1xufTtcblxualF1ZXJ5LmZ4LmludGVydmFsID0gMTM7XG5qUXVlcnkuZnguc3RhcnQgPSBmdW5jdGlvbigpIHtcblx0aWYgKCBpblByb2dyZXNzICkge1xuXHRcdHJldHVybjtcblx0fVxuXG5cdGluUHJvZ3Jlc3MgPSB0cnVlO1xuXHRzY2hlZHVsZSgpO1xufTtcblxualF1ZXJ5LmZ4LnN0b3AgPSBmdW5jdGlvbigpIHtcblx0aW5Qcm9ncmVzcyA9IG51bGw7XG59O1xuXG5qUXVlcnkuZnguc3BlZWRzID0ge1xuXHRzbG93OiA2MDAsXG5cdGZhc3Q6IDIwMCxcblxuXHQvLyBEZWZhdWx0IHNwZWVkXG5cdF9kZWZhdWx0OiA0MDBcbn07XG5cblxuLy8gQmFzZWQgb2ZmIG9mIHRoZSBwbHVnaW4gYnkgQ2xpbnQgSGVsZmVycywgd2l0aCBwZXJtaXNzaW9uLlxuLy8gaHR0cHM6Ly93ZWIuYXJjaGl2ZS5vcmcvd2ViLzIwMTAwMzI0MDE0NzQ3L2h0dHA6Ly9ibGluZHNpZ25hbHMuY29tL2luZGV4LnBocC8yMDA5LzA3L2pxdWVyeS1kZWxheS9cbmpRdWVyeS5mbi5kZWxheSA9IGZ1bmN0aW9uKCB0aW1lLCB0eXBlICkge1xuXHR0aW1lID0galF1ZXJ5LmZ4ID8galF1ZXJ5LmZ4LnNwZWVkc1sgdGltZSBdIHx8IHRpbWUgOiB0aW1lO1xuXHR0eXBlID0gdHlwZSB8fCBcImZ4XCI7XG5cblx0cmV0dXJuIHRoaXMucXVldWUoIHR5cGUsIGZ1bmN0aW9uKCBuZXh0LCBob29rcyApIHtcblx0XHR2YXIgdGltZW91dCA9IHdpbmRvdy5zZXRUaW1lb3V0KCBuZXh0LCB0aW1lICk7XG5cdFx0aG9va3Muc3RvcCA9IGZ1bmN0aW9uKCkge1xuXHRcdFx0d2luZG93LmNsZWFyVGltZW91dCggdGltZW91dCApO1xuXHRcdH07XG5cdH0gKTtcbn07XG5cblxuKCBmdW5jdGlvbigpIHtcblx0dmFyIGlucHV0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCggXCJpbnB1dFwiICksXG5cdFx0c2VsZWN0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCggXCJzZWxlY3RcIiApLFxuXHRcdG9wdCA9IHNlbGVjdC5hcHBlbmRDaGlsZCggZG9jdW1lbnQuY3JlYXRlRWxlbWVudCggXCJvcHRpb25cIiApICk7XG5cblx0aW5wdXQudHlwZSA9IFwiY2hlY2tib3hcIjtcblxuXHQvLyBTdXBwb3J0OiBBbmRyb2lkIDw9NC4zIG9ubHlcblx0Ly8gRGVmYXVsdCB2YWx1ZSBmb3IgYSBjaGVja2JveCBzaG91bGQgYmUgXCJvblwiXG5cdHN1cHBvcnQuY2hlY2tPbiA9IGlucHV0LnZhbHVlICE9PSBcIlwiO1xuXG5cdC8vIFN1cHBvcnQ6IElFIDw9MTEgb25seVxuXHQvLyBNdXN0IGFjY2VzcyBzZWxlY3RlZEluZGV4IHRvIG1ha2UgZGVmYXVsdCBvcHRpb25zIHNlbGVjdFxuXHRzdXBwb3J0Lm9wdFNlbGVjdGVkID0gb3B0LnNlbGVjdGVkO1xuXG5cdC8vIFN1cHBvcnQ6IElFIDw9MTEgb25seVxuXHQvLyBBbiBpbnB1dCBsb3NlcyBpdHMgdmFsdWUgYWZ0ZXIgYmVjb21pbmcgYSByYWRpb1xuXHRpbnB1dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoIFwiaW5wdXRcIiApO1xuXHRpbnB1dC52YWx1ZSA9IFwidFwiO1xuXHRpbnB1dC50eXBlID0gXCJyYWRpb1wiO1xuXHRzdXBwb3J0LnJhZGlvVmFsdWUgPSBpbnB1dC52YWx1ZSA9PT0gXCJ0XCI7XG59ICkoKTtcblxuXG52YXIgYm9vbEhvb2ssXG5cdGF0dHJIYW5kbGUgPSBqUXVlcnkuZXhwci5hdHRySGFuZGxlO1xuXG5qUXVlcnkuZm4uZXh0ZW5kKCB7XG5cdGF0dHI6IGZ1bmN0aW9uKCBuYW1lLCB2YWx1ZSApIHtcblx0XHRyZXR1cm4gYWNjZXNzKCB0aGlzLCBqUXVlcnkuYXR0ciwgbmFtZSwgdmFsdWUsIGFyZ3VtZW50cy5sZW5ndGggPiAxICk7XG5cdH0sXG5cblx0cmVtb3ZlQXR0cjogZnVuY3Rpb24oIG5hbWUgKSB7XG5cdFx0cmV0dXJuIHRoaXMuZWFjaCggZnVuY3Rpb24oKSB7XG5cdFx0XHRqUXVlcnkucmVtb3ZlQXR0ciggdGhpcywgbmFtZSApO1xuXHRcdH0gKTtcblx0fVxufSApO1xuXG5qUXVlcnkuZXh0ZW5kKCB7XG5cdGF0dHI6IGZ1bmN0aW9uKCBlbGVtLCBuYW1lLCB2YWx1ZSApIHtcblx0XHR2YXIgcmV0LCBob29rcyxcblx0XHRcdG5UeXBlID0gZWxlbS5ub2RlVHlwZTtcblxuXHRcdC8vIERvbid0IGdldC9zZXQgYXR0cmlidXRlcyBvbiB0ZXh0LCBjb21tZW50IGFuZCBhdHRyaWJ1dGUgbm9kZXNcblx0XHRpZiAoIG5UeXBlID09PSAzIHx8IG5UeXBlID09PSA4IHx8IG5UeXBlID09PSAyICkge1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdC8vIEZhbGxiYWNrIHRvIHByb3Agd2hlbiBhdHRyaWJ1dGVzIGFyZSBub3Qgc3VwcG9ydGVkXG5cdFx0aWYgKCB0eXBlb2YgZWxlbS5nZXRBdHRyaWJ1dGUgPT09IFwidW5kZWZpbmVkXCIgKSB7XG5cdFx0XHRyZXR1cm4galF1ZXJ5LnByb3AoIGVsZW0sIG5hbWUsIHZhbHVlICk7XG5cdFx0fVxuXG5cdFx0Ly8gQXR0cmlidXRlIGhvb2tzIGFyZSBkZXRlcm1pbmVkIGJ5IHRoZSBsb3dlcmNhc2UgdmVyc2lvblxuXHRcdC8vIEdyYWIgbmVjZXNzYXJ5IGhvb2sgaWYgb25lIGlzIGRlZmluZWRcblx0XHRpZiAoIG5UeXBlICE9PSAxIHx8ICFqUXVlcnkuaXNYTUxEb2MoIGVsZW0gKSApIHtcblx0XHRcdGhvb2tzID0galF1ZXJ5LmF0dHJIb29rc1sgbmFtZS50b0xvd2VyQ2FzZSgpIF0gfHxcblx0XHRcdFx0KCBqUXVlcnkuZXhwci5tYXRjaC5ib29sLnRlc3QoIG5hbWUgKSA/IGJvb2xIb29rIDogdW5kZWZpbmVkICk7XG5cdFx0fVxuXG5cdFx0aWYgKCB2YWx1ZSAhPT0gdW5kZWZpbmVkICkge1xuXHRcdFx0aWYgKCB2YWx1ZSA9PT0gbnVsbCApIHtcblx0XHRcdFx0alF1ZXJ5LnJlbW92ZUF0dHIoIGVsZW0sIG5hbWUgKTtcblx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0fVxuXG5cdFx0XHRpZiAoIGhvb2tzICYmIFwic2V0XCIgaW4gaG9va3MgJiZcblx0XHRcdFx0KCByZXQgPSBob29rcy5zZXQoIGVsZW0sIHZhbHVlLCBuYW1lICkgKSAhPT0gdW5kZWZpbmVkICkge1xuXHRcdFx0XHRyZXR1cm4gcmV0O1xuXHRcdFx0fVxuXG5cdFx0XHRlbGVtLnNldEF0dHJpYnV0ZSggbmFtZSwgdmFsdWUgKyBcIlwiICk7XG5cdFx0XHRyZXR1cm4gdmFsdWU7XG5cdFx0fVxuXG5cdFx0aWYgKCBob29rcyAmJiBcImdldFwiIGluIGhvb2tzICYmICggcmV0ID0gaG9va3MuZ2V0KCBlbGVtLCBuYW1lICkgKSAhPT0gbnVsbCApIHtcblx0XHRcdHJldHVybiByZXQ7XG5cdFx0fVxuXG5cdFx0cmV0ID0galF1ZXJ5LmZpbmQuYXR0ciggZWxlbSwgbmFtZSApO1xuXG5cdFx0Ly8gTm9uLWV4aXN0ZW50IGF0dHJpYnV0ZXMgcmV0dXJuIG51bGwsIHdlIG5vcm1hbGl6ZSB0byB1bmRlZmluZWRcblx0XHRyZXR1cm4gcmV0ID09IG51bGwgPyB1bmRlZmluZWQgOiByZXQ7XG5cdH0sXG5cblx0YXR0ckhvb2tzOiB7XG5cdFx0dHlwZToge1xuXHRcdFx0c2V0OiBmdW5jdGlvbiggZWxlbSwgdmFsdWUgKSB7XG5cdFx0XHRcdGlmICggIXN1cHBvcnQucmFkaW9WYWx1ZSAmJiB2YWx1ZSA9PT0gXCJyYWRpb1wiICYmXG5cdFx0XHRcdFx0bm9kZU5hbWUoIGVsZW0sIFwiaW5wdXRcIiApICkge1xuXHRcdFx0XHRcdHZhciB2YWwgPSBlbGVtLnZhbHVlO1xuXHRcdFx0XHRcdGVsZW0uc2V0QXR0cmlidXRlKCBcInR5cGVcIiwgdmFsdWUgKTtcblx0XHRcdFx0XHRpZiAoIHZhbCApIHtcblx0XHRcdFx0XHRcdGVsZW0udmFsdWUgPSB2YWw7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdHJldHVybiB2YWx1ZTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0fSxcblxuXHRyZW1vdmVBdHRyOiBmdW5jdGlvbiggZWxlbSwgdmFsdWUgKSB7XG5cdFx0dmFyIG5hbWUsXG5cdFx0XHRpID0gMCxcblxuXHRcdFx0Ly8gQXR0cmlidXRlIG5hbWVzIGNhbiBjb250YWluIG5vbi1IVE1MIHdoaXRlc3BhY2UgY2hhcmFjdGVyc1xuXHRcdFx0Ly8gaHR0cHM6Ly9odG1sLnNwZWMud2hhdHdnLm9yZy9tdWx0aXBhZ2Uvc3ludGF4Lmh0bWwjYXR0cmlidXRlcy0yXG5cdFx0XHRhdHRyTmFtZXMgPSB2YWx1ZSAmJiB2YWx1ZS5tYXRjaCggcm5vdGh0bWx3aGl0ZSApO1xuXG5cdFx0aWYgKCBhdHRyTmFtZXMgJiYgZWxlbS5ub2RlVHlwZSA9PT0gMSApIHtcblx0XHRcdHdoaWxlICggKCBuYW1lID0gYXR0ck5hbWVzWyBpKysgXSApICkge1xuXHRcdFx0XHRlbGVtLnJlbW92ZUF0dHJpYnV0ZSggbmFtZSApO1xuXHRcdFx0fVxuXHRcdH1cblx0fVxufSApO1xuXG4vLyBIb29rcyBmb3IgYm9vbGVhbiBhdHRyaWJ1dGVzXG5ib29sSG9vayA9IHtcblx0c2V0OiBmdW5jdGlvbiggZWxlbSwgdmFsdWUsIG5hbWUgKSB7XG5cdFx0aWYgKCB2YWx1ZSA9PT0gZmFsc2UgKSB7XG5cblx0XHRcdC8vIFJlbW92ZSBib29sZWFuIGF0dHJpYnV0ZXMgd2hlbiBzZXQgdG8gZmFsc2Vcblx0XHRcdGpRdWVyeS5yZW1vdmVBdHRyKCBlbGVtLCBuYW1lICk7XG5cdFx0fSBlbHNlIHtcblx0XHRcdGVsZW0uc2V0QXR0cmlidXRlKCBuYW1lLCBuYW1lICk7XG5cdFx0fVxuXHRcdHJldHVybiBuYW1lO1xuXHR9XG59O1xuXG5qUXVlcnkuZWFjaCggalF1ZXJ5LmV4cHIubWF0Y2guYm9vbC5zb3VyY2UubWF0Y2goIC9cXHcrL2cgKSwgZnVuY3Rpb24oIF9pLCBuYW1lICkge1xuXHR2YXIgZ2V0dGVyID0gYXR0ckhhbmRsZVsgbmFtZSBdIHx8IGpRdWVyeS5maW5kLmF0dHI7XG5cblx0YXR0ckhhbmRsZVsgbmFtZSBdID0gZnVuY3Rpb24oIGVsZW0sIG5hbWUsIGlzWE1MICkge1xuXHRcdHZhciByZXQsIGhhbmRsZSxcblx0XHRcdGxvd2VyY2FzZU5hbWUgPSBuYW1lLnRvTG93ZXJDYXNlKCk7XG5cblx0XHRpZiAoICFpc1hNTCApIHtcblxuXHRcdFx0Ly8gQXZvaWQgYW4gaW5maW5pdGUgbG9vcCBieSB0ZW1wb3JhcmlseSByZW1vdmluZyB0aGlzIGZ1bmN0aW9uIGZyb20gdGhlIGdldHRlclxuXHRcdFx0aGFuZGxlID0gYXR0ckhhbmRsZVsgbG93ZXJjYXNlTmFtZSBdO1xuXHRcdFx0YXR0ckhhbmRsZVsgbG93ZXJjYXNlTmFtZSBdID0gcmV0O1xuXHRcdFx0cmV0ID0gZ2V0dGVyKCBlbGVtLCBuYW1lLCBpc1hNTCApICE9IG51bGwgP1xuXHRcdFx0XHRsb3dlcmNhc2VOYW1lIDpcblx0XHRcdFx0bnVsbDtcblx0XHRcdGF0dHJIYW5kbGVbIGxvd2VyY2FzZU5hbWUgXSA9IGhhbmRsZTtcblx0XHR9XG5cdFx0cmV0dXJuIHJldDtcblx0fTtcbn0gKTtcblxuXG5cblxudmFyIHJmb2N1c2FibGUgPSAvXig/OmlucHV0fHNlbGVjdHx0ZXh0YXJlYXxidXR0b24pJC9pLFxuXHRyY2xpY2thYmxlID0gL14oPzphfGFyZWEpJC9pO1xuXG5qUXVlcnkuZm4uZXh0ZW5kKCB7XG5cdHByb3A6IGZ1bmN0aW9uKCBuYW1lLCB2YWx1ZSApIHtcblx0XHRyZXR1cm4gYWNjZXNzKCB0aGlzLCBqUXVlcnkucHJvcCwgbmFtZSwgdmFsdWUsIGFyZ3VtZW50cy5sZW5ndGggPiAxICk7XG5cdH0sXG5cblx0cmVtb3ZlUHJvcDogZnVuY3Rpb24oIG5hbWUgKSB7XG5cdFx0cmV0dXJuIHRoaXMuZWFjaCggZnVuY3Rpb24oKSB7XG5cdFx0XHRkZWxldGUgdGhpc1sgalF1ZXJ5LnByb3BGaXhbIG5hbWUgXSB8fCBuYW1lIF07XG5cdFx0fSApO1xuXHR9XG59ICk7XG5cbmpRdWVyeS5leHRlbmQoIHtcblx0cHJvcDogZnVuY3Rpb24oIGVsZW0sIG5hbWUsIHZhbHVlICkge1xuXHRcdHZhciByZXQsIGhvb2tzLFxuXHRcdFx0blR5cGUgPSBlbGVtLm5vZGVUeXBlO1xuXG5cdFx0Ly8gRG9uJ3QgZ2V0L3NldCBwcm9wZXJ0aWVzIG9uIHRleHQsIGNvbW1lbnQgYW5kIGF0dHJpYnV0ZSBub2Rlc1xuXHRcdGlmICggblR5cGUgPT09IDMgfHwgblR5cGUgPT09IDggfHwgblR5cGUgPT09IDIgKSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0aWYgKCBuVHlwZSAhPT0gMSB8fCAhalF1ZXJ5LmlzWE1MRG9jKCBlbGVtICkgKSB7XG5cblx0XHRcdC8vIEZpeCBuYW1lIGFuZCBhdHRhY2ggaG9va3Ncblx0XHRcdG5hbWUgPSBqUXVlcnkucHJvcEZpeFsgbmFtZSBdIHx8IG5hbWU7XG5cdFx0XHRob29rcyA9IGpRdWVyeS5wcm9wSG9va3NbIG5hbWUgXTtcblx0XHR9XG5cblx0XHRpZiAoIHZhbHVlICE9PSB1bmRlZmluZWQgKSB7XG5cdFx0XHRpZiAoIGhvb2tzICYmIFwic2V0XCIgaW4gaG9va3MgJiZcblx0XHRcdFx0KCByZXQgPSBob29rcy5zZXQoIGVsZW0sIHZhbHVlLCBuYW1lICkgKSAhPT0gdW5kZWZpbmVkICkge1xuXHRcdFx0XHRyZXR1cm4gcmV0O1xuXHRcdFx0fVxuXG5cdFx0XHRyZXR1cm4gKCBlbGVtWyBuYW1lIF0gPSB2YWx1ZSApO1xuXHRcdH1cblxuXHRcdGlmICggaG9va3MgJiYgXCJnZXRcIiBpbiBob29rcyAmJiAoIHJldCA9IGhvb2tzLmdldCggZWxlbSwgbmFtZSApICkgIT09IG51bGwgKSB7XG5cdFx0XHRyZXR1cm4gcmV0O1xuXHRcdH1cblxuXHRcdHJldHVybiBlbGVtWyBuYW1lIF07XG5cdH0sXG5cblx0cHJvcEhvb2tzOiB7XG5cdFx0dGFiSW5kZXg6IHtcblx0XHRcdGdldDogZnVuY3Rpb24oIGVsZW0gKSB7XG5cblx0XHRcdFx0Ly8gU3VwcG9ydDogSUUgPD05IC0gMTEgb25seVxuXHRcdFx0XHQvLyBlbGVtLnRhYkluZGV4IGRvZXNuJ3QgYWx3YXlzIHJldHVybiB0aGVcblx0XHRcdFx0Ly8gY29ycmVjdCB2YWx1ZSB3aGVuIGl0IGhhc24ndCBiZWVuIGV4cGxpY2l0bHkgc2V0XG5cdFx0XHRcdC8vIGh0dHBzOi8vd2ViLmFyY2hpdmUub3JnL3dlYi8yMDE0MTExNjIzMzM0Ny9odHRwOi8vZmx1aWRwcm9qZWN0Lm9yZy9ibG9nLzIwMDgvMDEvMDkvZ2V0dGluZy1zZXR0aW5nLWFuZC1yZW1vdmluZy10YWJpbmRleC12YWx1ZXMtd2l0aC1qYXZhc2NyaXB0L1xuXHRcdFx0XHQvLyBVc2UgcHJvcGVyIGF0dHJpYnV0ZSByZXRyaWV2YWwoIzEyMDcyKVxuXHRcdFx0XHR2YXIgdGFiaW5kZXggPSBqUXVlcnkuZmluZC5hdHRyKCBlbGVtLCBcInRhYmluZGV4XCIgKTtcblxuXHRcdFx0XHRpZiAoIHRhYmluZGV4ICkge1xuXHRcdFx0XHRcdHJldHVybiBwYXJzZUludCggdGFiaW5kZXgsIDEwICk7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRpZiAoXG5cdFx0XHRcdFx0cmZvY3VzYWJsZS50ZXN0KCBlbGVtLm5vZGVOYW1lICkgfHxcblx0XHRcdFx0XHRyY2xpY2thYmxlLnRlc3QoIGVsZW0ubm9kZU5hbWUgKSAmJlxuXHRcdFx0XHRcdGVsZW0uaHJlZlxuXHRcdFx0XHQpIHtcblx0XHRcdFx0XHRyZXR1cm4gMDtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdHJldHVybiAtMTtcblx0XHRcdH1cblx0XHR9XG5cdH0sXG5cblx0cHJvcEZpeDoge1xuXHRcdFwiZm9yXCI6IFwiaHRtbEZvclwiLFxuXHRcdFwiY2xhc3NcIjogXCJjbGFzc05hbWVcIlxuXHR9XG59ICk7XG5cbi8vIFN1cHBvcnQ6IElFIDw9MTEgb25seVxuLy8gQWNjZXNzaW5nIHRoZSBzZWxlY3RlZEluZGV4IHByb3BlcnR5XG4vLyBmb3JjZXMgdGhlIGJyb3dzZXIgdG8gcmVzcGVjdCBzZXR0aW5nIHNlbGVjdGVkXG4vLyBvbiB0aGUgb3B0aW9uXG4vLyBUaGUgZ2V0dGVyIGVuc3VyZXMgYSBkZWZhdWx0IG9wdGlvbiBpcyBzZWxlY3RlZFxuLy8gd2hlbiBpbiBhbiBvcHRncm91cFxuLy8gZXNsaW50IHJ1bGUgXCJuby11bnVzZWQtZXhwcmVzc2lvbnNcIiBpcyBkaXNhYmxlZCBmb3IgdGhpcyBjb2RlXG4vLyBzaW5jZSBpdCBjb25zaWRlcnMgc3VjaCBhY2Nlc3Npb25zIG5vb3BcbmlmICggIXN1cHBvcnQub3B0U2VsZWN0ZWQgKSB7XG5cdGpRdWVyeS5wcm9wSG9va3Muc2VsZWN0ZWQgPSB7XG5cdFx0Z2V0OiBmdW5jdGlvbiggZWxlbSApIHtcblxuXHRcdFx0LyogZXNsaW50IG5vLXVudXNlZC1leHByZXNzaW9uczogXCJvZmZcIiAqL1xuXG5cdFx0XHR2YXIgcGFyZW50ID0gZWxlbS5wYXJlbnROb2RlO1xuXHRcdFx0aWYgKCBwYXJlbnQgJiYgcGFyZW50LnBhcmVudE5vZGUgKSB7XG5cdFx0XHRcdHBhcmVudC5wYXJlbnROb2RlLnNlbGVjdGVkSW5kZXg7XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gbnVsbDtcblx0XHR9LFxuXHRcdHNldDogZnVuY3Rpb24oIGVsZW0gKSB7XG5cblx0XHRcdC8qIGVzbGludCBuby11bnVzZWQtZXhwcmVzc2lvbnM6IFwib2ZmXCIgKi9cblxuXHRcdFx0dmFyIHBhcmVudCA9IGVsZW0ucGFyZW50Tm9kZTtcblx0XHRcdGlmICggcGFyZW50ICkge1xuXHRcdFx0XHRwYXJlbnQuc2VsZWN0ZWRJbmRleDtcblxuXHRcdFx0XHRpZiAoIHBhcmVudC5wYXJlbnROb2RlICkge1xuXHRcdFx0XHRcdHBhcmVudC5wYXJlbnROb2RlLnNlbGVjdGVkSW5kZXg7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdH07XG59XG5cbmpRdWVyeS5lYWNoKCBbXG5cdFwidGFiSW5kZXhcIixcblx0XCJyZWFkT25seVwiLFxuXHRcIm1heExlbmd0aFwiLFxuXHRcImNlbGxTcGFjaW5nXCIsXG5cdFwiY2VsbFBhZGRpbmdcIixcblx0XCJyb3dTcGFuXCIsXG5cdFwiY29sU3BhblwiLFxuXHRcInVzZU1hcFwiLFxuXHRcImZyYW1lQm9yZGVyXCIsXG5cdFwiY29udGVudEVkaXRhYmxlXCJcbl0sIGZ1bmN0aW9uKCkge1xuXHRqUXVlcnkucHJvcEZpeFsgdGhpcy50b0xvd2VyQ2FzZSgpIF0gPSB0aGlzO1xufSApO1xuXG5cblxuXG5cdC8vIFN0cmlwIGFuZCBjb2xsYXBzZSB3aGl0ZXNwYWNlIGFjY29yZGluZyB0byBIVE1MIHNwZWNcblx0Ly8gaHR0cHM6Ly9pbmZyYS5zcGVjLndoYXR3Zy5vcmcvI3N0cmlwLWFuZC1jb2xsYXBzZS1hc2NpaS13aGl0ZXNwYWNlXG5cdGZ1bmN0aW9uIHN0cmlwQW5kQ29sbGFwc2UoIHZhbHVlICkge1xuXHRcdHZhciB0b2tlbnMgPSB2YWx1ZS5tYXRjaCggcm5vdGh0bWx3aGl0ZSApIHx8IFtdO1xuXHRcdHJldHVybiB0b2tlbnMuam9pbiggXCIgXCIgKTtcblx0fVxuXG5cbmZ1bmN0aW9uIGdldENsYXNzKCBlbGVtICkge1xuXHRyZXR1cm4gZWxlbS5nZXRBdHRyaWJ1dGUgJiYgZWxlbS5nZXRBdHRyaWJ1dGUoIFwiY2xhc3NcIiApIHx8IFwiXCI7XG59XG5cbmZ1bmN0aW9uIGNsYXNzZXNUb0FycmF5KCB2YWx1ZSApIHtcblx0aWYgKCBBcnJheS5pc0FycmF5KCB2YWx1ZSApICkge1xuXHRcdHJldHVybiB2YWx1ZTtcblx0fVxuXHRpZiAoIHR5cGVvZiB2YWx1ZSA9PT0gXCJzdHJpbmdcIiApIHtcblx0XHRyZXR1cm4gdmFsdWUubWF0Y2goIHJub3RodG1sd2hpdGUgKSB8fCBbXTtcblx0fVxuXHRyZXR1cm4gW107XG59XG5cbmpRdWVyeS5mbi5leHRlbmQoIHtcblx0YWRkQ2xhc3M6IGZ1bmN0aW9uKCB2YWx1ZSApIHtcblx0XHR2YXIgY2xhc3NlcywgZWxlbSwgY3VyLCBjdXJWYWx1ZSwgY2xhenosIGosIGZpbmFsVmFsdWUsXG5cdFx0XHRpID0gMDtcblxuXHRcdGlmICggaXNGdW5jdGlvbiggdmFsdWUgKSApIHtcblx0XHRcdHJldHVybiB0aGlzLmVhY2goIGZ1bmN0aW9uKCBqICkge1xuXHRcdFx0XHRqUXVlcnkoIHRoaXMgKS5hZGRDbGFzcyggdmFsdWUuY2FsbCggdGhpcywgaiwgZ2V0Q2xhc3MoIHRoaXMgKSApICk7XG5cdFx0XHR9ICk7XG5cdFx0fVxuXG5cdFx0Y2xhc3NlcyA9IGNsYXNzZXNUb0FycmF5KCB2YWx1ZSApO1xuXG5cdFx0aWYgKCBjbGFzc2VzLmxlbmd0aCApIHtcblx0XHRcdHdoaWxlICggKCBlbGVtID0gdGhpc1sgaSsrIF0gKSApIHtcblx0XHRcdFx0Y3VyVmFsdWUgPSBnZXRDbGFzcyggZWxlbSApO1xuXHRcdFx0XHRjdXIgPSBlbGVtLm5vZGVUeXBlID09PSAxICYmICggXCIgXCIgKyBzdHJpcEFuZENvbGxhcHNlKCBjdXJWYWx1ZSApICsgXCIgXCIgKTtcblxuXHRcdFx0XHRpZiAoIGN1ciApIHtcblx0XHRcdFx0XHRqID0gMDtcblx0XHRcdFx0XHR3aGlsZSAoICggY2xhenogPSBjbGFzc2VzWyBqKysgXSApICkge1xuXHRcdFx0XHRcdFx0aWYgKCBjdXIuaW5kZXhPZiggXCIgXCIgKyBjbGF6eiArIFwiIFwiICkgPCAwICkge1xuXHRcdFx0XHRcdFx0XHRjdXIgKz0gY2xhenogKyBcIiBcIjtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHQvLyBPbmx5IGFzc2lnbiBpZiBkaWZmZXJlbnQgdG8gYXZvaWQgdW5uZWVkZWQgcmVuZGVyaW5nLlxuXHRcdFx0XHRcdGZpbmFsVmFsdWUgPSBzdHJpcEFuZENvbGxhcHNlKCBjdXIgKTtcblx0XHRcdFx0XHRpZiAoIGN1clZhbHVlICE9PSBmaW5hbFZhbHVlICkge1xuXHRcdFx0XHRcdFx0ZWxlbS5zZXRBdHRyaWJ1dGUoIFwiY2xhc3NcIiwgZmluYWxWYWx1ZSApO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblxuXHRcdHJldHVybiB0aGlzO1xuXHR9LFxuXG5cdHJlbW92ZUNsYXNzOiBmdW5jdGlvbiggdmFsdWUgKSB7XG5cdFx0dmFyIGNsYXNzZXMsIGVsZW0sIGN1ciwgY3VyVmFsdWUsIGNsYXp6LCBqLCBmaW5hbFZhbHVlLFxuXHRcdFx0aSA9IDA7XG5cblx0XHRpZiAoIGlzRnVuY3Rpb24oIHZhbHVlICkgKSB7XG5cdFx0XHRyZXR1cm4gdGhpcy5lYWNoKCBmdW5jdGlvbiggaiApIHtcblx0XHRcdFx0alF1ZXJ5KCB0aGlzICkucmVtb3ZlQ2xhc3MoIHZhbHVlLmNhbGwoIHRoaXMsIGosIGdldENsYXNzKCB0aGlzICkgKSApO1xuXHRcdFx0fSApO1xuXHRcdH1cblxuXHRcdGlmICggIWFyZ3VtZW50cy5sZW5ndGggKSB7XG5cdFx0XHRyZXR1cm4gdGhpcy5hdHRyKCBcImNsYXNzXCIsIFwiXCIgKTtcblx0XHR9XG5cblx0XHRjbGFzc2VzID0gY2xhc3Nlc1RvQXJyYXkoIHZhbHVlICk7XG5cblx0XHRpZiAoIGNsYXNzZXMubGVuZ3RoICkge1xuXHRcdFx0d2hpbGUgKCAoIGVsZW0gPSB0aGlzWyBpKysgXSApICkge1xuXHRcdFx0XHRjdXJWYWx1ZSA9IGdldENsYXNzKCBlbGVtICk7XG5cblx0XHRcdFx0Ly8gVGhpcyBleHByZXNzaW9uIGlzIGhlcmUgZm9yIGJldHRlciBjb21wcmVzc2liaWxpdHkgKHNlZSBhZGRDbGFzcylcblx0XHRcdFx0Y3VyID0gZWxlbS5ub2RlVHlwZSA9PT0gMSAmJiAoIFwiIFwiICsgc3RyaXBBbmRDb2xsYXBzZSggY3VyVmFsdWUgKSArIFwiIFwiICk7XG5cblx0XHRcdFx0aWYgKCBjdXIgKSB7XG5cdFx0XHRcdFx0aiA9IDA7XG5cdFx0XHRcdFx0d2hpbGUgKCAoIGNsYXp6ID0gY2xhc3Nlc1sgaisrIF0gKSApIHtcblxuXHRcdFx0XHRcdFx0Ly8gUmVtb3ZlICphbGwqIGluc3RhbmNlc1xuXHRcdFx0XHRcdFx0d2hpbGUgKCBjdXIuaW5kZXhPZiggXCIgXCIgKyBjbGF6eiArIFwiIFwiICkgPiAtMSApIHtcblx0XHRcdFx0XHRcdFx0Y3VyID0gY3VyLnJlcGxhY2UoIFwiIFwiICsgY2xhenogKyBcIiBcIiwgXCIgXCIgKTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHQvLyBPbmx5IGFzc2lnbiBpZiBkaWZmZXJlbnQgdG8gYXZvaWQgdW5uZWVkZWQgcmVuZGVyaW5nLlxuXHRcdFx0XHRcdGZpbmFsVmFsdWUgPSBzdHJpcEFuZENvbGxhcHNlKCBjdXIgKTtcblx0XHRcdFx0XHRpZiAoIGN1clZhbHVlICE9PSBmaW5hbFZhbHVlICkge1xuXHRcdFx0XHRcdFx0ZWxlbS5zZXRBdHRyaWJ1dGUoIFwiY2xhc3NcIiwgZmluYWxWYWx1ZSApO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblxuXHRcdHJldHVybiB0aGlzO1xuXHR9LFxuXG5cdHRvZ2dsZUNsYXNzOiBmdW5jdGlvbiggdmFsdWUsIHN0YXRlVmFsICkge1xuXHRcdHZhciB0eXBlID0gdHlwZW9mIHZhbHVlLFxuXHRcdFx0aXNWYWxpZFZhbHVlID0gdHlwZSA9PT0gXCJzdHJpbmdcIiB8fCBBcnJheS5pc0FycmF5KCB2YWx1ZSApO1xuXG5cdFx0aWYgKCB0eXBlb2Ygc3RhdGVWYWwgPT09IFwiYm9vbGVhblwiICYmIGlzVmFsaWRWYWx1ZSApIHtcblx0XHRcdHJldHVybiBzdGF0ZVZhbCA/IHRoaXMuYWRkQ2xhc3MoIHZhbHVlICkgOiB0aGlzLnJlbW92ZUNsYXNzKCB2YWx1ZSApO1xuXHRcdH1cblxuXHRcdGlmICggaXNGdW5jdGlvbiggdmFsdWUgKSApIHtcblx0XHRcdHJldHVybiB0aGlzLmVhY2goIGZ1bmN0aW9uKCBpICkge1xuXHRcdFx0XHRqUXVlcnkoIHRoaXMgKS50b2dnbGVDbGFzcyhcblx0XHRcdFx0XHR2YWx1ZS5jYWxsKCB0aGlzLCBpLCBnZXRDbGFzcyggdGhpcyApLCBzdGF0ZVZhbCApLFxuXHRcdFx0XHRcdHN0YXRlVmFsXG5cdFx0XHRcdCk7XG5cdFx0XHR9ICk7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHRoaXMuZWFjaCggZnVuY3Rpb24oKSB7XG5cdFx0XHR2YXIgY2xhc3NOYW1lLCBpLCBzZWxmLCBjbGFzc05hbWVzO1xuXG5cdFx0XHRpZiAoIGlzVmFsaWRWYWx1ZSApIHtcblxuXHRcdFx0XHQvLyBUb2dnbGUgaW5kaXZpZHVhbCBjbGFzcyBuYW1lc1xuXHRcdFx0XHRpID0gMDtcblx0XHRcdFx0c2VsZiA9IGpRdWVyeSggdGhpcyApO1xuXHRcdFx0XHRjbGFzc05hbWVzID0gY2xhc3Nlc1RvQXJyYXkoIHZhbHVlICk7XG5cblx0XHRcdFx0d2hpbGUgKCAoIGNsYXNzTmFtZSA9IGNsYXNzTmFtZXNbIGkrKyBdICkgKSB7XG5cblx0XHRcdFx0XHQvLyBDaGVjayBlYWNoIGNsYXNzTmFtZSBnaXZlbiwgc3BhY2Ugc2VwYXJhdGVkIGxpc3Rcblx0XHRcdFx0XHRpZiAoIHNlbGYuaGFzQ2xhc3MoIGNsYXNzTmFtZSApICkge1xuXHRcdFx0XHRcdFx0c2VsZi5yZW1vdmVDbGFzcyggY2xhc3NOYW1lICk7XG5cdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdHNlbGYuYWRkQ2xhc3MoIGNsYXNzTmFtZSApO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXG5cdFx0XHQvLyBUb2dnbGUgd2hvbGUgY2xhc3MgbmFtZVxuXHRcdFx0fSBlbHNlIGlmICggdmFsdWUgPT09IHVuZGVmaW5lZCB8fCB0eXBlID09PSBcImJvb2xlYW5cIiApIHtcblx0XHRcdFx0Y2xhc3NOYW1lID0gZ2V0Q2xhc3MoIHRoaXMgKTtcblx0XHRcdFx0aWYgKCBjbGFzc05hbWUgKSB7XG5cblx0XHRcdFx0XHQvLyBTdG9yZSBjbGFzc05hbWUgaWYgc2V0XG5cdFx0XHRcdFx0ZGF0YVByaXYuc2V0KCB0aGlzLCBcIl9fY2xhc3NOYW1lX19cIiwgY2xhc3NOYW1lICk7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBJZiB0aGUgZWxlbWVudCBoYXMgYSBjbGFzcyBuYW1lIG9yIGlmIHdlJ3JlIHBhc3NlZCBgZmFsc2VgLFxuXHRcdFx0XHQvLyB0aGVuIHJlbW92ZSB0aGUgd2hvbGUgY2xhc3NuYW1lIChpZiB0aGVyZSB3YXMgb25lLCB0aGUgYWJvdmUgc2F2ZWQgaXQpLlxuXHRcdFx0XHQvLyBPdGhlcndpc2UgYnJpbmcgYmFjayB3aGF0ZXZlciB3YXMgcHJldmlvdXNseSBzYXZlZCAoaWYgYW55dGhpbmcpLFxuXHRcdFx0XHQvLyBmYWxsaW5nIGJhY2sgdG8gdGhlIGVtcHR5IHN0cmluZyBpZiBub3RoaW5nIHdhcyBzdG9yZWQuXG5cdFx0XHRcdGlmICggdGhpcy5zZXRBdHRyaWJ1dGUgKSB7XG5cdFx0XHRcdFx0dGhpcy5zZXRBdHRyaWJ1dGUoIFwiY2xhc3NcIixcblx0XHRcdFx0XHRcdGNsYXNzTmFtZSB8fCB2YWx1ZSA9PT0gZmFsc2UgP1xuXHRcdFx0XHRcdFx0XCJcIiA6XG5cdFx0XHRcdFx0XHRkYXRhUHJpdi5nZXQoIHRoaXMsIFwiX19jbGFzc05hbWVfX1wiICkgfHwgXCJcIlxuXHRcdFx0XHRcdCk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9ICk7XG5cdH0sXG5cblx0aGFzQ2xhc3M6IGZ1bmN0aW9uKCBzZWxlY3RvciApIHtcblx0XHR2YXIgY2xhc3NOYW1lLCBlbGVtLFxuXHRcdFx0aSA9IDA7XG5cblx0XHRjbGFzc05hbWUgPSBcIiBcIiArIHNlbGVjdG9yICsgXCIgXCI7XG5cdFx0d2hpbGUgKCAoIGVsZW0gPSB0aGlzWyBpKysgXSApICkge1xuXHRcdFx0aWYgKCBlbGVtLm5vZGVUeXBlID09PSAxICYmXG5cdFx0XHRcdCggXCIgXCIgKyBzdHJpcEFuZENvbGxhcHNlKCBnZXRDbGFzcyggZWxlbSApICkgKyBcIiBcIiApLmluZGV4T2YoIGNsYXNzTmFtZSApID4gLTEgKSB7XG5cdFx0XHRcdFx0cmV0dXJuIHRydWU7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0cmV0dXJuIGZhbHNlO1xuXHR9XG59ICk7XG5cblxuXG5cbnZhciBycmV0dXJuID0gL1xcci9nO1xuXG5qUXVlcnkuZm4uZXh0ZW5kKCB7XG5cdHZhbDogZnVuY3Rpb24oIHZhbHVlICkge1xuXHRcdHZhciBob29rcywgcmV0LCB2YWx1ZUlzRnVuY3Rpb24sXG5cdFx0XHRlbGVtID0gdGhpc1sgMCBdO1xuXG5cdFx0aWYgKCAhYXJndW1lbnRzLmxlbmd0aCApIHtcblx0XHRcdGlmICggZWxlbSApIHtcblx0XHRcdFx0aG9va3MgPSBqUXVlcnkudmFsSG9va3NbIGVsZW0udHlwZSBdIHx8XG5cdFx0XHRcdFx0alF1ZXJ5LnZhbEhvb2tzWyBlbGVtLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkgXTtcblxuXHRcdFx0XHRpZiAoIGhvb2tzICYmXG5cdFx0XHRcdFx0XCJnZXRcIiBpbiBob29rcyAmJlxuXHRcdFx0XHRcdCggcmV0ID0gaG9va3MuZ2V0KCBlbGVtLCBcInZhbHVlXCIgKSApICE9PSB1bmRlZmluZWRcblx0XHRcdFx0KSB7XG5cdFx0XHRcdFx0cmV0dXJuIHJldDtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdHJldCA9IGVsZW0udmFsdWU7XG5cblx0XHRcdFx0Ly8gSGFuZGxlIG1vc3QgY29tbW9uIHN0cmluZyBjYXNlc1xuXHRcdFx0XHRpZiAoIHR5cGVvZiByZXQgPT09IFwic3RyaW5nXCIgKSB7XG5cdFx0XHRcdFx0cmV0dXJuIHJldC5yZXBsYWNlKCBycmV0dXJuLCBcIlwiICk7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBIYW5kbGUgY2FzZXMgd2hlcmUgdmFsdWUgaXMgbnVsbC91bmRlZiBvciBudW1iZXJcblx0XHRcdFx0cmV0dXJuIHJldCA9PSBudWxsID8gXCJcIiA6IHJldDtcblx0XHRcdH1cblxuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdHZhbHVlSXNGdW5jdGlvbiA9IGlzRnVuY3Rpb24oIHZhbHVlICk7XG5cblx0XHRyZXR1cm4gdGhpcy5lYWNoKCBmdW5jdGlvbiggaSApIHtcblx0XHRcdHZhciB2YWw7XG5cblx0XHRcdGlmICggdGhpcy5ub2RlVHlwZSAhPT0gMSApIHtcblx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0fVxuXG5cdFx0XHRpZiAoIHZhbHVlSXNGdW5jdGlvbiApIHtcblx0XHRcdFx0dmFsID0gdmFsdWUuY2FsbCggdGhpcywgaSwgalF1ZXJ5KCB0aGlzICkudmFsKCkgKTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdHZhbCA9IHZhbHVlO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBUcmVhdCBudWxsL3VuZGVmaW5lZCBhcyBcIlwiOyBjb252ZXJ0IG51bWJlcnMgdG8gc3RyaW5nXG5cdFx0XHRpZiAoIHZhbCA9PSBudWxsICkge1xuXHRcdFx0XHR2YWwgPSBcIlwiO1xuXG5cdFx0XHR9IGVsc2UgaWYgKCB0eXBlb2YgdmFsID09PSBcIm51bWJlclwiICkge1xuXHRcdFx0XHR2YWwgKz0gXCJcIjtcblxuXHRcdFx0fSBlbHNlIGlmICggQXJyYXkuaXNBcnJheSggdmFsICkgKSB7XG5cdFx0XHRcdHZhbCA9IGpRdWVyeS5tYXAoIHZhbCwgZnVuY3Rpb24oIHZhbHVlICkge1xuXHRcdFx0XHRcdHJldHVybiB2YWx1ZSA9PSBudWxsID8gXCJcIiA6IHZhbHVlICsgXCJcIjtcblx0XHRcdFx0fSApO1xuXHRcdFx0fVxuXG5cdFx0XHRob29rcyA9IGpRdWVyeS52YWxIb29rc1sgdGhpcy50eXBlIF0gfHwgalF1ZXJ5LnZhbEhvb2tzWyB0aGlzLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkgXTtcblxuXHRcdFx0Ly8gSWYgc2V0IHJldHVybnMgdW5kZWZpbmVkLCBmYWxsIGJhY2sgdG8gbm9ybWFsIHNldHRpbmdcblx0XHRcdGlmICggIWhvb2tzIHx8ICEoIFwic2V0XCIgaW4gaG9va3MgKSB8fCBob29rcy5zZXQoIHRoaXMsIHZhbCwgXCJ2YWx1ZVwiICkgPT09IHVuZGVmaW5lZCApIHtcblx0XHRcdFx0dGhpcy52YWx1ZSA9IHZhbDtcblx0XHRcdH1cblx0XHR9ICk7XG5cdH1cbn0gKTtcblxualF1ZXJ5LmV4dGVuZCgge1xuXHR2YWxIb29rczoge1xuXHRcdG9wdGlvbjoge1xuXHRcdFx0Z2V0OiBmdW5jdGlvbiggZWxlbSApIHtcblxuXHRcdFx0XHR2YXIgdmFsID0galF1ZXJ5LmZpbmQuYXR0ciggZWxlbSwgXCJ2YWx1ZVwiICk7XG5cdFx0XHRcdHJldHVybiB2YWwgIT0gbnVsbCA/XG5cdFx0XHRcdFx0dmFsIDpcblxuXHRcdFx0XHRcdC8vIFN1cHBvcnQ6IElFIDw9MTAgLSAxMSBvbmx5XG5cdFx0XHRcdFx0Ly8gb3B0aW9uLnRleHQgdGhyb3dzIGV4Y2VwdGlvbnMgKCMxNDY4NiwgIzE0ODU4KVxuXHRcdFx0XHRcdC8vIFN0cmlwIGFuZCBjb2xsYXBzZSB3aGl0ZXNwYWNlXG5cdFx0XHRcdFx0Ly8gaHR0cHM6Ly9odG1sLnNwZWMud2hhdHdnLm9yZy8jc3RyaXAtYW5kLWNvbGxhcHNlLXdoaXRlc3BhY2Vcblx0XHRcdFx0XHRzdHJpcEFuZENvbGxhcHNlKCBqUXVlcnkudGV4dCggZWxlbSApICk7XG5cdFx0XHR9XG5cdFx0fSxcblx0XHRzZWxlY3Q6IHtcblx0XHRcdGdldDogZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRcdHZhciB2YWx1ZSwgb3B0aW9uLCBpLFxuXHRcdFx0XHRcdG9wdGlvbnMgPSBlbGVtLm9wdGlvbnMsXG5cdFx0XHRcdFx0aW5kZXggPSBlbGVtLnNlbGVjdGVkSW5kZXgsXG5cdFx0XHRcdFx0b25lID0gZWxlbS50eXBlID09PSBcInNlbGVjdC1vbmVcIixcblx0XHRcdFx0XHR2YWx1ZXMgPSBvbmUgPyBudWxsIDogW10sXG5cdFx0XHRcdFx0bWF4ID0gb25lID8gaW5kZXggKyAxIDogb3B0aW9ucy5sZW5ndGg7XG5cblx0XHRcdFx0aWYgKCBpbmRleCA8IDAgKSB7XG5cdFx0XHRcdFx0aSA9IG1heDtcblxuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdGkgPSBvbmUgPyBpbmRleCA6IDA7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBMb29wIHRocm91Z2ggYWxsIHRoZSBzZWxlY3RlZCBvcHRpb25zXG5cdFx0XHRcdGZvciAoIDsgaSA8IG1heDsgaSsrICkge1xuXHRcdFx0XHRcdG9wdGlvbiA9IG9wdGlvbnNbIGkgXTtcblxuXHRcdFx0XHRcdC8vIFN1cHBvcnQ6IElFIDw9OSBvbmx5XG5cdFx0XHRcdFx0Ly8gSUU4LTkgZG9lc24ndCB1cGRhdGUgc2VsZWN0ZWQgYWZ0ZXIgZm9ybSByZXNldCAoIzI1NTEpXG5cdFx0XHRcdFx0aWYgKCAoIG9wdGlvbi5zZWxlY3RlZCB8fCBpID09PSBpbmRleCApICYmXG5cblx0XHRcdFx0XHRcdFx0Ly8gRG9uJ3QgcmV0dXJuIG9wdGlvbnMgdGhhdCBhcmUgZGlzYWJsZWQgb3IgaW4gYSBkaXNhYmxlZCBvcHRncm91cFxuXHRcdFx0XHRcdFx0XHQhb3B0aW9uLmRpc2FibGVkICYmXG5cdFx0XHRcdFx0XHRcdCggIW9wdGlvbi5wYXJlbnROb2RlLmRpc2FibGVkIHx8XG5cdFx0XHRcdFx0XHRcdFx0IW5vZGVOYW1lKCBvcHRpb24ucGFyZW50Tm9kZSwgXCJvcHRncm91cFwiICkgKSApIHtcblxuXHRcdFx0XHRcdFx0Ly8gR2V0IHRoZSBzcGVjaWZpYyB2YWx1ZSBmb3IgdGhlIG9wdGlvblxuXHRcdFx0XHRcdFx0dmFsdWUgPSBqUXVlcnkoIG9wdGlvbiApLnZhbCgpO1xuXG5cdFx0XHRcdFx0XHQvLyBXZSBkb24ndCBuZWVkIGFuIGFycmF5IGZvciBvbmUgc2VsZWN0c1xuXHRcdFx0XHRcdFx0aWYgKCBvbmUgKSB7XG5cdFx0XHRcdFx0XHRcdHJldHVybiB2YWx1ZTtcblx0XHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdFx0Ly8gTXVsdGktU2VsZWN0cyByZXR1cm4gYW4gYXJyYXlcblx0XHRcdFx0XHRcdHZhbHVlcy5wdXNoKCB2YWx1ZSApO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXG5cdFx0XHRcdHJldHVybiB2YWx1ZXM7XG5cdFx0XHR9LFxuXG5cdFx0XHRzZXQ6IGZ1bmN0aW9uKCBlbGVtLCB2YWx1ZSApIHtcblx0XHRcdFx0dmFyIG9wdGlvblNldCwgb3B0aW9uLFxuXHRcdFx0XHRcdG9wdGlvbnMgPSBlbGVtLm9wdGlvbnMsXG5cdFx0XHRcdFx0dmFsdWVzID0galF1ZXJ5Lm1ha2VBcnJheSggdmFsdWUgKSxcblx0XHRcdFx0XHRpID0gb3B0aW9ucy5sZW5ndGg7XG5cblx0XHRcdFx0d2hpbGUgKCBpLS0gKSB7XG5cdFx0XHRcdFx0b3B0aW9uID0gb3B0aW9uc1sgaSBdO1xuXG5cdFx0XHRcdFx0LyogZXNsaW50LWRpc2FibGUgbm8tY29uZC1hc3NpZ24gKi9cblxuXHRcdFx0XHRcdGlmICggb3B0aW9uLnNlbGVjdGVkID1cblx0XHRcdFx0XHRcdGpRdWVyeS5pbkFycmF5KCBqUXVlcnkudmFsSG9va3Mub3B0aW9uLmdldCggb3B0aW9uICksIHZhbHVlcyApID4gLTFcblx0XHRcdFx0XHQpIHtcblx0XHRcdFx0XHRcdG9wdGlvblNldCA9IHRydWU7XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0LyogZXNsaW50LWVuYWJsZSBuby1jb25kLWFzc2lnbiAqL1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gRm9yY2UgYnJvd3NlcnMgdG8gYmVoYXZlIGNvbnNpc3RlbnRseSB3aGVuIG5vbi1tYXRjaGluZyB2YWx1ZSBpcyBzZXRcblx0XHRcdFx0aWYgKCAhb3B0aW9uU2V0ICkge1xuXHRcdFx0XHRcdGVsZW0uc2VsZWN0ZWRJbmRleCA9IC0xO1xuXHRcdFx0XHR9XG5cdFx0XHRcdHJldHVybiB2YWx1ZXM7XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG59ICk7XG5cbi8vIFJhZGlvcyBhbmQgY2hlY2tib3hlcyBnZXR0ZXIvc2V0dGVyXG5qUXVlcnkuZWFjaCggWyBcInJhZGlvXCIsIFwiY2hlY2tib3hcIiBdLCBmdW5jdGlvbigpIHtcblx0alF1ZXJ5LnZhbEhvb2tzWyB0aGlzIF0gPSB7XG5cdFx0c2V0OiBmdW5jdGlvbiggZWxlbSwgdmFsdWUgKSB7XG5cdFx0XHRpZiAoIEFycmF5LmlzQXJyYXkoIHZhbHVlICkgKSB7XG5cdFx0XHRcdHJldHVybiAoIGVsZW0uY2hlY2tlZCA9IGpRdWVyeS5pbkFycmF5KCBqUXVlcnkoIGVsZW0gKS52YWwoKSwgdmFsdWUgKSA+IC0xICk7XG5cdFx0XHR9XG5cdFx0fVxuXHR9O1xuXHRpZiAoICFzdXBwb3J0LmNoZWNrT24gKSB7XG5cdFx0alF1ZXJ5LnZhbEhvb2tzWyB0aGlzIF0uZ2V0ID0gZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRyZXR1cm4gZWxlbS5nZXRBdHRyaWJ1dGUoIFwidmFsdWVcIiApID09PSBudWxsID8gXCJvblwiIDogZWxlbS52YWx1ZTtcblx0XHR9O1xuXHR9XG59ICk7XG5cblxuXG5cbi8vIFJldHVybiBqUXVlcnkgZm9yIGF0dHJpYnV0ZXMtb25seSBpbmNsdXNpb25cblxuXG5zdXBwb3J0LmZvY3VzaW4gPSBcIm9uZm9jdXNpblwiIGluIHdpbmRvdztcblxuXG52YXIgcmZvY3VzTW9ycGggPSAvXig/OmZvY3VzaW5mb2N1c3xmb2N1c291dGJsdXIpJC8sXG5cdHN0b3BQcm9wYWdhdGlvbkNhbGxiYWNrID0gZnVuY3Rpb24oIGUgKSB7XG5cdFx0ZS5zdG9wUHJvcGFnYXRpb24oKTtcblx0fTtcblxualF1ZXJ5LmV4dGVuZCggalF1ZXJ5LmV2ZW50LCB7XG5cblx0dHJpZ2dlcjogZnVuY3Rpb24oIGV2ZW50LCBkYXRhLCBlbGVtLCBvbmx5SGFuZGxlcnMgKSB7XG5cblx0XHR2YXIgaSwgY3VyLCB0bXAsIGJ1YmJsZVR5cGUsIG9udHlwZSwgaGFuZGxlLCBzcGVjaWFsLCBsYXN0RWxlbWVudCxcblx0XHRcdGV2ZW50UGF0aCA9IFsgZWxlbSB8fCBkb2N1bWVudCBdLFxuXHRcdFx0dHlwZSA9IGhhc093bi5jYWxsKCBldmVudCwgXCJ0eXBlXCIgKSA/IGV2ZW50LnR5cGUgOiBldmVudCxcblx0XHRcdG5hbWVzcGFjZXMgPSBoYXNPd24uY2FsbCggZXZlbnQsIFwibmFtZXNwYWNlXCIgKSA/IGV2ZW50Lm5hbWVzcGFjZS5zcGxpdCggXCIuXCIgKSA6IFtdO1xuXG5cdFx0Y3VyID0gbGFzdEVsZW1lbnQgPSB0bXAgPSBlbGVtID0gZWxlbSB8fCBkb2N1bWVudDtcblxuXHRcdC8vIERvbid0IGRvIGV2ZW50cyBvbiB0ZXh0IGFuZCBjb21tZW50IG5vZGVzXG5cdFx0aWYgKCBlbGVtLm5vZGVUeXBlID09PSAzIHx8IGVsZW0ubm9kZVR5cGUgPT09IDggKSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0Ly8gZm9jdXMvYmx1ciBtb3JwaHMgdG8gZm9jdXNpbi9vdXQ7IGVuc3VyZSB3ZSdyZSBub3QgZmlyaW5nIHRoZW0gcmlnaHQgbm93XG5cdFx0aWYgKCByZm9jdXNNb3JwaC50ZXN0KCB0eXBlICsgalF1ZXJ5LmV2ZW50LnRyaWdnZXJlZCApICkge1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdGlmICggdHlwZS5pbmRleE9mKCBcIi5cIiApID4gLTEgKSB7XG5cblx0XHRcdC8vIE5hbWVzcGFjZWQgdHJpZ2dlcjsgY3JlYXRlIGEgcmVnZXhwIHRvIG1hdGNoIGV2ZW50IHR5cGUgaW4gaGFuZGxlKClcblx0XHRcdG5hbWVzcGFjZXMgPSB0eXBlLnNwbGl0KCBcIi5cIiApO1xuXHRcdFx0dHlwZSA9IG5hbWVzcGFjZXMuc2hpZnQoKTtcblx0XHRcdG5hbWVzcGFjZXMuc29ydCgpO1xuXHRcdH1cblx0XHRvbnR5cGUgPSB0eXBlLmluZGV4T2YoIFwiOlwiICkgPCAwICYmIFwib25cIiArIHR5cGU7XG5cblx0XHQvLyBDYWxsZXIgY2FuIHBhc3MgaW4gYSBqUXVlcnkuRXZlbnQgb2JqZWN0LCBPYmplY3QsIG9yIGp1c3QgYW4gZXZlbnQgdHlwZSBzdHJpbmdcblx0XHRldmVudCA9IGV2ZW50WyBqUXVlcnkuZXhwYW5kbyBdID9cblx0XHRcdGV2ZW50IDpcblx0XHRcdG5ldyBqUXVlcnkuRXZlbnQoIHR5cGUsIHR5cGVvZiBldmVudCA9PT0gXCJvYmplY3RcIiAmJiBldmVudCApO1xuXG5cdFx0Ly8gVHJpZ2dlciBiaXRtYXNrOiAmIDEgZm9yIG5hdGl2ZSBoYW5kbGVyczsgJiAyIGZvciBqUXVlcnkgKGFsd2F5cyB0cnVlKVxuXHRcdGV2ZW50LmlzVHJpZ2dlciA9IG9ubHlIYW5kbGVycyA/IDIgOiAzO1xuXHRcdGV2ZW50Lm5hbWVzcGFjZSA9IG5hbWVzcGFjZXMuam9pbiggXCIuXCIgKTtcblx0XHRldmVudC5ybmFtZXNwYWNlID0gZXZlbnQubmFtZXNwYWNlID9cblx0XHRcdG5ldyBSZWdFeHAoIFwiKF58XFxcXC4pXCIgKyBuYW1lc3BhY2VzLmpvaW4oIFwiXFxcXC4oPzouKlxcXFwufClcIiApICsgXCIoXFxcXC58JClcIiApIDpcblx0XHRcdG51bGw7XG5cblx0XHQvLyBDbGVhbiB1cCB0aGUgZXZlbnQgaW4gY2FzZSBpdCBpcyBiZWluZyByZXVzZWRcblx0XHRldmVudC5yZXN1bHQgPSB1bmRlZmluZWQ7XG5cdFx0aWYgKCAhZXZlbnQudGFyZ2V0ICkge1xuXHRcdFx0ZXZlbnQudGFyZ2V0ID0gZWxlbTtcblx0XHR9XG5cblx0XHQvLyBDbG9uZSBhbnkgaW5jb21pbmcgZGF0YSBhbmQgcHJlcGVuZCB0aGUgZXZlbnQsIGNyZWF0aW5nIHRoZSBoYW5kbGVyIGFyZyBsaXN0XG5cdFx0ZGF0YSA9IGRhdGEgPT0gbnVsbCA/XG5cdFx0XHRbIGV2ZW50IF0gOlxuXHRcdFx0alF1ZXJ5Lm1ha2VBcnJheSggZGF0YSwgWyBldmVudCBdICk7XG5cblx0XHQvLyBBbGxvdyBzcGVjaWFsIGV2ZW50cyB0byBkcmF3IG91dHNpZGUgdGhlIGxpbmVzXG5cdFx0c3BlY2lhbCA9IGpRdWVyeS5ldmVudC5zcGVjaWFsWyB0eXBlIF0gfHwge307XG5cdFx0aWYgKCAhb25seUhhbmRsZXJzICYmIHNwZWNpYWwudHJpZ2dlciAmJiBzcGVjaWFsLnRyaWdnZXIuYXBwbHkoIGVsZW0sIGRhdGEgKSA9PT0gZmFsc2UgKSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0Ly8gRGV0ZXJtaW5lIGV2ZW50IHByb3BhZ2F0aW9uIHBhdGggaW4gYWR2YW5jZSwgcGVyIFczQyBldmVudHMgc3BlYyAoIzk5NTEpXG5cdFx0Ly8gQnViYmxlIHVwIHRvIGRvY3VtZW50LCB0aGVuIHRvIHdpbmRvdzsgd2F0Y2ggZm9yIGEgZ2xvYmFsIG93bmVyRG9jdW1lbnQgdmFyICgjOTcyNClcblx0XHRpZiAoICFvbmx5SGFuZGxlcnMgJiYgIXNwZWNpYWwubm9CdWJibGUgJiYgIWlzV2luZG93KCBlbGVtICkgKSB7XG5cblx0XHRcdGJ1YmJsZVR5cGUgPSBzcGVjaWFsLmRlbGVnYXRlVHlwZSB8fCB0eXBlO1xuXHRcdFx0aWYgKCAhcmZvY3VzTW9ycGgudGVzdCggYnViYmxlVHlwZSArIHR5cGUgKSApIHtcblx0XHRcdFx0Y3VyID0gY3VyLnBhcmVudE5vZGU7XG5cdFx0XHR9XG5cdFx0XHRmb3IgKCA7IGN1cjsgY3VyID0gY3VyLnBhcmVudE5vZGUgKSB7XG5cdFx0XHRcdGV2ZW50UGF0aC5wdXNoKCBjdXIgKTtcblx0XHRcdFx0dG1wID0gY3VyO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBPbmx5IGFkZCB3aW5kb3cgaWYgd2UgZ290IHRvIGRvY3VtZW50IChlLmcuLCBub3QgcGxhaW4gb2JqIG9yIGRldGFjaGVkIERPTSlcblx0XHRcdGlmICggdG1wID09PSAoIGVsZW0ub3duZXJEb2N1bWVudCB8fCBkb2N1bWVudCApICkge1xuXHRcdFx0XHRldmVudFBhdGgucHVzaCggdG1wLmRlZmF1bHRWaWV3IHx8IHRtcC5wYXJlbnRXaW5kb3cgfHwgd2luZG93ICk7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0Ly8gRmlyZSBoYW5kbGVycyBvbiB0aGUgZXZlbnQgcGF0aFxuXHRcdGkgPSAwO1xuXHRcdHdoaWxlICggKCBjdXIgPSBldmVudFBhdGhbIGkrKyBdICkgJiYgIWV2ZW50LmlzUHJvcGFnYXRpb25TdG9wcGVkKCkgKSB7XG5cdFx0XHRsYXN0RWxlbWVudCA9IGN1cjtcblx0XHRcdGV2ZW50LnR5cGUgPSBpID4gMSA/XG5cdFx0XHRcdGJ1YmJsZVR5cGUgOlxuXHRcdFx0XHRzcGVjaWFsLmJpbmRUeXBlIHx8IHR5cGU7XG5cblx0XHRcdC8vIGpRdWVyeSBoYW5kbGVyXG5cdFx0XHRoYW5kbGUgPSAoXG5cdFx0XHRcdFx0ZGF0YVByaXYuZ2V0KCBjdXIsIFwiZXZlbnRzXCIgKSB8fCBPYmplY3QuY3JlYXRlKCBudWxsIClcblx0XHRcdFx0KVsgZXZlbnQudHlwZSBdICYmXG5cdFx0XHRcdGRhdGFQcml2LmdldCggY3VyLCBcImhhbmRsZVwiICk7XG5cdFx0XHRpZiAoIGhhbmRsZSApIHtcblx0XHRcdFx0aGFuZGxlLmFwcGx5KCBjdXIsIGRhdGEgKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gTmF0aXZlIGhhbmRsZXJcblx0XHRcdGhhbmRsZSA9IG9udHlwZSAmJiBjdXJbIG9udHlwZSBdO1xuXHRcdFx0aWYgKCBoYW5kbGUgJiYgaGFuZGxlLmFwcGx5ICYmIGFjY2VwdERhdGEoIGN1ciApICkge1xuXHRcdFx0XHRldmVudC5yZXN1bHQgPSBoYW5kbGUuYXBwbHkoIGN1ciwgZGF0YSApO1xuXHRcdFx0XHRpZiAoIGV2ZW50LnJlc3VsdCA9PT0gZmFsc2UgKSB7XG5cdFx0XHRcdFx0ZXZlbnQucHJldmVudERlZmF1bHQoKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0XHRldmVudC50eXBlID0gdHlwZTtcblxuXHRcdC8vIElmIG5vYm9keSBwcmV2ZW50ZWQgdGhlIGRlZmF1bHQgYWN0aW9uLCBkbyBpdCBub3dcblx0XHRpZiAoICFvbmx5SGFuZGxlcnMgJiYgIWV2ZW50LmlzRGVmYXVsdFByZXZlbnRlZCgpICkge1xuXG5cdFx0XHRpZiAoICggIXNwZWNpYWwuX2RlZmF1bHQgfHxcblx0XHRcdFx0c3BlY2lhbC5fZGVmYXVsdC5hcHBseSggZXZlbnRQYXRoLnBvcCgpLCBkYXRhICkgPT09IGZhbHNlICkgJiZcblx0XHRcdFx0YWNjZXB0RGF0YSggZWxlbSApICkge1xuXG5cdFx0XHRcdC8vIENhbGwgYSBuYXRpdmUgRE9NIG1ldGhvZCBvbiB0aGUgdGFyZ2V0IHdpdGggdGhlIHNhbWUgbmFtZSBhcyB0aGUgZXZlbnQuXG5cdFx0XHRcdC8vIERvbid0IGRvIGRlZmF1bHQgYWN0aW9ucyBvbiB3aW5kb3csIHRoYXQncyB3aGVyZSBnbG9iYWwgdmFyaWFibGVzIGJlICgjNjE3MClcblx0XHRcdFx0aWYgKCBvbnR5cGUgJiYgaXNGdW5jdGlvbiggZWxlbVsgdHlwZSBdICkgJiYgIWlzV2luZG93KCBlbGVtICkgKSB7XG5cblx0XHRcdFx0XHQvLyBEb24ndCByZS10cmlnZ2VyIGFuIG9uRk9PIGV2ZW50IHdoZW4gd2UgY2FsbCBpdHMgRk9PKCkgbWV0aG9kXG5cdFx0XHRcdFx0dG1wID0gZWxlbVsgb250eXBlIF07XG5cblx0XHRcdFx0XHRpZiAoIHRtcCApIHtcblx0XHRcdFx0XHRcdGVsZW1bIG9udHlwZSBdID0gbnVsbDtcblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHQvLyBQcmV2ZW50IHJlLXRyaWdnZXJpbmcgb2YgdGhlIHNhbWUgZXZlbnQsIHNpbmNlIHdlIGFscmVhZHkgYnViYmxlZCBpdCBhYm92ZVxuXHRcdFx0XHRcdGpRdWVyeS5ldmVudC50cmlnZ2VyZWQgPSB0eXBlO1xuXG5cdFx0XHRcdFx0aWYgKCBldmVudC5pc1Byb3BhZ2F0aW9uU3RvcHBlZCgpICkge1xuXHRcdFx0XHRcdFx0bGFzdEVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lciggdHlwZSwgc3RvcFByb3BhZ2F0aW9uQ2FsbGJhY2sgKTtcblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRlbGVtWyB0eXBlIF0oKTtcblxuXHRcdFx0XHRcdGlmICggZXZlbnQuaXNQcm9wYWdhdGlvblN0b3BwZWQoKSApIHtcblx0XHRcdFx0XHRcdGxhc3RFbGVtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoIHR5cGUsIHN0b3BQcm9wYWdhdGlvbkNhbGxiYWNrICk7XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0alF1ZXJ5LmV2ZW50LnRyaWdnZXJlZCA9IHVuZGVmaW5lZDtcblxuXHRcdFx0XHRcdGlmICggdG1wICkge1xuXHRcdFx0XHRcdFx0ZWxlbVsgb250eXBlIF0gPSB0bXA7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0cmV0dXJuIGV2ZW50LnJlc3VsdDtcblx0fSxcblxuXHQvLyBQaWdneWJhY2sgb24gYSBkb25vciBldmVudCB0byBzaW11bGF0ZSBhIGRpZmZlcmVudCBvbmVcblx0Ly8gVXNlZCBvbmx5IGZvciBgZm9jdXMoaW4gfCBvdXQpYCBldmVudHNcblx0c2ltdWxhdGU6IGZ1bmN0aW9uKCB0eXBlLCBlbGVtLCBldmVudCApIHtcblx0XHR2YXIgZSA9IGpRdWVyeS5leHRlbmQoXG5cdFx0XHRuZXcgalF1ZXJ5LkV2ZW50KCksXG5cdFx0XHRldmVudCxcblx0XHRcdHtcblx0XHRcdFx0dHlwZTogdHlwZSxcblx0XHRcdFx0aXNTaW11bGF0ZWQ6IHRydWVcblx0XHRcdH1cblx0XHQpO1xuXG5cdFx0alF1ZXJ5LmV2ZW50LnRyaWdnZXIoIGUsIG51bGwsIGVsZW0gKTtcblx0fVxuXG59ICk7XG5cbmpRdWVyeS5mbi5leHRlbmQoIHtcblxuXHR0cmlnZ2VyOiBmdW5jdGlvbiggdHlwZSwgZGF0YSApIHtcblx0XHRyZXR1cm4gdGhpcy5lYWNoKCBmdW5jdGlvbigpIHtcblx0XHRcdGpRdWVyeS5ldmVudC50cmlnZ2VyKCB0eXBlLCBkYXRhLCB0aGlzICk7XG5cdFx0fSApO1xuXHR9LFxuXHR0cmlnZ2VySGFuZGxlcjogZnVuY3Rpb24oIHR5cGUsIGRhdGEgKSB7XG5cdFx0dmFyIGVsZW0gPSB0aGlzWyAwIF07XG5cdFx0aWYgKCBlbGVtICkge1xuXHRcdFx0cmV0dXJuIGpRdWVyeS5ldmVudC50cmlnZ2VyKCB0eXBlLCBkYXRhLCBlbGVtLCB0cnVlICk7XG5cdFx0fVxuXHR9XG59ICk7XG5cblxuLy8gU3VwcG9ydDogRmlyZWZveCA8PTQ0XG4vLyBGaXJlZm94IGRvZXNuJ3QgaGF2ZSBmb2N1cyhpbiB8IG91dCkgZXZlbnRzXG4vLyBSZWxhdGVkIHRpY2tldCAtIGh0dHBzOi8vYnVnemlsbGEubW96aWxsYS5vcmcvc2hvd19idWcuY2dpP2lkPTY4Nzc4N1xuLy9cbi8vIFN1cHBvcnQ6IENocm9tZSA8PTQ4IC0gNDksIFNhZmFyaSA8PTkuMCAtIDkuMVxuLy8gZm9jdXMoaW4gfCBvdXQpIGV2ZW50cyBmaXJlIGFmdGVyIGZvY3VzICYgYmx1ciBldmVudHMsXG4vLyB3aGljaCBpcyBzcGVjIHZpb2xhdGlvbiAtIGh0dHA6Ly93d3cudzMub3JnL1RSL0RPTS1MZXZlbC0zLUV2ZW50cy8jZXZlbnRzLWZvY3VzZXZlbnQtZXZlbnQtb3JkZXJcbi8vIFJlbGF0ZWQgdGlja2V0IC0gaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL2Nocm9taXVtL2lzc3Vlcy9kZXRhaWw/aWQ9NDQ5ODU3XG5pZiAoICFzdXBwb3J0LmZvY3VzaW4gKSB7XG5cdGpRdWVyeS5lYWNoKCB7IGZvY3VzOiBcImZvY3VzaW5cIiwgYmx1cjogXCJmb2N1c291dFwiIH0sIGZ1bmN0aW9uKCBvcmlnLCBmaXggKSB7XG5cblx0XHQvLyBBdHRhY2ggYSBzaW5nbGUgY2FwdHVyaW5nIGhhbmRsZXIgb24gdGhlIGRvY3VtZW50IHdoaWxlIHNvbWVvbmUgd2FudHMgZm9jdXNpbi9mb2N1c291dFxuXHRcdHZhciBoYW5kbGVyID0gZnVuY3Rpb24oIGV2ZW50ICkge1xuXHRcdFx0alF1ZXJ5LmV2ZW50LnNpbXVsYXRlKCBmaXgsIGV2ZW50LnRhcmdldCwgalF1ZXJ5LmV2ZW50LmZpeCggZXZlbnQgKSApO1xuXHRcdH07XG5cblx0XHRqUXVlcnkuZXZlbnQuc3BlY2lhbFsgZml4IF0gPSB7XG5cdFx0XHRzZXR1cDogZnVuY3Rpb24oKSB7XG5cblx0XHRcdFx0Ly8gSGFuZGxlOiByZWd1bGFyIG5vZGVzICh2aWEgYHRoaXMub3duZXJEb2N1bWVudGApLCB3aW5kb3dcblx0XHRcdFx0Ly8gKHZpYSBgdGhpcy5kb2N1bWVudGApICYgZG9jdW1lbnQgKHZpYSBgdGhpc2ApLlxuXHRcdFx0XHR2YXIgZG9jID0gdGhpcy5vd25lckRvY3VtZW50IHx8IHRoaXMuZG9jdW1lbnQgfHwgdGhpcyxcblx0XHRcdFx0XHRhdHRhY2hlcyA9IGRhdGFQcml2LmFjY2VzcyggZG9jLCBmaXggKTtcblxuXHRcdFx0XHRpZiAoICFhdHRhY2hlcyApIHtcblx0XHRcdFx0XHRkb2MuYWRkRXZlbnRMaXN0ZW5lciggb3JpZywgaGFuZGxlciwgdHJ1ZSApO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGRhdGFQcml2LmFjY2VzcyggZG9jLCBmaXgsICggYXR0YWNoZXMgfHwgMCApICsgMSApO1xuXHRcdFx0fSxcblx0XHRcdHRlYXJkb3duOiBmdW5jdGlvbigpIHtcblx0XHRcdFx0dmFyIGRvYyA9IHRoaXMub3duZXJEb2N1bWVudCB8fCB0aGlzLmRvY3VtZW50IHx8IHRoaXMsXG5cdFx0XHRcdFx0YXR0YWNoZXMgPSBkYXRhUHJpdi5hY2Nlc3MoIGRvYywgZml4ICkgLSAxO1xuXG5cdFx0XHRcdGlmICggIWF0dGFjaGVzICkge1xuXHRcdFx0XHRcdGRvYy5yZW1vdmVFdmVudExpc3RlbmVyKCBvcmlnLCBoYW5kbGVyLCB0cnVlICk7XG5cdFx0XHRcdFx0ZGF0YVByaXYucmVtb3ZlKCBkb2MsIGZpeCApO1xuXG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0ZGF0YVByaXYuYWNjZXNzKCBkb2MsIGZpeCwgYXR0YWNoZXMgKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH07XG5cdH0gKTtcbn1cbnZhciBsb2NhdGlvbiA9IHdpbmRvdy5sb2NhdGlvbjtcblxudmFyIG5vbmNlID0geyBndWlkOiBEYXRlLm5vdygpIH07XG5cbnZhciBycXVlcnkgPSAoIC9cXD8vICk7XG5cblxuXG4vLyBDcm9zcy1icm93c2VyIHhtbCBwYXJzaW5nXG5qUXVlcnkucGFyc2VYTUwgPSBmdW5jdGlvbiggZGF0YSApIHtcblx0dmFyIHhtbDtcblx0aWYgKCAhZGF0YSB8fCB0eXBlb2YgZGF0YSAhPT0gXCJzdHJpbmdcIiApIHtcblx0XHRyZXR1cm4gbnVsbDtcblx0fVxuXG5cdC8vIFN1cHBvcnQ6IElFIDkgLSAxMSBvbmx5XG5cdC8vIElFIHRocm93cyBvbiBwYXJzZUZyb21TdHJpbmcgd2l0aCBpbnZhbGlkIGlucHV0LlxuXHR0cnkge1xuXHRcdHhtbCA9ICggbmV3IHdpbmRvdy5ET01QYXJzZXIoKSApLnBhcnNlRnJvbVN0cmluZyggZGF0YSwgXCJ0ZXh0L3htbFwiICk7XG5cdH0gY2F0Y2ggKCBlICkge1xuXHRcdHhtbCA9IHVuZGVmaW5lZDtcblx0fVxuXG5cdGlmICggIXhtbCB8fCB4bWwuZ2V0RWxlbWVudHNCeVRhZ05hbWUoIFwicGFyc2VyZXJyb3JcIiApLmxlbmd0aCApIHtcblx0XHRqUXVlcnkuZXJyb3IoIFwiSW52YWxpZCBYTUw6IFwiICsgZGF0YSApO1xuXHR9XG5cdHJldHVybiB4bWw7XG59O1xuXG5cbnZhclxuXHRyYnJhY2tldCA9IC9cXFtcXF0kLyxcblx0ckNSTEYgPSAvXFxyP1xcbi9nLFxuXHRyc3VibWl0dGVyVHlwZXMgPSAvXig/OnN1Ym1pdHxidXR0b258aW1hZ2V8cmVzZXR8ZmlsZSkkL2ksXG5cdHJzdWJtaXR0YWJsZSA9IC9eKD86aW5wdXR8c2VsZWN0fHRleHRhcmVhfGtleWdlbikvaTtcblxuZnVuY3Rpb24gYnVpbGRQYXJhbXMoIHByZWZpeCwgb2JqLCB0cmFkaXRpb25hbCwgYWRkICkge1xuXHR2YXIgbmFtZTtcblxuXHRpZiAoIEFycmF5LmlzQXJyYXkoIG9iaiApICkge1xuXG5cdFx0Ly8gU2VyaWFsaXplIGFycmF5IGl0ZW0uXG5cdFx0alF1ZXJ5LmVhY2goIG9iaiwgZnVuY3Rpb24oIGksIHYgKSB7XG5cdFx0XHRpZiAoIHRyYWRpdGlvbmFsIHx8IHJicmFja2V0LnRlc3QoIHByZWZpeCApICkge1xuXG5cdFx0XHRcdC8vIFRyZWF0IGVhY2ggYXJyYXkgaXRlbSBhcyBhIHNjYWxhci5cblx0XHRcdFx0YWRkKCBwcmVmaXgsIHYgKTtcblxuXHRcdFx0fSBlbHNlIHtcblxuXHRcdFx0XHQvLyBJdGVtIGlzIG5vbi1zY2FsYXIgKGFycmF5IG9yIG9iamVjdCksIGVuY29kZSBpdHMgbnVtZXJpYyBpbmRleC5cblx0XHRcdFx0YnVpbGRQYXJhbXMoXG5cdFx0XHRcdFx0cHJlZml4ICsgXCJbXCIgKyAoIHR5cGVvZiB2ID09PSBcIm9iamVjdFwiICYmIHYgIT0gbnVsbCA/IGkgOiBcIlwiICkgKyBcIl1cIixcblx0XHRcdFx0XHR2LFxuXHRcdFx0XHRcdHRyYWRpdGlvbmFsLFxuXHRcdFx0XHRcdGFkZFxuXHRcdFx0XHQpO1xuXHRcdFx0fVxuXHRcdH0gKTtcblxuXHR9IGVsc2UgaWYgKCAhdHJhZGl0aW9uYWwgJiYgdG9UeXBlKCBvYmogKSA9PT0gXCJvYmplY3RcIiApIHtcblxuXHRcdC8vIFNlcmlhbGl6ZSBvYmplY3QgaXRlbS5cblx0XHRmb3IgKCBuYW1lIGluIG9iaiApIHtcblx0XHRcdGJ1aWxkUGFyYW1zKCBwcmVmaXggKyBcIltcIiArIG5hbWUgKyBcIl1cIiwgb2JqWyBuYW1lIF0sIHRyYWRpdGlvbmFsLCBhZGQgKTtcblx0XHR9XG5cblx0fSBlbHNlIHtcblxuXHRcdC8vIFNlcmlhbGl6ZSBzY2FsYXIgaXRlbS5cblx0XHRhZGQoIHByZWZpeCwgb2JqICk7XG5cdH1cbn1cblxuLy8gU2VyaWFsaXplIGFuIGFycmF5IG9mIGZvcm0gZWxlbWVudHMgb3IgYSBzZXQgb2Zcbi8vIGtleS92YWx1ZXMgaW50byBhIHF1ZXJ5IHN0cmluZ1xualF1ZXJ5LnBhcmFtID0gZnVuY3Rpb24oIGEsIHRyYWRpdGlvbmFsICkge1xuXHR2YXIgcHJlZml4LFxuXHRcdHMgPSBbXSxcblx0XHRhZGQgPSBmdW5jdGlvbigga2V5LCB2YWx1ZU9yRnVuY3Rpb24gKSB7XG5cblx0XHRcdC8vIElmIHZhbHVlIGlzIGEgZnVuY3Rpb24sIGludm9rZSBpdCBhbmQgdXNlIGl0cyByZXR1cm4gdmFsdWVcblx0XHRcdHZhciB2YWx1ZSA9IGlzRnVuY3Rpb24oIHZhbHVlT3JGdW5jdGlvbiApID9cblx0XHRcdFx0dmFsdWVPckZ1bmN0aW9uKCkgOlxuXHRcdFx0XHR2YWx1ZU9yRnVuY3Rpb247XG5cblx0XHRcdHNbIHMubGVuZ3RoIF0gPSBlbmNvZGVVUklDb21wb25lbnQoIGtleSApICsgXCI9XCIgK1xuXHRcdFx0XHRlbmNvZGVVUklDb21wb25lbnQoIHZhbHVlID09IG51bGwgPyBcIlwiIDogdmFsdWUgKTtcblx0XHR9O1xuXG5cdGlmICggYSA9PSBudWxsICkge1xuXHRcdHJldHVybiBcIlwiO1xuXHR9XG5cblx0Ly8gSWYgYW4gYXJyYXkgd2FzIHBhc3NlZCBpbiwgYXNzdW1lIHRoYXQgaXQgaXMgYW4gYXJyYXkgb2YgZm9ybSBlbGVtZW50cy5cblx0aWYgKCBBcnJheS5pc0FycmF5KCBhICkgfHwgKCBhLmpxdWVyeSAmJiAhalF1ZXJ5LmlzUGxhaW5PYmplY3QoIGEgKSApICkge1xuXG5cdFx0Ly8gU2VyaWFsaXplIHRoZSBmb3JtIGVsZW1lbnRzXG5cdFx0alF1ZXJ5LmVhY2goIGEsIGZ1bmN0aW9uKCkge1xuXHRcdFx0YWRkKCB0aGlzLm5hbWUsIHRoaXMudmFsdWUgKTtcblx0XHR9ICk7XG5cblx0fSBlbHNlIHtcblxuXHRcdC8vIElmIHRyYWRpdGlvbmFsLCBlbmNvZGUgdGhlIFwib2xkXCIgd2F5ICh0aGUgd2F5IDEuMy4yIG9yIG9sZGVyXG5cdFx0Ly8gZGlkIGl0KSwgb3RoZXJ3aXNlIGVuY29kZSBwYXJhbXMgcmVjdXJzaXZlbHkuXG5cdFx0Zm9yICggcHJlZml4IGluIGEgKSB7XG5cdFx0XHRidWlsZFBhcmFtcyggcHJlZml4LCBhWyBwcmVmaXggXSwgdHJhZGl0aW9uYWwsIGFkZCApO1xuXHRcdH1cblx0fVxuXG5cdC8vIFJldHVybiB0aGUgcmVzdWx0aW5nIHNlcmlhbGl6YXRpb25cblx0cmV0dXJuIHMuam9pbiggXCImXCIgKTtcbn07XG5cbmpRdWVyeS5mbi5leHRlbmQoIHtcblx0c2VyaWFsaXplOiBmdW5jdGlvbigpIHtcblx0XHRyZXR1cm4galF1ZXJ5LnBhcmFtKCB0aGlzLnNlcmlhbGl6ZUFycmF5KCkgKTtcblx0fSxcblx0c2VyaWFsaXplQXJyYXk6IGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiB0aGlzLm1hcCggZnVuY3Rpb24oKSB7XG5cblx0XHRcdC8vIENhbiBhZGQgcHJvcEhvb2sgZm9yIFwiZWxlbWVudHNcIiB0byBmaWx0ZXIgb3IgYWRkIGZvcm0gZWxlbWVudHNcblx0XHRcdHZhciBlbGVtZW50cyA9IGpRdWVyeS5wcm9wKCB0aGlzLCBcImVsZW1lbnRzXCIgKTtcblx0XHRcdHJldHVybiBlbGVtZW50cyA/IGpRdWVyeS5tYWtlQXJyYXkoIGVsZW1lbnRzICkgOiB0aGlzO1xuXHRcdH0gKVxuXHRcdC5maWx0ZXIoIGZ1bmN0aW9uKCkge1xuXHRcdFx0dmFyIHR5cGUgPSB0aGlzLnR5cGU7XG5cblx0XHRcdC8vIFVzZSAuaXMoIFwiOmRpc2FibGVkXCIgKSBzbyB0aGF0IGZpZWxkc2V0W2Rpc2FibGVkXSB3b3Jrc1xuXHRcdFx0cmV0dXJuIHRoaXMubmFtZSAmJiAhalF1ZXJ5KCB0aGlzICkuaXMoIFwiOmRpc2FibGVkXCIgKSAmJlxuXHRcdFx0XHRyc3VibWl0dGFibGUudGVzdCggdGhpcy5ub2RlTmFtZSApICYmICFyc3VibWl0dGVyVHlwZXMudGVzdCggdHlwZSApICYmXG5cdFx0XHRcdCggdGhpcy5jaGVja2VkIHx8ICFyY2hlY2thYmxlVHlwZS50ZXN0KCB0eXBlICkgKTtcblx0XHR9IClcblx0XHQubWFwKCBmdW5jdGlvbiggX2ksIGVsZW0gKSB7XG5cdFx0XHR2YXIgdmFsID0galF1ZXJ5KCB0aGlzICkudmFsKCk7XG5cblx0XHRcdGlmICggdmFsID09IG51bGwgKSB7XG5cdFx0XHRcdHJldHVybiBudWxsO1xuXHRcdFx0fVxuXG5cdFx0XHRpZiAoIEFycmF5LmlzQXJyYXkoIHZhbCApICkge1xuXHRcdFx0XHRyZXR1cm4galF1ZXJ5Lm1hcCggdmFsLCBmdW5jdGlvbiggdmFsICkge1xuXHRcdFx0XHRcdHJldHVybiB7IG5hbWU6IGVsZW0ubmFtZSwgdmFsdWU6IHZhbC5yZXBsYWNlKCByQ1JMRiwgXCJcXHJcXG5cIiApIH07XG5cdFx0XHRcdH0gKTtcblx0XHRcdH1cblxuXHRcdFx0cmV0dXJuIHsgbmFtZTogZWxlbS5uYW1lLCB2YWx1ZTogdmFsLnJlcGxhY2UoIHJDUkxGLCBcIlxcclxcblwiICkgfTtcblx0XHR9ICkuZ2V0KCk7XG5cdH1cbn0gKTtcblxuXG52YXJcblx0cjIwID0gLyUyMC9nLFxuXHRyaGFzaCA9IC8jLiokLyxcblx0cmFudGlDYWNoZSA9IC8oWz8mXSlfPVteJl0qLyxcblx0cmhlYWRlcnMgPSAvXiguKj8pOlsgXFx0XSooW15cXHJcXG5dKikkL21nLFxuXG5cdC8vICM3NjUzLCAjODEyNSwgIzgxNTI6IGxvY2FsIHByb3RvY29sIGRldGVjdGlvblxuXHRybG9jYWxQcm90b2NvbCA9IC9eKD86YWJvdXR8YXBwfGFwcC1zdG9yYWdlfC4rLWV4dGVuc2lvbnxmaWxlfHJlc3x3aWRnZXQpOiQvLFxuXHRybm9Db250ZW50ID0gL14oPzpHRVR8SEVBRCkkLyxcblx0cnByb3RvY29sID0gL15cXC9cXC8vLFxuXG5cdC8qIFByZWZpbHRlcnNcblx0ICogMSkgVGhleSBhcmUgdXNlZnVsIHRvIGludHJvZHVjZSBjdXN0b20gZGF0YVR5cGVzIChzZWUgYWpheC9qc29ucC5qcyBmb3IgYW4gZXhhbXBsZSlcblx0ICogMikgVGhlc2UgYXJlIGNhbGxlZDpcblx0ICogICAgLSBCRUZPUkUgYXNraW5nIGZvciBhIHRyYW5zcG9ydFxuXHQgKiAgICAtIEFGVEVSIHBhcmFtIHNlcmlhbGl6YXRpb24gKHMuZGF0YSBpcyBhIHN0cmluZyBpZiBzLnByb2Nlc3NEYXRhIGlzIHRydWUpXG5cdCAqIDMpIGtleSBpcyB0aGUgZGF0YVR5cGVcblx0ICogNCkgdGhlIGNhdGNoYWxsIHN5bWJvbCBcIipcIiBjYW4gYmUgdXNlZFxuXHQgKiA1KSBleGVjdXRpb24gd2lsbCBzdGFydCB3aXRoIHRyYW5zcG9ydCBkYXRhVHlwZSBhbmQgVEhFTiBjb250aW51ZSBkb3duIHRvIFwiKlwiIGlmIG5lZWRlZFxuXHQgKi9cblx0cHJlZmlsdGVycyA9IHt9LFxuXG5cdC8qIFRyYW5zcG9ydHMgYmluZGluZ3Ncblx0ICogMSkga2V5IGlzIHRoZSBkYXRhVHlwZVxuXHQgKiAyKSB0aGUgY2F0Y2hhbGwgc3ltYm9sIFwiKlwiIGNhbiBiZSB1c2VkXG5cdCAqIDMpIHNlbGVjdGlvbiB3aWxsIHN0YXJ0IHdpdGggdHJhbnNwb3J0IGRhdGFUeXBlIGFuZCBUSEVOIGdvIHRvIFwiKlwiIGlmIG5lZWRlZFxuXHQgKi9cblx0dHJhbnNwb3J0cyA9IHt9LFxuXG5cdC8vIEF2b2lkIGNvbW1lbnQtcHJvbG9nIGNoYXIgc2VxdWVuY2UgKCMxMDA5OCk7IG11c3QgYXBwZWFzZSBsaW50IGFuZCBldmFkZSBjb21wcmVzc2lvblxuXHRhbGxUeXBlcyA9IFwiKi9cIi5jb25jYXQoIFwiKlwiICksXG5cblx0Ly8gQW5jaG9yIHRhZyBmb3IgcGFyc2luZyB0aGUgZG9jdW1lbnQgb3JpZ2luXG5cdG9yaWdpbkFuY2hvciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoIFwiYVwiICk7XG5cdG9yaWdpbkFuY2hvci5ocmVmID0gbG9jYXRpb24uaHJlZjtcblxuLy8gQmFzZSBcImNvbnN0cnVjdG9yXCIgZm9yIGpRdWVyeS5hamF4UHJlZmlsdGVyIGFuZCBqUXVlcnkuYWpheFRyYW5zcG9ydFxuZnVuY3Rpb24gYWRkVG9QcmVmaWx0ZXJzT3JUcmFuc3BvcnRzKCBzdHJ1Y3R1cmUgKSB7XG5cblx0Ly8gZGF0YVR5cGVFeHByZXNzaW9uIGlzIG9wdGlvbmFsIGFuZCBkZWZhdWx0cyB0byBcIipcIlxuXHRyZXR1cm4gZnVuY3Rpb24oIGRhdGFUeXBlRXhwcmVzc2lvbiwgZnVuYyApIHtcblxuXHRcdGlmICggdHlwZW9mIGRhdGFUeXBlRXhwcmVzc2lvbiAhPT0gXCJzdHJpbmdcIiApIHtcblx0XHRcdGZ1bmMgPSBkYXRhVHlwZUV4cHJlc3Npb247XG5cdFx0XHRkYXRhVHlwZUV4cHJlc3Npb24gPSBcIipcIjtcblx0XHR9XG5cblx0XHR2YXIgZGF0YVR5cGUsXG5cdFx0XHRpID0gMCxcblx0XHRcdGRhdGFUeXBlcyA9IGRhdGFUeXBlRXhwcmVzc2lvbi50b0xvd2VyQ2FzZSgpLm1hdGNoKCBybm90aHRtbHdoaXRlICkgfHwgW107XG5cblx0XHRpZiAoIGlzRnVuY3Rpb24oIGZ1bmMgKSApIHtcblxuXHRcdFx0Ly8gRm9yIGVhY2ggZGF0YVR5cGUgaW4gdGhlIGRhdGFUeXBlRXhwcmVzc2lvblxuXHRcdFx0d2hpbGUgKCAoIGRhdGFUeXBlID0gZGF0YVR5cGVzWyBpKysgXSApICkge1xuXG5cdFx0XHRcdC8vIFByZXBlbmQgaWYgcmVxdWVzdGVkXG5cdFx0XHRcdGlmICggZGF0YVR5cGVbIDAgXSA9PT0gXCIrXCIgKSB7XG5cdFx0XHRcdFx0ZGF0YVR5cGUgPSBkYXRhVHlwZS5zbGljZSggMSApIHx8IFwiKlwiO1xuXHRcdFx0XHRcdCggc3RydWN0dXJlWyBkYXRhVHlwZSBdID0gc3RydWN0dXJlWyBkYXRhVHlwZSBdIHx8IFtdICkudW5zaGlmdCggZnVuYyApO1xuXG5cdFx0XHRcdC8vIE90aGVyd2lzZSBhcHBlbmRcblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHQoIHN0cnVjdHVyZVsgZGF0YVR5cGUgXSA9IHN0cnVjdHVyZVsgZGF0YVR5cGUgXSB8fCBbXSApLnB1c2goIGZ1bmMgKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0fTtcbn1cblxuLy8gQmFzZSBpbnNwZWN0aW9uIGZ1bmN0aW9uIGZvciBwcmVmaWx0ZXJzIGFuZCB0cmFuc3BvcnRzXG5mdW5jdGlvbiBpbnNwZWN0UHJlZmlsdGVyc09yVHJhbnNwb3J0cyggc3RydWN0dXJlLCBvcHRpb25zLCBvcmlnaW5hbE9wdGlvbnMsIGpxWEhSICkge1xuXG5cdHZhciBpbnNwZWN0ZWQgPSB7fSxcblx0XHRzZWVraW5nVHJhbnNwb3J0ID0gKCBzdHJ1Y3R1cmUgPT09IHRyYW5zcG9ydHMgKTtcblxuXHRmdW5jdGlvbiBpbnNwZWN0KCBkYXRhVHlwZSApIHtcblx0XHR2YXIgc2VsZWN0ZWQ7XG5cdFx0aW5zcGVjdGVkWyBkYXRhVHlwZSBdID0gdHJ1ZTtcblx0XHRqUXVlcnkuZWFjaCggc3RydWN0dXJlWyBkYXRhVHlwZSBdIHx8IFtdLCBmdW5jdGlvbiggXywgcHJlZmlsdGVyT3JGYWN0b3J5ICkge1xuXHRcdFx0dmFyIGRhdGFUeXBlT3JUcmFuc3BvcnQgPSBwcmVmaWx0ZXJPckZhY3RvcnkoIG9wdGlvbnMsIG9yaWdpbmFsT3B0aW9ucywganFYSFIgKTtcblx0XHRcdGlmICggdHlwZW9mIGRhdGFUeXBlT3JUcmFuc3BvcnQgPT09IFwic3RyaW5nXCIgJiZcblx0XHRcdFx0IXNlZWtpbmdUcmFuc3BvcnQgJiYgIWluc3BlY3RlZFsgZGF0YVR5cGVPclRyYW5zcG9ydCBdICkge1xuXG5cdFx0XHRcdG9wdGlvbnMuZGF0YVR5cGVzLnVuc2hpZnQoIGRhdGFUeXBlT3JUcmFuc3BvcnQgKTtcblx0XHRcdFx0aW5zcGVjdCggZGF0YVR5cGVPclRyYW5zcG9ydCApO1xuXHRcdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0XHR9IGVsc2UgaWYgKCBzZWVraW5nVHJhbnNwb3J0ICkge1xuXHRcdFx0XHRyZXR1cm4gISggc2VsZWN0ZWQgPSBkYXRhVHlwZU9yVHJhbnNwb3J0ICk7XG5cdFx0XHR9XG5cdFx0fSApO1xuXHRcdHJldHVybiBzZWxlY3RlZDtcblx0fVxuXG5cdHJldHVybiBpbnNwZWN0KCBvcHRpb25zLmRhdGFUeXBlc1sgMCBdICkgfHwgIWluc3BlY3RlZFsgXCIqXCIgXSAmJiBpbnNwZWN0KCBcIipcIiApO1xufVxuXG4vLyBBIHNwZWNpYWwgZXh0ZW5kIGZvciBhamF4IG9wdGlvbnNcbi8vIHRoYXQgdGFrZXMgXCJmbGF0XCIgb3B0aW9ucyAobm90IHRvIGJlIGRlZXAgZXh0ZW5kZWQpXG4vLyBGaXhlcyAjOTg4N1xuZnVuY3Rpb24gYWpheEV4dGVuZCggdGFyZ2V0LCBzcmMgKSB7XG5cdHZhciBrZXksIGRlZXAsXG5cdFx0ZmxhdE9wdGlvbnMgPSBqUXVlcnkuYWpheFNldHRpbmdzLmZsYXRPcHRpb25zIHx8IHt9O1xuXG5cdGZvciAoIGtleSBpbiBzcmMgKSB7XG5cdFx0aWYgKCBzcmNbIGtleSBdICE9PSB1bmRlZmluZWQgKSB7XG5cdFx0XHQoIGZsYXRPcHRpb25zWyBrZXkgXSA/IHRhcmdldCA6ICggZGVlcCB8fCAoIGRlZXAgPSB7fSApICkgKVsga2V5IF0gPSBzcmNbIGtleSBdO1xuXHRcdH1cblx0fVxuXHRpZiAoIGRlZXAgKSB7XG5cdFx0alF1ZXJ5LmV4dGVuZCggdHJ1ZSwgdGFyZ2V0LCBkZWVwICk7XG5cdH1cblxuXHRyZXR1cm4gdGFyZ2V0O1xufVxuXG4vKiBIYW5kbGVzIHJlc3BvbnNlcyB0byBhbiBhamF4IHJlcXVlc3Q6XG4gKiAtIGZpbmRzIHRoZSByaWdodCBkYXRhVHlwZSAobWVkaWF0ZXMgYmV0d2VlbiBjb250ZW50LXR5cGUgYW5kIGV4cGVjdGVkIGRhdGFUeXBlKVxuICogLSByZXR1cm5zIHRoZSBjb3JyZXNwb25kaW5nIHJlc3BvbnNlXG4gKi9cbmZ1bmN0aW9uIGFqYXhIYW5kbGVSZXNwb25zZXMoIHMsIGpxWEhSLCByZXNwb25zZXMgKSB7XG5cblx0dmFyIGN0LCB0eXBlLCBmaW5hbERhdGFUeXBlLCBmaXJzdERhdGFUeXBlLFxuXHRcdGNvbnRlbnRzID0gcy5jb250ZW50cyxcblx0XHRkYXRhVHlwZXMgPSBzLmRhdGFUeXBlcztcblxuXHQvLyBSZW1vdmUgYXV0byBkYXRhVHlwZSBhbmQgZ2V0IGNvbnRlbnQtdHlwZSBpbiB0aGUgcHJvY2Vzc1xuXHR3aGlsZSAoIGRhdGFUeXBlc1sgMCBdID09PSBcIipcIiApIHtcblx0XHRkYXRhVHlwZXMuc2hpZnQoKTtcblx0XHRpZiAoIGN0ID09PSB1bmRlZmluZWQgKSB7XG5cdFx0XHRjdCA9IHMubWltZVR5cGUgfHwganFYSFIuZ2V0UmVzcG9uc2VIZWFkZXIoIFwiQ29udGVudC1UeXBlXCIgKTtcblx0XHR9XG5cdH1cblxuXHQvLyBDaGVjayBpZiB3ZSdyZSBkZWFsaW5nIHdpdGggYSBrbm93biBjb250ZW50LXR5cGVcblx0aWYgKCBjdCApIHtcblx0XHRmb3IgKCB0eXBlIGluIGNvbnRlbnRzICkge1xuXHRcdFx0aWYgKCBjb250ZW50c1sgdHlwZSBdICYmIGNvbnRlbnRzWyB0eXBlIF0udGVzdCggY3QgKSApIHtcblx0XHRcdFx0ZGF0YVR5cGVzLnVuc2hpZnQoIHR5cGUgKTtcblx0XHRcdFx0YnJlYWs7XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0Ly8gQ2hlY2sgdG8gc2VlIGlmIHdlIGhhdmUgYSByZXNwb25zZSBmb3IgdGhlIGV4cGVjdGVkIGRhdGFUeXBlXG5cdGlmICggZGF0YVR5cGVzWyAwIF0gaW4gcmVzcG9uc2VzICkge1xuXHRcdGZpbmFsRGF0YVR5cGUgPSBkYXRhVHlwZXNbIDAgXTtcblx0fSBlbHNlIHtcblxuXHRcdC8vIFRyeSBjb252ZXJ0aWJsZSBkYXRhVHlwZXNcblx0XHRmb3IgKCB0eXBlIGluIHJlc3BvbnNlcyApIHtcblx0XHRcdGlmICggIWRhdGFUeXBlc1sgMCBdIHx8IHMuY29udmVydGVyc1sgdHlwZSArIFwiIFwiICsgZGF0YVR5cGVzWyAwIF0gXSApIHtcblx0XHRcdFx0ZmluYWxEYXRhVHlwZSA9IHR5cGU7XG5cdFx0XHRcdGJyZWFrO1xuXHRcdFx0fVxuXHRcdFx0aWYgKCAhZmlyc3REYXRhVHlwZSApIHtcblx0XHRcdFx0Zmlyc3REYXRhVHlwZSA9IHR5cGU7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0Ly8gT3IganVzdCB1c2UgZmlyc3Qgb25lXG5cdFx0ZmluYWxEYXRhVHlwZSA9IGZpbmFsRGF0YVR5cGUgfHwgZmlyc3REYXRhVHlwZTtcblx0fVxuXG5cdC8vIElmIHdlIGZvdW5kIGEgZGF0YVR5cGVcblx0Ly8gV2UgYWRkIHRoZSBkYXRhVHlwZSB0byB0aGUgbGlzdCBpZiBuZWVkZWRcblx0Ly8gYW5kIHJldHVybiB0aGUgY29ycmVzcG9uZGluZyByZXNwb25zZVxuXHRpZiAoIGZpbmFsRGF0YVR5cGUgKSB7XG5cdFx0aWYgKCBmaW5hbERhdGFUeXBlICE9PSBkYXRhVHlwZXNbIDAgXSApIHtcblx0XHRcdGRhdGFUeXBlcy51bnNoaWZ0KCBmaW5hbERhdGFUeXBlICk7XG5cdFx0fVxuXHRcdHJldHVybiByZXNwb25zZXNbIGZpbmFsRGF0YVR5cGUgXTtcblx0fVxufVxuXG4vKiBDaGFpbiBjb252ZXJzaW9ucyBnaXZlbiB0aGUgcmVxdWVzdCBhbmQgdGhlIG9yaWdpbmFsIHJlc3BvbnNlXG4gKiBBbHNvIHNldHMgdGhlIHJlc3BvbnNlWFhYIGZpZWxkcyBvbiB0aGUganFYSFIgaW5zdGFuY2VcbiAqL1xuZnVuY3Rpb24gYWpheENvbnZlcnQoIHMsIHJlc3BvbnNlLCBqcVhIUiwgaXNTdWNjZXNzICkge1xuXHR2YXIgY29udjIsIGN1cnJlbnQsIGNvbnYsIHRtcCwgcHJldixcblx0XHRjb252ZXJ0ZXJzID0ge30sXG5cblx0XHQvLyBXb3JrIHdpdGggYSBjb3B5IG9mIGRhdGFUeXBlcyBpbiBjYXNlIHdlIG5lZWQgdG8gbW9kaWZ5IGl0IGZvciBjb252ZXJzaW9uXG5cdFx0ZGF0YVR5cGVzID0gcy5kYXRhVHlwZXMuc2xpY2UoKTtcblxuXHQvLyBDcmVhdGUgY29udmVydGVycyBtYXAgd2l0aCBsb3dlcmNhc2VkIGtleXNcblx0aWYgKCBkYXRhVHlwZXNbIDEgXSApIHtcblx0XHRmb3IgKCBjb252IGluIHMuY29udmVydGVycyApIHtcblx0XHRcdGNvbnZlcnRlcnNbIGNvbnYudG9Mb3dlckNhc2UoKSBdID0gcy5jb252ZXJ0ZXJzWyBjb252IF07XG5cdFx0fVxuXHR9XG5cblx0Y3VycmVudCA9IGRhdGFUeXBlcy5zaGlmdCgpO1xuXG5cdC8vIENvbnZlcnQgdG8gZWFjaCBzZXF1ZW50aWFsIGRhdGFUeXBlXG5cdHdoaWxlICggY3VycmVudCApIHtcblxuXHRcdGlmICggcy5yZXNwb25zZUZpZWxkc1sgY3VycmVudCBdICkge1xuXHRcdFx0anFYSFJbIHMucmVzcG9uc2VGaWVsZHNbIGN1cnJlbnQgXSBdID0gcmVzcG9uc2U7XG5cdFx0fVxuXG5cdFx0Ly8gQXBwbHkgdGhlIGRhdGFGaWx0ZXIgaWYgcHJvdmlkZWRcblx0XHRpZiAoICFwcmV2ICYmIGlzU3VjY2VzcyAmJiBzLmRhdGFGaWx0ZXIgKSB7XG5cdFx0XHRyZXNwb25zZSA9IHMuZGF0YUZpbHRlciggcmVzcG9uc2UsIHMuZGF0YVR5cGUgKTtcblx0XHR9XG5cblx0XHRwcmV2ID0gY3VycmVudDtcblx0XHRjdXJyZW50ID0gZGF0YVR5cGVzLnNoaWZ0KCk7XG5cblx0XHRpZiAoIGN1cnJlbnQgKSB7XG5cblx0XHRcdC8vIFRoZXJlJ3Mgb25seSB3b3JrIHRvIGRvIGlmIGN1cnJlbnQgZGF0YVR5cGUgaXMgbm9uLWF1dG9cblx0XHRcdGlmICggY3VycmVudCA9PT0gXCIqXCIgKSB7XG5cblx0XHRcdFx0Y3VycmVudCA9IHByZXY7XG5cblx0XHRcdC8vIENvbnZlcnQgcmVzcG9uc2UgaWYgcHJldiBkYXRhVHlwZSBpcyBub24tYXV0byBhbmQgZGlmZmVycyBmcm9tIGN1cnJlbnRcblx0XHRcdH0gZWxzZSBpZiAoIHByZXYgIT09IFwiKlwiICYmIHByZXYgIT09IGN1cnJlbnQgKSB7XG5cblx0XHRcdFx0Ly8gU2VlayBhIGRpcmVjdCBjb252ZXJ0ZXJcblx0XHRcdFx0Y29udiA9IGNvbnZlcnRlcnNbIHByZXYgKyBcIiBcIiArIGN1cnJlbnQgXSB8fCBjb252ZXJ0ZXJzWyBcIiogXCIgKyBjdXJyZW50IF07XG5cblx0XHRcdFx0Ly8gSWYgbm9uZSBmb3VuZCwgc2VlayBhIHBhaXJcblx0XHRcdFx0aWYgKCAhY29udiApIHtcblx0XHRcdFx0XHRmb3IgKCBjb252MiBpbiBjb252ZXJ0ZXJzICkge1xuXG5cdFx0XHRcdFx0XHQvLyBJZiBjb252MiBvdXRwdXRzIGN1cnJlbnRcblx0XHRcdFx0XHRcdHRtcCA9IGNvbnYyLnNwbGl0KCBcIiBcIiApO1xuXHRcdFx0XHRcdFx0aWYgKCB0bXBbIDEgXSA9PT0gY3VycmVudCApIHtcblxuXHRcdFx0XHRcdFx0XHQvLyBJZiBwcmV2IGNhbiBiZSBjb252ZXJ0ZWQgdG8gYWNjZXB0ZWQgaW5wdXRcblx0XHRcdFx0XHRcdFx0Y29udiA9IGNvbnZlcnRlcnNbIHByZXYgKyBcIiBcIiArIHRtcFsgMCBdIF0gfHxcblx0XHRcdFx0XHRcdFx0XHRjb252ZXJ0ZXJzWyBcIiogXCIgKyB0bXBbIDAgXSBdO1xuXHRcdFx0XHRcdFx0XHRpZiAoIGNvbnYgKSB7XG5cblx0XHRcdFx0XHRcdFx0XHQvLyBDb25kZW5zZSBlcXVpdmFsZW5jZSBjb252ZXJ0ZXJzXG5cdFx0XHRcdFx0XHRcdFx0aWYgKCBjb252ID09PSB0cnVlICkge1xuXHRcdFx0XHRcdFx0XHRcdFx0Y29udiA9IGNvbnZlcnRlcnNbIGNvbnYyIF07XG5cblx0XHRcdFx0XHRcdFx0XHQvLyBPdGhlcndpc2UsIGluc2VydCB0aGUgaW50ZXJtZWRpYXRlIGRhdGFUeXBlXG5cdFx0XHRcdFx0XHRcdFx0fSBlbHNlIGlmICggY29udmVydGVyc1sgY29udjIgXSAhPT0gdHJ1ZSApIHtcblx0XHRcdFx0XHRcdFx0XHRcdGN1cnJlbnQgPSB0bXBbIDAgXTtcblx0XHRcdFx0XHRcdFx0XHRcdGRhdGFUeXBlcy51bnNoaWZ0KCB0bXBbIDEgXSApO1xuXHRcdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIEFwcGx5IGNvbnZlcnRlciAoaWYgbm90IGFuIGVxdWl2YWxlbmNlKVxuXHRcdFx0XHRpZiAoIGNvbnYgIT09IHRydWUgKSB7XG5cblx0XHRcdFx0XHQvLyBVbmxlc3MgZXJyb3JzIGFyZSBhbGxvd2VkIHRvIGJ1YmJsZSwgY2F0Y2ggYW5kIHJldHVybiB0aGVtXG5cdFx0XHRcdFx0aWYgKCBjb252ICYmIHMudGhyb3dzICkge1xuXHRcdFx0XHRcdFx0cmVzcG9uc2UgPSBjb252KCByZXNwb25zZSApO1xuXHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHR0cnkge1xuXHRcdFx0XHRcdFx0XHRyZXNwb25zZSA9IGNvbnYoIHJlc3BvbnNlICk7XG5cdFx0XHRcdFx0XHR9IGNhdGNoICggZSApIHtcblx0XHRcdFx0XHRcdFx0cmV0dXJuIHtcblx0XHRcdFx0XHRcdFx0XHRzdGF0ZTogXCJwYXJzZXJlcnJvclwiLFxuXHRcdFx0XHRcdFx0XHRcdGVycm9yOiBjb252ID8gZSA6IFwiTm8gY29udmVyc2lvbiBmcm9tIFwiICsgcHJldiArIFwiIHRvIFwiICsgY3VycmVudFxuXHRcdFx0XHRcdFx0XHR9O1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cdHJldHVybiB7IHN0YXRlOiBcInN1Y2Nlc3NcIiwgZGF0YTogcmVzcG9uc2UgfTtcbn1cblxualF1ZXJ5LmV4dGVuZCgge1xuXG5cdC8vIENvdW50ZXIgZm9yIGhvbGRpbmcgdGhlIG51bWJlciBvZiBhY3RpdmUgcXVlcmllc1xuXHRhY3RpdmU6IDAsXG5cblx0Ly8gTGFzdC1Nb2RpZmllZCBoZWFkZXIgY2FjaGUgZm9yIG5leHQgcmVxdWVzdFxuXHRsYXN0TW9kaWZpZWQ6IHt9LFxuXHRldGFnOiB7fSxcblxuXHRhamF4U2V0dGluZ3M6IHtcblx0XHR1cmw6IGxvY2F0aW9uLmhyZWYsXG5cdFx0dHlwZTogXCJHRVRcIixcblx0XHRpc0xvY2FsOiBybG9jYWxQcm90b2NvbC50ZXN0KCBsb2NhdGlvbi5wcm90b2NvbCApLFxuXHRcdGdsb2JhbDogdHJ1ZSxcblx0XHRwcm9jZXNzRGF0YTogdHJ1ZSxcblx0XHRhc3luYzogdHJ1ZSxcblx0XHRjb250ZW50VHlwZTogXCJhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQ7IGNoYXJzZXQ9VVRGLThcIixcblxuXHRcdC8qXG5cdFx0dGltZW91dDogMCxcblx0XHRkYXRhOiBudWxsLFxuXHRcdGRhdGFUeXBlOiBudWxsLFxuXHRcdHVzZXJuYW1lOiBudWxsLFxuXHRcdHBhc3N3b3JkOiBudWxsLFxuXHRcdGNhY2hlOiBudWxsLFxuXHRcdHRocm93czogZmFsc2UsXG5cdFx0dHJhZGl0aW9uYWw6IGZhbHNlLFxuXHRcdGhlYWRlcnM6IHt9LFxuXHRcdCovXG5cblx0XHRhY2NlcHRzOiB7XG5cdFx0XHRcIipcIjogYWxsVHlwZXMsXG5cdFx0XHR0ZXh0OiBcInRleHQvcGxhaW5cIixcblx0XHRcdGh0bWw6IFwidGV4dC9odG1sXCIsXG5cdFx0XHR4bWw6IFwiYXBwbGljYXRpb24veG1sLCB0ZXh0L3htbFwiLFxuXHRcdFx0anNvbjogXCJhcHBsaWNhdGlvbi9qc29uLCB0ZXh0L2phdmFzY3JpcHRcIlxuXHRcdH0sXG5cblx0XHRjb250ZW50czoge1xuXHRcdFx0eG1sOiAvXFxieG1sXFxiLyxcblx0XHRcdGh0bWw6IC9cXGJodG1sLyxcblx0XHRcdGpzb246IC9cXGJqc29uXFxiL1xuXHRcdH0sXG5cblx0XHRyZXNwb25zZUZpZWxkczoge1xuXHRcdFx0eG1sOiBcInJlc3BvbnNlWE1MXCIsXG5cdFx0XHR0ZXh0OiBcInJlc3BvbnNlVGV4dFwiLFxuXHRcdFx0anNvbjogXCJyZXNwb25zZUpTT05cIlxuXHRcdH0sXG5cblx0XHQvLyBEYXRhIGNvbnZlcnRlcnNcblx0XHQvLyBLZXlzIHNlcGFyYXRlIHNvdXJjZSAob3IgY2F0Y2hhbGwgXCIqXCIpIGFuZCBkZXN0aW5hdGlvbiB0eXBlcyB3aXRoIGEgc2luZ2xlIHNwYWNlXG5cdFx0Y29udmVydGVyczoge1xuXG5cdFx0XHQvLyBDb252ZXJ0IGFueXRoaW5nIHRvIHRleHRcblx0XHRcdFwiKiB0ZXh0XCI6IFN0cmluZyxcblxuXHRcdFx0Ly8gVGV4dCB0byBodG1sICh0cnVlID0gbm8gdHJhbnNmb3JtYXRpb24pXG5cdFx0XHRcInRleHQgaHRtbFwiOiB0cnVlLFxuXG5cdFx0XHQvLyBFdmFsdWF0ZSB0ZXh0IGFzIGEganNvbiBleHByZXNzaW9uXG5cdFx0XHRcInRleHQganNvblwiOiBKU09OLnBhcnNlLFxuXG5cdFx0XHQvLyBQYXJzZSB0ZXh0IGFzIHhtbFxuXHRcdFx0XCJ0ZXh0IHhtbFwiOiBqUXVlcnkucGFyc2VYTUxcblx0XHR9LFxuXG5cdFx0Ly8gRm9yIG9wdGlvbnMgdGhhdCBzaG91bGRuJ3QgYmUgZGVlcCBleHRlbmRlZDpcblx0XHQvLyB5b3UgY2FuIGFkZCB5b3VyIG93biBjdXN0b20gb3B0aW9ucyBoZXJlIGlmXG5cdFx0Ly8gYW5kIHdoZW4geW91IGNyZWF0ZSBvbmUgdGhhdCBzaG91bGRuJ3QgYmVcblx0XHQvLyBkZWVwIGV4dGVuZGVkIChzZWUgYWpheEV4dGVuZClcblx0XHRmbGF0T3B0aW9uczoge1xuXHRcdFx0dXJsOiB0cnVlLFxuXHRcdFx0Y29udGV4dDogdHJ1ZVxuXHRcdH1cblx0fSxcblxuXHQvLyBDcmVhdGVzIGEgZnVsbCBmbGVkZ2VkIHNldHRpbmdzIG9iamVjdCBpbnRvIHRhcmdldFxuXHQvLyB3aXRoIGJvdGggYWpheFNldHRpbmdzIGFuZCBzZXR0aW5ncyBmaWVsZHMuXG5cdC8vIElmIHRhcmdldCBpcyBvbWl0dGVkLCB3cml0ZXMgaW50byBhamF4U2V0dGluZ3MuXG5cdGFqYXhTZXR1cDogZnVuY3Rpb24oIHRhcmdldCwgc2V0dGluZ3MgKSB7XG5cdFx0cmV0dXJuIHNldHRpbmdzID9cblxuXHRcdFx0Ly8gQnVpbGRpbmcgYSBzZXR0aW5ncyBvYmplY3Rcblx0XHRcdGFqYXhFeHRlbmQoIGFqYXhFeHRlbmQoIHRhcmdldCwgalF1ZXJ5LmFqYXhTZXR0aW5ncyApLCBzZXR0aW5ncyApIDpcblxuXHRcdFx0Ly8gRXh0ZW5kaW5nIGFqYXhTZXR0aW5nc1xuXHRcdFx0YWpheEV4dGVuZCggalF1ZXJ5LmFqYXhTZXR0aW5ncywgdGFyZ2V0ICk7XG5cdH0sXG5cblx0YWpheFByZWZpbHRlcjogYWRkVG9QcmVmaWx0ZXJzT3JUcmFuc3BvcnRzKCBwcmVmaWx0ZXJzICksXG5cdGFqYXhUcmFuc3BvcnQ6IGFkZFRvUHJlZmlsdGVyc09yVHJhbnNwb3J0cyggdHJhbnNwb3J0cyApLFxuXG5cdC8vIE1haW4gbWV0aG9kXG5cdGFqYXg6IGZ1bmN0aW9uKCB1cmwsIG9wdGlvbnMgKSB7XG5cblx0XHQvLyBJZiB1cmwgaXMgYW4gb2JqZWN0LCBzaW11bGF0ZSBwcmUtMS41IHNpZ25hdHVyZVxuXHRcdGlmICggdHlwZW9mIHVybCA9PT0gXCJvYmplY3RcIiApIHtcblx0XHRcdG9wdGlvbnMgPSB1cmw7XG5cdFx0XHR1cmwgPSB1bmRlZmluZWQ7XG5cdFx0fVxuXG5cdFx0Ly8gRm9yY2Ugb3B0aW9ucyB0byBiZSBhbiBvYmplY3Rcblx0XHRvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcblxuXHRcdHZhciB0cmFuc3BvcnQsXG5cblx0XHRcdC8vIFVSTCB3aXRob3V0IGFudGktY2FjaGUgcGFyYW1cblx0XHRcdGNhY2hlVVJMLFxuXG5cdFx0XHQvLyBSZXNwb25zZSBoZWFkZXJzXG5cdFx0XHRyZXNwb25zZUhlYWRlcnNTdHJpbmcsXG5cdFx0XHRyZXNwb25zZUhlYWRlcnMsXG5cblx0XHRcdC8vIHRpbWVvdXQgaGFuZGxlXG5cdFx0XHR0aW1lb3V0VGltZXIsXG5cblx0XHRcdC8vIFVybCBjbGVhbnVwIHZhclxuXHRcdFx0dXJsQW5jaG9yLFxuXG5cdFx0XHQvLyBSZXF1ZXN0IHN0YXRlIChiZWNvbWVzIGZhbHNlIHVwb24gc2VuZCBhbmQgdHJ1ZSB1cG9uIGNvbXBsZXRpb24pXG5cdFx0XHRjb21wbGV0ZWQsXG5cblx0XHRcdC8vIFRvIGtub3cgaWYgZ2xvYmFsIGV2ZW50cyBhcmUgdG8gYmUgZGlzcGF0Y2hlZFxuXHRcdFx0ZmlyZUdsb2JhbHMsXG5cblx0XHRcdC8vIExvb3AgdmFyaWFibGVcblx0XHRcdGksXG5cblx0XHRcdC8vIHVuY2FjaGVkIHBhcnQgb2YgdGhlIHVybFxuXHRcdFx0dW5jYWNoZWQsXG5cblx0XHRcdC8vIENyZWF0ZSB0aGUgZmluYWwgb3B0aW9ucyBvYmplY3Rcblx0XHRcdHMgPSBqUXVlcnkuYWpheFNldHVwKCB7fSwgb3B0aW9ucyApLFxuXG5cdFx0XHQvLyBDYWxsYmFja3MgY29udGV4dFxuXHRcdFx0Y2FsbGJhY2tDb250ZXh0ID0gcy5jb250ZXh0IHx8IHMsXG5cblx0XHRcdC8vIENvbnRleHQgZm9yIGdsb2JhbCBldmVudHMgaXMgY2FsbGJhY2tDb250ZXh0IGlmIGl0IGlzIGEgRE9NIG5vZGUgb3IgalF1ZXJ5IGNvbGxlY3Rpb25cblx0XHRcdGdsb2JhbEV2ZW50Q29udGV4dCA9IHMuY29udGV4dCAmJlxuXHRcdFx0XHQoIGNhbGxiYWNrQ29udGV4dC5ub2RlVHlwZSB8fCBjYWxsYmFja0NvbnRleHQuanF1ZXJ5ICkgP1xuXHRcdFx0XHRcdGpRdWVyeSggY2FsbGJhY2tDb250ZXh0ICkgOlxuXHRcdFx0XHRcdGpRdWVyeS5ldmVudCxcblxuXHRcdFx0Ly8gRGVmZXJyZWRzXG5cdFx0XHRkZWZlcnJlZCA9IGpRdWVyeS5EZWZlcnJlZCgpLFxuXHRcdFx0Y29tcGxldGVEZWZlcnJlZCA9IGpRdWVyeS5DYWxsYmFja3MoIFwib25jZSBtZW1vcnlcIiApLFxuXG5cdFx0XHQvLyBTdGF0dXMtZGVwZW5kZW50IGNhbGxiYWNrc1xuXHRcdFx0c3RhdHVzQ29kZSA9IHMuc3RhdHVzQ29kZSB8fCB7fSxcblxuXHRcdFx0Ly8gSGVhZGVycyAodGhleSBhcmUgc2VudCBhbGwgYXQgb25jZSlcblx0XHRcdHJlcXVlc3RIZWFkZXJzID0ge30sXG5cdFx0XHRyZXF1ZXN0SGVhZGVyc05hbWVzID0ge30sXG5cblx0XHRcdC8vIERlZmF1bHQgYWJvcnQgbWVzc2FnZVxuXHRcdFx0c3RyQWJvcnQgPSBcImNhbmNlbGVkXCIsXG5cblx0XHRcdC8vIEZha2UgeGhyXG5cdFx0XHRqcVhIUiA9IHtcblx0XHRcdFx0cmVhZHlTdGF0ZTogMCxcblxuXHRcdFx0XHQvLyBCdWlsZHMgaGVhZGVycyBoYXNodGFibGUgaWYgbmVlZGVkXG5cdFx0XHRcdGdldFJlc3BvbnNlSGVhZGVyOiBmdW5jdGlvbigga2V5ICkge1xuXHRcdFx0XHRcdHZhciBtYXRjaDtcblx0XHRcdFx0XHRpZiAoIGNvbXBsZXRlZCApIHtcblx0XHRcdFx0XHRcdGlmICggIXJlc3BvbnNlSGVhZGVycyApIHtcblx0XHRcdFx0XHRcdFx0cmVzcG9uc2VIZWFkZXJzID0ge307XG5cdFx0XHRcdFx0XHRcdHdoaWxlICggKCBtYXRjaCA9IHJoZWFkZXJzLmV4ZWMoIHJlc3BvbnNlSGVhZGVyc1N0cmluZyApICkgKSB7XG5cdFx0XHRcdFx0XHRcdFx0cmVzcG9uc2VIZWFkZXJzWyBtYXRjaFsgMSBdLnRvTG93ZXJDYXNlKCkgKyBcIiBcIiBdID1cblx0XHRcdFx0XHRcdFx0XHRcdCggcmVzcG9uc2VIZWFkZXJzWyBtYXRjaFsgMSBdLnRvTG93ZXJDYXNlKCkgKyBcIiBcIiBdIHx8IFtdIClcblx0XHRcdFx0XHRcdFx0XHRcdFx0LmNvbmNhdCggbWF0Y2hbIDIgXSApO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRtYXRjaCA9IHJlc3BvbnNlSGVhZGVyc1sga2V5LnRvTG93ZXJDYXNlKCkgKyBcIiBcIiBdO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRyZXR1cm4gbWF0Y2ggPT0gbnVsbCA/IG51bGwgOiBtYXRjaC5qb2luKCBcIiwgXCIgKTtcblx0XHRcdFx0fSxcblxuXHRcdFx0XHQvLyBSYXcgc3RyaW5nXG5cdFx0XHRcdGdldEFsbFJlc3BvbnNlSGVhZGVyczogZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0cmV0dXJuIGNvbXBsZXRlZCA/IHJlc3BvbnNlSGVhZGVyc1N0cmluZyA6IG51bGw7XG5cdFx0XHRcdH0sXG5cblx0XHRcdFx0Ly8gQ2FjaGVzIHRoZSBoZWFkZXJcblx0XHRcdFx0c2V0UmVxdWVzdEhlYWRlcjogZnVuY3Rpb24oIG5hbWUsIHZhbHVlICkge1xuXHRcdFx0XHRcdGlmICggY29tcGxldGVkID09IG51bGwgKSB7XG5cdFx0XHRcdFx0XHRuYW1lID0gcmVxdWVzdEhlYWRlcnNOYW1lc1sgbmFtZS50b0xvd2VyQ2FzZSgpIF0gPVxuXHRcdFx0XHRcdFx0XHRyZXF1ZXN0SGVhZGVyc05hbWVzWyBuYW1lLnRvTG93ZXJDYXNlKCkgXSB8fCBuYW1lO1xuXHRcdFx0XHRcdFx0cmVxdWVzdEhlYWRlcnNbIG5hbWUgXSA9IHZhbHVlO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRyZXR1cm4gdGhpcztcblx0XHRcdFx0fSxcblxuXHRcdFx0XHQvLyBPdmVycmlkZXMgcmVzcG9uc2UgY29udGVudC10eXBlIGhlYWRlclxuXHRcdFx0XHRvdmVycmlkZU1pbWVUeXBlOiBmdW5jdGlvbiggdHlwZSApIHtcblx0XHRcdFx0XHRpZiAoIGNvbXBsZXRlZCA9PSBudWxsICkge1xuXHRcdFx0XHRcdFx0cy5taW1lVHlwZSA9IHR5cGU7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdHJldHVybiB0aGlzO1xuXHRcdFx0XHR9LFxuXG5cdFx0XHRcdC8vIFN0YXR1cy1kZXBlbmRlbnQgY2FsbGJhY2tzXG5cdFx0XHRcdHN0YXR1c0NvZGU6IGZ1bmN0aW9uKCBtYXAgKSB7XG5cdFx0XHRcdFx0dmFyIGNvZGU7XG5cdFx0XHRcdFx0aWYgKCBtYXAgKSB7XG5cdFx0XHRcdFx0XHRpZiAoIGNvbXBsZXRlZCApIHtcblxuXHRcdFx0XHRcdFx0XHQvLyBFeGVjdXRlIHRoZSBhcHByb3ByaWF0ZSBjYWxsYmFja3Ncblx0XHRcdFx0XHRcdFx0anFYSFIuYWx3YXlzKCBtYXBbIGpxWEhSLnN0YXR1cyBdICk7XG5cdFx0XHRcdFx0XHR9IGVsc2Uge1xuXG5cdFx0XHRcdFx0XHRcdC8vIExhenktYWRkIHRoZSBuZXcgY2FsbGJhY2tzIGluIGEgd2F5IHRoYXQgcHJlc2VydmVzIG9sZCBvbmVzXG5cdFx0XHRcdFx0XHRcdGZvciAoIGNvZGUgaW4gbWFwICkge1xuXHRcdFx0XHRcdFx0XHRcdHN0YXR1c0NvZGVbIGNvZGUgXSA9IFsgc3RhdHVzQ29kZVsgY29kZSBdLCBtYXBbIGNvZGUgXSBdO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdHJldHVybiB0aGlzO1xuXHRcdFx0XHR9LFxuXG5cdFx0XHRcdC8vIENhbmNlbCB0aGUgcmVxdWVzdFxuXHRcdFx0XHRhYm9ydDogZnVuY3Rpb24oIHN0YXR1c1RleHQgKSB7XG5cdFx0XHRcdFx0dmFyIGZpbmFsVGV4dCA9IHN0YXR1c1RleHQgfHwgc3RyQWJvcnQ7XG5cdFx0XHRcdFx0aWYgKCB0cmFuc3BvcnQgKSB7XG5cdFx0XHRcdFx0XHR0cmFuc3BvcnQuYWJvcnQoIGZpbmFsVGV4dCApO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRkb25lKCAwLCBmaW5hbFRleHQgKTtcblx0XHRcdFx0XHRyZXR1cm4gdGhpcztcblx0XHRcdFx0fVxuXHRcdFx0fTtcblxuXHRcdC8vIEF0dGFjaCBkZWZlcnJlZHNcblx0XHRkZWZlcnJlZC5wcm9taXNlKCBqcVhIUiApO1xuXG5cdFx0Ly8gQWRkIHByb3RvY29sIGlmIG5vdCBwcm92aWRlZCAocHJlZmlsdGVycyBtaWdodCBleHBlY3QgaXQpXG5cdFx0Ly8gSGFuZGxlIGZhbHN5IHVybCBpbiB0aGUgc2V0dGluZ3Mgb2JqZWN0ICgjMTAwOTM6IGNvbnNpc3RlbmN5IHdpdGggb2xkIHNpZ25hdHVyZSlcblx0XHQvLyBXZSBhbHNvIHVzZSB0aGUgdXJsIHBhcmFtZXRlciBpZiBhdmFpbGFibGVcblx0XHRzLnVybCA9ICggKCB1cmwgfHwgcy51cmwgfHwgbG9jYXRpb24uaHJlZiApICsgXCJcIiApXG5cdFx0XHQucmVwbGFjZSggcnByb3RvY29sLCBsb2NhdGlvbi5wcm90b2NvbCArIFwiLy9cIiApO1xuXG5cdFx0Ly8gQWxpYXMgbWV0aG9kIG9wdGlvbiB0byB0eXBlIGFzIHBlciB0aWNrZXQgIzEyMDA0XG5cdFx0cy50eXBlID0gb3B0aW9ucy5tZXRob2QgfHwgb3B0aW9ucy50eXBlIHx8IHMubWV0aG9kIHx8IHMudHlwZTtcblxuXHRcdC8vIEV4dHJhY3QgZGF0YVR5cGVzIGxpc3Rcblx0XHRzLmRhdGFUeXBlcyA9ICggcy5kYXRhVHlwZSB8fCBcIipcIiApLnRvTG93ZXJDYXNlKCkubWF0Y2goIHJub3RodG1sd2hpdGUgKSB8fCBbIFwiXCIgXTtcblxuXHRcdC8vIEEgY3Jvc3MtZG9tYWluIHJlcXVlc3QgaXMgaW4gb3JkZXIgd2hlbiB0aGUgb3JpZ2luIGRvZXNuJ3QgbWF0Y2ggdGhlIGN1cnJlbnQgb3JpZ2luLlxuXHRcdGlmICggcy5jcm9zc0RvbWFpbiA9PSBudWxsICkge1xuXHRcdFx0dXJsQW5jaG9yID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCggXCJhXCIgKTtcblxuXHRcdFx0Ly8gU3VwcG9ydDogSUUgPD04IC0gMTEsIEVkZ2UgMTIgLSAxNVxuXHRcdFx0Ly8gSUUgdGhyb3dzIGV4Y2VwdGlvbiBvbiBhY2Nlc3NpbmcgdGhlIGhyZWYgcHJvcGVydHkgaWYgdXJsIGlzIG1hbGZvcm1lZCxcblx0XHRcdC8vIGUuZy4gaHR0cDovL2V4YW1wbGUuY29tOjgweC9cblx0XHRcdHRyeSB7XG5cdFx0XHRcdHVybEFuY2hvci5ocmVmID0gcy51cmw7XG5cblx0XHRcdFx0Ly8gU3VwcG9ydDogSUUgPD04IC0gMTEgb25seVxuXHRcdFx0XHQvLyBBbmNob3IncyBob3N0IHByb3BlcnR5IGlzbid0IGNvcnJlY3RseSBzZXQgd2hlbiBzLnVybCBpcyByZWxhdGl2ZVxuXHRcdFx0XHR1cmxBbmNob3IuaHJlZiA9IHVybEFuY2hvci5ocmVmO1xuXHRcdFx0XHRzLmNyb3NzRG9tYWluID0gb3JpZ2luQW5jaG9yLnByb3RvY29sICsgXCIvL1wiICsgb3JpZ2luQW5jaG9yLmhvc3QgIT09XG5cdFx0XHRcdFx0dXJsQW5jaG9yLnByb3RvY29sICsgXCIvL1wiICsgdXJsQW5jaG9yLmhvc3Q7XG5cdFx0XHR9IGNhdGNoICggZSApIHtcblxuXHRcdFx0XHQvLyBJZiB0aGVyZSBpcyBhbiBlcnJvciBwYXJzaW5nIHRoZSBVUkwsIGFzc3VtZSBpdCBpcyBjcm9zc0RvbWFpbixcblx0XHRcdFx0Ly8gaXQgY2FuIGJlIHJlamVjdGVkIGJ5IHRoZSB0cmFuc3BvcnQgaWYgaXQgaXMgaW52YWxpZFxuXHRcdFx0XHRzLmNyb3NzRG9tYWluID0gdHJ1ZTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHQvLyBDb252ZXJ0IGRhdGEgaWYgbm90IGFscmVhZHkgYSBzdHJpbmdcblx0XHRpZiAoIHMuZGF0YSAmJiBzLnByb2Nlc3NEYXRhICYmIHR5cGVvZiBzLmRhdGEgIT09IFwic3RyaW5nXCIgKSB7XG5cdFx0XHRzLmRhdGEgPSBqUXVlcnkucGFyYW0oIHMuZGF0YSwgcy50cmFkaXRpb25hbCApO1xuXHRcdH1cblxuXHRcdC8vIEFwcGx5IHByZWZpbHRlcnNcblx0XHRpbnNwZWN0UHJlZmlsdGVyc09yVHJhbnNwb3J0cyggcHJlZmlsdGVycywgcywgb3B0aW9ucywganFYSFIgKTtcblxuXHRcdC8vIElmIHJlcXVlc3Qgd2FzIGFib3J0ZWQgaW5zaWRlIGEgcHJlZmlsdGVyLCBzdG9wIHRoZXJlXG5cdFx0aWYgKCBjb21wbGV0ZWQgKSB7XG5cdFx0XHRyZXR1cm4ganFYSFI7XG5cdFx0fVxuXG5cdFx0Ly8gV2UgY2FuIGZpcmUgZ2xvYmFsIGV2ZW50cyBhcyBvZiBub3cgaWYgYXNrZWQgdG9cblx0XHQvLyBEb24ndCBmaXJlIGV2ZW50cyBpZiBqUXVlcnkuZXZlbnQgaXMgdW5kZWZpbmVkIGluIGFuIEFNRC11c2FnZSBzY2VuYXJpbyAoIzE1MTE4KVxuXHRcdGZpcmVHbG9iYWxzID0galF1ZXJ5LmV2ZW50ICYmIHMuZ2xvYmFsO1xuXG5cdFx0Ly8gV2F0Y2ggZm9yIGEgbmV3IHNldCBvZiByZXF1ZXN0c1xuXHRcdGlmICggZmlyZUdsb2JhbHMgJiYgalF1ZXJ5LmFjdGl2ZSsrID09PSAwICkge1xuXHRcdFx0alF1ZXJ5LmV2ZW50LnRyaWdnZXIoIFwiYWpheFN0YXJ0XCIgKTtcblx0XHR9XG5cblx0XHQvLyBVcHBlcmNhc2UgdGhlIHR5cGVcblx0XHRzLnR5cGUgPSBzLnR5cGUudG9VcHBlckNhc2UoKTtcblxuXHRcdC8vIERldGVybWluZSBpZiByZXF1ZXN0IGhhcyBjb250ZW50XG5cdFx0cy5oYXNDb250ZW50ID0gIXJub0NvbnRlbnQudGVzdCggcy50eXBlICk7XG5cblx0XHQvLyBTYXZlIHRoZSBVUkwgaW4gY2FzZSB3ZSdyZSB0b3lpbmcgd2l0aCB0aGUgSWYtTW9kaWZpZWQtU2luY2Vcblx0XHQvLyBhbmQvb3IgSWYtTm9uZS1NYXRjaCBoZWFkZXIgbGF0ZXIgb25cblx0XHQvLyBSZW1vdmUgaGFzaCB0byBzaW1wbGlmeSB1cmwgbWFuaXB1bGF0aW9uXG5cdFx0Y2FjaGVVUkwgPSBzLnVybC5yZXBsYWNlKCByaGFzaCwgXCJcIiApO1xuXG5cdFx0Ly8gTW9yZSBvcHRpb25zIGhhbmRsaW5nIGZvciByZXF1ZXN0cyB3aXRoIG5vIGNvbnRlbnRcblx0XHRpZiAoICFzLmhhc0NvbnRlbnQgKSB7XG5cblx0XHRcdC8vIFJlbWVtYmVyIHRoZSBoYXNoIHNvIHdlIGNhbiBwdXQgaXQgYmFja1xuXHRcdFx0dW5jYWNoZWQgPSBzLnVybC5zbGljZSggY2FjaGVVUkwubGVuZ3RoICk7XG5cblx0XHRcdC8vIElmIGRhdGEgaXMgYXZhaWxhYmxlIGFuZCBzaG91bGQgYmUgcHJvY2Vzc2VkLCBhcHBlbmQgZGF0YSB0byB1cmxcblx0XHRcdGlmICggcy5kYXRhICYmICggcy5wcm9jZXNzRGF0YSB8fCB0eXBlb2Ygcy5kYXRhID09PSBcInN0cmluZ1wiICkgKSB7XG5cdFx0XHRcdGNhY2hlVVJMICs9ICggcnF1ZXJ5LnRlc3QoIGNhY2hlVVJMICkgPyBcIiZcIiA6IFwiP1wiICkgKyBzLmRhdGE7XG5cblx0XHRcdFx0Ly8gIzk2ODI6IHJlbW92ZSBkYXRhIHNvIHRoYXQgaXQncyBub3QgdXNlZCBpbiBhbiBldmVudHVhbCByZXRyeVxuXHRcdFx0XHRkZWxldGUgcy5kYXRhO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBBZGQgb3IgdXBkYXRlIGFudGktY2FjaGUgcGFyYW0gaWYgbmVlZGVkXG5cdFx0XHRpZiAoIHMuY2FjaGUgPT09IGZhbHNlICkge1xuXHRcdFx0XHRjYWNoZVVSTCA9IGNhY2hlVVJMLnJlcGxhY2UoIHJhbnRpQ2FjaGUsIFwiJDFcIiApO1xuXHRcdFx0XHR1bmNhY2hlZCA9ICggcnF1ZXJ5LnRlc3QoIGNhY2hlVVJMICkgPyBcIiZcIiA6IFwiP1wiICkgKyBcIl89XCIgKyAoIG5vbmNlLmd1aWQrKyApICtcblx0XHRcdFx0XHR1bmNhY2hlZDtcblx0XHRcdH1cblxuXHRcdFx0Ly8gUHV0IGhhc2ggYW5kIGFudGktY2FjaGUgb24gdGhlIFVSTCB0aGF0IHdpbGwgYmUgcmVxdWVzdGVkIChnaC0xNzMyKVxuXHRcdFx0cy51cmwgPSBjYWNoZVVSTCArIHVuY2FjaGVkO1xuXG5cdFx0Ly8gQ2hhbmdlICclMjAnIHRvICcrJyBpZiB0aGlzIGlzIGVuY29kZWQgZm9ybSBib2R5IGNvbnRlbnQgKGdoLTI2NTgpXG5cdFx0fSBlbHNlIGlmICggcy5kYXRhICYmIHMucHJvY2Vzc0RhdGEgJiZcblx0XHRcdCggcy5jb250ZW50VHlwZSB8fCBcIlwiICkuaW5kZXhPZiggXCJhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWRcIiApID09PSAwICkge1xuXHRcdFx0cy5kYXRhID0gcy5kYXRhLnJlcGxhY2UoIHIyMCwgXCIrXCIgKTtcblx0XHR9XG5cblx0XHQvLyBTZXQgdGhlIElmLU1vZGlmaWVkLVNpbmNlIGFuZC9vciBJZi1Ob25lLU1hdGNoIGhlYWRlciwgaWYgaW4gaWZNb2RpZmllZCBtb2RlLlxuXHRcdGlmICggcy5pZk1vZGlmaWVkICkge1xuXHRcdFx0aWYgKCBqUXVlcnkubGFzdE1vZGlmaWVkWyBjYWNoZVVSTCBdICkge1xuXHRcdFx0XHRqcVhIUi5zZXRSZXF1ZXN0SGVhZGVyKCBcIklmLU1vZGlmaWVkLVNpbmNlXCIsIGpRdWVyeS5sYXN0TW9kaWZpZWRbIGNhY2hlVVJMIF0gKTtcblx0XHRcdH1cblx0XHRcdGlmICggalF1ZXJ5LmV0YWdbIGNhY2hlVVJMIF0gKSB7XG5cdFx0XHRcdGpxWEhSLnNldFJlcXVlc3RIZWFkZXIoIFwiSWYtTm9uZS1NYXRjaFwiLCBqUXVlcnkuZXRhZ1sgY2FjaGVVUkwgXSApO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdC8vIFNldCB0aGUgY29ycmVjdCBoZWFkZXIsIGlmIGRhdGEgaXMgYmVpbmcgc2VudFxuXHRcdGlmICggcy5kYXRhICYmIHMuaGFzQ29udGVudCAmJiBzLmNvbnRlbnRUeXBlICE9PSBmYWxzZSB8fCBvcHRpb25zLmNvbnRlbnRUeXBlICkge1xuXHRcdFx0anFYSFIuc2V0UmVxdWVzdEhlYWRlciggXCJDb250ZW50LVR5cGVcIiwgcy5jb250ZW50VHlwZSApO1xuXHRcdH1cblxuXHRcdC8vIFNldCB0aGUgQWNjZXB0cyBoZWFkZXIgZm9yIHRoZSBzZXJ2ZXIsIGRlcGVuZGluZyBvbiB0aGUgZGF0YVR5cGVcblx0XHRqcVhIUi5zZXRSZXF1ZXN0SGVhZGVyKFxuXHRcdFx0XCJBY2NlcHRcIixcblx0XHRcdHMuZGF0YVR5cGVzWyAwIF0gJiYgcy5hY2NlcHRzWyBzLmRhdGFUeXBlc1sgMCBdIF0gP1xuXHRcdFx0XHRzLmFjY2VwdHNbIHMuZGF0YVR5cGVzWyAwIF0gXSArXG5cdFx0XHRcdFx0KCBzLmRhdGFUeXBlc1sgMCBdICE9PSBcIipcIiA/IFwiLCBcIiArIGFsbFR5cGVzICsgXCI7IHE9MC4wMVwiIDogXCJcIiApIDpcblx0XHRcdFx0cy5hY2NlcHRzWyBcIipcIiBdXG5cdFx0KTtcblxuXHRcdC8vIENoZWNrIGZvciBoZWFkZXJzIG9wdGlvblxuXHRcdGZvciAoIGkgaW4gcy5oZWFkZXJzICkge1xuXHRcdFx0anFYSFIuc2V0UmVxdWVzdEhlYWRlciggaSwgcy5oZWFkZXJzWyBpIF0gKTtcblx0XHR9XG5cblx0XHQvLyBBbGxvdyBjdXN0b20gaGVhZGVycy9taW1ldHlwZXMgYW5kIGVhcmx5IGFib3J0XG5cdFx0aWYgKCBzLmJlZm9yZVNlbmQgJiZcblx0XHRcdCggcy5iZWZvcmVTZW5kLmNhbGwoIGNhbGxiYWNrQ29udGV4dCwganFYSFIsIHMgKSA9PT0gZmFsc2UgfHwgY29tcGxldGVkICkgKSB7XG5cblx0XHRcdC8vIEFib3J0IGlmIG5vdCBkb25lIGFscmVhZHkgYW5kIHJldHVyblxuXHRcdFx0cmV0dXJuIGpxWEhSLmFib3J0KCk7XG5cdFx0fVxuXG5cdFx0Ly8gQWJvcnRpbmcgaXMgbm8gbG9uZ2VyIGEgY2FuY2VsbGF0aW9uXG5cdFx0c3RyQWJvcnQgPSBcImFib3J0XCI7XG5cblx0XHQvLyBJbnN0YWxsIGNhbGxiYWNrcyBvbiBkZWZlcnJlZHNcblx0XHRjb21wbGV0ZURlZmVycmVkLmFkZCggcy5jb21wbGV0ZSApO1xuXHRcdGpxWEhSLmRvbmUoIHMuc3VjY2VzcyApO1xuXHRcdGpxWEhSLmZhaWwoIHMuZXJyb3IgKTtcblxuXHRcdC8vIEdldCB0cmFuc3BvcnRcblx0XHR0cmFuc3BvcnQgPSBpbnNwZWN0UHJlZmlsdGVyc09yVHJhbnNwb3J0cyggdHJhbnNwb3J0cywgcywgb3B0aW9ucywganFYSFIgKTtcblxuXHRcdC8vIElmIG5vIHRyYW5zcG9ydCwgd2UgYXV0by1hYm9ydFxuXHRcdGlmICggIXRyYW5zcG9ydCApIHtcblx0XHRcdGRvbmUoIC0xLCBcIk5vIFRyYW5zcG9ydFwiICk7XG5cdFx0fSBlbHNlIHtcblx0XHRcdGpxWEhSLnJlYWR5U3RhdGUgPSAxO1xuXG5cdFx0XHQvLyBTZW5kIGdsb2JhbCBldmVudFxuXHRcdFx0aWYgKCBmaXJlR2xvYmFscyApIHtcblx0XHRcdFx0Z2xvYmFsRXZlbnRDb250ZXh0LnRyaWdnZXIoIFwiYWpheFNlbmRcIiwgWyBqcVhIUiwgcyBdICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIElmIHJlcXVlc3Qgd2FzIGFib3J0ZWQgaW5zaWRlIGFqYXhTZW5kLCBzdG9wIHRoZXJlXG5cdFx0XHRpZiAoIGNvbXBsZXRlZCApIHtcblx0XHRcdFx0cmV0dXJuIGpxWEhSO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBUaW1lb3V0XG5cdFx0XHRpZiAoIHMuYXN5bmMgJiYgcy50aW1lb3V0ID4gMCApIHtcblx0XHRcdFx0dGltZW91dFRpbWVyID0gd2luZG93LnNldFRpbWVvdXQoIGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRcdGpxWEhSLmFib3J0KCBcInRpbWVvdXRcIiApO1xuXHRcdFx0XHR9LCBzLnRpbWVvdXQgKTtcblx0XHRcdH1cblxuXHRcdFx0dHJ5IHtcblx0XHRcdFx0Y29tcGxldGVkID0gZmFsc2U7XG5cdFx0XHRcdHRyYW5zcG9ydC5zZW5kKCByZXF1ZXN0SGVhZGVycywgZG9uZSApO1xuXHRcdFx0fSBjYXRjaCAoIGUgKSB7XG5cblx0XHRcdFx0Ly8gUmV0aHJvdyBwb3N0LWNvbXBsZXRpb24gZXhjZXB0aW9uc1xuXHRcdFx0XHRpZiAoIGNvbXBsZXRlZCApIHtcblx0XHRcdFx0XHR0aHJvdyBlO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gUHJvcGFnYXRlIG90aGVycyBhcyByZXN1bHRzXG5cdFx0XHRcdGRvbmUoIC0xLCBlICk7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0Ly8gQ2FsbGJhY2sgZm9yIHdoZW4gZXZlcnl0aGluZyBpcyBkb25lXG5cdFx0ZnVuY3Rpb24gZG9uZSggc3RhdHVzLCBuYXRpdmVTdGF0dXNUZXh0LCByZXNwb25zZXMsIGhlYWRlcnMgKSB7XG5cdFx0XHR2YXIgaXNTdWNjZXNzLCBzdWNjZXNzLCBlcnJvciwgcmVzcG9uc2UsIG1vZGlmaWVkLFxuXHRcdFx0XHRzdGF0dXNUZXh0ID0gbmF0aXZlU3RhdHVzVGV4dDtcblxuXHRcdFx0Ly8gSWdub3JlIHJlcGVhdCBpbnZvY2F0aW9uc1xuXHRcdFx0aWYgKCBjb21wbGV0ZWQgKSB7XG5cdFx0XHRcdHJldHVybjtcblx0XHRcdH1cblxuXHRcdFx0Y29tcGxldGVkID0gdHJ1ZTtcblxuXHRcdFx0Ly8gQ2xlYXIgdGltZW91dCBpZiBpdCBleGlzdHNcblx0XHRcdGlmICggdGltZW91dFRpbWVyICkge1xuXHRcdFx0XHR3aW5kb3cuY2xlYXJUaW1lb3V0KCB0aW1lb3V0VGltZXIgKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gRGVyZWZlcmVuY2UgdHJhbnNwb3J0IGZvciBlYXJseSBnYXJiYWdlIGNvbGxlY3Rpb25cblx0XHRcdC8vIChubyBtYXR0ZXIgaG93IGxvbmcgdGhlIGpxWEhSIG9iamVjdCB3aWxsIGJlIHVzZWQpXG5cdFx0XHR0cmFuc3BvcnQgPSB1bmRlZmluZWQ7XG5cblx0XHRcdC8vIENhY2hlIHJlc3BvbnNlIGhlYWRlcnNcblx0XHRcdHJlc3BvbnNlSGVhZGVyc1N0cmluZyA9IGhlYWRlcnMgfHwgXCJcIjtcblxuXHRcdFx0Ly8gU2V0IHJlYWR5U3RhdGVcblx0XHRcdGpxWEhSLnJlYWR5U3RhdGUgPSBzdGF0dXMgPiAwID8gNCA6IDA7XG5cblx0XHRcdC8vIERldGVybWluZSBpZiBzdWNjZXNzZnVsXG5cdFx0XHRpc1N1Y2Nlc3MgPSBzdGF0dXMgPj0gMjAwICYmIHN0YXR1cyA8IDMwMCB8fCBzdGF0dXMgPT09IDMwNDtcblxuXHRcdFx0Ly8gR2V0IHJlc3BvbnNlIGRhdGFcblx0XHRcdGlmICggcmVzcG9uc2VzICkge1xuXHRcdFx0XHRyZXNwb25zZSA9IGFqYXhIYW5kbGVSZXNwb25zZXMoIHMsIGpxWEhSLCByZXNwb25zZXMgKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gVXNlIGEgbm9vcCBjb252ZXJ0ZXIgZm9yIG1pc3Npbmcgc2NyaXB0XG5cdFx0XHRpZiAoICFpc1N1Y2Nlc3MgJiYgalF1ZXJ5LmluQXJyYXkoIFwic2NyaXB0XCIsIHMuZGF0YVR5cGVzICkgPiAtMSApIHtcblx0XHRcdFx0cy5jb252ZXJ0ZXJzWyBcInRleHQgc2NyaXB0XCIgXSA9IGZ1bmN0aW9uKCkge307XG5cdFx0XHR9XG5cblx0XHRcdC8vIENvbnZlcnQgbm8gbWF0dGVyIHdoYXQgKHRoYXQgd2F5IHJlc3BvbnNlWFhYIGZpZWxkcyBhcmUgYWx3YXlzIHNldClcblx0XHRcdHJlc3BvbnNlID0gYWpheENvbnZlcnQoIHMsIHJlc3BvbnNlLCBqcVhIUiwgaXNTdWNjZXNzICk7XG5cblx0XHRcdC8vIElmIHN1Y2Nlc3NmdWwsIGhhbmRsZSB0eXBlIGNoYWluaW5nXG5cdFx0XHRpZiAoIGlzU3VjY2VzcyApIHtcblxuXHRcdFx0XHQvLyBTZXQgdGhlIElmLU1vZGlmaWVkLVNpbmNlIGFuZC9vciBJZi1Ob25lLU1hdGNoIGhlYWRlciwgaWYgaW4gaWZNb2RpZmllZCBtb2RlLlxuXHRcdFx0XHRpZiAoIHMuaWZNb2RpZmllZCApIHtcblx0XHRcdFx0XHRtb2RpZmllZCA9IGpxWEhSLmdldFJlc3BvbnNlSGVhZGVyKCBcIkxhc3QtTW9kaWZpZWRcIiApO1xuXHRcdFx0XHRcdGlmICggbW9kaWZpZWQgKSB7XG5cdFx0XHRcdFx0XHRqUXVlcnkubGFzdE1vZGlmaWVkWyBjYWNoZVVSTCBdID0gbW9kaWZpZWQ7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdG1vZGlmaWVkID0ganFYSFIuZ2V0UmVzcG9uc2VIZWFkZXIoIFwiZXRhZ1wiICk7XG5cdFx0XHRcdFx0aWYgKCBtb2RpZmllZCApIHtcblx0XHRcdFx0XHRcdGpRdWVyeS5ldGFnWyBjYWNoZVVSTCBdID0gbW9kaWZpZWQ7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gaWYgbm8gY29udGVudFxuXHRcdFx0XHRpZiAoIHN0YXR1cyA9PT0gMjA0IHx8IHMudHlwZSA9PT0gXCJIRUFEXCIgKSB7XG5cdFx0XHRcdFx0c3RhdHVzVGV4dCA9IFwibm9jb250ZW50XCI7XG5cblx0XHRcdFx0Ly8gaWYgbm90IG1vZGlmaWVkXG5cdFx0XHRcdH0gZWxzZSBpZiAoIHN0YXR1cyA9PT0gMzA0ICkge1xuXHRcdFx0XHRcdHN0YXR1c1RleHQgPSBcIm5vdG1vZGlmaWVkXCI7XG5cblx0XHRcdFx0Ly8gSWYgd2UgaGF2ZSBkYXRhLCBsZXQncyBjb252ZXJ0IGl0XG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0c3RhdHVzVGV4dCA9IHJlc3BvbnNlLnN0YXRlO1xuXHRcdFx0XHRcdHN1Y2Nlc3MgPSByZXNwb25zZS5kYXRhO1xuXHRcdFx0XHRcdGVycm9yID0gcmVzcG9uc2UuZXJyb3I7XG5cdFx0XHRcdFx0aXNTdWNjZXNzID0gIWVycm9yO1xuXHRcdFx0XHR9XG5cdFx0XHR9IGVsc2Uge1xuXG5cdFx0XHRcdC8vIEV4dHJhY3QgZXJyb3IgZnJvbSBzdGF0dXNUZXh0IGFuZCBub3JtYWxpemUgZm9yIG5vbi1hYm9ydHNcblx0XHRcdFx0ZXJyb3IgPSBzdGF0dXNUZXh0O1xuXHRcdFx0XHRpZiAoIHN0YXR1cyB8fCAhc3RhdHVzVGV4dCApIHtcblx0XHRcdFx0XHRzdGF0dXNUZXh0ID0gXCJlcnJvclwiO1xuXHRcdFx0XHRcdGlmICggc3RhdHVzIDwgMCApIHtcblx0XHRcdFx0XHRcdHN0YXR1cyA9IDA7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHRcdC8vIFNldCBkYXRhIGZvciB0aGUgZmFrZSB4aHIgb2JqZWN0XG5cdFx0XHRqcVhIUi5zdGF0dXMgPSBzdGF0dXM7XG5cdFx0XHRqcVhIUi5zdGF0dXNUZXh0ID0gKCBuYXRpdmVTdGF0dXNUZXh0IHx8IHN0YXR1c1RleHQgKSArIFwiXCI7XG5cblx0XHRcdC8vIFN1Y2Nlc3MvRXJyb3Jcblx0XHRcdGlmICggaXNTdWNjZXNzICkge1xuXHRcdFx0XHRkZWZlcnJlZC5yZXNvbHZlV2l0aCggY2FsbGJhY2tDb250ZXh0LCBbIHN1Y2Nlc3MsIHN0YXR1c1RleHQsIGpxWEhSIF0gKTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdGRlZmVycmVkLnJlamVjdFdpdGgoIGNhbGxiYWNrQ29udGV4dCwgWyBqcVhIUiwgc3RhdHVzVGV4dCwgZXJyb3IgXSApO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBTdGF0dXMtZGVwZW5kZW50IGNhbGxiYWNrc1xuXHRcdFx0anFYSFIuc3RhdHVzQ29kZSggc3RhdHVzQ29kZSApO1xuXHRcdFx0c3RhdHVzQ29kZSA9IHVuZGVmaW5lZDtcblxuXHRcdFx0aWYgKCBmaXJlR2xvYmFscyApIHtcblx0XHRcdFx0Z2xvYmFsRXZlbnRDb250ZXh0LnRyaWdnZXIoIGlzU3VjY2VzcyA/IFwiYWpheFN1Y2Nlc3NcIiA6IFwiYWpheEVycm9yXCIsXG5cdFx0XHRcdFx0WyBqcVhIUiwgcywgaXNTdWNjZXNzID8gc3VjY2VzcyA6IGVycm9yIF0gKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gQ29tcGxldGVcblx0XHRcdGNvbXBsZXRlRGVmZXJyZWQuZmlyZVdpdGgoIGNhbGxiYWNrQ29udGV4dCwgWyBqcVhIUiwgc3RhdHVzVGV4dCBdICk7XG5cblx0XHRcdGlmICggZmlyZUdsb2JhbHMgKSB7XG5cdFx0XHRcdGdsb2JhbEV2ZW50Q29udGV4dC50cmlnZ2VyKCBcImFqYXhDb21wbGV0ZVwiLCBbIGpxWEhSLCBzIF0gKTtcblxuXHRcdFx0XHQvLyBIYW5kbGUgdGhlIGdsb2JhbCBBSkFYIGNvdW50ZXJcblx0XHRcdFx0aWYgKCAhKCAtLWpRdWVyeS5hY3RpdmUgKSApIHtcblx0XHRcdFx0XHRqUXVlcnkuZXZlbnQudHJpZ2dlciggXCJhamF4U3RvcFwiICk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cblx0XHRyZXR1cm4ganFYSFI7XG5cdH0sXG5cblx0Z2V0SlNPTjogZnVuY3Rpb24oIHVybCwgZGF0YSwgY2FsbGJhY2sgKSB7XG5cdFx0cmV0dXJuIGpRdWVyeS5nZXQoIHVybCwgZGF0YSwgY2FsbGJhY2ssIFwianNvblwiICk7XG5cdH0sXG5cblx0Z2V0U2NyaXB0OiBmdW5jdGlvbiggdXJsLCBjYWxsYmFjayApIHtcblx0XHRyZXR1cm4galF1ZXJ5LmdldCggdXJsLCB1bmRlZmluZWQsIGNhbGxiYWNrLCBcInNjcmlwdFwiICk7XG5cdH1cbn0gKTtcblxualF1ZXJ5LmVhY2goIFsgXCJnZXRcIiwgXCJwb3N0XCIgXSwgZnVuY3Rpb24oIF9pLCBtZXRob2QgKSB7XG5cdGpRdWVyeVsgbWV0aG9kIF0gPSBmdW5jdGlvbiggdXJsLCBkYXRhLCBjYWxsYmFjaywgdHlwZSApIHtcblxuXHRcdC8vIFNoaWZ0IGFyZ3VtZW50cyBpZiBkYXRhIGFyZ3VtZW50IHdhcyBvbWl0dGVkXG5cdFx0aWYgKCBpc0Z1bmN0aW9uKCBkYXRhICkgKSB7XG5cdFx0XHR0eXBlID0gdHlwZSB8fCBjYWxsYmFjaztcblx0XHRcdGNhbGxiYWNrID0gZGF0YTtcblx0XHRcdGRhdGEgPSB1bmRlZmluZWQ7XG5cdFx0fVxuXG5cdFx0Ly8gVGhlIHVybCBjYW4gYmUgYW4gb3B0aW9ucyBvYmplY3QgKHdoaWNoIHRoZW4gbXVzdCBoYXZlIC51cmwpXG5cdFx0cmV0dXJuIGpRdWVyeS5hamF4KCBqUXVlcnkuZXh0ZW5kKCB7XG5cdFx0XHR1cmw6IHVybCxcblx0XHRcdHR5cGU6IG1ldGhvZCxcblx0XHRcdGRhdGFUeXBlOiB0eXBlLFxuXHRcdFx0ZGF0YTogZGF0YSxcblx0XHRcdHN1Y2Nlc3M6IGNhbGxiYWNrXG5cdFx0fSwgalF1ZXJ5LmlzUGxhaW5PYmplY3QoIHVybCApICYmIHVybCApICk7XG5cdH07XG59ICk7XG5cbmpRdWVyeS5hamF4UHJlZmlsdGVyKCBmdW5jdGlvbiggcyApIHtcblx0dmFyIGk7XG5cdGZvciAoIGkgaW4gcy5oZWFkZXJzICkge1xuXHRcdGlmICggaS50b0xvd2VyQ2FzZSgpID09PSBcImNvbnRlbnQtdHlwZVwiICkge1xuXHRcdFx0cy5jb250ZW50VHlwZSA9IHMuaGVhZGVyc1sgaSBdIHx8IFwiXCI7XG5cdFx0fVxuXHR9XG59ICk7XG5cblxualF1ZXJ5Ll9ldmFsVXJsID0gZnVuY3Rpb24oIHVybCwgb3B0aW9ucywgZG9jICkge1xuXHRyZXR1cm4galF1ZXJ5LmFqYXgoIHtcblx0XHR1cmw6IHVybCxcblxuXHRcdC8vIE1ha2UgdGhpcyBleHBsaWNpdCwgc2luY2UgdXNlciBjYW4gb3ZlcnJpZGUgdGhpcyB0aHJvdWdoIGFqYXhTZXR1cCAoIzExMjY0KVxuXHRcdHR5cGU6IFwiR0VUXCIsXG5cdFx0ZGF0YVR5cGU6IFwic2NyaXB0XCIsXG5cdFx0Y2FjaGU6IHRydWUsXG5cdFx0YXN5bmM6IGZhbHNlLFxuXHRcdGdsb2JhbDogZmFsc2UsXG5cblx0XHQvLyBPbmx5IGV2YWx1YXRlIHRoZSByZXNwb25zZSBpZiBpdCBpcyBzdWNjZXNzZnVsIChnaC00MTI2KVxuXHRcdC8vIGRhdGFGaWx0ZXIgaXMgbm90IGludm9rZWQgZm9yIGZhaWx1cmUgcmVzcG9uc2VzLCBzbyB1c2luZyBpdCBpbnN0ZWFkXG5cdFx0Ly8gb2YgdGhlIGRlZmF1bHQgY29udmVydGVyIGlzIGtsdWRneSBidXQgaXQgd29ya3MuXG5cdFx0Y29udmVydGVyczoge1xuXHRcdFx0XCJ0ZXh0IHNjcmlwdFwiOiBmdW5jdGlvbigpIHt9XG5cdFx0fSxcblx0XHRkYXRhRmlsdGVyOiBmdW5jdGlvbiggcmVzcG9uc2UgKSB7XG5cdFx0XHRqUXVlcnkuZ2xvYmFsRXZhbCggcmVzcG9uc2UsIG9wdGlvbnMsIGRvYyApO1xuXHRcdH1cblx0fSApO1xufTtcblxuXG5qUXVlcnkuZm4uZXh0ZW5kKCB7XG5cdHdyYXBBbGw6IGZ1bmN0aW9uKCBodG1sICkge1xuXHRcdHZhciB3cmFwO1xuXG5cdFx0aWYgKCB0aGlzWyAwIF0gKSB7XG5cdFx0XHRpZiAoIGlzRnVuY3Rpb24oIGh0bWwgKSApIHtcblx0XHRcdFx0aHRtbCA9IGh0bWwuY2FsbCggdGhpc1sgMCBdICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIFRoZSBlbGVtZW50cyB0byB3cmFwIHRoZSB0YXJnZXQgYXJvdW5kXG5cdFx0XHR3cmFwID0galF1ZXJ5KCBodG1sLCB0aGlzWyAwIF0ub3duZXJEb2N1bWVudCApLmVxKCAwICkuY2xvbmUoIHRydWUgKTtcblxuXHRcdFx0aWYgKCB0aGlzWyAwIF0ucGFyZW50Tm9kZSApIHtcblx0XHRcdFx0d3JhcC5pbnNlcnRCZWZvcmUoIHRoaXNbIDAgXSApO1xuXHRcdFx0fVxuXG5cdFx0XHR3cmFwLm1hcCggZnVuY3Rpb24oKSB7XG5cdFx0XHRcdHZhciBlbGVtID0gdGhpcztcblxuXHRcdFx0XHR3aGlsZSAoIGVsZW0uZmlyc3RFbGVtZW50Q2hpbGQgKSB7XG5cdFx0XHRcdFx0ZWxlbSA9IGVsZW0uZmlyc3RFbGVtZW50Q2hpbGQ7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRyZXR1cm4gZWxlbTtcblx0XHRcdH0gKS5hcHBlbmQoIHRoaXMgKTtcblx0XHR9XG5cblx0XHRyZXR1cm4gdGhpcztcblx0fSxcblxuXHR3cmFwSW5uZXI6IGZ1bmN0aW9uKCBodG1sICkge1xuXHRcdGlmICggaXNGdW5jdGlvbiggaHRtbCApICkge1xuXHRcdFx0cmV0dXJuIHRoaXMuZWFjaCggZnVuY3Rpb24oIGkgKSB7XG5cdFx0XHRcdGpRdWVyeSggdGhpcyApLndyYXBJbm5lciggaHRtbC5jYWxsKCB0aGlzLCBpICkgKTtcblx0XHRcdH0gKTtcblx0XHR9XG5cblx0XHRyZXR1cm4gdGhpcy5lYWNoKCBmdW5jdGlvbigpIHtcblx0XHRcdHZhciBzZWxmID0galF1ZXJ5KCB0aGlzICksXG5cdFx0XHRcdGNvbnRlbnRzID0gc2VsZi5jb250ZW50cygpO1xuXG5cdFx0XHRpZiAoIGNvbnRlbnRzLmxlbmd0aCApIHtcblx0XHRcdFx0Y29udGVudHMud3JhcEFsbCggaHRtbCApO1xuXG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRzZWxmLmFwcGVuZCggaHRtbCApO1xuXHRcdFx0fVxuXHRcdH0gKTtcblx0fSxcblxuXHR3cmFwOiBmdW5jdGlvbiggaHRtbCApIHtcblx0XHR2YXIgaHRtbElzRnVuY3Rpb24gPSBpc0Z1bmN0aW9uKCBodG1sICk7XG5cblx0XHRyZXR1cm4gdGhpcy5lYWNoKCBmdW5jdGlvbiggaSApIHtcblx0XHRcdGpRdWVyeSggdGhpcyApLndyYXBBbGwoIGh0bWxJc0Z1bmN0aW9uID8gaHRtbC5jYWxsKCB0aGlzLCBpICkgOiBodG1sICk7XG5cdFx0fSApO1xuXHR9LFxuXG5cdHVud3JhcDogZnVuY3Rpb24oIHNlbGVjdG9yICkge1xuXHRcdHRoaXMucGFyZW50KCBzZWxlY3RvciApLm5vdCggXCJib2R5XCIgKS5lYWNoKCBmdW5jdGlvbigpIHtcblx0XHRcdGpRdWVyeSggdGhpcyApLnJlcGxhY2VXaXRoKCB0aGlzLmNoaWxkTm9kZXMgKTtcblx0XHR9ICk7XG5cdFx0cmV0dXJuIHRoaXM7XG5cdH1cbn0gKTtcblxuXG5qUXVlcnkuZXhwci5wc2V1ZG9zLmhpZGRlbiA9IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRyZXR1cm4gIWpRdWVyeS5leHByLnBzZXVkb3MudmlzaWJsZSggZWxlbSApO1xufTtcbmpRdWVyeS5leHByLnBzZXVkb3MudmlzaWJsZSA9IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRyZXR1cm4gISEoIGVsZW0ub2Zmc2V0V2lkdGggfHwgZWxlbS5vZmZzZXRIZWlnaHQgfHwgZWxlbS5nZXRDbGllbnRSZWN0cygpLmxlbmd0aCApO1xufTtcblxuXG5cblxualF1ZXJ5LmFqYXhTZXR0aW5ncy54aHIgPSBmdW5jdGlvbigpIHtcblx0dHJ5IHtcblx0XHRyZXR1cm4gbmV3IHdpbmRvdy5YTUxIdHRwUmVxdWVzdCgpO1xuXHR9IGNhdGNoICggZSApIHt9XG59O1xuXG52YXIgeGhyU3VjY2Vzc1N0YXR1cyA9IHtcblxuXHRcdC8vIEZpbGUgcHJvdG9jb2wgYWx3YXlzIHlpZWxkcyBzdGF0dXMgY29kZSAwLCBhc3N1bWUgMjAwXG5cdFx0MDogMjAwLFxuXG5cdFx0Ly8gU3VwcG9ydDogSUUgPD05IG9ubHlcblx0XHQvLyAjMTQ1MDogc29tZXRpbWVzIElFIHJldHVybnMgMTIyMyB3aGVuIGl0IHNob3VsZCBiZSAyMDRcblx0XHQxMjIzOiAyMDRcblx0fSxcblx0eGhyU3VwcG9ydGVkID0galF1ZXJ5LmFqYXhTZXR0aW5ncy54aHIoKTtcblxuc3VwcG9ydC5jb3JzID0gISF4aHJTdXBwb3J0ZWQgJiYgKCBcIndpdGhDcmVkZW50aWFsc1wiIGluIHhoclN1cHBvcnRlZCApO1xuc3VwcG9ydC5hamF4ID0geGhyU3VwcG9ydGVkID0gISF4aHJTdXBwb3J0ZWQ7XG5cbmpRdWVyeS5hamF4VHJhbnNwb3J0KCBmdW5jdGlvbiggb3B0aW9ucyApIHtcblx0dmFyIGNhbGxiYWNrLCBlcnJvckNhbGxiYWNrO1xuXG5cdC8vIENyb3NzIGRvbWFpbiBvbmx5IGFsbG93ZWQgaWYgc3VwcG9ydGVkIHRocm91Z2ggWE1MSHR0cFJlcXVlc3Rcblx0aWYgKCBzdXBwb3J0LmNvcnMgfHwgeGhyU3VwcG9ydGVkICYmICFvcHRpb25zLmNyb3NzRG9tYWluICkge1xuXHRcdHJldHVybiB7XG5cdFx0XHRzZW5kOiBmdW5jdGlvbiggaGVhZGVycywgY29tcGxldGUgKSB7XG5cdFx0XHRcdHZhciBpLFxuXHRcdFx0XHRcdHhociA9IG9wdGlvbnMueGhyKCk7XG5cblx0XHRcdFx0eGhyLm9wZW4oXG5cdFx0XHRcdFx0b3B0aW9ucy50eXBlLFxuXHRcdFx0XHRcdG9wdGlvbnMudXJsLFxuXHRcdFx0XHRcdG9wdGlvbnMuYXN5bmMsXG5cdFx0XHRcdFx0b3B0aW9ucy51c2VybmFtZSxcblx0XHRcdFx0XHRvcHRpb25zLnBhc3N3b3JkXG5cdFx0XHRcdCk7XG5cblx0XHRcdFx0Ly8gQXBwbHkgY3VzdG9tIGZpZWxkcyBpZiBwcm92aWRlZFxuXHRcdFx0XHRpZiAoIG9wdGlvbnMueGhyRmllbGRzICkge1xuXHRcdFx0XHRcdGZvciAoIGkgaW4gb3B0aW9ucy54aHJGaWVsZHMgKSB7XG5cdFx0XHRcdFx0XHR4aHJbIGkgXSA9IG9wdGlvbnMueGhyRmllbGRzWyBpIF07XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gT3ZlcnJpZGUgbWltZSB0eXBlIGlmIG5lZWRlZFxuXHRcdFx0XHRpZiAoIG9wdGlvbnMubWltZVR5cGUgJiYgeGhyLm92ZXJyaWRlTWltZVR5cGUgKSB7XG5cdFx0XHRcdFx0eGhyLm92ZXJyaWRlTWltZVR5cGUoIG9wdGlvbnMubWltZVR5cGUgKTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIFgtUmVxdWVzdGVkLVdpdGggaGVhZGVyXG5cdFx0XHRcdC8vIEZvciBjcm9zcy1kb21haW4gcmVxdWVzdHMsIHNlZWluZyBhcyBjb25kaXRpb25zIGZvciBhIHByZWZsaWdodCBhcmVcblx0XHRcdFx0Ly8gYWtpbiB0byBhIGppZ3NhdyBwdXp6bGUsIHdlIHNpbXBseSBuZXZlciBzZXQgaXQgdG8gYmUgc3VyZS5cblx0XHRcdFx0Ly8gKGl0IGNhbiBhbHdheXMgYmUgc2V0IG9uIGEgcGVyLXJlcXVlc3QgYmFzaXMgb3IgZXZlbiB1c2luZyBhamF4U2V0dXApXG5cdFx0XHRcdC8vIEZvciBzYW1lLWRvbWFpbiByZXF1ZXN0cywgd29uJ3QgY2hhbmdlIGhlYWRlciBpZiBhbHJlYWR5IHByb3ZpZGVkLlxuXHRcdFx0XHRpZiAoICFvcHRpb25zLmNyb3NzRG9tYWluICYmICFoZWFkZXJzWyBcIlgtUmVxdWVzdGVkLVdpdGhcIiBdICkge1xuXHRcdFx0XHRcdGhlYWRlcnNbIFwiWC1SZXF1ZXN0ZWQtV2l0aFwiIF0gPSBcIlhNTEh0dHBSZXF1ZXN0XCI7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBTZXQgaGVhZGVyc1xuXHRcdFx0XHRmb3IgKCBpIGluIGhlYWRlcnMgKSB7XG5cdFx0XHRcdFx0eGhyLnNldFJlcXVlc3RIZWFkZXIoIGksIGhlYWRlcnNbIGkgXSApO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gQ2FsbGJhY2tcblx0XHRcdFx0Y2FsbGJhY2sgPSBmdW5jdGlvbiggdHlwZSApIHtcblx0XHRcdFx0XHRyZXR1cm4gZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0XHRpZiAoIGNhbGxiYWNrICkge1xuXHRcdFx0XHRcdFx0XHRjYWxsYmFjayA9IGVycm9yQ2FsbGJhY2sgPSB4aHIub25sb2FkID1cblx0XHRcdFx0XHRcdFx0XHR4aHIub25lcnJvciA9IHhoci5vbmFib3J0ID0geGhyLm9udGltZW91dCA9XG5cdFx0XHRcdFx0XHRcdFx0XHR4aHIub25yZWFkeXN0YXRlY2hhbmdlID0gbnVsbDtcblxuXHRcdFx0XHRcdFx0XHRpZiAoIHR5cGUgPT09IFwiYWJvcnRcIiApIHtcblx0XHRcdFx0XHRcdFx0XHR4aHIuYWJvcnQoKTtcblx0XHRcdFx0XHRcdFx0fSBlbHNlIGlmICggdHlwZSA9PT0gXCJlcnJvclwiICkge1xuXG5cdFx0XHRcdFx0XHRcdFx0Ly8gU3VwcG9ydDogSUUgPD05IG9ubHlcblx0XHRcdFx0XHRcdFx0XHQvLyBPbiBhIG1hbnVhbCBuYXRpdmUgYWJvcnQsIElFOSB0aHJvd3Ncblx0XHRcdFx0XHRcdFx0XHQvLyBlcnJvcnMgb24gYW55IHByb3BlcnR5IGFjY2VzcyB0aGF0IGlzIG5vdCByZWFkeVN0YXRlXG5cdFx0XHRcdFx0XHRcdFx0aWYgKCB0eXBlb2YgeGhyLnN0YXR1cyAhPT0gXCJudW1iZXJcIiApIHtcblx0XHRcdFx0XHRcdFx0XHRcdGNvbXBsZXRlKCAwLCBcImVycm9yXCIgKTtcblx0XHRcdFx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0XHRcdFx0Y29tcGxldGUoXG5cblx0XHRcdFx0XHRcdFx0XHRcdFx0Ly8gRmlsZTogcHJvdG9jb2wgYWx3YXlzIHlpZWxkcyBzdGF0dXMgMDsgc2VlICM4NjA1LCAjMTQyMDdcblx0XHRcdFx0XHRcdFx0XHRcdFx0eGhyLnN0YXR1cyxcblx0XHRcdFx0XHRcdFx0XHRcdFx0eGhyLnN0YXR1c1RleHRcblx0XHRcdFx0XHRcdFx0XHRcdCk7XG5cdFx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0XHRcdGNvbXBsZXRlKFxuXHRcdFx0XHRcdFx0XHRcdFx0eGhyU3VjY2Vzc1N0YXR1c1sgeGhyLnN0YXR1cyBdIHx8IHhoci5zdGF0dXMsXG5cdFx0XHRcdFx0XHRcdFx0XHR4aHIuc3RhdHVzVGV4dCxcblxuXHRcdFx0XHRcdFx0XHRcdFx0Ly8gU3VwcG9ydDogSUUgPD05IG9ubHlcblx0XHRcdFx0XHRcdFx0XHRcdC8vIElFOSBoYXMgbm8gWEhSMiBidXQgdGhyb3dzIG9uIGJpbmFyeSAodHJhYy0xMTQyNilcblx0XHRcdFx0XHRcdFx0XHRcdC8vIEZvciBYSFIyIG5vbi10ZXh0LCBsZXQgdGhlIGNhbGxlciBoYW5kbGUgaXQgKGdoLTI0OTgpXG5cdFx0XHRcdFx0XHRcdFx0XHQoIHhoci5yZXNwb25zZVR5cGUgfHwgXCJ0ZXh0XCIgKSAhPT0gXCJ0ZXh0XCIgIHx8XG5cdFx0XHRcdFx0XHRcdFx0XHR0eXBlb2YgeGhyLnJlc3BvbnNlVGV4dCAhPT0gXCJzdHJpbmdcIiA/XG5cdFx0XHRcdFx0XHRcdFx0XHRcdHsgYmluYXJ5OiB4aHIucmVzcG9uc2UgfSA6XG5cdFx0XHRcdFx0XHRcdFx0XHRcdHsgdGV4dDogeGhyLnJlc3BvbnNlVGV4dCB9LFxuXHRcdFx0XHRcdFx0XHRcdFx0eGhyLmdldEFsbFJlc3BvbnNlSGVhZGVycygpXG5cdFx0XHRcdFx0XHRcdFx0KTtcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH07XG5cdFx0XHRcdH07XG5cblx0XHRcdFx0Ly8gTGlzdGVuIHRvIGV2ZW50c1xuXHRcdFx0XHR4aHIub25sb2FkID0gY2FsbGJhY2soKTtcblx0XHRcdFx0ZXJyb3JDYWxsYmFjayA9IHhoci5vbmVycm9yID0geGhyLm9udGltZW91dCA9IGNhbGxiYWNrKCBcImVycm9yXCIgKTtcblxuXHRcdFx0XHQvLyBTdXBwb3J0OiBJRSA5IG9ubHlcblx0XHRcdFx0Ly8gVXNlIG9ucmVhZHlzdGF0ZWNoYW5nZSB0byByZXBsYWNlIG9uYWJvcnRcblx0XHRcdFx0Ly8gdG8gaGFuZGxlIHVuY2F1Z2h0IGFib3J0c1xuXHRcdFx0XHRpZiAoIHhoci5vbmFib3J0ICE9PSB1bmRlZmluZWQgKSB7XG5cdFx0XHRcdFx0eGhyLm9uYWJvcnQgPSBlcnJvckNhbGxiYWNrO1xuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdHhoci5vbnJlYWR5c3RhdGVjaGFuZ2UgPSBmdW5jdGlvbigpIHtcblxuXHRcdFx0XHRcdFx0Ly8gQ2hlY2sgcmVhZHlTdGF0ZSBiZWZvcmUgdGltZW91dCBhcyBpdCBjaGFuZ2VzXG5cdFx0XHRcdFx0XHRpZiAoIHhoci5yZWFkeVN0YXRlID09PSA0ICkge1xuXG5cdFx0XHRcdFx0XHRcdC8vIEFsbG93IG9uZXJyb3IgdG8gYmUgY2FsbGVkIGZpcnN0LFxuXHRcdFx0XHRcdFx0XHQvLyBidXQgdGhhdCB3aWxsIG5vdCBoYW5kbGUgYSBuYXRpdmUgYWJvcnRcblx0XHRcdFx0XHRcdFx0Ly8gQWxzbywgc2F2ZSBlcnJvckNhbGxiYWNrIHRvIGEgdmFyaWFibGVcblx0XHRcdFx0XHRcdFx0Ly8gYXMgeGhyLm9uZXJyb3IgY2Fubm90IGJlIGFjY2Vzc2VkXG5cdFx0XHRcdFx0XHRcdHdpbmRvdy5zZXRUaW1lb3V0KCBmdW5jdGlvbigpIHtcblx0XHRcdFx0XHRcdFx0XHRpZiAoIGNhbGxiYWNrICkge1xuXHRcdFx0XHRcdFx0XHRcdFx0ZXJyb3JDYWxsYmFjaygpO1xuXHRcdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0fSApO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH07XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBDcmVhdGUgdGhlIGFib3J0IGNhbGxiYWNrXG5cdFx0XHRcdGNhbGxiYWNrID0gY2FsbGJhY2soIFwiYWJvcnRcIiApO1xuXG5cdFx0XHRcdHRyeSB7XG5cblx0XHRcdFx0XHQvLyBEbyBzZW5kIHRoZSByZXF1ZXN0ICh0aGlzIG1heSByYWlzZSBhbiBleGNlcHRpb24pXG5cdFx0XHRcdFx0eGhyLnNlbmQoIG9wdGlvbnMuaGFzQ29udGVudCAmJiBvcHRpb25zLmRhdGEgfHwgbnVsbCApO1xuXHRcdFx0XHR9IGNhdGNoICggZSApIHtcblxuXHRcdFx0XHRcdC8vICMxNDY4MzogT25seSByZXRocm93IGlmIHRoaXMgaGFzbid0IGJlZW4gbm90aWZpZWQgYXMgYW4gZXJyb3IgeWV0XG5cdFx0XHRcdFx0aWYgKCBjYWxsYmFjayApIHtcblx0XHRcdFx0XHRcdHRocm93IGU7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9LFxuXG5cdFx0XHRhYm9ydDogZnVuY3Rpb24oKSB7XG5cdFx0XHRcdGlmICggY2FsbGJhY2sgKSB7XG5cdFx0XHRcdFx0Y2FsbGJhY2soKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH07XG5cdH1cbn0gKTtcblxuXG5cblxuLy8gUHJldmVudCBhdXRvLWV4ZWN1dGlvbiBvZiBzY3JpcHRzIHdoZW4gbm8gZXhwbGljaXQgZGF0YVR5cGUgd2FzIHByb3ZpZGVkIChTZWUgZ2gtMjQzMilcbmpRdWVyeS5hamF4UHJlZmlsdGVyKCBmdW5jdGlvbiggcyApIHtcblx0aWYgKCBzLmNyb3NzRG9tYWluICkge1xuXHRcdHMuY29udGVudHMuc2NyaXB0ID0gZmFsc2U7XG5cdH1cbn0gKTtcblxuLy8gSW5zdGFsbCBzY3JpcHQgZGF0YVR5cGVcbmpRdWVyeS5hamF4U2V0dXAoIHtcblx0YWNjZXB0czoge1xuXHRcdHNjcmlwdDogXCJ0ZXh0L2phdmFzY3JpcHQsIGFwcGxpY2F0aW9uL2phdmFzY3JpcHQsIFwiICtcblx0XHRcdFwiYXBwbGljYXRpb24vZWNtYXNjcmlwdCwgYXBwbGljYXRpb24veC1lY21hc2NyaXB0XCJcblx0fSxcblx0Y29udGVudHM6IHtcblx0XHRzY3JpcHQ6IC9cXGIoPzpqYXZhfGVjbWEpc2NyaXB0XFxiL1xuXHR9LFxuXHRjb252ZXJ0ZXJzOiB7XG5cdFx0XCJ0ZXh0IHNjcmlwdFwiOiBmdW5jdGlvbiggdGV4dCApIHtcblx0XHRcdGpRdWVyeS5nbG9iYWxFdmFsKCB0ZXh0ICk7XG5cdFx0XHRyZXR1cm4gdGV4dDtcblx0XHR9XG5cdH1cbn0gKTtcblxuLy8gSGFuZGxlIGNhY2hlJ3Mgc3BlY2lhbCBjYXNlIGFuZCBjcm9zc0RvbWFpblxualF1ZXJ5LmFqYXhQcmVmaWx0ZXIoIFwic2NyaXB0XCIsIGZ1bmN0aW9uKCBzICkge1xuXHRpZiAoIHMuY2FjaGUgPT09IHVuZGVmaW5lZCApIHtcblx0XHRzLmNhY2hlID0gZmFsc2U7XG5cdH1cblx0aWYgKCBzLmNyb3NzRG9tYWluICkge1xuXHRcdHMudHlwZSA9IFwiR0VUXCI7XG5cdH1cbn0gKTtcblxuLy8gQmluZCBzY3JpcHQgdGFnIGhhY2sgdHJhbnNwb3J0XG5qUXVlcnkuYWpheFRyYW5zcG9ydCggXCJzY3JpcHRcIiwgZnVuY3Rpb24oIHMgKSB7XG5cblx0Ly8gVGhpcyB0cmFuc3BvcnQgb25seSBkZWFscyB3aXRoIGNyb3NzIGRvbWFpbiBvciBmb3JjZWQtYnktYXR0cnMgcmVxdWVzdHNcblx0aWYgKCBzLmNyb3NzRG9tYWluIHx8IHMuc2NyaXB0QXR0cnMgKSB7XG5cdFx0dmFyIHNjcmlwdCwgY2FsbGJhY2s7XG5cdFx0cmV0dXJuIHtcblx0XHRcdHNlbmQ6IGZ1bmN0aW9uKCBfLCBjb21wbGV0ZSApIHtcblx0XHRcdFx0c2NyaXB0ID0galF1ZXJ5KCBcIjxzY3JpcHQ+XCIgKVxuXHRcdFx0XHRcdC5hdHRyKCBzLnNjcmlwdEF0dHJzIHx8IHt9IClcblx0XHRcdFx0XHQucHJvcCggeyBjaGFyc2V0OiBzLnNjcmlwdENoYXJzZXQsIHNyYzogcy51cmwgfSApXG5cdFx0XHRcdFx0Lm9uKCBcImxvYWQgZXJyb3JcIiwgY2FsbGJhY2sgPSBmdW5jdGlvbiggZXZ0ICkge1xuXHRcdFx0XHRcdFx0c2NyaXB0LnJlbW92ZSgpO1xuXHRcdFx0XHRcdFx0Y2FsbGJhY2sgPSBudWxsO1xuXHRcdFx0XHRcdFx0aWYgKCBldnQgKSB7XG5cdFx0XHRcdFx0XHRcdGNvbXBsZXRlKCBldnQudHlwZSA9PT0gXCJlcnJvclwiID8gNDA0IDogMjAwLCBldnQudHlwZSApO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH0gKTtcblxuXHRcdFx0XHQvLyBVc2UgbmF0aXZlIERPTSBtYW5pcHVsYXRpb24gdG8gYXZvaWQgb3VyIGRvbU1hbmlwIEFKQVggdHJpY2tlcnlcblx0XHRcdFx0ZG9jdW1lbnQuaGVhZC5hcHBlbmRDaGlsZCggc2NyaXB0WyAwIF0gKTtcblx0XHRcdH0sXG5cdFx0XHRhYm9ydDogZnVuY3Rpb24oKSB7XG5cdFx0XHRcdGlmICggY2FsbGJhY2sgKSB7XG5cdFx0XHRcdFx0Y2FsbGJhY2soKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH07XG5cdH1cbn0gKTtcblxuXG5cblxudmFyIG9sZENhbGxiYWNrcyA9IFtdLFxuXHRyanNvbnAgPSAvKD0pXFw/KD89JnwkKXxcXD9cXD8vO1xuXG4vLyBEZWZhdWx0IGpzb25wIHNldHRpbmdzXG5qUXVlcnkuYWpheFNldHVwKCB7XG5cdGpzb25wOiBcImNhbGxiYWNrXCIsXG5cdGpzb25wQ2FsbGJhY2s6IGZ1bmN0aW9uKCkge1xuXHRcdHZhciBjYWxsYmFjayA9IG9sZENhbGxiYWNrcy5wb3AoKSB8fCAoIGpRdWVyeS5leHBhbmRvICsgXCJfXCIgKyAoIG5vbmNlLmd1aWQrKyApICk7XG5cdFx0dGhpc1sgY2FsbGJhY2sgXSA9IHRydWU7XG5cdFx0cmV0dXJuIGNhbGxiYWNrO1xuXHR9XG59ICk7XG5cbi8vIERldGVjdCwgbm9ybWFsaXplIG9wdGlvbnMgYW5kIGluc3RhbGwgY2FsbGJhY2tzIGZvciBqc29ucCByZXF1ZXN0c1xualF1ZXJ5LmFqYXhQcmVmaWx0ZXIoIFwianNvbiBqc29ucFwiLCBmdW5jdGlvbiggcywgb3JpZ2luYWxTZXR0aW5ncywganFYSFIgKSB7XG5cblx0dmFyIGNhbGxiYWNrTmFtZSwgb3ZlcndyaXR0ZW4sIHJlc3BvbnNlQ29udGFpbmVyLFxuXHRcdGpzb25Qcm9wID0gcy5qc29ucCAhPT0gZmFsc2UgJiYgKCByanNvbnAudGVzdCggcy51cmwgKSA/XG5cdFx0XHRcInVybFwiIDpcblx0XHRcdHR5cGVvZiBzLmRhdGEgPT09IFwic3RyaW5nXCIgJiZcblx0XHRcdFx0KCBzLmNvbnRlbnRUeXBlIHx8IFwiXCIgKVxuXHRcdFx0XHRcdC5pbmRleE9mKCBcImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZFwiICkgPT09IDAgJiZcblx0XHRcdFx0cmpzb25wLnRlc3QoIHMuZGF0YSApICYmIFwiZGF0YVwiXG5cdFx0KTtcblxuXHQvLyBIYW5kbGUgaWZmIHRoZSBleHBlY3RlZCBkYXRhIHR5cGUgaXMgXCJqc29ucFwiIG9yIHdlIGhhdmUgYSBwYXJhbWV0ZXIgdG8gc2V0XG5cdGlmICgganNvblByb3AgfHwgcy5kYXRhVHlwZXNbIDAgXSA9PT0gXCJqc29ucFwiICkge1xuXG5cdFx0Ly8gR2V0IGNhbGxiYWNrIG5hbWUsIHJlbWVtYmVyaW5nIHByZWV4aXN0aW5nIHZhbHVlIGFzc29jaWF0ZWQgd2l0aCBpdFxuXHRcdGNhbGxiYWNrTmFtZSA9IHMuanNvbnBDYWxsYmFjayA9IGlzRnVuY3Rpb24oIHMuanNvbnBDYWxsYmFjayApID9cblx0XHRcdHMuanNvbnBDYWxsYmFjaygpIDpcblx0XHRcdHMuanNvbnBDYWxsYmFjaztcblxuXHRcdC8vIEluc2VydCBjYWxsYmFjayBpbnRvIHVybCBvciBmb3JtIGRhdGFcblx0XHRpZiAoIGpzb25Qcm9wICkge1xuXHRcdFx0c1sganNvblByb3AgXSA9IHNbIGpzb25Qcm9wIF0ucmVwbGFjZSggcmpzb25wLCBcIiQxXCIgKyBjYWxsYmFja05hbWUgKTtcblx0XHR9IGVsc2UgaWYgKCBzLmpzb25wICE9PSBmYWxzZSApIHtcblx0XHRcdHMudXJsICs9ICggcnF1ZXJ5LnRlc3QoIHMudXJsICkgPyBcIiZcIiA6IFwiP1wiICkgKyBzLmpzb25wICsgXCI9XCIgKyBjYWxsYmFja05hbWU7XG5cdFx0fVxuXG5cdFx0Ly8gVXNlIGRhdGEgY29udmVydGVyIHRvIHJldHJpZXZlIGpzb24gYWZ0ZXIgc2NyaXB0IGV4ZWN1dGlvblxuXHRcdHMuY29udmVydGVyc1sgXCJzY3JpcHQganNvblwiIF0gPSBmdW5jdGlvbigpIHtcblx0XHRcdGlmICggIXJlc3BvbnNlQ29udGFpbmVyICkge1xuXHRcdFx0XHRqUXVlcnkuZXJyb3IoIGNhbGxiYWNrTmFtZSArIFwiIHdhcyBub3QgY2FsbGVkXCIgKTtcblx0XHRcdH1cblx0XHRcdHJldHVybiByZXNwb25zZUNvbnRhaW5lclsgMCBdO1xuXHRcdH07XG5cblx0XHQvLyBGb3JjZSBqc29uIGRhdGFUeXBlXG5cdFx0cy5kYXRhVHlwZXNbIDAgXSA9IFwianNvblwiO1xuXG5cdFx0Ly8gSW5zdGFsbCBjYWxsYmFja1xuXHRcdG92ZXJ3cml0dGVuID0gd2luZG93WyBjYWxsYmFja05hbWUgXTtcblx0XHR3aW5kb3dbIGNhbGxiYWNrTmFtZSBdID0gZnVuY3Rpb24oKSB7XG5cdFx0XHRyZXNwb25zZUNvbnRhaW5lciA9IGFyZ3VtZW50cztcblx0XHR9O1xuXG5cdFx0Ly8gQ2xlYW4tdXAgZnVuY3Rpb24gKGZpcmVzIGFmdGVyIGNvbnZlcnRlcnMpXG5cdFx0anFYSFIuYWx3YXlzKCBmdW5jdGlvbigpIHtcblxuXHRcdFx0Ly8gSWYgcHJldmlvdXMgdmFsdWUgZGlkbid0IGV4aXN0IC0gcmVtb3ZlIGl0XG5cdFx0XHRpZiAoIG92ZXJ3cml0dGVuID09PSB1bmRlZmluZWQgKSB7XG5cdFx0XHRcdGpRdWVyeSggd2luZG93ICkucmVtb3ZlUHJvcCggY2FsbGJhY2tOYW1lICk7XG5cblx0XHRcdC8vIE90aGVyd2lzZSByZXN0b3JlIHByZWV4aXN0aW5nIHZhbHVlXG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHR3aW5kb3dbIGNhbGxiYWNrTmFtZSBdID0gb3ZlcndyaXR0ZW47XG5cdFx0XHR9XG5cblx0XHRcdC8vIFNhdmUgYmFjayBhcyBmcmVlXG5cdFx0XHRpZiAoIHNbIGNhbGxiYWNrTmFtZSBdICkge1xuXG5cdFx0XHRcdC8vIE1ha2Ugc3VyZSB0aGF0IHJlLXVzaW5nIHRoZSBvcHRpb25zIGRvZXNuJ3Qgc2NyZXcgdGhpbmdzIGFyb3VuZFxuXHRcdFx0XHRzLmpzb25wQ2FsbGJhY2sgPSBvcmlnaW5hbFNldHRpbmdzLmpzb25wQ2FsbGJhY2s7XG5cblx0XHRcdFx0Ly8gU2F2ZSB0aGUgY2FsbGJhY2sgbmFtZSBmb3IgZnV0dXJlIHVzZVxuXHRcdFx0XHRvbGRDYWxsYmFja3MucHVzaCggY2FsbGJhY2tOYW1lICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIENhbGwgaWYgaXQgd2FzIGEgZnVuY3Rpb24gYW5kIHdlIGhhdmUgYSByZXNwb25zZVxuXHRcdFx0aWYgKCByZXNwb25zZUNvbnRhaW5lciAmJiBpc0Z1bmN0aW9uKCBvdmVyd3JpdHRlbiApICkge1xuXHRcdFx0XHRvdmVyd3JpdHRlbiggcmVzcG9uc2VDb250YWluZXJbIDAgXSApO1xuXHRcdFx0fVxuXG5cdFx0XHRyZXNwb25zZUNvbnRhaW5lciA9IG92ZXJ3cml0dGVuID0gdW5kZWZpbmVkO1xuXHRcdH0gKTtcblxuXHRcdC8vIERlbGVnYXRlIHRvIHNjcmlwdFxuXHRcdHJldHVybiBcInNjcmlwdFwiO1xuXHR9XG59ICk7XG5cblxuXG5cbi8vIFN1cHBvcnQ6IFNhZmFyaSA4IG9ubHlcbi8vIEluIFNhZmFyaSA4IGRvY3VtZW50cyBjcmVhdGVkIHZpYSBkb2N1bWVudC5pbXBsZW1lbnRhdGlvbi5jcmVhdGVIVE1MRG9jdW1lbnRcbi8vIGNvbGxhcHNlIHNpYmxpbmcgZm9ybXM6IHRoZSBzZWNvbmQgb25lIGJlY29tZXMgYSBjaGlsZCBvZiB0aGUgZmlyc3Qgb25lLlxuLy8gQmVjYXVzZSBvZiB0aGF0LCB0aGlzIHNlY3VyaXR5IG1lYXN1cmUgaGFzIHRvIGJlIGRpc2FibGVkIGluIFNhZmFyaSA4LlxuLy8gaHR0cHM6Ly9idWdzLndlYmtpdC5vcmcvc2hvd19idWcuY2dpP2lkPTEzNzMzN1xuc3VwcG9ydC5jcmVhdGVIVE1MRG9jdW1lbnQgPSAoIGZ1bmN0aW9uKCkge1xuXHR2YXIgYm9keSA9IGRvY3VtZW50LmltcGxlbWVudGF0aW9uLmNyZWF0ZUhUTUxEb2N1bWVudCggXCJcIiApLmJvZHk7XG5cdGJvZHkuaW5uZXJIVE1MID0gXCI8Zm9ybT48L2Zvcm0+PGZvcm0+PC9mb3JtPlwiO1xuXHRyZXR1cm4gYm9keS5jaGlsZE5vZGVzLmxlbmd0aCA9PT0gMjtcbn0gKSgpO1xuXG5cbi8vIEFyZ3VtZW50IFwiZGF0YVwiIHNob3VsZCBiZSBzdHJpbmcgb2YgaHRtbFxuLy8gY29udGV4dCAob3B0aW9uYWwpOiBJZiBzcGVjaWZpZWQsIHRoZSBmcmFnbWVudCB3aWxsIGJlIGNyZWF0ZWQgaW4gdGhpcyBjb250ZXh0LFxuLy8gZGVmYXVsdHMgdG8gZG9jdW1lbnRcbi8vIGtlZXBTY3JpcHRzIChvcHRpb25hbCk6IElmIHRydWUsIHdpbGwgaW5jbHVkZSBzY3JpcHRzIHBhc3NlZCBpbiB0aGUgaHRtbCBzdHJpbmdcbmpRdWVyeS5wYXJzZUhUTUwgPSBmdW5jdGlvbiggZGF0YSwgY29udGV4dCwga2VlcFNjcmlwdHMgKSB7XG5cdGlmICggdHlwZW9mIGRhdGEgIT09IFwic3RyaW5nXCIgKSB7XG5cdFx0cmV0dXJuIFtdO1xuXHR9XG5cdGlmICggdHlwZW9mIGNvbnRleHQgPT09IFwiYm9vbGVhblwiICkge1xuXHRcdGtlZXBTY3JpcHRzID0gY29udGV4dDtcblx0XHRjb250ZXh0ID0gZmFsc2U7XG5cdH1cblxuXHR2YXIgYmFzZSwgcGFyc2VkLCBzY3JpcHRzO1xuXG5cdGlmICggIWNvbnRleHQgKSB7XG5cblx0XHQvLyBTdG9wIHNjcmlwdHMgb3IgaW5saW5lIGV2ZW50IGhhbmRsZXJzIGZyb20gYmVpbmcgZXhlY3V0ZWQgaW1tZWRpYXRlbHlcblx0XHQvLyBieSB1c2luZyBkb2N1bWVudC5pbXBsZW1lbnRhdGlvblxuXHRcdGlmICggc3VwcG9ydC5jcmVhdGVIVE1MRG9jdW1lbnQgKSB7XG5cdFx0XHRjb250ZXh0ID0gZG9jdW1lbnQuaW1wbGVtZW50YXRpb24uY3JlYXRlSFRNTERvY3VtZW50KCBcIlwiICk7XG5cblx0XHRcdC8vIFNldCB0aGUgYmFzZSBocmVmIGZvciB0aGUgY3JlYXRlZCBkb2N1bWVudFxuXHRcdFx0Ly8gc28gYW55IHBhcnNlZCBlbGVtZW50cyB3aXRoIFVSTHNcblx0XHRcdC8vIGFyZSBiYXNlZCBvbiB0aGUgZG9jdW1lbnQncyBVUkwgKGdoLTI5NjUpXG5cdFx0XHRiYXNlID0gY29udGV4dC5jcmVhdGVFbGVtZW50KCBcImJhc2VcIiApO1xuXHRcdFx0YmFzZS5ocmVmID0gZG9jdW1lbnQubG9jYXRpb24uaHJlZjtcblx0XHRcdGNvbnRleHQuaGVhZC5hcHBlbmRDaGlsZCggYmFzZSApO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRjb250ZXh0ID0gZG9jdW1lbnQ7XG5cdFx0fVxuXHR9XG5cblx0cGFyc2VkID0gcnNpbmdsZVRhZy5leGVjKCBkYXRhICk7XG5cdHNjcmlwdHMgPSAha2VlcFNjcmlwdHMgJiYgW107XG5cblx0Ly8gU2luZ2xlIHRhZ1xuXHRpZiAoIHBhcnNlZCApIHtcblx0XHRyZXR1cm4gWyBjb250ZXh0LmNyZWF0ZUVsZW1lbnQoIHBhcnNlZFsgMSBdICkgXTtcblx0fVxuXG5cdHBhcnNlZCA9IGJ1aWxkRnJhZ21lbnQoIFsgZGF0YSBdLCBjb250ZXh0LCBzY3JpcHRzICk7XG5cblx0aWYgKCBzY3JpcHRzICYmIHNjcmlwdHMubGVuZ3RoICkge1xuXHRcdGpRdWVyeSggc2NyaXB0cyApLnJlbW92ZSgpO1xuXHR9XG5cblx0cmV0dXJuIGpRdWVyeS5tZXJnZSggW10sIHBhcnNlZC5jaGlsZE5vZGVzICk7XG59O1xuXG5cbi8qKlxuICogTG9hZCBhIHVybCBpbnRvIGEgcGFnZVxuICovXG5qUXVlcnkuZm4ubG9hZCA9IGZ1bmN0aW9uKCB1cmwsIHBhcmFtcywgY2FsbGJhY2sgKSB7XG5cdHZhciBzZWxlY3RvciwgdHlwZSwgcmVzcG9uc2UsXG5cdFx0c2VsZiA9IHRoaXMsXG5cdFx0b2ZmID0gdXJsLmluZGV4T2YoIFwiIFwiICk7XG5cblx0aWYgKCBvZmYgPiAtMSApIHtcblx0XHRzZWxlY3RvciA9IHN0cmlwQW5kQ29sbGFwc2UoIHVybC5zbGljZSggb2ZmICkgKTtcblx0XHR1cmwgPSB1cmwuc2xpY2UoIDAsIG9mZiApO1xuXHR9XG5cblx0Ly8gSWYgaXQncyBhIGZ1bmN0aW9uXG5cdGlmICggaXNGdW5jdGlvbiggcGFyYW1zICkgKSB7XG5cblx0XHQvLyBXZSBhc3N1bWUgdGhhdCBpdCdzIHRoZSBjYWxsYmFja1xuXHRcdGNhbGxiYWNrID0gcGFyYW1zO1xuXHRcdHBhcmFtcyA9IHVuZGVmaW5lZDtcblxuXHQvLyBPdGhlcndpc2UsIGJ1aWxkIGEgcGFyYW0gc3RyaW5nXG5cdH0gZWxzZSBpZiAoIHBhcmFtcyAmJiB0eXBlb2YgcGFyYW1zID09PSBcIm9iamVjdFwiICkge1xuXHRcdHR5cGUgPSBcIlBPU1RcIjtcblx0fVxuXG5cdC8vIElmIHdlIGhhdmUgZWxlbWVudHMgdG8gbW9kaWZ5LCBtYWtlIHRoZSByZXF1ZXN0XG5cdGlmICggc2VsZi5sZW5ndGggPiAwICkge1xuXHRcdGpRdWVyeS5hamF4KCB7XG5cdFx0XHR1cmw6IHVybCxcblxuXHRcdFx0Ly8gSWYgXCJ0eXBlXCIgdmFyaWFibGUgaXMgdW5kZWZpbmVkLCB0aGVuIFwiR0VUXCIgbWV0aG9kIHdpbGwgYmUgdXNlZC5cblx0XHRcdC8vIE1ha2UgdmFsdWUgb2YgdGhpcyBmaWVsZCBleHBsaWNpdCBzaW5jZVxuXHRcdFx0Ly8gdXNlciBjYW4gb3ZlcnJpZGUgaXQgdGhyb3VnaCBhamF4U2V0dXAgbWV0aG9kXG5cdFx0XHR0eXBlOiB0eXBlIHx8IFwiR0VUXCIsXG5cdFx0XHRkYXRhVHlwZTogXCJodG1sXCIsXG5cdFx0XHRkYXRhOiBwYXJhbXNcblx0XHR9ICkuZG9uZSggZnVuY3Rpb24oIHJlc3BvbnNlVGV4dCApIHtcblxuXHRcdFx0Ly8gU2F2ZSByZXNwb25zZSBmb3IgdXNlIGluIGNvbXBsZXRlIGNhbGxiYWNrXG5cdFx0XHRyZXNwb25zZSA9IGFyZ3VtZW50cztcblxuXHRcdFx0c2VsZi5odG1sKCBzZWxlY3RvciA/XG5cblx0XHRcdFx0Ly8gSWYgYSBzZWxlY3RvciB3YXMgc3BlY2lmaWVkLCBsb2NhdGUgdGhlIHJpZ2h0IGVsZW1lbnRzIGluIGEgZHVtbXkgZGl2XG5cdFx0XHRcdC8vIEV4Y2x1ZGUgc2NyaXB0cyB0byBhdm9pZCBJRSAnUGVybWlzc2lvbiBEZW5pZWQnIGVycm9yc1xuXHRcdFx0XHRqUXVlcnkoIFwiPGRpdj5cIiApLmFwcGVuZCggalF1ZXJ5LnBhcnNlSFRNTCggcmVzcG9uc2VUZXh0ICkgKS5maW5kKCBzZWxlY3RvciApIDpcblxuXHRcdFx0XHQvLyBPdGhlcndpc2UgdXNlIHRoZSBmdWxsIHJlc3VsdFxuXHRcdFx0XHRyZXNwb25zZVRleHQgKTtcblxuXHRcdC8vIElmIHRoZSByZXF1ZXN0IHN1Y2NlZWRzLCB0aGlzIGZ1bmN0aW9uIGdldHMgXCJkYXRhXCIsIFwic3RhdHVzXCIsIFwianFYSFJcIlxuXHRcdC8vIGJ1dCB0aGV5IGFyZSBpZ25vcmVkIGJlY2F1c2UgcmVzcG9uc2Ugd2FzIHNldCBhYm92ZS5cblx0XHQvLyBJZiBpdCBmYWlscywgdGhpcyBmdW5jdGlvbiBnZXRzIFwianFYSFJcIiwgXCJzdGF0dXNcIiwgXCJlcnJvclwiXG5cdFx0fSApLmFsd2F5cyggY2FsbGJhY2sgJiYgZnVuY3Rpb24oIGpxWEhSLCBzdGF0dXMgKSB7XG5cdFx0XHRzZWxmLmVhY2goIGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRjYWxsYmFjay5hcHBseSggdGhpcywgcmVzcG9uc2UgfHwgWyBqcVhIUi5yZXNwb25zZVRleHQsIHN0YXR1cywganFYSFIgXSApO1xuXHRcdFx0fSApO1xuXHRcdH0gKTtcblx0fVxuXG5cdHJldHVybiB0aGlzO1xufTtcblxuXG5cblxualF1ZXJ5LmV4cHIucHNldWRvcy5hbmltYXRlZCA9IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRyZXR1cm4galF1ZXJ5LmdyZXAoIGpRdWVyeS50aW1lcnMsIGZ1bmN0aW9uKCBmbiApIHtcblx0XHRyZXR1cm4gZWxlbSA9PT0gZm4uZWxlbTtcblx0fSApLmxlbmd0aDtcbn07XG5cblxuXG5cbmpRdWVyeS5vZmZzZXQgPSB7XG5cdHNldE9mZnNldDogZnVuY3Rpb24oIGVsZW0sIG9wdGlvbnMsIGkgKSB7XG5cdFx0dmFyIGN1clBvc2l0aW9uLCBjdXJMZWZ0LCBjdXJDU1NUb3AsIGN1clRvcCwgY3VyT2Zmc2V0LCBjdXJDU1NMZWZ0LCBjYWxjdWxhdGVQb3NpdGlvbixcblx0XHRcdHBvc2l0aW9uID0galF1ZXJ5LmNzcyggZWxlbSwgXCJwb3NpdGlvblwiICksXG5cdFx0XHRjdXJFbGVtID0galF1ZXJ5KCBlbGVtICksXG5cdFx0XHRwcm9wcyA9IHt9O1xuXG5cdFx0Ly8gU2V0IHBvc2l0aW9uIGZpcnN0LCBpbi1jYXNlIHRvcC9sZWZ0IGFyZSBzZXQgZXZlbiBvbiBzdGF0aWMgZWxlbVxuXHRcdGlmICggcG9zaXRpb24gPT09IFwic3RhdGljXCIgKSB7XG5cdFx0XHRlbGVtLnN0eWxlLnBvc2l0aW9uID0gXCJyZWxhdGl2ZVwiO1xuXHRcdH1cblxuXHRcdGN1ck9mZnNldCA9IGN1ckVsZW0ub2Zmc2V0KCk7XG5cdFx0Y3VyQ1NTVG9wID0galF1ZXJ5LmNzcyggZWxlbSwgXCJ0b3BcIiApO1xuXHRcdGN1ckNTU0xlZnQgPSBqUXVlcnkuY3NzKCBlbGVtLCBcImxlZnRcIiApO1xuXHRcdGNhbGN1bGF0ZVBvc2l0aW9uID0gKCBwb3NpdGlvbiA9PT0gXCJhYnNvbHV0ZVwiIHx8IHBvc2l0aW9uID09PSBcImZpeGVkXCIgKSAmJlxuXHRcdFx0KCBjdXJDU1NUb3AgKyBjdXJDU1NMZWZ0ICkuaW5kZXhPZiggXCJhdXRvXCIgKSA+IC0xO1xuXG5cdFx0Ly8gTmVlZCB0byBiZSBhYmxlIHRvIGNhbGN1bGF0ZSBwb3NpdGlvbiBpZiBlaXRoZXJcblx0XHQvLyB0b3Agb3IgbGVmdCBpcyBhdXRvIGFuZCBwb3NpdGlvbiBpcyBlaXRoZXIgYWJzb2x1dGUgb3IgZml4ZWRcblx0XHRpZiAoIGNhbGN1bGF0ZVBvc2l0aW9uICkge1xuXHRcdFx0Y3VyUG9zaXRpb24gPSBjdXJFbGVtLnBvc2l0aW9uKCk7XG5cdFx0XHRjdXJUb3AgPSBjdXJQb3NpdGlvbi50b3A7XG5cdFx0XHRjdXJMZWZ0ID0gY3VyUG9zaXRpb24ubGVmdDtcblxuXHRcdH0gZWxzZSB7XG5cdFx0XHRjdXJUb3AgPSBwYXJzZUZsb2F0KCBjdXJDU1NUb3AgKSB8fCAwO1xuXHRcdFx0Y3VyTGVmdCA9IHBhcnNlRmxvYXQoIGN1ckNTU0xlZnQgKSB8fCAwO1xuXHRcdH1cblxuXHRcdGlmICggaXNGdW5jdGlvbiggb3B0aW9ucyApICkge1xuXG5cdFx0XHQvLyBVc2UgalF1ZXJ5LmV4dGVuZCBoZXJlIHRvIGFsbG93IG1vZGlmaWNhdGlvbiBvZiBjb29yZGluYXRlcyBhcmd1bWVudCAoZ2gtMTg0OClcblx0XHRcdG9wdGlvbnMgPSBvcHRpb25zLmNhbGwoIGVsZW0sIGksIGpRdWVyeS5leHRlbmQoIHt9LCBjdXJPZmZzZXQgKSApO1xuXHRcdH1cblxuXHRcdGlmICggb3B0aW9ucy50b3AgIT0gbnVsbCApIHtcblx0XHRcdHByb3BzLnRvcCA9ICggb3B0aW9ucy50b3AgLSBjdXJPZmZzZXQudG9wICkgKyBjdXJUb3A7XG5cdFx0fVxuXHRcdGlmICggb3B0aW9ucy5sZWZ0ICE9IG51bGwgKSB7XG5cdFx0XHRwcm9wcy5sZWZ0ID0gKCBvcHRpb25zLmxlZnQgLSBjdXJPZmZzZXQubGVmdCApICsgY3VyTGVmdDtcblx0XHR9XG5cblx0XHRpZiAoIFwidXNpbmdcIiBpbiBvcHRpb25zICkge1xuXHRcdFx0b3B0aW9ucy51c2luZy5jYWxsKCBlbGVtLCBwcm9wcyApO1xuXG5cdFx0fSBlbHNlIHtcblx0XHRcdGlmICggdHlwZW9mIHByb3BzLnRvcCA9PT0gXCJudW1iZXJcIiApIHtcblx0XHRcdFx0cHJvcHMudG9wICs9IFwicHhcIjtcblx0XHRcdH1cblx0XHRcdGlmICggdHlwZW9mIHByb3BzLmxlZnQgPT09IFwibnVtYmVyXCIgKSB7XG5cdFx0XHRcdHByb3BzLmxlZnQgKz0gXCJweFwiO1xuXHRcdFx0fVxuXHRcdFx0Y3VyRWxlbS5jc3MoIHByb3BzICk7XG5cdFx0fVxuXHR9XG59O1xuXG5qUXVlcnkuZm4uZXh0ZW5kKCB7XG5cblx0Ly8gb2Zmc2V0KCkgcmVsYXRlcyBhbiBlbGVtZW50J3MgYm9yZGVyIGJveCB0byB0aGUgZG9jdW1lbnQgb3JpZ2luXG5cdG9mZnNldDogZnVuY3Rpb24oIG9wdGlvbnMgKSB7XG5cblx0XHQvLyBQcmVzZXJ2ZSBjaGFpbmluZyBmb3Igc2V0dGVyXG5cdFx0aWYgKCBhcmd1bWVudHMubGVuZ3RoICkge1xuXHRcdFx0cmV0dXJuIG9wdGlvbnMgPT09IHVuZGVmaW5lZCA/XG5cdFx0XHRcdHRoaXMgOlxuXHRcdFx0XHR0aGlzLmVhY2goIGZ1bmN0aW9uKCBpICkge1xuXHRcdFx0XHRcdGpRdWVyeS5vZmZzZXQuc2V0T2Zmc2V0KCB0aGlzLCBvcHRpb25zLCBpICk7XG5cdFx0XHRcdH0gKTtcblx0XHR9XG5cblx0XHR2YXIgcmVjdCwgd2luLFxuXHRcdFx0ZWxlbSA9IHRoaXNbIDAgXTtcblxuXHRcdGlmICggIWVsZW0gKSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0Ly8gUmV0dXJuIHplcm9zIGZvciBkaXNjb25uZWN0ZWQgYW5kIGhpZGRlbiAoZGlzcGxheTogbm9uZSkgZWxlbWVudHMgKGdoLTIzMTApXG5cdFx0Ly8gU3VwcG9ydDogSUUgPD0xMSBvbmx5XG5cdFx0Ly8gUnVubmluZyBnZXRCb3VuZGluZ0NsaWVudFJlY3Qgb24gYVxuXHRcdC8vIGRpc2Nvbm5lY3RlZCBub2RlIGluIElFIHRocm93cyBhbiBlcnJvclxuXHRcdGlmICggIWVsZW0uZ2V0Q2xpZW50UmVjdHMoKS5sZW5ndGggKSB7XG5cdFx0XHRyZXR1cm4geyB0b3A6IDAsIGxlZnQ6IDAgfTtcblx0XHR9XG5cblx0XHQvLyBHZXQgZG9jdW1lbnQtcmVsYXRpdmUgcG9zaXRpb24gYnkgYWRkaW5nIHZpZXdwb3J0IHNjcm9sbCB0byB2aWV3cG9ydC1yZWxhdGl2ZSBnQkNSXG5cdFx0cmVjdCA9IGVsZW0uZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG5cdFx0d2luID0gZWxlbS5vd25lckRvY3VtZW50LmRlZmF1bHRWaWV3O1xuXHRcdHJldHVybiB7XG5cdFx0XHR0b3A6IHJlY3QudG9wICsgd2luLnBhZ2VZT2Zmc2V0LFxuXHRcdFx0bGVmdDogcmVjdC5sZWZ0ICsgd2luLnBhZ2VYT2Zmc2V0XG5cdFx0fTtcblx0fSxcblxuXHQvLyBwb3NpdGlvbigpIHJlbGF0ZXMgYW4gZWxlbWVudCdzIG1hcmdpbiBib3ggdG8gaXRzIG9mZnNldCBwYXJlbnQncyBwYWRkaW5nIGJveFxuXHQvLyBUaGlzIGNvcnJlc3BvbmRzIHRvIHRoZSBiZWhhdmlvciBvZiBDU1MgYWJzb2x1dGUgcG9zaXRpb25pbmdcblx0cG9zaXRpb246IGZ1bmN0aW9uKCkge1xuXHRcdGlmICggIXRoaXNbIDAgXSApIHtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHR2YXIgb2Zmc2V0UGFyZW50LCBvZmZzZXQsIGRvYyxcblx0XHRcdGVsZW0gPSB0aGlzWyAwIF0sXG5cdFx0XHRwYXJlbnRPZmZzZXQgPSB7IHRvcDogMCwgbGVmdDogMCB9O1xuXG5cdFx0Ly8gcG9zaXRpb246Zml4ZWQgZWxlbWVudHMgYXJlIG9mZnNldCBmcm9tIHRoZSB2aWV3cG9ydCwgd2hpY2ggaXRzZWxmIGFsd2F5cyBoYXMgemVybyBvZmZzZXRcblx0XHRpZiAoIGpRdWVyeS5jc3MoIGVsZW0sIFwicG9zaXRpb25cIiApID09PSBcImZpeGVkXCIgKSB7XG5cblx0XHRcdC8vIEFzc3VtZSBwb3NpdGlvbjpmaXhlZCBpbXBsaWVzIGF2YWlsYWJpbGl0eSBvZiBnZXRCb3VuZGluZ0NsaWVudFJlY3Rcblx0XHRcdG9mZnNldCA9IGVsZW0uZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG5cblx0XHR9IGVsc2Uge1xuXHRcdFx0b2Zmc2V0ID0gdGhpcy5vZmZzZXQoKTtcblxuXHRcdFx0Ly8gQWNjb3VudCBmb3IgdGhlICpyZWFsKiBvZmZzZXQgcGFyZW50LCB3aGljaCBjYW4gYmUgdGhlIGRvY3VtZW50IG9yIGl0cyByb290IGVsZW1lbnRcblx0XHRcdC8vIHdoZW4gYSBzdGF0aWNhbGx5IHBvc2l0aW9uZWQgZWxlbWVudCBpcyBpZGVudGlmaWVkXG5cdFx0XHRkb2MgPSBlbGVtLm93bmVyRG9jdW1lbnQ7XG5cdFx0XHRvZmZzZXRQYXJlbnQgPSBlbGVtLm9mZnNldFBhcmVudCB8fCBkb2MuZG9jdW1lbnRFbGVtZW50O1xuXHRcdFx0d2hpbGUgKCBvZmZzZXRQYXJlbnQgJiZcblx0XHRcdFx0KCBvZmZzZXRQYXJlbnQgPT09IGRvYy5ib2R5IHx8IG9mZnNldFBhcmVudCA9PT0gZG9jLmRvY3VtZW50RWxlbWVudCApICYmXG5cdFx0XHRcdGpRdWVyeS5jc3MoIG9mZnNldFBhcmVudCwgXCJwb3NpdGlvblwiICkgPT09IFwic3RhdGljXCIgKSB7XG5cblx0XHRcdFx0b2Zmc2V0UGFyZW50ID0gb2Zmc2V0UGFyZW50LnBhcmVudE5vZGU7XG5cdFx0XHR9XG5cdFx0XHRpZiAoIG9mZnNldFBhcmVudCAmJiBvZmZzZXRQYXJlbnQgIT09IGVsZW0gJiYgb2Zmc2V0UGFyZW50Lm5vZGVUeXBlID09PSAxICkge1xuXG5cdFx0XHRcdC8vIEluY29ycG9yYXRlIGJvcmRlcnMgaW50byBpdHMgb2Zmc2V0LCBzaW5jZSB0aGV5IGFyZSBvdXRzaWRlIGl0cyBjb250ZW50IG9yaWdpblxuXHRcdFx0XHRwYXJlbnRPZmZzZXQgPSBqUXVlcnkoIG9mZnNldFBhcmVudCApLm9mZnNldCgpO1xuXHRcdFx0XHRwYXJlbnRPZmZzZXQudG9wICs9IGpRdWVyeS5jc3MoIG9mZnNldFBhcmVudCwgXCJib3JkZXJUb3BXaWR0aFwiLCB0cnVlICk7XG5cdFx0XHRcdHBhcmVudE9mZnNldC5sZWZ0ICs9IGpRdWVyeS5jc3MoIG9mZnNldFBhcmVudCwgXCJib3JkZXJMZWZ0V2lkdGhcIiwgdHJ1ZSApO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdC8vIFN1YnRyYWN0IHBhcmVudCBvZmZzZXRzIGFuZCBlbGVtZW50IG1hcmdpbnNcblx0XHRyZXR1cm4ge1xuXHRcdFx0dG9wOiBvZmZzZXQudG9wIC0gcGFyZW50T2Zmc2V0LnRvcCAtIGpRdWVyeS5jc3MoIGVsZW0sIFwibWFyZ2luVG9wXCIsIHRydWUgKSxcblx0XHRcdGxlZnQ6IG9mZnNldC5sZWZ0IC0gcGFyZW50T2Zmc2V0LmxlZnQgLSBqUXVlcnkuY3NzKCBlbGVtLCBcIm1hcmdpbkxlZnRcIiwgdHJ1ZSApXG5cdFx0fTtcblx0fSxcblxuXHQvLyBUaGlzIG1ldGhvZCB3aWxsIHJldHVybiBkb2N1bWVudEVsZW1lbnQgaW4gdGhlIGZvbGxvd2luZyBjYXNlczpcblx0Ly8gMSkgRm9yIHRoZSBlbGVtZW50IGluc2lkZSB0aGUgaWZyYW1lIHdpdGhvdXQgb2Zmc2V0UGFyZW50LCB0aGlzIG1ldGhvZCB3aWxsIHJldHVyblxuXHQvLyAgICBkb2N1bWVudEVsZW1lbnQgb2YgdGhlIHBhcmVudCB3aW5kb3dcblx0Ly8gMikgRm9yIHRoZSBoaWRkZW4gb3IgZGV0YWNoZWQgZWxlbWVudFxuXHQvLyAzKSBGb3IgYm9keSBvciBodG1sIGVsZW1lbnQsIGkuZS4gaW4gY2FzZSBvZiB0aGUgaHRtbCBub2RlIC0gaXQgd2lsbCByZXR1cm4gaXRzZWxmXG5cdC8vXG5cdC8vIGJ1dCB0aG9zZSBleGNlcHRpb25zIHdlcmUgbmV2ZXIgcHJlc2VudGVkIGFzIGEgcmVhbCBsaWZlIHVzZS1jYXNlc1xuXHQvLyBhbmQgbWlnaHQgYmUgY29uc2lkZXJlZCBhcyBtb3JlIHByZWZlcmFibGUgcmVzdWx0cy5cblx0Ly9cblx0Ly8gVGhpcyBsb2dpYywgaG93ZXZlciwgaXMgbm90IGd1YXJhbnRlZWQgYW5kIGNhbiBjaGFuZ2UgYXQgYW55IHBvaW50IGluIHRoZSBmdXR1cmVcblx0b2Zmc2V0UGFyZW50OiBmdW5jdGlvbigpIHtcblx0XHRyZXR1cm4gdGhpcy5tYXAoIGZ1bmN0aW9uKCkge1xuXHRcdFx0dmFyIG9mZnNldFBhcmVudCA9IHRoaXMub2Zmc2V0UGFyZW50O1xuXG5cdFx0XHR3aGlsZSAoIG9mZnNldFBhcmVudCAmJiBqUXVlcnkuY3NzKCBvZmZzZXRQYXJlbnQsIFwicG9zaXRpb25cIiApID09PSBcInN0YXRpY1wiICkge1xuXHRcdFx0XHRvZmZzZXRQYXJlbnQgPSBvZmZzZXRQYXJlbnQub2Zmc2V0UGFyZW50O1xuXHRcdFx0fVxuXG5cdFx0XHRyZXR1cm4gb2Zmc2V0UGFyZW50IHx8IGRvY3VtZW50RWxlbWVudDtcblx0XHR9ICk7XG5cdH1cbn0gKTtcblxuLy8gQ3JlYXRlIHNjcm9sbExlZnQgYW5kIHNjcm9sbFRvcCBtZXRob2RzXG5qUXVlcnkuZWFjaCggeyBzY3JvbGxMZWZ0OiBcInBhZ2VYT2Zmc2V0XCIsIHNjcm9sbFRvcDogXCJwYWdlWU9mZnNldFwiIH0sIGZ1bmN0aW9uKCBtZXRob2QsIHByb3AgKSB7XG5cdHZhciB0b3AgPSBcInBhZ2VZT2Zmc2V0XCIgPT09IHByb3A7XG5cblx0alF1ZXJ5LmZuWyBtZXRob2QgXSA9IGZ1bmN0aW9uKCB2YWwgKSB7XG5cdFx0cmV0dXJuIGFjY2VzcyggdGhpcywgZnVuY3Rpb24oIGVsZW0sIG1ldGhvZCwgdmFsICkge1xuXG5cdFx0XHQvLyBDb2FsZXNjZSBkb2N1bWVudHMgYW5kIHdpbmRvd3Ncblx0XHRcdHZhciB3aW47XG5cdFx0XHRpZiAoIGlzV2luZG93KCBlbGVtICkgKSB7XG5cdFx0XHRcdHdpbiA9IGVsZW07XG5cdFx0XHR9IGVsc2UgaWYgKCBlbGVtLm5vZGVUeXBlID09PSA5ICkge1xuXHRcdFx0XHR3aW4gPSBlbGVtLmRlZmF1bHRWaWV3O1xuXHRcdFx0fVxuXG5cdFx0XHRpZiAoIHZhbCA9PT0gdW5kZWZpbmVkICkge1xuXHRcdFx0XHRyZXR1cm4gd2luID8gd2luWyBwcm9wIF0gOiBlbGVtWyBtZXRob2QgXTtcblx0XHRcdH1cblxuXHRcdFx0aWYgKCB3aW4gKSB7XG5cdFx0XHRcdHdpbi5zY3JvbGxUbyhcblx0XHRcdFx0XHQhdG9wID8gdmFsIDogd2luLnBhZ2VYT2Zmc2V0LFxuXHRcdFx0XHRcdHRvcCA/IHZhbCA6IHdpbi5wYWdlWU9mZnNldFxuXHRcdFx0XHQpO1xuXG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRlbGVtWyBtZXRob2QgXSA9IHZhbDtcblx0XHRcdH1cblx0XHR9LCBtZXRob2QsIHZhbCwgYXJndW1lbnRzLmxlbmd0aCApO1xuXHR9O1xufSApO1xuXG4vLyBTdXBwb3J0OiBTYWZhcmkgPD03IC0gOS4xLCBDaHJvbWUgPD0zNyAtIDQ5XG4vLyBBZGQgdGhlIHRvcC9sZWZ0IGNzc0hvb2tzIHVzaW5nIGpRdWVyeS5mbi5wb3NpdGlvblxuLy8gV2Via2l0IGJ1ZzogaHR0cHM6Ly9idWdzLndlYmtpdC5vcmcvc2hvd19idWcuY2dpP2lkPTI5MDg0XG4vLyBCbGluayBidWc6IGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC9jaHJvbWl1bS9pc3N1ZXMvZGV0YWlsP2lkPTU4OTM0N1xuLy8gZ2V0Q29tcHV0ZWRTdHlsZSByZXR1cm5zIHBlcmNlbnQgd2hlbiBzcGVjaWZpZWQgZm9yIHRvcC9sZWZ0L2JvdHRvbS9yaWdodDtcbi8vIHJhdGhlciB0aGFuIG1ha2UgdGhlIGNzcyBtb2R1bGUgZGVwZW5kIG9uIHRoZSBvZmZzZXQgbW9kdWxlLCBqdXN0IGNoZWNrIGZvciBpdCBoZXJlXG5qUXVlcnkuZWFjaCggWyBcInRvcFwiLCBcImxlZnRcIiBdLCBmdW5jdGlvbiggX2ksIHByb3AgKSB7XG5cdGpRdWVyeS5jc3NIb29rc1sgcHJvcCBdID0gYWRkR2V0SG9va0lmKCBzdXBwb3J0LnBpeGVsUG9zaXRpb24sXG5cdFx0ZnVuY3Rpb24oIGVsZW0sIGNvbXB1dGVkICkge1xuXHRcdFx0aWYgKCBjb21wdXRlZCApIHtcblx0XHRcdFx0Y29tcHV0ZWQgPSBjdXJDU1MoIGVsZW0sIHByb3AgKTtcblxuXHRcdFx0XHQvLyBJZiBjdXJDU1MgcmV0dXJucyBwZXJjZW50YWdlLCBmYWxsYmFjayB0byBvZmZzZXRcblx0XHRcdFx0cmV0dXJuIHJudW1ub25weC50ZXN0KCBjb21wdXRlZCApID9cblx0XHRcdFx0XHRqUXVlcnkoIGVsZW0gKS5wb3NpdGlvbigpWyBwcm9wIF0gKyBcInB4XCIgOlxuXHRcdFx0XHRcdGNvbXB1dGVkO1xuXHRcdFx0fVxuXHRcdH1cblx0KTtcbn0gKTtcblxuXG4vLyBDcmVhdGUgaW5uZXJIZWlnaHQsIGlubmVyV2lkdGgsIGhlaWdodCwgd2lkdGgsIG91dGVySGVpZ2h0IGFuZCBvdXRlcldpZHRoIG1ldGhvZHNcbmpRdWVyeS5lYWNoKCB7IEhlaWdodDogXCJoZWlnaHRcIiwgV2lkdGg6IFwid2lkdGhcIiB9LCBmdW5jdGlvbiggbmFtZSwgdHlwZSApIHtcblx0alF1ZXJ5LmVhY2goIHsgcGFkZGluZzogXCJpbm5lclwiICsgbmFtZSwgY29udGVudDogdHlwZSwgXCJcIjogXCJvdXRlclwiICsgbmFtZSB9LFxuXHRcdGZ1bmN0aW9uKCBkZWZhdWx0RXh0cmEsIGZ1bmNOYW1lICkge1xuXG5cdFx0Ly8gTWFyZ2luIGlzIG9ubHkgZm9yIG91dGVySGVpZ2h0LCBvdXRlcldpZHRoXG5cdFx0alF1ZXJ5LmZuWyBmdW5jTmFtZSBdID0gZnVuY3Rpb24oIG1hcmdpbiwgdmFsdWUgKSB7XG5cdFx0XHR2YXIgY2hhaW5hYmxlID0gYXJndW1lbnRzLmxlbmd0aCAmJiAoIGRlZmF1bHRFeHRyYSB8fCB0eXBlb2YgbWFyZ2luICE9PSBcImJvb2xlYW5cIiApLFxuXHRcdFx0XHRleHRyYSA9IGRlZmF1bHRFeHRyYSB8fCAoIG1hcmdpbiA9PT0gdHJ1ZSB8fCB2YWx1ZSA9PT0gdHJ1ZSA/IFwibWFyZ2luXCIgOiBcImJvcmRlclwiICk7XG5cblx0XHRcdHJldHVybiBhY2Nlc3MoIHRoaXMsIGZ1bmN0aW9uKCBlbGVtLCB0eXBlLCB2YWx1ZSApIHtcblx0XHRcdFx0dmFyIGRvYztcblxuXHRcdFx0XHRpZiAoIGlzV2luZG93KCBlbGVtICkgKSB7XG5cblx0XHRcdFx0XHQvLyAkKCB3aW5kb3cgKS5vdXRlcldpZHRoL0hlaWdodCByZXR1cm4gdy9oIGluY2x1ZGluZyBzY3JvbGxiYXJzIChnaC0xNzI5KVxuXHRcdFx0XHRcdHJldHVybiBmdW5jTmFtZS5pbmRleE9mKCBcIm91dGVyXCIgKSA9PT0gMCA/XG5cdFx0XHRcdFx0XHRlbGVtWyBcImlubmVyXCIgKyBuYW1lIF0gOlxuXHRcdFx0XHRcdFx0ZWxlbS5kb2N1bWVudC5kb2N1bWVudEVsZW1lbnRbIFwiY2xpZW50XCIgKyBuYW1lIF07XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBHZXQgZG9jdW1lbnQgd2lkdGggb3IgaGVpZ2h0XG5cdFx0XHRcdGlmICggZWxlbS5ub2RlVHlwZSA9PT0gOSApIHtcblx0XHRcdFx0XHRkb2MgPSBlbGVtLmRvY3VtZW50RWxlbWVudDtcblxuXHRcdFx0XHRcdC8vIEVpdGhlciBzY3JvbGxbV2lkdGgvSGVpZ2h0XSBvciBvZmZzZXRbV2lkdGgvSGVpZ2h0XSBvciBjbGllbnRbV2lkdGgvSGVpZ2h0XSxcblx0XHRcdFx0XHQvLyB3aGljaGV2ZXIgaXMgZ3JlYXRlc3Rcblx0XHRcdFx0XHRyZXR1cm4gTWF0aC5tYXgoXG5cdFx0XHRcdFx0XHRlbGVtLmJvZHlbIFwic2Nyb2xsXCIgKyBuYW1lIF0sIGRvY1sgXCJzY3JvbGxcIiArIG5hbWUgXSxcblx0XHRcdFx0XHRcdGVsZW0uYm9keVsgXCJvZmZzZXRcIiArIG5hbWUgXSwgZG9jWyBcIm9mZnNldFwiICsgbmFtZSBdLFxuXHRcdFx0XHRcdFx0ZG9jWyBcImNsaWVudFwiICsgbmFtZSBdXG5cdFx0XHRcdFx0KTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdHJldHVybiB2YWx1ZSA9PT0gdW5kZWZpbmVkID9cblxuXHRcdFx0XHRcdC8vIEdldCB3aWR0aCBvciBoZWlnaHQgb24gdGhlIGVsZW1lbnQsIHJlcXVlc3RpbmcgYnV0IG5vdCBmb3JjaW5nIHBhcnNlRmxvYXRcblx0XHRcdFx0XHRqUXVlcnkuY3NzKCBlbGVtLCB0eXBlLCBleHRyYSApIDpcblxuXHRcdFx0XHRcdC8vIFNldCB3aWR0aCBvciBoZWlnaHQgb24gdGhlIGVsZW1lbnRcblx0XHRcdFx0XHRqUXVlcnkuc3R5bGUoIGVsZW0sIHR5cGUsIHZhbHVlLCBleHRyYSApO1xuXHRcdFx0fSwgdHlwZSwgY2hhaW5hYmxlID8gbWFyZ2luIDogdW5kZWZpbmVkLCBjaGFpbmFibGUgKTtcblx0XHR9O1xuXHR9ICk7XG59ICk7XG5cblxualF1ZXJ5LmVhY2goIFtcblx0XCJhamF4U3RhcnRcIixcblx0XCJhamF4U3RvcFwiLFxuXHRcImFqYXhDb21wbGV0ZVwiLFxuXHRcImFqYXhFcnJvclwiLFxuXHRcImFqYXhTdWNjZXNzXCIsXG5cdFwiYWpheFNlbmRcIlxuXSwgZnVuY3Rpb24oIF9pLCB0eXBlICkge1xuXHRqUXVlcnkuZm5bIHR5cGUgXSA9IGZ1bmN0aW9uKCBmbiApIHtcblx0XHRyZXR1cm4gdGhpcy5vbiggdHlwZSwgZm4gKTtcblx0fTtcbn0gKTtcblxuXG5cblxualF1ZXJ5LmZuLmV4dGVuZCgge1xuXG5cdGJpbmQ6IGZ1bmN0aW9uKCB0eXBlcywgZGF0YSwgZm4gKSB7XG5cdFx0cmV0dXJuIHRoaXMub24oIHR5cGVzLCBudWxsLCBkYXRhLCBmbiApO1xuXHR9LFxuXHR1bmJpbmQ6IGZ1bmN0aW9uKCB0eXBlcywgZm4gKSB7XG5cdFx0cmV0dXJuIHRoaXMub2ZmKCB0eXBlcywgbnVsbCwgZm4gKTtcblx0fSxcblxuXHRkZWxlZ2F0ZTogZnVuY3Rpb24oIHNlbGVjdG9yLCB0eXBlcywgZGF0YSwgZm4gKSB7XG5cdFx0cmV0dXJuIHRoaXMub24oIHR5cGVzLCBzZWxlY3RvciwgZGF0YSwgZm4gKTtcblx0fSxcblx0dW5kZWxlZ2F0ZTogZnVuY3Rpb24oIHNlbGVjdG9yLCB0eXBlcywgZm4gKSB7XG5cblx0XHQvLyAoIG5hbWVzcGFjZSApIG9yICggc2VsZWN0b3IsIHR5cGVzIFssIGZuXSApXG5cdFx0cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPT09IDEgP1xuXHRcdFx0dGhpcy5vZmYoIHNlbGVjdG9yLCBcIioqXCIgKSA6XG5cdFx0XHR0aGlzLm9mZiggdHlwZXMsIHNlbGVjdG9yIHx8IFwiKipcIiwgZm4gKTtcblx0fSxcblxuXHRob3ZlcjogZnVuY3Rpb24oIGZuT3ZlciwgZm5PdXQgKSB7XG5cdFx0cmV0dXJuIHRoaXMubW91c2VlbnRlciggZm5PdmVyICkubW91c2VsZWF2ZSggZm5PdXQgfHwgZm5PdmVyICk7XG5cdH1cbn0gKTtcblxualF1ZXJ5LmVhY2goICggXCJibHVyIGZvY3VzIGZvY3VzaW4gZm9jdXNvdXQgcmVzaXplIHNjcm9sbCBjbGljayBkYmxjbGljayBcIiArXG5cdFwibW91c2Vkb3duIG1vdXNldXAgbW91c2Vtb3ZlIG1vdXNlb3ZlciBtb3VzZW91dCBtb3VzZWVudGVyIG1vdXNlbGVhdmUgXCIgK1xuXHRcImNoYW5nZSBzZWxlY3Qgc3VibWl0IGtleWRvd24ga2V5cHJlc3Mga2V5dXAgY29udGV4dG1lbnVcIiApLnNwbGl0KCBcIiBcIiApLFxuXHRmdW5jdGlvbiggX2ksIG5hbWUgKSB7XG5cblx0XHQvLyBIYW5kbGUgZXZlbnQgYmluZGluZ1xuXHRcdGpRdWVyeS5mblsgbmFtZSBdID0gZnVuY3Rpb24oIGRhdGEsIGZuICkge1xuXHRcdFx0cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPiAwID9cblx0XHRcdFx0dGhpcy5vbiggbmFtZSwgbnVsbCwgZGF0YSwgZm4gKSA6XG5cdFx0XHRcdHRoaXMudHJpZ2dlciggbmFtZSApO1xuXHRcdH07XG5cdH0gKTtcblxuXG5cblxuLy8gU3VwcG9ydDogQW5kcm9pZCA8PTQuMCBvbmx5XG4vLyBNYWtlIHN1cmUgd2UgdHJpbSBCT00gYW5kIE5CU1BcbnZhciBydHJpbSA9IC9eW1xcc1xcdUZFRkZcXHhBMF0rfFtcXHNcXHVGRUZGXFx4QTBdKyQvZztcblxuLy8gQmluZCBhIGZ1bmN0aW9uIHRvIGEgY29udGV4dCwgb3B0aW9uYWxseSBwYXJ0aWFsbHkgYXBwbHlpbmcgYW55XG4vLyBhcmd1bWVudHMuXG4vLyBqUXVlcnkucHJveHkgaXMgZGVwcmVjYXRlZCB0byBwcm9tb3RlIHN0YW5kYXJkcyAoc3BlY2lmaWNhbGx5IEZ1bmN0aW9uI2JpbmQpXG4vLyBIb3dldmVyLCBpdCBpcyBub3Qgc2xhdGVkIGZvciByZW1vdmFsIGFueSB0aW1lIHNvb25cbmpRdWVyeS5wcm94eSA9IGZ1bmN0aW9uKCBmbiwgY29udGV4dCApIHtcblx0dmFyIHRtcCwgYXJncywgcHJveHk7XG5cblx0aWYgKCB0eXBlb2YgY29udGV4dCA9PT0gXCJzdHJpbmdcIiApIHtcblx0XHR0bXAgPSBmblsgY29udGV4dCBdO1xuXHRcdGNvbnRleHQgPSBmbjtcblx0XHRmbiA9IHRtcDtcblx0fVxuXG5cdC8vIFF1aWNrIGNoZWNrIHRvIGRldGVybWluZSBpZiB0YXJnZXQgaXMgY2FsbGFibGUsIGluIHRoZSBzcGVjXG5cdC8vIHRoaXMgdGhyb3dzIGEgVHlwZUVycm9yLCBidXQgd2Ugd2lsbCBqdXN0IHJldHVybiB1bmRlZmluZWQuXG5cdGlmICggIWlzRnVuY3Rpb24oIGZuICkgKSB7XG5cdFx0cmV0dXJuIHVuZGVmaW5lZDtcblx0fVxuXG5cdC8vIFNpbXVsYXRlZCBiaW5kXG5cdGFyZ3MgPSBzbGljZS5jYWxsKCBhcmd1bWVudHMsIDIgKTtcblx0cHJveHkgPSBmdW5jdGlvbigpIHtcblx0XHRyZXR1cm4gZm4uYXBwbHkoIGNvbnRleHQgfHwgdGhpcywgYXJncy5jb25jYXQoIHNsaWNlLmNhbGwoIGFyZ3VtZW50cyApICkgKTtcblx0fTtcblxuXHQvLyBTZXQgdGhlIGd1aWQgb2YgdW5pcXVlIGhhbmRsZXIgdG8gdGhlIHNhbWUgb2Ygb3JpZ2luYWwgaGFuZGxlciwgc28gaXQgY2FuIGJlIHJlbW92ZWRcblx0cHJveHkuZ3VpZCA9IGZuLmd1aWQgPSBmbi5ndWlkIHx8IGpRdWVyeS5ndWlkKys7XG5cblx0cmV0dXJuIHByb3h5O1xufTtcblxualF1ZXJ5LmhvbGRSZWFkeSA9IGZ1bmN0aW9uKCBob2xkICkge1xuXHRpZiAoIGhvbGQgKSB7XG5cdFx0alF1ZXJ5LnJlYWR5V2FpdCsrO1xuXHR9IGVsc2Uge1xuXHRcdGpRdWVyeS5yZWFkeSggdHJ1ZSApO1xuXHR9XG59O1xualF1ZXJ5LmlzQXJyYXkgPSBBcnJheS5pc0FycmF5O1xualF1ZXJ5LnBhcnNlSlNPTiA9IEpTT04ucGFyc2U7XG5qUXVlcnkubm9kZU5hbWUgPSBub2RlTmFtZTtcbmpRdWVyeS5pc0Z1bmN0aW9uID0gaXNGdW5jdGlvbjtcbmpRdWVyeS5pc1dpbmRvdyA9IGlzV2luZG93O1xualF1ZXJ5LmNhbWVsQ2FzZSA9IGNhbWVsQ2FzZTtcbmpRdWVyeS50eXBlID0gdG9UeXBlO1xuXG5qUXVlcnkubm93ID0gRGF0ZS5ub3c7XG5cbmpRdWVyeS5pc051bWVyaWMgPSBmdW5jdGlvbiggb2JqICkge1xuXG5cdC8vIEFzIG9mIGpRdWVyeSAzLjAsIGlzTnVtZXJpYyBpcyBsaW1pdGVkIHRvXG5cdC8vIHN0cmluZ3MgYW5kIG51bWJlcnMgKHByaW1pdGl2ZXMgb3Igb2JqZWN0cylcblx0Ly8gdGhhdCBjYW4gYmUgY29lcmNlZCB0byBmaW5pdGUgbnVtYmVycyAoZ2gtMjY2Milcblx0dmFyIHR5cGUgPSBqUXVlcnkudHlwZSggb2JqICk7XG5cdHJldHVybiAoIHR5cGUgPT09IFwibnVtYmVyXCIgfHwgdHlwZSA9PT0gXCJzdHJpbmdcIiApICYmXG5cblx0XHQvLyBwYXJzZUZsb2F0IE5hTnMgbnVtZXJpYy1jYXN0IGZhbHNlIHBvc2l0aXZlcyAoXCJcIilcblx0XHQvLyAuLi5idXQgbWlzaW50ZXJwcmV0cyBsZWFkaW5nLW51bWJlciBzdHJpbmdzLCBwYXJ0aWN1bGFybHkgaGV4IGxpdGVyYWxzIChcIjB4Li4uXCIpXG5cdFx0Ly8gc3VidHJhY3Rpb24gZm9yY2VzIGluZmluaXRpZXMgdG8gTmFOXG5cdFx0IWlzTmFOKCBvYmogLSBwYXJzZUZsb2F0KCBvYmogKSApO1xufTtcblxualF1ZXJ5LnRyaW0gPSBmdW5jdGlvbiggdGV4dCApIHtcblx0cmV0dXJuIHRleHQgPT0gbnVsbCA/XG5cdFx0XCJcIiA6XG5cdFx0KCB0ZXh0ICsgXCJcIiApLnJlcGxhY2UoIHJ0cmltLCBcIlwiICk7XG59O1xuXG5cblxuLy8gUmVnaXN0ZXIgYXMgYSBuYW1lZCBBTUQgbW9kdWxlLCBzaW5jZSBqUXVlcnkgY2FuIGJlIGNvbmNhdGVuYXRlZCB3aXRoIG90aGVyXG4vLyBmaWxlcyB0aGF0IG1heSB1c2UgZGVmaW5lLCBidXQgbm90IHZpYSBhIHByb3BlciBjb25jYXRlbmF0aW9uIHNjcmlwdCB0aGF0XG4vLyB1bmRlcnN0YW5kcyBhbm9ueW1vdXMgQU1EIG1vZHVsZXMuIEEgbmFtZWQgQU1EIGlzIHNhZmVzdCBhbmQgbW9zdCByb2J1c3Rcbi8vIHdheSB0byByZWdpc3Rlci4gTG93ZXJjYXNlIGpxdWVyeSBpcyB1c2VkIGJlY2F1c2UgQU1EIG1vZHVsZSBuYW1lcyBhcmVcbi8vIGRlcml2ZWQgZnJvbSBmaWxlIG5hbWVzLCBhbmQgalF1ZXJ5IGlzIG5vcm1hbGx5IGRlbGl2ZXJlZCBpbiBhIGxvd2VyY2FzZVxuLy8gZmlsZSBuYW1lLiBEbyB0aGlzIGFmdGVyIGNyZWF0aW5nIHRoZSBnbG9iYWwgc28gdGhhdCBpZiBhbiBBTUQgbW9kdWxlIHdhbnRzXG4vLyB0byBjYWxsIG5vQ29uZmxpY3QgdG8gaGlkZSB0aGlzIHZlcnNpb24gb2YgalF1ZXJ5LCBpdCB3aWxsIHdvcmsuXG5cbi8vIE5vdGUgdGhhdCBmb3IgbWF4aW11bSBwb3J0YWJpbGl0eSwgbGlicmFyaWVzIHRoYXQgYXJlIG5vdCBqUXVlcnkgc2hvdWxkXG4vLyBkZWNsYXJlIHRoZW1zZWx2ZXMgYXMgYW5vbnltb3VzIG1vZHVsZXMsIGFuZCBhdm9pZCBzZXR0aW5nIGEgZ2xvYmFsIGlmIGFuXG4vLyBBTUQgbG9hZGVyIGlzIHByZXNlbnQuIGpRdWVyeSBpcyBhIHNwZWNpYWwgY2FzZS4gRm9yIG1vcmUgaW5mb3JtYXRpb24sIHNlZVxuLy8gaHR0cHM6Ly9naXRodWIuY29tL2pyYnVya2UvcmVxdWlyZWpzL3dpa2kvVXBkYXRpbmctZXhpc3RpbmctbGlicmFyaWVzI3dpa2ktYW5vblxuXG5pZiAoIHR5cGVvZiBkZWZpbmUgPT09IFwiZnVuY3Rpb25cIiAmJiBkZWZpbmUuYW1kICkge1xuXHRkZWZpbmUoIFwianF1ZXJ5XCIsIFtdLCBmdW5jdGlvbigpIHtcblx0XHRyZXR1cm4galF1ZXJ5O1xuXHR9ICk7XG59XG5cblxuXG5cbnZhclxuXG5cdC8vIE1hcCBvdmVyIGpRdWVyeSBpbiBjYXNlIG9mIG92ZXJ3cml0ZVxuXHRfalF1ZXJ5ID0gd2luZG93LmpRdWVyeSxcblxuXHQvLyBNYXAgb3ZlciB0aGUgJCBpbiBjYXNlIG9mIG92ZXJ3cml0ZVxuXHRfJCA9IHdpbmRvdy4kO1xuXG5qUXVlcnkubm9Db25mbGljdCA9IGZ1bmN0aW9uKCBkZWVwICkge1xuXHRpZiAoIHdpbmRvdy4kID09PSBqUXVlcnkgKSB7XG5cdFx0d2luZG93LiQgPSBfJDtcblx0fVxuXG5cdGlmICggZGVlcCAmJiB3aW5kb3cualF1ZXJ5ID09PSBqUXVlcnkgKSB7XG5cdFx0d2luZG93LmpRdWVyeSA9IF9qUXVlcnk7XG5cdH1cblxuXHRyZXR1cm4galF1ZXJ5O1xufTtcblxuLy8gRXhwb3NlIGpRdWVyeSBhbmQgJCBpZGVudGlmaWVycywgZXZlbiBpbiBBTURcbi8vICgjNzEwMiNjb21tZW50OjEwLCBodHRwczovL2dpdGh1Yi5jb20vanF1ZXJ5L2pxdWVyeS9wdWxsLzU1Nylcbi8vIGFuZCBDb21tb25KUyBmb3IgYnJvd3NlciBlbXVsYXRvcnMgKCMxMzU2NilcbmlmICggdHlwZW9mIG5vR2xvYmFsID09PSBcInVuZGVmaW5lZFwiICkge1xuXHR3aW5kb3cualF1ZXJ5ID0gd2luZG93LiQgPSBqUXVlcnk7XG59XG5cblxuXG5cbnJldHVybiBqUXVlcnk7XG59ICk7XG4iLG51bGxdfQ==
